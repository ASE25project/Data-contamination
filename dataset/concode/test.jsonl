{"code": "int function ( TtlBucket arg0 ) { long loc0 = getTtlIntervalStartTimeMs ( ) ; long loc1 = arg0 . getTtlIntervalStartTimeMs ( ) ; if ( loc0 < loc1 ) { return - 1 ; } if ( loc0 == loc1 ) { return 0 ; } return 1 ; }", "nl": "compares this bucket 's ttl interval start time to that of another bucket . concode_field_sep Set<InodeFile> mFiles concode_elem_sep long sTtlIntervalMs concode_elem_sep long mTtlIntervalStartTimeMs concode_field_sep void removeFile concode_elem_sep long getTtlIntervalMs concode_elem_sep int hashCode concode_elem_sep boolean equals concode_elem_sep Set<InodeFile> getFiles concode_elem_sep long getTtlIntervalStartTimeMs concode_elem_sep long getTtlIntervalEndTimeMs concode_elem_sep void addFile", "code_tokens": ["int", "function", "(", "TtlBucket", "arg0", ")", "{", "long", "loc0", "=", "getTtlIntervalStartTimeMs", "(", ")", ";", "long", "loc1", "=", "arg0", ".", "getTtlIntervalStartTimeMs", "(", ")", ";", "if", "(", "loc0", "<", "loc1", ")", "{", "return", "-", "1", ";", "}", "if", "(", "loc0", "==", "loc1", ")", "{", "return", "0", ";", "}", "return", "1", ";", "}"], "nl_tokens": ["compares", "this", "bucket", "'", "s", "ttl", "interval", "start", "time", "to", "that", "of", "another", "bucket", ".", "concode_field_sep", "Set", "<", "InodeFile", ">", "mFiles", "concode_elem_sep", "long", "sTtlIntervalMs", "concode_elem_sep", "long", "mTtlIntervalStartTimeMs", "concode_field_sep", "void", "removeFile", "concode_elem_sep", "long", "getTtlIntervalMs", "concode_elem_sep", "int", "hashCode", "concode_elem_sep", "boolean", "equals", "concode_elem_sep", "Set", "<", "InodeFile", ">", "getFiles", "concode_elem_sep", "long", "getTtlIntervalStartTimeMs", "concode_elem_sep", "long", "getTtlIntervalEndTimeMs", "concode_elem_sep", "void", "addFile"]}
{"code": "void function ( Collection < String > arg0 ) { after . addAll ( arg0 ) ; }", "nl": "specifies that the current interceptor needs to be added to the interceptor chain after the specified collection of interceptors . concode_field_sep String phase concode_elem_sep Set<String> before concode_elem_sep Set<String> after concode_elem_sep String id concode_field_sep boolean isGET concode_elem_sep void addBefore concode_elem_sep void addBefore concode_elem_sep boolean isRequestor concode_elem_sep Set<String> getAfter concode_elem_sep Set<String> getBefore concode_elem_sep Collection<PhaseInterceptor<? extends Message>> getAdditionalInterceptors concode_elem_sep void handleFault concode_elem_sep void setBefore concode_elem_sep void setAfter concode_elem_sep String getId concode_elem_sep String getPhase", "code_tokens": ["void", "function", "(", "Collection", "<", "String", ">", "arg0", ")", "{", "after", ".", "addAll", "(", "arg0", ")", ";", "}"], "nl_tokens": ["specifies", "that", "the", "current", "interceptor", "needs", "to", "be", "added", "to", "the", "interceptor", "chain", "after", "the", "specified", "collection", "of", "interceptors", ".", "concode_field_sep", "String", "phase", "concode_elem_sep", "Set", "<", "String", ">", "before", "concode_elem_sep", "Set", "<", "String", ">", "after", "concode_elem_sep", "String", "id", "concode_field_sep", "boolean", "isGET", "concode_elem_sep", "void", "addBefore", "concode_elem_sep", "void", "addBefore", "concode_elem_sep", "boolean", "isRequestor", "concode_elem_sep", "Set", "<", "String", ">", "getAfter", "concode_elem_sep", "Set", "<", "String", ">", "getBefore", "concode_elem_sep", "Collection", "<", "PhaseInterceptor", "<", "?", "extends", "Message", ">>", "getAdditionalInterceptors", "concode_elem_sep", "void", "handleFault", "concode_elem_sep", "void", "setBefore", "concode_elem_sep", "void", "setAfter", "concode_elem_sep", "String", "getId", "concode_elem_sep", "String", "getPhase"]}
{"code": "Matcher < T > function ( T arg0 ) { return ComparatorMatcherBuilder . < T > usingNaturalOrdering ( ) . greaterThan ( arg0 ) ; }", "nl": "creates a matcher of comparable object that matches when the examined object isgreater than the specified value , as reported by the compareto method of the examined object . for example : assertthat 2 , greaterthan 1 concode_field_sep PlaceHolder placeHolder concode_field_sep Matcher<T> lessThan concode_elem_sep Matcher<T> comparesEqualTo concode_elem_sep Matcher<T> greaterThanOrEqualTo concode_elem_sep Matcher<T> lessThanOrEqualTo", "code_tokens": ["Matcher", "<", "T", ">", "function", "(", "T", "arg0", ")", "{", "return", "ComparatorMatcherBuilder", ".", "<", "T", ">", "usingNaturalOrdering", "(", ")", ".", "greaterThan", "(", "arg0", ")", ";", "}"], "nl_tokens": ["creates", "a", "matcher", "of", "comparable", "object", "that", "matches", "when", "the", "examined", "object", "isgreater", "than", "the", "specified", "value", ",", "as", "reported", "by", "the", "compareto", "method", "of", "the", "examined", "object", ".", "for", "example", ":", "assertthat", "2", ",", "greaterthan", "1", "concode_field_sep", "PlaceHolder", "placeHolder", "concode_field_sep", "Matcher", "<", "T", ">", "lessThan", "concode_elem_sep", "Matcher", "<", "T", ">", "comparesEqualTo", "concode_elem_sep", "Matcher", "<", "T", ">", "greaterThanOrEqualTo", "concode_elem_sep", "Matcher", "<", "T", ">", "lessThanOrEqualTo"]}
{"code": "void function ( FullyQualifiedClassType arg0 ) { this . handlerClass = arg0 ; }", "nl": "sets the value of the handlerclass property . concode_field_sep FullyQualifiedClassType handlerClass concode_elem_sep List<CString> soapRole concode_elem_sep List<ParamValueType> initParam concode_elem_sep List<DisplayNameType> displayName concode_elem_sep List<XsdQNameType> soapHeader concode_elem_sep List<IconType> icon concode_elem_sep List<DescriptionType> description concode_elem_sep CString handlerName concode_elem_sep java.lang.String id concode_field_sep List<ParamValueType> getInitParam concode_elem_sep List<DisplayNameType> getDisplayName concode_elem_sep void setHandlerName concode_elem_sep void setId concode_elem_sep CString getHandlerName concode_elem_sep FullyQualifiedClassType getHandlerClass concode_elem_sep java.lang.String getId concode_elem_sep List<CString> getSoapRole concode_elem_sep List<DescriptionType> getDescription concode_elem_sep List<XsdQNameType> getSoapHeader concode_elem_sep List<IconType> getIcon", "code_tokens": ["void", "function", "(", "FullyQualifiedClassType", "arg0", ")", "{", "this", ".", "handlerClass", "=", "arg0", ";", "}"], "nl_tokens": ["sets", "the", "value", "of", "the", "handlerclass", "property", ".", "concode_field_sep", "FullyQualifiedClassType", "handlerClass", "concode_elem_sep", "List", "<", "CString", ">", "soapRole", "concode_elem_sep", "List", "<", "ParamValueType", ">", "initParam", "concode_elem_sep", "List", "<", "DisplayNameType", ">", "displayName", "concode_elem_sep", "List", "<", "XsdQNameType", ">", "soapHeader", "concode_elem_sep", "List", "<", "IconType", ">", "icon", "concode_elem_sep", "List", "<", "DescriptionType", ">", "description", "concode_elem_sep", "CString", "handlerName", "concode_elem_sep", "java", ".", "lang", ".", "String", "id", "concode_field_sep", "List", "<", "ParamValueType", ">", "getInitParam", "concode_elem_sep", "List", "<", "DisplayNameType", ">", "getDisplayName", "concode_elem_sep", "void", "setHandlerName", "concode_elem_sep", "void", "setId", "concode_elem_sep", "CString", "getHandlerName", "concode_elem_sep", "FullyQualifiedClassType", "getHandlerClass", "concode_elem_sep", "java", ".", "lang", ".", "String", "getId", "concode_elem_sep", "List", "<", "CString", ">", "getSoapRole", "concode_elem_sep", "List", "<", "DescriptionType", ">", "getDescription", "concode_elem_sep", "List", "<", "XsdQNameType", ">", "getSoapHeader", "concode_elem_sep", "List", "<", "IconType", ">", "getIcon"]}
{"code": "void function ( ) { Iterator < AbstractPlugin > loc0 = allPlugins . iterator ( ) ; while ( loc0 . hasNext ( ) ) { AbstractPlugin loc1 = ( AbstractPlugin ) loc0 . next ( ) ; loc1 . removePluginObserver ( this ) ; activePlugins . remove ( loc1 ) ; loc0 . remove ( ) ; } }", "nl": "remove all available plugins concode_field_sep PluginContainer activePlugins concode_elem_sep List<PluginManagerListener> listeners concode_elem_sep Logger LOG concode_elem_sep PluginManager singleton concode_elem_sep PluginContainer allPlugins concode_field_sep void removePlugin concode_elem_sep void notifyContainerChanged concode_elem_sep void addPlugin concode_elem_sep void loadPlugins concode_elem_sep boolean isActive concode_elem_sep Iterator<AbstractPlugin> iterator concode_elem_sep int countActivePlugins concode_elem_sep AbstractPlugin getByName concode_elem_sep void loadAvailablePlugins concode_elem_sep int indexOf concode_elem_sep void addListener concode_elem_sep Iterator<AbstractPlugin> getActivePluginIterator concode_elem_sep void setAllActive concode_elem_sep AbstractPlugin getByIndex concode_elem_sep void notifyActiveChanged concode_elem_sep void addToClasspath concode_elem_sep void removeListener concode_elem_sep void pluginStateChanged concode_elem_sep int indexOfActive concode_elem_sep int countPlugins concode_elem_sep void savePlugins concode_elem_sep void setActive concode_elem_sep void loadAvailableJars concode_elem_sep AbstractPlugin getActive concode_elem_sep PluginManager getInstance concode_elem_sep void currentPointsChanged", "code_tokens": ["void", "function", "(", ")", "{", "Iterator", "<", "AbstractPlugin", ">", "loc0", "=", "allPlugins", ".", "iterator", "(", ")", ";", "while", "(", "loc0", ".", "hasNext", "(", ")", ")", "{", "AbstractPlugin", "loc1", "=", "(", "AbstractPlugin", ")", "loc0", ".", "next", "(", ")", ";", "loc1", ".", "removePluginObserver", "(", "this", ")", ";", "activePlugins", ".", "remove", "(", "loc1", ")", ";", "loc0", ".", "remove", "(", ")", ";", "}", "}"], "nl_tokens": ["remove", "all", "available", "plugins", "concode_field_sep", "PluginContainer", "activePlugins", "concode_elem_sep", "List", "<", "PluginManagerListener", ">", "listeners", "concode_elem_sep", "Logger", "LOG", "concode_elem_sep", "PluginManager", "singleton", "concode_elem_sep", "PluginContainer", "allPlugins", "concode_field_sep", "void", "removePlugin", "concode_elem_sep", "void", "notifyContainerChanged", "concode_elem_sep", "void", "addPlugin", "concode_elem_sep", "void", "loadPlugins", "concode_elem_sep", "boolean", "isActive", "concode_elem_sep", "Iterator", "<", "AbstractPlugin", ">", "iterator", "concode_elem_sep", "int", "countActivePlugins", "concode_elem_sep", "AbstractPlugin", "getByName", "concode_elem_sep", "void", "loadAvailablePlugins", "concode_elem_sep", "int", "indexOf", "concode_elem_sep", "void", "addListener", "concode_elem_sep", "Iterator", "<", "AbstractPlugin", ">", "getActivePluginIterator", "concode_elem_sep", "void", "setAllActive", "concode_elem_sep", "AbstractPlugin", "getByIndex", "concode_elem_sep", "void", "notifyActiveChanged", "concode_elem_sep", "void", "addToClasspath", "concode_elem_sep", "void", "removeListener", "concode_elem_sep", "void", "pluginStateChanged", "concode_elem_sep", "int", "indexOfActive", "concode_elem_sep", "int", "countPlugins", "concode_elem_sep", "void", "savePlugins", "concode_elem_sep", "void", "setActive", "concode_elem_sep", "void", "loadAvailableJars", "concode_elem_sep", "AbstractPlugin", "getActive", "concode_elem_sep", "PluginManager", "getInstance", "concode_elem_sep", "void", "currentPointsChanged"]}
{"code": "void function ( ) { final double loc0 = 1.98765 ; instance . setHorizontalDOP ( loc0 ) ; assertEquals ( loc0 , instance . getHorizontalDOP ( ) , 0.1 ) ; }", "nl": "test method for net.sf.marineapi.nmea.parser.gsaparser #sethorizontaldop double . concode_field_sep GSASentence instance concode_elem_sep String EXAMPLE concode_elem_sep GSASentence empty concode_field_sep void testGetFixStatus concode_elem_sep void testSetFixStatus concode_elem_sep void testGetPositionDOP concode_elem_sep void testGetSatelliteIds concode_elem_sep void testConstructor concode_elem_sep void testGetHorizontalDOP concode_elem_sep void testSetPositionDOP concode_elem_sep void testGetVerticalDOP concode_elem_sep void testSetFaaMode concode_elem_sep void setUp concode_elem_sep void testGetFaaMode concode_elem_sep void testSetVerticalDOP concode_elem_sep void testSetSatelliteIds", "code_tokens": ["void", "function", "(", ")", "{", "final", "double", "loc0", "=", "1.98765", ";", "instance", ".", "setHorizontalDOP", "(", "loc0", ")", ";", "assertEquals", "(", "loc0", ",", "instance", ".", "getHorizontalDOP", "(", ")", ",", "0.1", ")", ";", "}"], "nl_tokens": ["test", "method", "for", "net", ".", "sf", ".", "marineapi", ".", "nmea", ".", "parser", ".", "gsaparser", "#sethorizontaldop double . concode_field_sep GSASentence instance concode_elem_sep String EXAMPLE concode_elem_sep GSASentence empty concode_field_sep void testGetFixStatus concode_elem_sep void testSetFixStatus concode_elem_sep void testGetPositionDOP concode_elem_sep void testGetSatelliteIds concode_elem_sep void testConstructor concode_elem_sep void testGetHorizontalDOP concode_elem_sep void testSetPositionDOP concode_elem_sep void testGetVerticalDOP concode_elem_sep void testSetFaaMode concode_elem_sep void setUp concode_elem_sep void testGetFaaMode concode_elem_sep void testSetVerticalDOP concode_elem_sep void testSetSatelliteIds"]}
{"code": "boolean function ( Combination arg0 ) { if ( configurations . containsKey ( arg0 . toString ( ) ) ) { return configurations . get ( arg0 . toString ( ) ) ; } return false ; }", "nl": "returns whether or not to rebuild the hudson.model.run if thecombination is not in the database , the method returns true , meaning the run will build . concode_field_sep boolean rebuildDownstream concode_elem_sep int baseBuildNumber concode_elem_sep Map<String,Boolean> configurations concode_field_sep int getBaseBuildNumber concode_elem_sep boolean doRebuildDownstream concode_elem_sep String getUrlName concode_elem_sep void setBaseBuildNumber concode_elem_sep void setRebuildDownstream concode_elem_sep String getDisplayName concode_elem_sep String getIconFileName concode_elem_sep RebuildAction clone concode_elem_sep RebuildAction clone concode_elem_sep void addConfiguration concode_elem_sep String toString", "code_tokens": ["boolean", "function", "(", "Combination", "arg0", ")", "{", "if", "(", "configurations", ".", "containsKey", "(", "arg0", ".", "toString", "(", ")", ")", ")", "{", "return", "configurations", ".", "get", "(", "arg0", ".", "toString", "(", ")", ")", ";", "}", "return", "false", ";", "}"], "nl_tokens": ["returns", "whether", "or", "not", "to", "rebuild", "the", "hudson", ".", "model", ".", "run", "if", "thecombination", "is", "not", "in", "the", "database", ",", "the", "method", "returns", "true", ",", "meaning", "the", "run", "will", "build", ".", "concode_field_sep", "boolean", "rebuildDownstream", "concode_elem_sep", "int", "baseBuildNumber", "concode_elem_sep", "Map", "<", "String", ",", "Boolean", ">", "configurations", "concode_field_sep", "int", "getBaseBuildNumber", "concode_elem_sep", "boolean", "doRebuildDownstream", "concode_elem_sep", "String", "getUrlName", "concode_elem_sep", "void", "setBaseBuildNumber", "concode_elem_sep", "void", "setRebuildDownstream", "concode_elem_sep", "String", "getDisplayName", "concode_elem_sep", "String", "getIconFileName", "concode_elem_sep", "RebuildAction", "clone", "concode_elem_sep", "RebuildAction", "clone", "concode_elem_sep", "void", "addConfiguration", "concode_elem_sep", "String", "toString"]}
{"code": "void function ( QName arg0 ) { Level loc0 = path . getLast ( ) ; loc0 . attributes . put ( arg0 , new Level ( ATTR + getName ( arg0 ) ) ) ; }", "nl": "adds knowledge about a single attribute of the current node . concode_field_sep String OPEN concode_elem_sep String expression concode_elem_sep String PI concode_elem_sep String TEXT concode_elem_sep short type concode_elem_sep String EMPTY concode_elem_sep Map<String,String> uri2Prefix concode_elem_sep Map<QName,Level> attributes concode_elem_sep Deque<Level> path concode_elem_sep String SEP concode_elem_sep String COMMENT concode_elem_sep String xpath concode_elem_sep String ATTR concode_elem_sep List<Level> children concode_elem_sep QName name concode_elem_sep String CLOSE concode_field_sep void navigateToParent concode_elem_sep String getName concode_elem_sep QName getName concode_elem_sep QName getName concode_elem_sep void appendChildren concode_elem_sep Map<String,String> invert concode_elem_sep short getType concode_elem_sep short getType concode_elem_sep void addAttributes concode_elem_sep XPathContext clone concode_elem_sep Level clone concode_elem_sep int add1OrIncrement concode_elem_sep String getXPath concode_elem_sep String getXPath concode_elem_sep void navigateToChild concode_elem_sep void setChildren concode_elem_sep void navigateToAttribute", "code_tokens": ["void", "function", "(", "QName", "arg0", ")", "{", "Level", "loc0", "=", "path", ".", "getLast", "(", ")", ";", "loc0", ".", "attributes", ".", "put", "(", "arg0", ",", "new", "Level", "(", "ATTR", "+", "getName", "(", "arg0", ")", ")", ")", ";", "}"], "nl_tokens": ["adds", "knowledge", "about", "a", "single", "attribute", "of", "the", "current", "node", ".", "concode_field_sep", "String", "OPEN", "concode_elem_sep", "String", "expression", "concode_elem_sep", "String", "PI", "concode_elem_sep", "String", "TEXT", "concode_elem_sep", "short", "type", "concode_elem_sep", "String", "EMPTY", "concode_elem_sep", "Map", "<", "String", ",", "String", ">", "uri2Prefix", "concode_elem_sep", "Map", "<", "QName", ",", "Level", ">", "attributes", "concode_elem_sep", "Deque", "<", "Level", ">", "path", "concode_elem_sep", "String", "SEP", "concode_elem_sep", "String", "COMMENT", "concode_elem_sep", "String", "xpath", "concode_elem_sep", "String", "ATTR", "concode_elem_sep", "List", "<", "Level", ">", "children", "concode_elem_sep", "QName", "name", "concode_elem_sep", "String", "CLOSE", "concode_field_sep", "void", "navigateToParent", "concode_elem_sep", "String", "getName", "concode_elem_sep", "QName", "getName", "concode_elem_sep", "QName", "getName", "concode_elem_sep", "void", "appendChildren", "concode_elem_sep", "Map", "<", "String", ",", "String", ">", "invert", "concode_elem_sep", "short", "getType", "concode_elem_sep", "short", "getType", "concode_elem_sep", "void", "addAttributes", "concode_elem_sep", "XPathContext", "clone", "concode_elem_sep", "Level", "clone", "concode_elem_sep", "int", "add1OrIncrement", "concode_elem_sep", "String", "getXPath", "concode_elem_sep", "String", "getXPath", "concode_elem_sep", "void", "navigateToChild", "concode_elem_sep", "void", "setChildren", "concode_elem_sep", "void", "navigateToAttribute"]}
{"code": "void function ( String arg0 , String arg1 ) { switch ( arg0 ) { case \"srini_string\" : if ( addBackgroundColor ( arg1 ) ) { properties . put ( arg0 , arg1 ) ; } break ; case \"srini_string\" : if ( addWidth ( arg1 ) ) { properties . put ( arg0 , arg1 ) ; } break ; } }", "nl": "adds a css property to a component . e.g. : key = background-color value = yellow concode_field_sep Component component concode_elem_sep HashMap<String,String> properties concode_field_sep boolean addBackgroundColor concode_elem_sep boolean addWidth concode_elem_sep HashMap<String,String> getProperties", "code_tokens": ["void", "function", "(", "String", "arg0", ",", "String", "arg1", ")", "{", "switch", "(", "arg0", ")", "{", "case", "\"srini_string\"", ":", "if", "(", "addBackgroundColor", "(", "arg1", ")", ")", "{", "properties", ".", "put", "(", "arg0", ",", "arg1", ")", ";", "}", "break", ";", "case", "\"srini_string\"", ":", "if", "(", "addWidth", "(", "arg1", ")", ")", "{", "properties", ".", "put", "(", "arg0", ",", "arg1", ")", ";", "}", "break", ";", "}", "}"], "nl_tokens": ["adds", "a", "css", "property", "to", "a", "component", ".", "e", ".", "g", ".", ":", "key", "=", "background", "-", "color", "value", "=", "yellow", "concode_field_sep", "Component", "component", "concode_elem_sep", "HashMap", "<", "String", ",", "String", ">", "properties", "concode_field_sep", "boolean", "addBackgroundColor", "concode_elem_sep", "boolean", "addWidth", "concode_elem_sep", "HashMap", "<", "String", ",", "String", ">", "getProperties"]}
{"code": "ThreadFactoryBuilder function ( int arg0 ) { checkArgument ( arg0 >= Thread . MIN_PRIORITY , \"srini_string\" , arg0 , Thread . MIN_PRIORITY ) ; checkArgument ( arg0 <= Thread . MAX_PRIORITY , \"srini_string\" , arg0 , Thread . MAX_PRIORITY ) ; this . priority = arg0 ; return this ; }", "nl": "sets the priority for new threads created with this threadfactory . concode_field_sep Boolean daemon concode_elem_sep UncaughtExceptionHandler uncaughtExceptionHandler concode_elem_sep Integer priority concode_elem_sep String nameFormat concode_elem_sep ThreadFactory backingThreadFactory concode_field_sep ThreadFactoryBuilder setDaemon concode_elem_sep ThreadFactoryBuilder setUncaughtExceptionHandler concode_elem_sep ThreadFactory build concode_elem_sep ThreadFactory build concode_elem_sep ThreadFactoryBuilder setThreadFactory concode_elem_sep ThreadFactoryBuilder setNameFormat concode_elem_sep String format", "code_tokens": ["ThreadFactoryBuilder", "function", "(", "int", "arg0", ")", "{", "checkArgument", "(", "arg0", ">=", "Thread", ".", "MIN_PRIORITY", ",", "\"srini_string\"", ",", "arg0", ",", "Thread", ".", "MIN_PRIORITY", ")", ";", "checkArgument", "(", "arg0", "<=", "Thread", ".", "MAX_PRIORITY", ",", "\"srini_string\"", ",", "arg0", ",", "Thread", ".", "MAX_PRIORITY", ")", ";", "this", ".", "priority", "=", "arg0", ";", "return", "this", ";", "}"], "nl_tokens": ["sets", "the", "priority", "for", "new", "threads", "created", "with", "this", "threadfactory", ".", "concode_field_sep", "Boolean", "daemon", "concode_elem_sep", "UncaughtExceptionHandler", "uncaughtExceptionHandler", "concode_elem_sep", "Integer", "priority", "concode_elem_sep", "String", "nameFormat", "concode_elem_sep", "ThreadFactory", "backingThreadFactory", "concode_field_sep", "ThreadFactoryBuilder", "setDaemon", "concode_elem_sep", "ThreadFactoryBuilder", "setUncaughtExceptionHandler", "concode_elem_sep", "ThreadFactory", "build", "concode_elem_sep", "ThreadFactory", "build", "concode_elem_sep", "ThreadFactoryBuilder", "setThreadFactory", "concode_elem_sep", "ThreadFactoryBuilder", "setNameFormat", "concode_elem_sep", "String", "format"]}
{"code": "long function ( ) { return messagesSent ; }", "nl": "get the number of messages sent . this metrics is incremented after a message has been completely and successfully put on the wire . concode_field_sep long maxSizeSent concode_elem_sep int LEVEL_TRANSPORT concode_elem_sep long faultsSending concode_elem_sep long faultsReceiving concode_elem_sep int LEVEL_NONE concode_elem_sep long messagesSent concode_elem_sep long minSizeReceived concode_elem_sep long maxSizeReceived concode_elem_sep long timeoutsSending concode_elem_sep long bytesSent concode_elem_sep double avgSizeSent concode_elem_sep Map<Integer,Long> responseCodeTable concode_elem_sep long lastResetTime concode_elem_sep int LEVEL_FULL concode_elem_sep long timeoutsReceiving concode_elem_sep long bytesReceived concode_elem_sep Long ONE concode_elem_sep int level concode_elem_sep double avgSizeReceived concode_elem_sep long messagesReceived concode_elem_sep long minSizeSent concode_field_sep void notifyReceivedMessageSize concode_elem_sep void notifyReceivedMessageSize concode_elem_sep double getAvgSizeSent concode_elem_sep void incrementBytesReceived concode_elem_sep void incrementBytesReceived concode_elem_sep long getBytesReceived concode_elem_sep void setLevel concode_elem_sep void incrementFaultsReceiving concode_elem_sep void incrementFaultsReceiving concode_elem_sep Map<Integer,Long> getResponseCodeTable concode_elem_sep long getTimeoutsSending concode_elem_sep long getFaultsSending concode_elem_sep long getBytesSent concode_elem_sep long getLastResetTime concode_elem_sep void incrementFaultsSending concode_elem_sep void incrementFaultsSending concode_elem_sep long getMaxSizeReceived concode_elem_sep void incrementTimeoutsSending concode_elem_sep void incrementTimeoutsSending concode_elem_sep long getMinSizeReceived concode_elem_sep MessageLevelMetricsCollector getMsgLevelMetrics concode_elem_sep long getMinSizeSent concode_elem_sep long getTimeoutsReceiving concode_elem_sep void incrementMessagesReceived concode_elem_sep void incrementMessagesReceived concode_elem_sep void incrementBytesSent concode_elem_sep void incrementBytesSent concode_elem_sep long getMessagesReceived concode_elem_sep int getLevel concode_elem_sep long getFaultsReceiving concode_elem_sep long getMaxSizeSent concode_elem_sep void incrementMessagesSent concode_elem_sep void incrementMessagesSent concode_elem_sep void reset concode_elem_sep void notifySentMessageSize concode_elem_sep void notifySentMessageSize concode_elem_sep void reportResponseCode concode_elem_sep void reportResponseCode concode_elem_sep double getAvgSizeReceived concode_elem_sep void incrementTimeoutsReceiving concode_elem_sep void incrementTimeoutsReceiving", "code_tokens": ["long", "function", "(", ")", "{", "return", "messagesSent", ";", "}"], "nl_tokens": ["get", "the", "number", "of", "messages", "sent", ".", "this", "metrics", "is", "incremented", "after", "a", "message", "has", "been", "completely", "and", "successfully", "put", "on", "the", "wire", ".", "concode_field_sep", "long", "maxSizeSent", "concode_elem_sep", "int", "LEVEL_TRANSPORT", "concode_elem_sep", "long", "faultsSending", "concode_elem_sep", "long", "faultsReceiving", "concode_elem_sep", "int", "LEVEL_NONE", "concode_elem_sep", "long", "messagesSent", "concode_elem_sep", "long", "minSizeReceived", "concode_elem_sep", "long", "maxSizeReceived", "concode_elem_sep", "long", "timeoutsSending", "concode_elem_sep", "long", "bytesSent", "concode_elem_sep", "double", "avgSizeSent", "concode_elem_sep", "Map", "<", "Integer", ",", "Long", ">", "responseCodeTable", "concode_elem_sep", "long", "lastResetTime", "concode_elem_sep", "int", "LEVEL_FULL", "concode_elem_sep", "long", "timeoutsReceiving", "concode_elem_sep", "long", "bytesReceived", "concode_elem_sep", "Long", "ONE", "concode_elem_sep", "int", "level", "concode_elem_sep", "double", "avgSizeReceived", "concode_elem_sep", "long", "messagesReceived", "concode_elem_sep", "long", "minSizeSent", "concode_field_sep", "void", "notifyReceivedMessageSize", "concode_elem_sep", "void", "notifyReceivedMessageSize", "concode_elem_sep", "double", "getAvgSizeSent", "concode_elem_sep", "void", "incrementBytesReceived", "concode_elem_sep", "void", "incrementBytesReceived", "concode_elem_sep", "long", "getBytesReceived", "concode_elem_sep", "void", "setLevel", "concode_elem_sep", "void", "incrementFaultsReceiving", "concode_elem_sep", "void", "incrementFaultsReceiving", "concode_elem_sep", "Map", "<", "Integer", ",", "Long", ">", "getResponseCodeTable", "concode_elem_sep", "long", "getTimeoutsSending", "concode_elem_sep", "long", "getFaultsSending", "concode_elem_sep", "long", "getBytesSent", "concode_elem_sep", "long", "getLastResetTime", "concode_elem_sep", "void", "incrementFaultsSending", "concode_elem_sep", "void", "incrementFaultsSending", "concode_elem_sep", "long", "getMaxSizeReceived", "concode_elem_sep", "void", "incrementTimeoutsSending", "concode_elem_sep", "void", "incrementTimeoutsSending", "concode_elem_sep", "long", "getMinSizeReceived", "concode_elem_sep", "MessageLevelMetricsCollector", "getMsgLevelMetrics", "concode_elem_sep", "long", "getMinSizeSent", "concode_elem_sep", "long", "getTimeoutsReceiving", "concode_elem_sep", "void", "incrementMessagesReceived", "concode_elem_sep", "void", "incrementMessagesReceived", "concode_elem_sep", "void", "incrementBytesSent", "concode_elem_sep", "void", "incrementBytesSent", "concode_elem_sep", "long", "getMessagesReceived", "concode_elem_sep", "int", "getLevel", "concode_elem_sep", "long", "getFaultsReceiving", "concode_elem_sep", "long", "getMaxSizeSent", "concode_elem_sep", "void", "incrementMessagesSent", "concode_elem_sep", "void", "incrementMessagesSent", "concode_elem_sep", "void", "reset", "concode_elem_sep", "void", "notifySentMessageSize", "concode_elem_sep", "void", "notifySentMessageSize", "concode_elem_sep", "void", "reportResponseCode", "concode_elem_sep", "void", "reportResponseCode", "concode_elem_sep", "double", "getAvgSizeReceived", "concode_elem_sep", "void", "incrementTimeoutsReceiving", "concode_elem_sep", "void", "incrementTimeoutsReceiving"]}
{"code": "Map < String , String > function ( ) { return headers ; }", "nl": "returns the connection headers as a map concode_field_sep Map<String,String> headers concode_elem_sep String charset concode_elem_sep Verb verb concode_elem_sep ParameterList bodyParams concode_elem_sep String url concode_elem_sep byte[] bytePayload concode_elem_sep Long readTimeout concode_elem_sep ParameterList querystringParams concode_elem_sep boolean connectionKeepAlive concode_elem_sep Long connectTimeout concode_elem_sep String CONTENT_LENGTH concode_elem_sep String CONTENT_TYPE concode_elem_sep HttpURLConnection connection concode_elem_sep String payload concode_elem_sep String DEFAULT_CONTENT_TYPE concode_field_sep void addHeaders concode_elem_sep void setCharset concode_elem_sep String getSanitizedUrl concode_elem_sep void addBody concode_elem_sep void addHeader concode_elem_sep void setConnectionKeepAlive concode_elem_sep void setConnectTimeout concode_elem_sep byte[] getByteBodyContents concode_elem_sep ParameterList getQueryStringParams concode_elem_sep void setConnection concode_elem_sep void createConnection concode_elem_sep String getCharset concode_elem_sep void addBodyParameter concode_elem_sep String getUrl concode_elem_sep void setReadTimeout concode_elem_sep String getCompleteUrl concode_elem_sep Verb getVerb concode_elem_sep void addPayload concode_elem_sep void addPayload concode_elem_sep void addQuerystringParameter concode_elem_sep String toString concode_elem_sep Response doSend concode_elem_sep Response send concode_elem_sep String getBodyContents concode_elem_sep ParameterList getBodyParams", "code_tokens": ["Map", "<", "String", ",", "String", ">", "function", "(", ")", "{", "return", "headers", ";", "}"], "nl_tokens": ["returns", "the", "connection", "headers", "as", "a", "map", "concode_field_sep", "Map", "<", "String", ",", "String", ">", "headers", "concode_elem_sep", "String", "charset", "concode_elem_sep", "Verb", "verb", "concode_elem_sep", "ParameterList", "bodyParams", "concode_elem_sep", "String", "url", "concode_elem_sep", "byte", "[", "]", "bytePayload", "concode_elem_sep", "Long", "readTimeout", "concode_elem_sep", "ParameterList", "querystringParams", "concode_elem_sep", "boolean", "connectionKeepAlive", "concode_elem_sep", "Long", "connectTimeout", "concode_elem_sep", "String", "CONTENT_LENGTH", "concode_elem_sep", "String", "CONTENT_TYPE", "concode_elem_sep", "HttpURLConnection", "connection", "concode_elem_sep", "String", "payload", "concode_elem_sep", "String", "DEFAULT_CONTENT_TYPE", "concode_field_sep", "void", "addHeaders", "concode_elem_sep", "void", "setCharset", "concode_elem_sep", "String", "getSanitizedUrl", "concode_elem_sep", "void", "addBody", "concode_elem_sep", "void", "addHeader", "concode_elem_sep", "void", "setConnectionKeepAlive", "concode_elem_sep", "void", "setConnectTimeout", "concode_elem_sep", "byte", "[", "]", "getByteBodyContents", "concode_elem_sep", "ParameterList", "getQueryStringParams", "concode_elem_sep", "void", "setConnection", "concode_elem_sep", "void", "createConnection", "concode_elem_sep", "String", "getCharset", "concode_elem_sep", "void", "addBodyParameter", "concode_elem_sep", "String", "getUrl", "concode_elem_sep", "void", "setReadTimeout", "concode_elem_sep", "String", "getCompleteUrl", "concode_elem_sep", "Verb", "getVerb", "concode_elem_sep", "void", "addPayload", "concode_elem_sep", "void", "addPayload", "concode_elem_sep", "void", "addQuerystringParameter", "concode_elem_sep", "String", "toString", "concode_elem_sep", "Response", "doSend", "concode_elem_sep", "Response", "send", "concode_elem_sep", "String", "getBodyContents", "concode_elem_sep", "ParameterList", "getBodyParams"]}
{"code": "void function ( ) { }", "nl": "called when the service transitions from @linkplain state #new new to @linkplain state #starting starting . this occurs when service #startasync is calledthe first time . concode_field_sep PlaceHolder placeHolder concode_field_sep boolean isTerminal concode_elem_sep boolean isTerminal concode_elem_sep boolean isTerminal concode_elem_sep boolean isTerminal concode_elem_sep boolean isTerminal concode_elem_sep boolean isTerminal concode_elem_sep boolean isTerminal concode_elem_sep Throwable failureCause concode_elem_sep void failed concode_elem_sep Service startAsync concode_elem_sep void running concode_elem_sep boolean isRunning concode_elem_sep void stopping concode_elem_sep void awaitTerminated concode_elem_sep void awaitTerminated concode_elem_sep Service stopAsync concode_elem_sep State state concode_elem_sep void awaitRunning concode_elem_sep void awaitRunning concode_elem_sep void terminated concode_elem_sep void addListener", "code_tokens": ["void", "function", "(", ")", "{", "}"], "nl_tokens": ["called", "when", "the", "service", "transitions", "from", "@", "linkplain", "state", "#new new to @linkplain state #starting starting . this occurs when service #startasync is calledthe first time . concode_field_sep PlaceHolder placeHolder concode_field_sep boolean isTerminal concode_elem_sep boolean isTerminal concode_elem_sep boolean isTerminal concode_elem_sep boolean isTerminal concode_elem_sep boolean isTerminal concode_elem_sep boolean isTerminal concode_elem_sep boolean isTerminal concode_elem_sep Throwable failureCause concode_elem_sep void failed concode_elem_sep Service startAsync concode_elem_sep void running concode_elem_sep boolean isRunning concode_elem_sep void stopping concode_elem_sep void awaitTerminated concode_elem_sep void awaitTerminated concode_elem_sep Service stopAsync concode_elem_sep State state concode_elem_sep void awaitRunning concode_elem_sep void awaitRunning concode_elem_sep void terminated concode_elem_sep void addListener"]}
{"code": "Executor function ( ) { return new Executor ( ) { @ Override public void execute ( Runnable arg0 ) { MoreExecutors . newThread ( serviceName ( ) , arg0 ) . start ( ) ; } } ; }", "nl": "returns the executor that will be used to run this service . subclasses may overridethis method to use a custom executor , which may configure its worker thread with a specific name , thread group or priority . the returned executor 's executor #execute runnable execute method is called when this service is started , and shouldreturn promptly . the default implementation returns a new executor that sets the name of its threadsto the string returned by #servicename concode_field_sep Logger logger concode_elem_sep Service delegate concode_field_sep void doStop concode_elem_sep void run concode_elem_sep Throwable failureCause concode_elem_sep String serviceName concode_elem_sep void triggerShutdown concode_elem_sep Service startAsync concode_elem_sep void shutDown concode_elem_sep boolean isRunning concode_elem_sep void startUp concode_elem_sep void doStart concode_elem_sep void awaitTerminated concode_elem_sep void awaitTerminated concode_elem_sep Service stopAsync concode_elem_sep String toString concode_elem_sep String toString concode_elem_sep State state concode_elem_sep void awaitRunning concode_elem_sep void awaitRunning concode_elem_sep void addListener", "code_tokens": ["Executor", "function", "(", ")", "{", "return", "new", "Executor", "(", ")", "{", "@", "Override", "public", "void", "execute", "(", "Runnable", "arg0", ")", "{", "MoreExecutors", ".", "newThread", "(", "serviceName", "(", ")", ",", "arg0", ")", ".", "start", "(", ")", ";", "}", "}", ";", "}"], "nl_tokens": ["returns", "the", "executor", "that", "will", "be", "used", "to", "run", "this", "service", ".", "subclasses", "may", "overridethis", "method", "to", "use", "a", "custom", "executor", ",", "which", "may", "configure", "its", "worker", "thread", "with", "a", "specific", "name", ",", "thread", "group", "or", "priority", ".", "the", "returned", "executor", "'", "s", "executor", "#execute runnable execute method is called when this service is started , and shouldreturn promptly . the default implementation returns a new executor that sets the name of its threadsto the string returned by #servicename concode_field_sep Logger logger concode_elem_sep Service delegate concode_field_sep void doStop concode_elem_sep void run concode_elem_sep Throwable failureCause concode_elem_sep String serviceName concode_elem_sep void triggerShutdown concode_elem_sep Service startAsync concode_elem_sep void shutDown concode_elem_sep boolean isRunning concode_elem_sep void startUp concode_elem_sep void doStart concode_elem_sep void awaitTerminated concode_elem_sep void awaitTerminated concode_elem_sep Service stopAsync concode_elem_sep String toString concode_elem_sep String toString concode_elem_sep State state concode_elem_sep void awaitRunning concode_elem_sep void awaitRunning concode_elem_sep void addListener"]}
{"code": "Result function ( List < String > arg0 ) { Result loc0 = new Result ( ) ; for ( ResultEntry loc1 : this . log ) { if ( arg0 . contains ( loc1 . getSource ( ) ) ) { loc0 . add ( loc1 ) ; } } return loc0 ; }", "nl": "complementary operation to filteronly concode_field_sep Result globalLog concode_elem_sep List<ResultEntry> log concode_elem_sep Map<ResultObserver,ResultObserverSettings> observers concode_field_sep Result getGlobalResult concode_elem_sep Result filterOut concode_elem_sep Result filterOut concode_elem_sep Result filterOut concode_elem_sep boolean removeObserver concode_elem_sep void addObserverLogSource concode_elem_sep void setSources concode_elem_sep boolean remove concode_elem_sep Iterator<ResultEntry> iterator concode_elem_sep boolean removeAll concode_elem_sep ResultEntry get concode_elem_sep Object[] toArray concode_elem_sep T[] toArray concode_elem_sep boolean registerObserver concode_elem_sep boolean add concode_elem_sep void removeObserverLogSource concode_elem_sep boolean containsAll concode_elem_sep void clear concode_elem_sep boolean isEmpty concode_elem_sep void setObserverLevel concode_elem_sep boolean contains concode_elem_sep int size concode_elem_sep boolean addAll concode_elem_sep List<String> getSoures concode_elem_sep String toString concode_elem_sep void notifyObserversClear concode_elem_sep void notifyObserversAdd concode_elem_sep boolean retainAll", "code_tokens": ["Result", "function", "(", "List", "<", "String", ">", "arg0", ")", "{", "Result", "loc0", "=", "new", "Result", "(", ")", ";", "for", "(", "ResultEntry", "loc1", ":", "this", ".", "log", ")", "{", "if", "(", "arg0", ".", "contains", "(", "loc1", ".", "getSource", "(", ")", ")", ")", "{", "loc0", ".", "add", "(", "loc1", ")", ";", "}", "}", "return", "loc0", ";", "}"], "nl_tokens": ["complementary", "operation", "to", "filteronly", "concode_field_sep", "Result", "globalLog", "concode_elem_sep", "List", "<", "ResultEntry", ">", "log", "concode_elem_sep", "Map", "<", "ResultObserver", ",", "ResultObserverSettings", ">", "observers", "concode_field_sep", "Result", "getGlobalResult", "concode_elem_sep", "Result", "filterOut", "concode_elem_sep", "Result", "filterOut", "concode_elem_sep", "Result", "filterOut", "concode_elem_sep", "boolean", "removeObserver", "concode_elem_sep", "void", "addObserverLogSource", "concode_elem_sep", "void", "setSources", "concode_elem_sep", "boolean", "remove", "concode_elem_sep", "Iterator", "<", "ResultEntry", ">", "iterator", "concode_elem_sep", "boolean", "removeAll", "concode_elem_sep", "ResultEntry", "get", "concode_elem_sep", "Object", "[", "]", "toArray", "concode_elem_sep", "T", "[", "]", "toArray", "concode_elem_sep", "boolean", "registerObserver", "concode_elem_sep", "boolean", "add", "concode_elem_sep", "void", "removeObserverLogSource", "concode_elem_sep", "boolean", "containsAll", "concode_elem_sep", "void", "clear", "concode_elem_sep", "boolean", "isEmpty", "concode_elem_sep", "void", "setObserverLevel", "concode_elem_sep", "boolean", "contains", "concode_elem_sep", "int", "size", "concode_elem_sep", "boolean", "addAll", "concode_elem_sep", "List", "<", "String", ">", "getSoures", "concode_elem_sep", "String", "toString", "concode_elem_sep", "void", "notifyObserversClear", "concode_elem_sep", "void", "notifyObserversAdd", "concode_elem_sep", "boolean", "retainAll"]}
{"code": "void function ( final HttpServletRequest arg0 ) { LOG . debug ( getRequestHeaders ( arg0 ) . toString ( ) ) ; }", "nl": "prints request headers . concode_field_sep String HEADER_CACHE_CONTROL concode_elem_sep Logger LOG concode_elem_sep String HEADER_PRAGMA concode_field_sep Map<String,String> toHeaderMap concode_elem_sep void preventCaching concode_elem_sep String getRequestHeaders concode_elem_sep void populate concode_elem_sep void populate concode_elem_sep void populate concode_elem_sep void populate concode_elem_sep void populate concode_elem_sep Map<String,String> toParamMap concode_elem_sep String sign concode_elem_sep Map<String,String> createCookieMap concode_elem_sep boolean hasParam concode_elem_sep void printCookies concode_elem_sep String getKeyName concode_elem_sep boolean verifyMethod concode_elem_sep boolean signatureMatches", "code_tokens": ["void", "function", "(", "final", "HttpServletRequest", "arg0", ")", "{", "LOG", ".", "debug", "(", "getRequestHeaders", "(", "arg0", ")", ".", "toString", "(", ")", ")", ";", "}"], "nl_tokens": ["prints", "request", "headers", ".", "concode_field_sep", "String", "HEADER_CACHE_CONTROL", "concode_elem_sep", "Logger", "LOG", "concode_elem_sep", "String", "HEADER_PRAGMA", "concode_field_sep", "Map", "<", "String", ",", "String", ">", "toHeaderMap", "concode_elem_sep", "void", "preventCaching", "concode_elem_sep", "String", "getRequestHeaders", "concode_elem_sep", "void", "populate", "concode_elem_sep", "void", "populate", "concode_elem_sep", "void", "populate", "concode_elem_sep", "void", "populate", "concode_elem_sep", "void", "populate", "concode_elem_sep", "Map", "<", "String", ",", "String", ">", "toParamMap", "concode_elem_sep", "String", "sign", "concode_elem_sep", "Map", "<", "String", ",", "String", ">", "createCookieMap", "concode_elem_sep", "boolean", "hasParam", "concode_elem_sep", "void", "printCookies", "concode_elem_sep", "String", "getKeyName", "concode_elem_sep", "boolean", "verifyMethod", "concode_elem_sep", "boolean", "signatureMatches"]}
{"code": "String function ( ) { return id ; }", "nl": "return the task launch id for the task . concode_field_sep Map<String,String> attributes concode_elem_sep String id concode_elem_sep LaunchState state concode_field_sep LaunchState getState concode_elem_sep Map<String,String> getAttributes concode_elem_sep String toString", "code_tokens": ["String", "function", "(", ")", "{", "return", "id", ";", "}"], "nl_tokens": ["return", "the", "task", "launch", "id", "for", "the", "task", ".", "concode_field_sep", "Map", "<", "String", ",", "String", ">", "attributes", "concode_elem_sep", "String", "id", "concode_elem_sep", "LaunchState", "state", "concode_field_sep", "LaunchState", "getState", "concode_elem_sep", "Map", "<", "String", ",", "String", ">", "getAttributes", "concode_elem_sep", "String", "toString"]}
{"code": "boolean function ( int arg0 , float arg1 ) { if ( mDefaultSpacing == null ) { mDefaultSpacing = newSpacingResultArray ( ) ; } if ( ! FloatUtil . floatsEqual ( mDefaultSpacing [ arg0 ] , arg1 ) ) { mDefaultSpacing [ arg0 ] = arg1 ; return true ; } return false ; }", "nl": "set a default spacing value . this is used as a fallback when no spacing has been set for a particular direction . concode_field_sep boolean mHasAliasesSet concode_elem_sep int END concode_elem_sep float[] mDefaultSpacing concode_elem_sep int LEFT concode_elem_sep int VERTICAL concode_elem_sep int mValueFlags concode_elem_sep int RIGHT concode_elem_sep int ALL concode_elem_sep int TOP concode_elem_sep int START concode_elem_sep int BOTTOM concode_elem_sep int[] sFlagsMap concode_elem_sep float[] mSpacing concode_elem_sep int HORIZONTAL concode_field_sep boolean set concode_elem_sep float[] newFullSpacingArray concode_elem_sep float get concode_elem_sep void reset concode_elem_sep float[] newSpacingResultArray concode_elem_sep float[] newSpacingResultArray concode_elem_sep float getRaw concode_elem_sep float getWithFallback", "code_tokens": ["boolean", "function", "(", "int", "arg0", ",", "float", "arg1", ")", "{", "if", "(", "mDefaultSpacing", "==", "null", ")", "{", "mDefaultSpacing", "=", "newSpacingResultArray", "(", ")", ";", "}", "if", "(", "!", "FloatUtil", ".", "floatsEqual", "(", "mDefaultSpacing", "[", "arg0", "]", ",", "arg1", ")", ")", "{", "mDefaultSpacing", "[", "arg0", "]", "=", "arg1", ";", "return", "true", ";", "}", "return", "false", ";", "}"], "nl_tokens": ["set", "a", "default", "spacing", "value", ".", "this", "is", "used", "as", "a", "fallback", "when", "no", "spacing", "has", "been", "set", "for", "a", "particular", "direction", ".", "concode_field_sep", "boolean", "mHasAliasesSet", "concode_elem_sep", "int", "END", "concode_elem_sep", "float", "[", "]", "mDefaultSpacing", "concode_elem_sep", "int", "LEFT", "concode_elem_sep", "int", "VERTICAL", "concode_elem_sep", "int", "mValueFlags", "concode_elem_sep", "int", "RIGHT", "concode_elem_sep", "int", "ALL", "concode_elem_sep", "int", "TOP", "concode_elem_sep", "int", "START", "concode_elem_sep", "int", "BOTTOM", "concode_elem_sep", "int", "[", "]", "sFlagsMap", "concode_elem_sep", "float", "[", "]", "mSpacing", "concode_elem_sep", "int", "HORIZONTAL", "concode_field_sep", "boolean", "set", "concode_elem_sep", "float", "[", "]", "newFullSpacingArray", "concode_elem_sep", "float", "get", "concode_elem_sep", "void", "reset", "concode_elem_sep", "float", "[", "]", "newSpacingResultArray", "concode_elem_sep", "float", "[", "]", "newSpacingResultArray", "concode_elem_sep", "float", "getRaw", "concode_elem_sep", "float", "getWithFallback"]}
{"code": "void function ( Language arg0 , CodeGenerator arg1 ) { if ( currLanguage == null ) { currLanguage = arg0 ; } generators . put ( arg0 , arg1 ) ; ArgoEventPump . fireEvent ( new ArgoGeneratorEvent ( ArgoEventTypes . GENERATOR_ADDED , arg1 ) ) ; LOG . debug ( \"srini_string\" + arg1 + \"srini_string\" + arg0 ) ; }", "nl": "registers a new generator . if a generator with the same language is already registered , it 's replaced by the new one . concode_field_sep GeneratorManager INSTANCE concode_elem_sep Logger LOG concode_elem_sep Language currLanguage concode_elem_sep Map<Language,CodeGenerator> generators concode_field_sep String getCodePath concode_elem_sep CodeGenerator getGenerator concode_elem_sep CodeGenerator getGenerator concode_elem_sep Language getCurrLanguage concode_elem_sep CodeGenerator removeGenerator concode_elem_sep CodeGenerator removeGenerator concode_elem_sep Set<Language> getLanguages concode_elem_sep GeneratorManager getInstance concode_elem_sep Language findLanguage concode_elem_sep CodeGenerator getCurrGenerator concode_elem_sep Map<Language,CodeGenerator> getGenerators", "code_tokens": ["void", "function", "(", "Language", "arg0", ",", "CodeGenerator", "arg1", ")", "{", "if", "(", "currLanguage", "==", "null", ")", "{", "currLanguage", "=", "arg0", ";", "}", "generators", ".", "put", "(", "arg0", ",", "arg1", ")", ";", "ArgoEventPump", ".", "fireEvent", "(", "new", "ArgoGeneratorEvent", "(", "ArgoEventTypes", ".", "GENERATOR_ADDED", ",", "arg1", ")", ")", ";", "LOG", ".", "debug", "(", "\"srini_string\"", "+", "arg1", "+", "\"srini_string\"", "+", "arg0", ")", ";", "}"], "nl_tokens": ["registers", "a", "new", "generator", ".", "if", "a", "generator", "with", "the", "same", "language", "is", "already", "registered", ",", "it", "'", "s", "replaced", "by", "the", "new", "one", ".", "concode_field_sep", "GeneratorManager", "INSTANCE", "concode_elem_sep", "Logger", "LOG", "concode_elem_sep", "Language", "currLanguage", "concode_elem_sep", "Map", "<", "Language", ",", "CodeGenerator", ">", "generators", "concode_field_sep", "String", "getCodePath", "concode_elem_sep", "CodeGenerator", "getGenerator", "concode_elem_sep", "CodeGenerator", "getGenerator", "concode_elem_sep", "Language", "getCurrLanguage", "concode_elem_sep", "CodeGenerator", "removeGenerator", "concode_elem_sep", "CodeGenerator", "removeGenerator", "concode_elem_sep", "Set", "<", "Language", ">", "getLanguages", "concode_elem_sep", "GeneratorManager", "getInstance", "concode_elem_sep", "Language", "findLanguage", "concode_elem_sep", "CodeGenerator", "getCurrGenerator", "concode_elem_sep", "Map", "<", "Language", ",", "CodeGenerator", ">", "getGenerators"]}
{"code": "String function ( ) { return \"srini_string\" + fldname ; }", "nl": "returns the field 's name , prepended by `` maxof '' . concode_field_sep Constant val concode_elem_sep String fldname concode_field_sep void processFirst concode_elem_sep void processNext concode_elem_sep Constant value", "code_tokens": ["String", "function", "(", ")", "{", "return", "\"srini_string\"", "+", "fldname", ";", "}"], "nl_tokens": ["returns", "the", "field", "'s name , prepended by `` maxof '", "'", ".", "concode_field_sep", "Constant", "val", "concode_elem_sep", "String", "fldname", "concode_field_sep", "void", "processFirst", "concode_elem_sep", "void", "processNext", "concode_elem_sep", "Constant", "value"]}
{"code": "void function ( EndpointResolver arg0 ) { resolvers . remove ( arg0 ) ; }", "nl": "unregister an endpoint resolver . concode_field_sep Bus bus concode_elem_sep List<EndpointResolver> resolvers concode_field_sep EndpointReferenceType mint concode_elem_sep EndpointReferenceType mint concode_elem_sep EndpointReferenceType resolve concode_elem_sep List<EndpointResolver> getResolvers concode_elem_sep EndpointReferenceType renew concode_elem_sep void setBus concode_elem_sep void register", "code_tokens": ["void", "function", "(", "EndpointResolver", "arg0", ")", "{", "resolvers", ".", "remove", "(", "arg0", ")", ";", "}"], "nl_tokens": ["unregister", "an", "endpoint", "resolver", ".", "concode_field_sep", "Bus", "bus", "concode_elem_sep", "List", "<", "EndpointResolver", ">", "resolvers", "concode_field_sep", "EndpointReferenceType", "mint", "concode_elem_sep", "EndpointReferenceType", "mint", "concode_elem_sep", "EndpointReferenceType", "resolve", "concode_elem_sep", "List", "<", "EndpointResolver", ">", "getResolvers", "concode_elem_sep", "EndpointReferenceType", "renew", "concode_elem_sep", "void", "setBus", "concode_elem_sep", "void", "register"]}
{"code": "long function ( ) { return lifetime ; }", "nl": "get the lifetime of the token to be returned in seconds concode_field_sep TokenReference unAttachedReference concode_elem_sep Date expires concode_elem_sep String tokenId concode_elem_sep Date created concode_elem_sep long lifetime concode_elem_sep TokenReference attachedReference concode_elem_sep Element token concode_field_sep void setAttachedReference concode_elem_sep String getTokenId concode_elem_sep TokenReference getUnAttachedReference concode_elem_sep void setExpires concode_elem_sep Date getCreated concode_elem_sep void setCreated concode_elem_sep void setUnattachedReference concode_elem_sep void setToken concode_elem_sep Element getToken concode_elem_sep void setLifetime concode_elem_sep void setTokenId concode_elem_sep Date getExpires concode_elem_sep TokenReference getAttachedReference", "code_tokens": ["long", "function", "(", ")", "{", "return", "lifetime", ";", "}"], "nl_tokens": ["get", "the", "lifetime", "of", "the", "token", "to", "be", "returned", "in", "seconds", "concode_field_sep", "TokenReference", "unAttachedReference", "concode_elem_sep", "Date", "expires", "concode_elem_sep", "String", "tokenId", "concode_elem_sep", "Date", "created", "concode_elem_sep", "long", "lifetime", "concode_elem_sep", "TokenReference", "attachedReference", "concode_elem_sep", "Element", "token", "concode_field_sep", "void", "setAttachedReference", "concode_elem_sep", "String", "getTokenId", "concode_elem_sep", "TokenReference", "getUnAttachedReference", "concode_elem_sep", "void", "setExpires", "concode_elem_sep", "Date", "getCreated", "concode_elem_sep", "void", "setCreated", "concode_elem_sep", "void", "setUnattachedReference", "concode_elem_sep", "void", "setToken", "concode_elem_sep", "Element", "getToken", "concode_elem_sep", "void", "setLifetime", "concode_elem_sep", "void", "setTokenId", "concode_elem_sep", "Date", "getExpires", "concode_elem_sep", "TokenReference", "getAttachedReference"]}
{"code": "void function ( String arg0 ) { this . relyingParty = arg0 ; }", "nl": "set the relying party of the authentication request concode_field_sep boolean passiveAuth concode_elem_sep Map<String,String[]> requestQueryParams concode_elem_sep long serialVersionUID concode_elem_sep String commonAuthCallerPath concode_elem_sep boolean forceAuth concode_elem_sep String type concode_elem_sep Map<String,String> requestHeaders concode_elem_sep String tenantDomain concode_elem_sep boolean isPost concode_elem_sep String relyingParty concode_field_sep void addHeader concode_elem_sep String getRelyingParty concode_elem_sep boolean getForceAuth concode_elem_sep String getCommonAuthCallerPath concode_elem_sep Map<String,String[]> getRequestQueryParams concode_elem_sep void addRequestQueryParam concode_elem_sep void setPost concode_elem_sep void setType concode_elem_sep boolean isPost concode_elem_sep void setTenantDomain concode_elem_sep void appendRequestQueryParams concode_elem_sep boolean getPassiveAuth concode_elem_sep Map<String,String> getRequestHeaders concode_elem_sep String getTenantDomain concode_elem_sep String[] getRequestQueryParam concode_elem_sep String getType concode_elem_sep void setPassiveAuth concode_elem_sep void setCommonAuthCallerPath concode_elem_sep void setForceAuth concode_elem_sep void setRequestQueryParams", "code_tokens": ["void", "function", "(", "String", "arg0", ")", "{", "this", ".", "relyingParty", "=", "arg0", ";", "}"], "nl_tokens": ["set", "the", "relying", "party", "of", "the", "authentication", "request", "concode_field_sep", "boolean", "passiveAuth", "concode_elem_sep", "Map", "<", "String", ",", "String", "[", "]", ">", "requestQueryParams", "concode_elem_sep", "long", "serialVersionUID", "concode_elem_sep", "String", "commonAuthCallerPath", "concode_elem_sep", "boolean", "forceAuth", "concode_elem_sep", "String", "type", "concode_elem_sep", "Map", "<", "String", ",", "String", ">", "requestHeaders", "concode_elem_sep", "String", "tenantDomain", "concode_elem_sep", "boolean", "isPost", "concode_elem_sep", "String", "relyingParty", "concode_field_sep", "void", "addHeader", "concode_elem_sep", "String", "getRelyingParty", "concode_elem_sep", "boolean", "getForceAuth", "concode_elem_sep", "String", "getCommonAuthCallerPath", "concode_elem_sep", "Map", "<", "String", ",", "String", "[", "]", ">", "getRequestQueryParams", "concode_elem_sep", "void", "addRequestQueryParam", "concode_elem_sep", "void", "setPost", "concode_elem_sep", "void", "setType", "concode_elem_sep", "boolean", "isPost", "concode_elem_sep", "void", "setTenantDomain", "concode_elem_sep", "void", "appendRequestQueryParams", "concode_elem_sep", "boolean", "getPassiveAuth", "concode_elem_sep", "Map", "<", "String", ",", "String", ">", "getRequestHeaders", "concode_elem_sep", "String", "getTenantDomain", "concode_elem_sep", "String", "[", "]", "getRequestQueryParam", "concode_elem_sep", "String", "getType", "concode_elem_sep", "void", "setPassiveAuth", "concode_elem_sep", "void", "setCommonAuthCallerPath", "concode_elem_sep", "void", "setForceAuth", "concode_elem_sep", "void", "setRequestQueryParams"]}
{"code": "void function ( IdentityMapper arg0 ) { this . identityMapper = arg0 ; }", "nl": "set the identitymapper object to use . concode_field_sep Object encryptionCryptoProperties concode_elem_sep Bus bus concode_elem_sep Crypto signatureCrypto concode_elem_sep SignatureProperties signatureProperties concode_elem_sep Logger LOG concode_elem_sep String issuer concode_elem_sep EncryptionProperties encryptionProperties concode_elem_sep CallbackHandler callbackHandler concode_elem_sep List<Relationship> relationships concode_elem_sep boolean validateUseKey concode_elem_sep RelationshipResolver relationshipResolver concode_elem_sep String callbackHandlerClass concode_elem_sep String signatureUsername concode_elem_sep Crypto encryptionCrypto concode_elem_sep SAMLRealmCodec samlRealmCodec concode_elem_sep String encryptionUsername concode_elem_sep Object signatureCryptoProperties concode_elem_sep IdentityMapper identityMapper concode_elem_sep RealmParser realmParser concode_field_sep RelationshipResolver getRelationshipResolver concode_elem_sep Bus getBus concode_elem_sep void setSamlRealmCodec concode_elem_sep ResourceManager getResourceManager concode_elem_sep void setSignaturePropertiesFile concode_elem_sep void setCallbackHandler concode_elem_sep void setEncryptionProperties concode_elem_sep EncryptionProperties getEncryptionProperties concode_elem_sep boolean isValidateUseKey concode_elem_sep void setSignatureUsername concode_elem_sep List<Relationship> getRelationships concode_elem_sep SAMLRealmCodec getSamlRealmCodec concode_elem_sep String getEncryptionUsername concode_elem_sep void setEncryptionPropertiesFile concode_elem_sep void setEncryptionUsername concode_elem_sep void setCallbackHandlerClass concode_elem_sep Crypto getEncryptionCrypto concode_elem_sep void setRelationships concode_elem_sep SignatureProperties getSignatureProperties concode_elem_sep void setSignatureProperties concode_elem_sep void setRealmParser concode_elem_sep String getIssuer concode_elem_sep void setSignatureCryptoProperties concode_elem_sep void setSignatureCrypto concode_elem_sep IdentityMapper getIdentityMapper concode_elem_sep void setValidateUseKey concode_elem_sep void configureProperties concode_elem_sep void setEncryptionCrypto concode_elem_sep RealmParser getRealmParser concode_elem_sep String getSignatureUsername concode_elem_sep Crypto getSignatureCrypto concode_elem_sep void setIssuer concode_elem_sep CallbackHandler getCallbackHandler concode_elem_sep void setEncryptionCryptoProperties concode_elem_sep void setBus", "code_tokens": ["void", "function", "(", "IdentityMapper", "arg0", ")", "{", "this", ".", "identityMapper", "=", "arg0", ";", "}"], "nl_tokens": ["set", "the", "identitymapper", "object", "to", "use", ".", "concode_field_sep", "Object", "encryptionCryptoProperties", "concode_elem_sep", "Bus", "bus", "concode_elem_sep", "Crypto", "signatureCrypto", "concode_elem_sep", "SignatureProperties", "signatureProperties", "concode_elem_sep", "Logger", "LOG", "concode_elem_sep", "String", "issuer", "concode_elem_sep", "EncryptionProperties", "encryptionProperties", "concode_elem_sep", "CallbackHandler", "callbackHandler", "concode_elem_sep", "List", "<", "Relationship", ">", "relationships", "concode_elem_sep", "boolean", "validateUseKey", "concode_elem_sep", "RelationshipResolver", "relationshipResolver", "concode_elem_sep", "String", "callbackHandlerClass", "concode_elem_sep", "String", "signatureUsername", "concode_elem_sep", "Crypto", "encryptionCrypto", "concode_elem_sep", "SAMLRealmCodec", "samlRealmCodec", "concode_elem_sep", "String", "encryptionUsername", "concode_elem_sep", "Object", "signatureCryptoProperties", "concode_elem_sep", "IdentityMapper", "identityMapper", "concode_elem_sep", "RealmParser", "realmParser", "concode_field_sep", "RelationshipResolver", "getRelationshipResolver", "concode_elem_sep", "Bus", "getBus", "concode_elem_sep", "void", "setSamlRealmCodec", "concode_elem_sep", "ResourceManager", "getResourceManager", "concode_elem_sep", "void", "setSignaturePropertiesFile", "concode_elem_sep", "void", "setCallbackHandler", "concode_elem_sep", "void", "setEncryptionProperties", "concode_elem_sep", "EncryptionProperties", "getEncryptionProperties", "concode_elem_sep", "boolean", "isValidateUseKey", "concode_elem_sep", "void", "setSignatureUsername", "concode_elem_sep", "List", "<", "Relationship", ">", "getRelationships", "concode_elem_sep", "SAMLRealmCodec", "getSamlRealmCodec", "concode_elem_sep", "String", "getEncryptionUsername", "concode_elem_sep", "void", "setEncryptionPropertiesFile", "concode_elem_sep", "void", "setEncryptionUsername", "concode_elem_sep", "void", "setCallbackHandlerClass", "concode_elem_sep", "Crypto", "getEncryptionCrypto", "concode_elem_sep", "void", "setRelationships", "concode_elem_sep", "SignatureProperties", "getSignatureProperties", "concode_elem_sep", "void", "setSignatureProperties", "concode_elem_sep", "void", "setRealmParser", "concode_elem_sep", "String", "getIssuer", "concode_elem_sep", "void", "setSignatureCryptoProperties", "concode_elem_sep", "void", "setSignatureCrypto", "concode_elem_sep", "IdentityMapper", "getIdentityMapper", "concode_elem_sep", "void", "setValidateUseKey", "concode_elem_sep", "void", "configureProperties", "concode_elem_sep", "void", "setEncryptionCrypto", "concode_elem_sep", "RealmParser", "getRealmParser", "concode_elem_sep", "String", "getSignatureUsername", "concode_elem_sep", "Crypto", "getSignatureCrypto", "concode_elem_sep", "void", "setIssuer", "concode_elem_sep", "CallbackHandler", "getCallbackHandler", "concode_elem_sep", "void", "setEncryptionCryptoProperties", "concode_elem_sep", "void", "setBus"]}
{"code": "void function ( Crypto arg0 ) { this . encryptionCrypto = arg0 ; }", "nl": "set the encryption crypto object concode_field_sep Object encryptionCryptoProperties concode_elem_sep Bus bus concode_elem_sep Crypto signatureCrypto concode_elem_sep SignatureProperties signatureProperties concode_elem_sep Logger LOG concode_elem_sep String issuer concode_elem_sep EncryptionProperties encryptionProperties concode_elem_sep CallbackHandler callbackHandler concode_elem_sep List<Relationship> relationships concode_elem_sep boolean validateUseKey concode_elem_sep RelationshipResolver relationshipResolver concode_elem_sep String callbackHandlerClass concode_elem_sep String signatureUsername concode_elem_sep Crypto encryptionCrypto concode_elem_sep SAMLRealmCodec samlRealmCodec concode_elem_sep String encryptionUsername concode_elem_sep Object signatureCryptoProperties concode_elem_sep IdentityMapper identityMapper concode_elem_sep RealmParser realmParser concode_field_sep RelationshipResolver getRelationshipResolver concode_elem_sep Bus getBus concode_elem_sep void setSamlRealmCodec concode_elem_sep ResourceManager getResourceManager concode_elem_sep void setSignaturePropertiesFile concode_elem_sep void setCallbackHandler concode_elem_sep void setEncryptionProperties concode_elem_sep EncryptionProperties getEncryptionProperties concode_elem_sep boolean isValidateUseKey concode_elem_sep void setSignatureUsername concode_elem_sep List<Relationship> getRelationships concode_elem_sep SAMLRealmCodec getSamlRealmCodec concode_elem_sep String getEncryptionUsername concode_elem_sep void setIdentityMapper concode_elem_sep void setEncryptionPropertiesFile concode_elem_sep void setEncryptionUsername concode_elem_sep void setCallbackHandlerClass concode_elem_sep Crypto getEncryptionCrypto concode_elem_sep void setRelationships concode_elem_sep SignatureProperties getSignatureProperties concode_elem_sep void setSignatureProperties concode_elem_sep void setRealmParser concode_elem_sep String getIssuer concode_elem_sep void setSignatureCryptoProperties concode_elem_sep void setSignatureCrypto concode_elem_sep IdentityMapper getIdentityMapper concode_elem_sep void setValidateUseKey concode_elem_sep void configureProperties concode_elem_sep RealmParser getRealmParser concode_elem_sep String getSignatureUsername concode_elem_sep Crypto getSignatureCrypto concode_elem_sep void setIssuer concode_elem_sep CallbackHandler getCallbackHandler concode_elem_sep void setEncryptionCryptoProperties concode_elem_sep void setBus", "code_tokens": ["void", "function", "(", "Crypto", "arg0", ")", "{", "this", ".", "encryptionCrypto", "=", "arg0", ";", "}"], "nl_tokens": ["set", "the", "encryption", "crypto", "object", "concode_field_sep", "Object", "encryptionCryptoProperties", "concode_elem_sep", "Bus", "bus", "concode_elem_sep", "Crypto", "signatureCrypto", "concode_elem_sep", "SignatureProperties", "signatureProperties", "concode_elem_sep", "Logger", "LOG", "concode_elem_sep", "String", "issuer", "concode_elem_sep", "EncryptionProperties", "encryptionProperties", "concode_elem_sep", "CallbackHandler", "callbackHandler", "concode_elem_sep", "List", "<", "Relationship", ">", "relationships", "concode_elem_sep", "boolean", "validateUseKey", "concode_elem_sep", "RelationshipResolver", "relationshipResolver", "concode_elem_sep", "String", "callbackHandlerClass", "concode_elem_sep", "String", "signatureUsername", "concode_elem_sep", "Crypto", "encryptionCrypto", "concode_elem_sep", "SAMLRealmCodec", "samlRealmCodec", "concode_elem_sep", "String", "encryptionUsername", "concode_elem_sep", "Object", "signatureCryptoProperties", "concode_elem_sep", "IdentityMapper", "identityMapper", "concode_elem_sep", "RealmParser", "realmParser", "concode_field_sep", "RelationshipResolver", "getRelationshipResolver", "concode_elem_sep", "Bus", "getBus", "concode_elem_sep", "void", "setSamlRealmCodec", "concode_elem_sep", "ResourceManager", "getResourceManager", "concode_elem_sep", "void", "setSignaturePropertiesFile", "concode_elem_sep", "void", "setCallbackHandler", "concode_elem_sep", "void", "setEncryptionProperties", "concode_elem_sep", "EncryptionProperties", "getEncryptionProperties", "concode_elem_sep", "boolean", "isValidateUseKey", "concode_elem_sep", "void", "setSignatureUsername", "concode_elem_sep", "List", "<", "Relationship", ">", "getRelationships", "concode_elem_sep", "SAMLRealmCodec", "getSamlRealmCodec", "concode_elem_sep", "String", "getEncryptionUsername", "concode_elem_sep", "void", "setIdentityMapper", "concode_elem_sep", "void", "setEncryptionPropertiesFile", "concode_elem_sep", "void", "setEncryptionUsername", "concode_elem_sep", "void", "setCallbackHandlerClass", "concode_elem_sep", "Crypto", "getEncryptionCrypto", "concode_elem_sep", "void", "setRelationships", "concode_elem_sep", "SignatureProperties", "getSignatureProperties", "concode_elem_sep", "void", "setSignatureProperties", "concode_elem_sep", "void", "setRealmParser", "concode_elem_sep", "String", "getIssuer", "concode_elem_sep", "void", "setSignatureCryptoProperties", "concode_elem_sep", "void", "setSignatureCrypto", "concode_elem_sep", "IdentityMapper", "getIdentityMapper", "concode_elem_sep", "void", "setValidateUseKey", "concode_elem_sep", "void", "configureProperties", "concode_elem_sep", "RealmParser", "getRealmParser", "concode_elem_sep", "String", "getSignatureUsername", "concode_elem_sep", "Crypto", "getSignatureCrypto", "concode_elem_sep", "void", "setIssuer", "concode_elem_sep", "CallbackHandler", "getCallbackHandler", "concode_elem_sep", "void", "setEncryptionCryptoProperties", "concode_elem_sep", "void", "setBus"]}
{"code": "void function ( ) { events . clear ( ) ; }", "nl": "clears the list of collected events . concode_field_sep List<SentenceEvent> events concode_elem_sep SentenceReader reader concode_elem_sep List<ProviderListener<T>> listeners concode_field_sep void fireProviderEvent concode_elem_sep void readingStopped concode_elem_sep boolean hasAll concode_elem_sep T createProviderEvent concode_elem_sep boolean isReady concode_elem_sep boolean isValid concode_elem_sep boolean hasOne concode_elem_sep void readingStarted concode_elem_sep void removeListener concode_elem_sep void readingPaused concode_elem_sep void sentenceRead concode_elem_sep List<Sentence> getSentences concode_elem_sep void addListener concode_elem_sep boolean validate", "code_tokens": ["void", "function", "(", ")", "{", "events", ".", "clear", "(", ")", ";", "}"], "nl_tokens": ["clears", "the", "list", "of", "collected", "events", ".", "concode_field_sep", "List", "<", "SentenceEvent", ">", "events", "concode_elem_sep", "SentenceReader", "reader", "concode_elem_sep", "List", "<", "ProviderListener", "<", "T", ">>", "listeners", "concode_field_sep", "void", "fireProviderEvent", "concode_elem_sep", "void", "readingStopped", "concode_elem_sep", "boolean", "hasAll", "concode_elem_sep", "T", "createProviderEvent", "concode_elem_sep", "boolean", "isReady", "concode_elem_sep", "boolean", "isValid", "concode_elem_sep", "boolean", "hasOne", "concode_elem_sep", "void", "readingStarted", "concode_elem_sep", "void", "removeListener", "concode_elem_sep", "void", "readingPaused", "concode_elem_sep", "void", "sentenceRead", "concode_elem_sep", "List", "<", "Sentence", ">", "getSentences", "concode_elem_sep", "void", "addListener", "concode_elem_sep", "boolean", "validate"]}
{"code": "Object function ( String arg0 ) { if ( ! vars . containsKey ( arg0 ) ) { throw new ELException ( XLog . format ( \"srini_string\" , arg0 ) ) ; } return vars . get ( arg0 ) ; }", "nl": "resolve a variable name . used by the el evaluator implemenation . concode_field_sep Map<String,Method> functions concode_elem_sep ThreadLocal<ELEvaluator> current concode_elem_sep Context context concode_elem_sep ExpressionEvaluator evaluator concode_elem_sep Map<String,Object> vars concode_field_sep void setVariables concode_elem_sep Method resolveFunction concode_elem_sep void addFunction concode_elem_sep void setVariable concode_elem_sep void setVariable concode_elem_sep ELEvaluator getCurrent concode_elem_sep Object getVariable concode_elem_sep Object getVariable concode_elem_sep Context getContext concode_elem_sep T evaluate", "code_tokens": ["Object", "function", "(", "String", "arg0", ")", "{", "if", "(", "!", "vars", ".", "containsKey", "(", "arg0", ")", ")", "{", "throw", "new", "ELException", "(", "XLog", ".", "format", "(", "\"srini_string\"", ",", "arg0", ")", ")", ";", "}", "return", "vars", ".", "get", "(", "arg0", ")", ";", "}"], "nl_tokens": ["resolve", "a", "variable", "name", ".", "used", "by", "the", "el", "evaluator", "implemenation", ".", "concode_field_sep", "Map", "<", "String", ",", "Method", ">", "functions", "concode_elem_sep", "ThreadLocal", "<", "ELEvaluator", ">", "current", "concode_elem_sep", "Context", "context", "concode_elem_sep", "ExpressionEvaluator", "evaluator", "concode_elem_sep", "Map", "<", "String", ",", "Object", ">", "vars", "concode_field_sep", "void", "setVariables", "concode_elem_sep", "Method", "resolveFunction", "concode_elem_sep", "void", "addFunction", "concode_elem_sep", "void", "setVariable", "concode_elem_sep", "void", "setVariable", "concode_elem_sep", "ELEvaluator", "getCurrent", "concode_elem_sep", "Object", "getVariable", "concode_elem_sep", "Object", "getVariable", "concode_elem_sep", "Context", "getContext", "concode_elem_sep", "T", "evaluate"]}
{"code": "BufferedImage function ( int arg0 , int arg1 ) { BufferedImage loc0 = ImageUtil . createCompatibleBufferedImage ( arg0 , arg1 , BufferedImage . TYPE_INT_RGB ) ; ImageUtil . clearImage ( loc0 ) ; return loc0 ; }", "nl": "returns a bufferedimage using the specified width and height . by default this returns an image compatible with the screen if not in `` headless '' mode formatted for rgb . concode_field_sep LayoutContext layoutContext concode_elem_sep String sourceDocument concode_elem_sep SharedContext sharedContext concode_elem_sep int DEFAULT_DOTS_PER_PIXEL concode_elem_sep Java2DOutputDevice outputDevice concode_elem_sep Map renderingHints concode_elem_sep int NO_HEIGHT concode_elem_sep boolean rendered concode_elem_sep Box root concode_elem_sep float dotsPerPoint concode_elem_sep int width concode_elem_sep Document doc concode_elem_sep int DEFAULT_HEIGHT concode_elem_sep String sourceDocumentBase concode_elem_sep int DEFAULT_DOTS_PER_POINT concode_elem_sep int height concode_field_sep Document loadDocument concode_elem_sep void init concode_elem_sep boolean isHover concode_elem_sep LayoutContext getLayoutContext concode_elem_sep boolean isActive concode_elem_sep void layout concode_elem_sep void setDocument concode_elem_sep SharedContext newSharedContext concode_elem_sep boolean isFocus concode_elem_sep void setRenderingHints concode_elem_sep SharedContext getSharedContext concode_elem_sep Box render concode_elem_sep LayoutContext newLayoutContext", "code_tokens": ["BufferedImage", "function", "(", "int", "arg0", ",", "int", "arg1", ")", "{", "BufferedImage", "loc0", "=", "ImageUtil", ".", "createCompatibleBufferedImage", "(", "arg0", ",", "arg1", ",", "BufferedImage", ".", "TYPE_INT_RGB", ")", ";", "ImageUtil", ".", "clearImage", "(", "loc0", ")", ";", "return", "loc0", ";", "}"], "nl_tokens": ["returns", "a", "bufferedimage", "using", "the", "specified", "width", "and", "height", ".", "by", "default", "this", "returns", "an", "image", "compatible", "with", "the", "screen", "if", "not", "in", "`", "`", "headless", "''", "mode", "formatted", "for", "rgb", ".", "concode_field_sep", "LayoutContext", "layoutContext", "concode_elem_sep", "String", "sourceDocument", "concode_elem_sep", "SharedContext", "sharedContext", "concode_elem_sep", "int", "DEFAULT_DOTS_PER_PIXEL", "concode_elem_sep", "Java2DOutputDevice", "outputDevice", "concode_elem_sep", "Map", "renderingHints", "concode_elem_sep", "int", "NO_HEIGHT", "concode_elem_sep", "boolean", "rendered", "concode_elem_sep", "Box", "root", "concode_elem_sep", "float", "dotsPerPoint", "concode_elem_sep", "int", "width", "concode_elem_sep", "Document", "doc", "concode_elem_sep", "int", "DEFAULT_HEIGHT", "concode_elem_sep", "String", "sourceDocumentBase", "concode_elem_sep", "int", "DEFAULT_DOTS_PER_POINT", "concode_elem_sep", "int", "height", "concode_field_sep", "Document", "loadDocument", "concode_elem_sep", "void", "init", "concode_elem_sep", "boolean", "isHover", "concode_elem_sep", "LayoutContext", "getLayoutContext", "concode_elem_sep", "boolean", "isActive", "concode_elem_sep", "void", "layout", "concode_elem_sep", "void", "setDocument", "concode_elem_sep", "SharedContext", "newSharedContext", "concode_elem_sep", "boolean", "isFocus", "concode_elem_sep", "void", "setRenderingHints", "concode_elem_sep", "SharedContext", "getSharedContext", "concode_elem_sep", "Box", "render", "concode_elem_sep", "LayoutContext", "newLayoutContext"]}
{"code": "void function ( ) { ServerConfiguration loc0 = service . getServerConfiguration ( \"srini_string\" ) ; assertThat ( loc0 , is ( nullValue ( ) ) ) ; }", "nl": "checks the behavior when the issuer is not known . concode_field_sep ServerConfiguration mockServerConfig concode_elem_sep String issuer concode_elem_sep StaticServerConfigurationService service concode_field_sep void prepare concode_elem_sep void getServerConfiguration_success", "code_tokens": ["void", "function", "(", ")", "{", "ServerConfiguration", "loc0", "=", "service", ".", "getServerConfiguration", "(", "\"srini_string\"", ")", ";", "assertThat", "(", "loc0", ",", "is", "(", "nullValue", "(", ")", ")", ")", ";", "}"], "nl_tokens": ["checks", "the", "behavior", "when", "the", "issuer", "is", "not", "known", ".", "concode_field_sep", "ServerConfiguration", "mockServerConfig", "concode_elem_sep", "String", "issuer", "concode_elem_sep", "StaticServerConfigurationService", "service", "concode_field_sep", "void", "prepare", "concode_elem_sep", "void", "getServerConfiguration_success"]}
{"code": "BigDecimal function ( ) { return this . downloadSize ; }", "nl": "gets the download size . concode_field_sep Timestamp endDate concode_elem_sep BigDecimal feedConfigId concode_elem_sep String resultCode concode_elem_sep long serialVersionUID concode_elem_sep String resultMessage concode_elem_sep BigDecimal fileCount concode_elem_sep Timestamp maxReceiptDate concode_elem_sep BigDecimal downloadSize concode_elem_sep BigDecimal feedId concode_elem_sep String configInfo concode_elem_sep long runId concode_elem_sep byte[] errors concode_elem_sep String runStatus concode_elem_sep Timestamp startDate concode_field_sep BigDecimal getFeedConfigId concode_elem_sep Timestamp getStartDate concode_elem_sep void setFeedId concode_elem_sep String getResultCode concode_elem_sep void setFeedConfigId concode_elem_sep void setMaxReceiptDate concode_elem_sep long getRunId concode_elem_sep Timestamp getEndDate concode_elem_sep void setErrors concode_elem_sep String getConfigInfo concode_elem_sep void setEndDate concode_elem_sep byte[] getErrors concode_elem_sep void setFileCount concode_elem_sep String getResultMessage concode_elem_sep void setResultMessage concode_elem_sep BigDecimal getFileCount concode_elem_sep String getRunStatus concode_elem_sep void setRunStatus concode_elem_sep void setStartDate concode_elem_sep BigDecimal getFeedId concode_elem_sep void setResultCode concode_elem_sep void setRunId concode_elem_sep Timestamp getMaxReceiptDate concode_elem_sep void setConfigInfo concode_elem_sep void setDownloadSize", "code_tokens": ["BigDecimal", "function", "(", ")", "{", "return", "this", ".", "downloadSize", ";", "}"], "nl_tokens": ["gets", "the", "download", "size", ".", "concode_field_sep", "Timestamp", "endDate", "concode_elem_sep", "BigDecimal", "feedConfigId", "concode_elem_sep", "String", "resultCode", "concode_elem_sep", "long", "serialVersionUID", "concode_elem_sep", "String", "resultMessage", "concode_elem_sep", "BigDecimal", "fileCount", "concode_elem_sep", "Timestamp", "maxReceiptDate", "concode_elem_sep", "BigDecimal", "downloadSize", "concode_elem_sep", "BigDecimal", "feedId", "concode_elem_sep", "String", "configInfo", "concode_elem_sep", "long", "runId", "concode_elem_sep", "byte", "[", "]", "errors", "concode_elem_sep", "String", "runStatus", "concode_elem_sep", "Timestamp", "startDate", "concode_field_sep", "BigDecimal", "getFeedConfigId", "concode_elem_sep", "Timestamp", "getStartDate", "concode_elem_sep", "void", "setFeedId", "concode_elem_sep", "String", "getResultCode", "concode_elem_sep", "void", "setFeedConfigId", "concode_elem_sep", "void", "setMaxReceiptDate", "concode_elem_sep", "long", "getRunId", "concode_elem_sep", "Timestamp", "getEndDate", "concode_elem_sep", "void", "setErrors", "concode_elem_sep", "String", "getConfigInfo", "concode_elem_sep", "void", "setEndDate", "concode_elem_sep", "byte", "[", "]", "getErrors", "concode_elem_sep", "void", "setFileCount", "concode_elem_sep", "String", "getResultMessage", "concode_elem_sep", "void", "setResultMessage", "concode_elem_sep", "BigDecimal", "getFileCount", "concode_elem_sep", "String", "getRunStatus", "concode_elem_sep", "void", "setRunStatus", "concode_elem_sep", "void", "setStartDate", "concode_elem_sep", "BigDecimal", "getFeedId", "concode_elem_sep", "void", "setResultCode", "concode_elem_sep", "void", "setRunId", "concode_elem_sep", "Timestamp", "getMaxReceiptDate", "concode_elem_sep", "void", "setConfigInfo", "concode_elem_sep", "void", "setDownloadSize"]}
{"code": "List < JsonCoordinatorAction > function ( JSONArray arg0 ) { List < JsonCoordinatorAction > loc0 = new ArrayList < JsonCoordinatorAction > ( ) ; for ( Object loc1 : arg0 ) { loc0 . add ( new JsonCoordinatorAction ( ( JSONObject ) loc1 ) ) ; } return loc0 ; }", "nl": "convert a jsonarray into a nodes list . concode_field_sep Date nominalTime concode_elem_sep String trackerUri concode_elem_sep Date lastModifiedTime concode_elem_sep String missingDependencies concode_elem_sep String createdConf concode_elem_sep String errorMessage concode_elem_sep String externalId concode_elem_sep String errorCode concode_elem_sep String type concode_elem_sep String actionXml concode_elem_sep String jobId concode_elem_sep String consoleUrl concode_elem_sep String runConf concode_elem_sep int actionNumber concode_elem_sep Date createdTime concode_elem_sep int timeOut concode_elem_sep String id concode_elem_sep String externalStatus concode_elem_sep Status status concode_field_sep String getMissingDependencies concode_elem_sep String getConsoleUrl concode_elem_sep void setJobId concode_elem_sep void setActionNumber concode_elem_sep JSONArray toJSONArray concode_elem_sep String getId concode_elem_sep String getExternalId concode_elem_sep int getActionNumber concode_elem_sep Status getStatus concode_elem_sep void setTrackerUri concode_elem_sep void setErrorCode concode_elem_sep void setTimeOut concode_elem_sep void setErrorMessage concode_elem_sep String getErrorCode concode_elem_sep int hashCode concode_elem_sep void setRunConf concode_elem_sep JSONObject toJSONObject concode_elem_sep void setId concode_elem_sep void setCreatedTime concode_elem_sep void setExternalId concode_elem_sep void setNominalTime concode_elem_sep String getJobId concode_elem_sep void setCreatedConf concode_elem_sep void setLastModifiedTime concode_elem_sep Date getLastModifiedTime concode_elem_sep void setExternalStatus concode_elem_sep void setConsoleUrl concode_elem_sep void setType concode_elem_sep Date getNominalTime concode_elem_sep String getCreatedConf concode_elem_sep void setMissingDependencies concode_elem_sep String getExternalStatus concode_elem_sep void setActionXml concode_elem_sep void setStatus concode_elem_sep String getRunConf concode_elem_sep void setErrorInfo concode_elem_sep String getActionXml concode_elem_sep String getType concode_elem_sep int getTimeOut concode_elem_sep boolean equals concode_elem_sep String toString concode_elem_sep Date getCreatedTime concode_elem_sep String getTrackerUri concode_elem_sep String getErrorMessage", "code_tokens": ["List", "<", "JsonCoordinatorAction", ">", "function", "(", "JSONArray", "arg0", ")", "{", "List", "<", "JsonCoordinatorAction", ">", "loc0", "=", "new", "ArrayList", "<", "JsonCoordinatorAction", ">", "(", ")", ";", "for", "(", "Object", "loc1", ":", "arg0", ")", "{", "loc0", ".", "add", "(", "new", "JsonCoordinatorAction", "(", "(", "JSONObject", ")", "loc1", ")", ")", ";", "}", "return", "loc0", ";", "}"], "nl_tokens": ["convert", "a", "jsonarray", "into", "a", "nodes", "list", ".", "concode_field_sep", "Date", "nominalTime", "concode_elem_sep", "String", "trackerUri", "concode_elem_sep", "Date", "lastModifiedTime", "concode_elem_sep", "String", "missingDependencies", "concode_elem_sep", "String", "createdConf", "concode_elem_sep", "String", "errorMessage", "concode_elem_sep", "String", "externalId", "concode_elem_sep", "String", "errorCode", "concode_elem_sep", "String", "type", "concode_elem_sep", "String", "actionXml", "concode_elem_sep", "String", "jobId", "concode_elem_sep", "String", "consoleUrl", "concode_elem_sep", "String", "runConf", "concode_elem_sep", "int", "actionNumber", "concode_elem_sep", "Date", "createdTime", "concode_elem_sep", "int", "timeOut", "concode_elem_sep", "String", "id", "concode_elem_sep", "String", "externalStatus", "concode_elem_sep", "Status", "status", "concode_field_sep", "String", "getMissingDependencies", "concode_elem_sep", "String", "getConsoleUrl", "concode_elem_sep", "void", "setJobId", "concode_elem_sep", "void", "setActionNumber", "concode_elem_sep", "JSONArray", "toJSONArray", "concode_elem_sep", "String", "getId", "concode_elem_sep", "String", "getExternalId", "concode_elem_sep", "int", "getActionNumber", "concode_elem_sep", "Status", "getStatus", "concode_elem_sep", "void", "setTrackerUri", "concode_elem_sep", "void", "setErrorCode", "concode_elem_sep", "void", "setTimeOut", "concode_elem_sep", "void", "setErrorMessage", "concode_elem_sep", "String", "getErrorCode", "concode_elem_sep", "int", "hashCode", "concode_elem_sep", "void", "setRunConf", "concode_elem_sep", "JSONObject", "toJSONObject", "concode_elem_sep", "void", "setId", "concode_elem_sep", "void", "setCreatedTime", "concode_elem_sep", "void", "setExternalId", "concode_elem_sep", "void", "setNominalTime", "concode_elem_sep", "String", "getJobId", "concode_elem_sep", "void", "setCreatedConf", "concode_elem_sep", "void", "setLastModifiedTime", "concode_elem_sep", "Date", "getLastModifiedTime", "concode_elem_sep", "void", "setExternalStatus", "concode_elem_sep", "void", "setConsoleUrl", "concode_elem_sep", "void", "setType", "concode_elem_sep", "Date", "getNominalTime", "concode_elem_sep", "String", "getCreatedConf", "concode_elem_sep", "void", "setMissingDependencies", "concode_elem_sep", "String", "getExternalStatus", "concode_elem_sep", "void", "setActionXml", "concode_elem_sep", "void", "setStatus", "concode_elem_sep", "String", "getRunConf", "concode_elem_sep", "void", "setErrorInfo", "concode_elem_sep", "String", "getActionXml", "concode_elem_sep", "String", "getType", "concode_elem_sep", "int", "getTimeOut", "concode_elem_sep", "boolean", "equals", "concode_elem_sep", "String", "toString", "concode_elem_sep", "Date", "getCreatedTime", "concode_elem_sep", "String", "getTrackerUri", "concode_elem_sep", "String", "getErrorMessage"]}
{"code": "void function ( ) { Mockito . when ( userInfoRepository . getByUsername ( adminUsername ) ) . thenReturn ( userInfoAdmin ) ; UserInfo loc0 = service . getByUsername ( adminUsername ) ; assertEquals ( loc0 . getSub ( ) , adminSub ) ; }", "nl": "test loading an admin user , ensuring that the userdetails object returned has both the role_user and role_admin authorities . concode_field_sep ClientDetailsEntity pairwiseClient1 concode_elem_sep ClientDetailsEntity pairwiseClient2 concode_elem_sep ClientDetailsEntity pairwiseClient3 concode_elem_sep String sectorIdentifier3 concode_elem_sep ClientDetailsEntity pairwiseClient4 concode_elem_sep String regularUsername concode_elem_sep String sectorIdentifier1 concode_elem_sep UserInfoRepository userInfoRepository concode_elem_sep String adminSub concode_elem_sep String sectorIdentifier2 concode_elem_sep String publicClientId1 concode_elem_sep String pairwiseSub12 concode_elem_sep UserInfo userInfoRegular concode_elem_sep String publicClientId2 concode_elem_sep String pairwiseClientId4 concode_elem_sep ClientDetailsEntity publicClient1 concode_elem_sep ClientDetailsEntity publicClient2 concode_elem_sep DefaultUserInfoService service concode_elem_sep String pairwiseSub4 concode_elem_sep String pairwiseClientId2 concode_elem_sep ClientDetailsEntityService clientDetailsEntityService concode_elem_sep String adminUsername concode_elem_sep String pairwiseSub3 concode_elem_sep UserInfo userInfoAdmin concode_elem_sep String regularSub concode_elem_sep PairwiseIdentiferService pairwiseIdentiferService concode_elem_sep String pairwiseClientId1 concode_elem_sep String pairwiseClientId3 concode_field_sep void getByUsernameAndClientId_publicClients concode_elem_sep void prepare concode_elem_sep void getByUsernameAndClientId_pairwiseClients concode_elem_sep void loadByUsername_nullUser concode_elem_sep void loadByUsername_regular_success", "code_tokens": ["void", "function", "(", ")", "{", "Mockito", ".", "when", "(", "userInfoRepository", ".", "getByUsername", "(", "adminUsername", ")", ")", ".", "thenReturn", "(", "userInfoAdmin", ")", ";", "UserInfo", "loc0", "=", "service", ".", "getByUsername", "(", "adminUsername", ")", ";", "assertEquals", "(", "loc0", ".", "getSub", "(", ")", ",", "adminSub", ")", ";", "}"], "nl_tokens": ["test", "loading", "an", "admin", "user", ",", "ensuring", "that", "the", "userdetails", "object", "returned", "has", "both", "the", "role_user", "and", "role_admin", "authorities", ".", "concode_field_sep", "ClientDetailsEntity", "pairwiseClient1", "concode_elem_sep", "ClientDetailsEntity", "pairwiseClient2", "concode_elem_sep", "ClientDetailsEntity", "pairwiseClient3", "concode_elem_sep", "String", "sectorIdentifier3", "concode_elem_sep", "ClientDetailsEntity", "pairwiseClient4", "concode_elem_sep", "String", "regularUsername", "concode_elem_sep", "String", "sectorIdentifier1", "concode_elem_sep", "UserInfoRepository", "userInfoRepository", "concode_elem_sep", "String", "adminSub", "concode_elem_sep", "String", "sectorIdentifier2", "concode_elem_sep", "String", "publicClientId1", "concode_elem_sep", "String", "pairwiseSub12", "concode_elem_sep", "UserInfo", "userInfoRegular", "concode_elem_sep", "String", "publicClientId2", "concode_elem_sep", "String", "pairwiseClientId4", "concode_elem_sep", "ClientDetailsEntity", "publicClient1", "concode_elem_sep", "ClientDetailsEntity", "publicClient2", "concode_elem_sep", "DefaultUserInfoService", "service", "concode_elem_sep", "String", "pairwiseSub4", "concode_elem_sep", "String", "pairwiseClientId2", "concode_elem_sep", "ClientDetailsEntityService", "clientDetailsEntityService", "concode_elem_sep", "String", "adminUsername", "concode_elem_sep", "String", "pairwiseSub3", "concode_elem_sep", "UserInfo", "userInfoAdmin", "concode_elem_sep", "String", "regularSub", "concode_elem_sep", "PairwiseIdentiferService", "pairwiseIdentiferService", "concode_elem_sep", "String", "pairwiseClientId1", "concode_elem_sep", "String", "pairwiseClientId3", "concode_field_sep", "void", "getByUsernameAndClientId_publicClients", "concode_elem_sep", "void", "prepare", "concode_elem_sep", "void", "getByUsernameAndClientId_pairwiseClients", "concode_elem_sep", "void", "loadByUsername_nullUser", "concode_elem_sep", "void", "loadByUsername_regular_success"]}
{"code": "GenericJSONBuilder function ( String arg0 ) { image = arg0 ; return this ; }", "nl": "not required concode_field_sep double lat concode_elem_sep String id_str concode_elem_sep String screen_name concode_elem_sep String place_name concode_elem_sep String image concode_elem_sep String user_name concode_elem_sep double lng concode_elem_sep Date created_at concode_elem_sep int loc_radius concode_elem_sep String user_id concode_elem_sep String text concode_elem_sep ArrayList<String> extras concode_field_sep GenericJSONBuilder setIDstr concode_elem_sep GenericJSONBuilder setPlaceName concode_elem_sep GenericJSONBuilder addText concode_elem_sep GenericJSONBuilder addField concode_elem_sep void insert concode_elem_sep GenericJSONBuilder setCoordinateRadius concode_elem_sep GenericJSONBuilder setAuthor concode_elem_sep GenericJSONBuilder builder concode_elem_sep GenericJSONBuilder setCoordinate concode_elem_sep GenericJSONBuilder setCreatedTime concode_elem_sep void persist concode_elem_sep String buildFieldJSON concode_elem_sep GenericJSONBuilder setUserid", "code_tokens": ["GenericJSONBuilder", "function", "(", "String", "arg0", ")", "{", "image", "=", "arg0", ";", "return", "this", ";", "}"], "nl_tokens": ["not", "required", "concode_field_sep", "double", "lat", "concode_elem_sep", "String", "id_str", "concode_elem_sep", "String", "screen_name", "concode_elem_sep", "String", "place_name", "concode_elem_sep", "String", "image", "concode_elem_sep", "String", "user_name", "concode_elem_sep", "double", "lng", "concode_elem_sep", "Date", "created_at", "concode_elem_sep", "int", "loc_radius", "concode_elem_sep", "String", "user_id", "concode_elem_sep", "String", "text", "concode_elem_sep", "ArrayList", "<", "String", ">", "extras", "concode_field_sep", "GenericJSONBuilder", "setIDstr", "concode_elem_sep", "GenericJSONBuilder", "setPlaceName", "concode_elem_sep", "GenericJSONBuilder", "addText", "concode_elem_sep", "GenericJSONBuilder", "addField", "concode_elem_sep", "void", "insert", "concode_elem_sep", "GenericJSONBuilder", "setCoordinateRadius", "concode_elem_sep", "GenericJSONBuilder", "setAuthor", "concode_elem_sep", "GenericJSONBuilder", "builder", "concode_elem_sep", "GenericJSONBuilder", "setCoordinate", "concode_elem_sep", "GenericJSONBuilder", "setCreatedTime", "concode_elem_sep", "void", "persist", "concode_elem_sep", "String", "buildFieldJSON", "concode_elem_sep", "GenericJSONBuilder", "setUserid"]}
{"code": "void function ( ParametersMetaData arg0 ) { this . parametersMetaData = arg0 ; }", "nl": "sets the value of the parametersmetadata property . concode_field_sep MetaData.Template template concode_elem_sep MetaData.WorkflowImpl workflowImpl concode_elem_sep String workflowImplId concode_elem_sep ParametersMetaData parametersMetaData concode_elem_sep String templateName concode_elem_sep String templateDescription concode_elem_sep String templateId concode_elem_sep String workflowImplName concode_elem_sep String workflowImplDescription concode_field_sep MetaData.WorkflowImpl getWorkflowImpl concode_elem_sep MetaData.Template getTemplate concode_elem_sep void setWorkflowImplId concode_elem_sep ParametersMetaData getParametersMetaData concode_elem_sep ParametersMetaData getParametersMetaData concode_elem_sep void setWorkflowImplName concode_elem_sep void setTemplateId concode_elem_sep void setTemplateId concode_elem_sep String getTemplateDescription concode_elem_sep void setTemplateDescription concode_elem_sep void setTemplateName concode_elem_sep String getWorkflowImplName concode_elem_sep void setTemplate concode_elem_sep String getTemplateId concode_elem_sep String getTemplateId concode_elem_sep String getWorkflowImplId concode_elem_sep String getWorkflowImplDescription concode_elem_sep String getTemplateName concode_elem_sep void setWorkflowImpl concode_elem_sep void setWorkflowImplDescription", "code_tokens": ["void", "function", "(", "ParametersMetaData", "arg0", ")", "{", "this", ".", "parametersMetaData", "=", "arg0", ";", "}"], "nl_tokens": ["sets", "the", "value", "of", "the", "parametersmetadata", "property", ".", "concode_field_sep", "MetaData", ".", "Template", "template", "concode_elem_sep", "MetaData", ".", "WorkflowImpl", "workflowImpl", "concode_elem_sep", "String", "workflowImplId", "concode_elem_sep", "ParametersMetaData", "parametersMetaData", "concode_elem_sep", "String", "templateName", "concode_elem_sep", "String", "templateDescription", "concode_elem_sep", "String", "templateId", "concode_elem_sep", "String", "workflowImplName", "concode_elem_sep", "String", "workflowImplDescription", "concode_field_sep", "MetaData", ".", "WorkflowImpl", "getWorkflowImpl", "concode_elem_sep", "MetaData", ".", "Template", "getTemplate", "concode_elem_sep", "void", "setWorkflowImplId", "concode_elem_sep", "ParametersMetaData", "getParametersMetaData", "concode_elem_sep", "ParametersMetaData", "getParametersMetaData", "concode_elem_sep", "void", "setWorkflowImplName", "concode_elem_sep", "void", "setTemplateId", "concode_elem_sep", "void", "setTemplateId", "concode_elem_sep", "String", "getTemplateDescription", "concode_elem_sep", "void", "setTemplateDescription", "concode_elem_sep", "void", "setTemplateName", "concode_elem_sep", "String", "getWorkflowImplName", "concode_elem_sep", "void", "setTemplate", "concode_elem_sep", "String", "getTemplateId", "concode_elem_sep", "String", "getTemplateId", "concode_elem_sep", "String", "getWorkflowImplId", "concode_elem_sep", "String", "getWorkflowImplDescription", "concode_elem_sep", "String", "getTemplateName", "concode_elem_sep", "void", "setWorkflowImpl", "concode_elem_sep", "void", "setWorkflowImplDescription"]}
{"code": "void function ( SentenceListener arg0 , String arg1 ) { registerListener ( arg0 , arg1 ) ; }", "nl": "adds a net.sf.marineapi.nmea.event.sentencelistener that is interested in receiving onlysentences of certain type . concode_field_sep String LOG_MSG concode_elem_sep String DISPATCH_ALL concode_elem_sep DataReader reader concode_elem_sep DataListener dataListener concode_elem_sep ConcurrentMap<String,List<SentenceListener>> listeners concode_elem_sep int pauseTimeout concode_elem_sep ExceptionListener exceptionListener concode_elem_sep Thread thread concode_elem_sep Logger LOGGER concode_elem_sep int DEFAULT_TIMEOUT concode_field_sep void fireReadingPaused concode_elem_sep void fireDataEvent concode_elem_sep ExceptionListener getExceptionListener concode_elem_sep void setPauseTimeout concode_elem_sep void start concode_elem_sep void removeSentenceListener concode_elem_sep void fireReadingStopped concode_elem_sep void registerListener concode_elem_sep List<SentenceListener> getSentenceListeners concode_elem_sep void handleException concode_elem_sep void setDataListener concode_elem_sep void stop concode_elem_sep void setInputStream concode_elem_sep void fireReadingStarted concode_elem_sep void fireSentenceEvent concode_elem_sep int getPauseTimeout concode_elem_sep void setExceptionListener concode_elem_sep void setDatagramSocket", "code_tokens": ["void", "function", "(", "SentenceListener", "arg0", ",", "String", "arg1", ")", "{", "registerListener", "(", "arg0", ",", "arg1", ")", ";", "}"], "nl_tokens": ["adds", "a", "net", ".", "sf", ".", "marineapi", ".", "nmea", ".", "event", ".", "sentencelistener", "that", "is", "interested", "in", "receiving", "onlysentences", "of", "certain", "type", ".", "concode_field_sep", "String", "LOG_MSG", "concode_elem_sep", "String", "DISPATCH_ALL", "concode_elem_sep", "DataReader", "reader", "concode_elem_sep", "DataListener", "dataListener", "concode_elem_sep", "ConcurrentMap", "<", "String", ",", "List", "<", "SentenceListener", ">>", "listeners", "concode_elem_sep", "int", "pauseTimeout", "concode_elem_sep", "ExceptionListener", "exceptionListener", "concode_elem_sep", "Thread", "thread", "concode_elem_sep", "Logger", "LOGGER", "concode_elem_sep", "int", "DEFAULT_TIMEOUT", "concode_field_sep", "void", "fireReadingPaused", "concode_elem_sep", "void", "fireDataEvent", "concode_elem_sep", "ExceptionListener", "getExceptionListener", "concode_elem_sep", "void", "setPauseTimeout", "concode_elem_sep", "void", "start", "concode_elem_sep", "void", "removeSentenceListener", "concode_elem_sep", "void", "fireReadingStopped", "concode_elem_sep", "void", "registerListener", "concode_elem_sep", "List", "<", "SentenceListener", ">", "getSentenceListeners", "concode_elem_sep", "void", "handleException", "concode_elem_sep", "void", "setDataListener", "concode_elem_sep", "void", "stop", "concode_elem_sep", "void", "setInputStream", "concode_elem_sep", "void", "fireReadingStarted", "concode_elem_sep", "void", "fireSentenceEvent", "concode_elem_sep", "int", "getPauseTimeout", "concode_elem_sep", "void", "setExceptionListener", "concode_elem_sep", "void", "setDatagramSocket"]}
{"code": "Script function ( List < byte [ ] > arg0 , @ Nullable byte [ ] arg1 ) { checkArgument ( arg0 . size ( ) <= 16 ) ; ScriptBuilder loc0 = new ScriptBuilder ( ) ; loc0 . smallNum ( 0 ) ; for ( byte [ ] loc1 : arg0 ) loc0 . data ( loc1 ) ; if ( arg1 != null ) loc0 . data ( arg1 ) ; return loc0 . build ( ) ; }", "nl": "create a program that satisfies an op_checkmultisig program , using pre-encoded signatures . optionally , appends the script program bytes if spending a p2sh output . concode_field_sep List<ScriptChunk> chunks concode_field_sep ScriptBuilder op concode_elem_sep ScriptBuilder op concode_elem_sep Script updateScriptWithSignature concode_elem_sep Script createOpReturnScript concode_elem_sep ScriptBuilder data concode_elem_sep ScriptBuilder data concode_elem_sep ScriptBuilder smallNum concode_elem_sep ScriptBuilder smallNum concode_elem_sep Script createRedeemScript concode_elem_sep ScriptBuilder addChunk concode_elem_sep ScriptBuilder addChunk concode_elem_sep Script createInputScript concode_elem_sep Script createInputScript concode_elem_sep Script createOutputScript concode_elem_sep Script createOutputScript concode_elem_sep Script createMultiSigInputScript concode_elem_sep Script createMultiSigInputScript concode_elem_sep Script createMultiSigOutputScript concode_elem_sep Script build concode_elem_sep Script createP2SHMultiSigInputScript concode_elem_sep Script createP2SHOutputScript concode_elem_sep Script createP2SHOutputScript concode_elem_sep Script createP2SHOutputScript", "code_tokens": ["Script", "function", "(", "List", "<", "byte", "[", "]", ">", "arg0", ",", "@", "Nullable", "byte", "[", "]", "arg1", ")", "{", "checkArgument", "(", "arg0", ".", "size", "(", ")", "<=", "16", ")", ";", "ScriptBuilder", "loc0", "=", "new", "ScriptBuilder", "(", ")", ";", "loc0", ".", "smallNum", "(", "0", ")", ";", "for", "(", "byte", "[", "]", "loc1", ":", "arg0", ")", "loc0", ".", "data", "(", "loc1", ")", ";", "if", "(", "arg1", "!=", "null", ")", "loc0", ".", "data", "(", "arg1", ")", ";", "return", "loc0", ".", "build", "(", ")", ";", "}"], "nl_tokens": ["create", "a", "program", "that", "satisfies", "an", "op_checkmultisig", "program", ",", "using", "pre", "-", "encoded", "signatures", ".", "optionally", ",", "appends", "the", "script", "program", "bytes", "if", "spending", "a", "p2sh", "output", ".", "concode_field_sep", "List", "<", "ScriptChunk", ">", "chunks", "concode_field_sep", "ScriptBuilder", "op", "concode_elem_sep", "ScriptBuilder", "op", "concode_elem_sep", "Script", "updateScriptWithSignature", "concode_elem_sep", "Script", "createOpReturnScript", "concode_elem_sep", "ScriptBuilder", "data", "concode_elem_sep", "ScriptBuilder", "data", "concode_elem_sep", "ScriptBuilder", "smallNum", "concode_elem_sep", "ScriptBuilder", "smallNum", "concode_elem_sep", "Script", "createRedeemScript", "concode_elem_sep", "ScriptBuilder", "addChunk", "concode_elem_sep", "ScriptBuilder", "addChunk", "concode_elem_sep", "Script", "createInputScript", "concode_elem_sep", "Script", "createInputScript", "concode_elem_sep", "Script", "createOutputScript", "concode_elem_sep", "Script", "createOutputScript", "concode_elem_sep", "Script", "createMultiSigInputScript", "concode_elem_sep", "Script", "createMultiSigInputScript", "concode_elem_sep", "Script", "createMultiSigOutputScript", "concode_elem_sep", "Script", "build", "concode_elem_sep", "Script", "createP2SHMultiSigInputScript", "concode_elem_sep", "Script", "createP2SHOutputScript", "concode_elem_sep", "Script", "createP2SHOutputScript", "concode_elem_sep", "Script", "createP2SHOutputScript"]}
{"code": "void function ( ) { this . m_selectorManager . addChannelInterestLater ( this . m_socketChannel , SelectionKey . OP_WRITE ) ; }", "nl": "activates interest in writing from a thread other than the selector thread . concode_field_sep WriteListener m_listener concode_elem_sep SocketChannel m_socketChannel concode_elem_sep SelectorManager m_selectorManager concode_elem_sep int m_numQueued concode_elem_sep Collection m_buffers concode_elem_sep long m_totalBytes concode_elem_sep boolean m_closed concode_elem_sep WriteListener NO_OP_LISTENER concode_elem_sep long m_startTime concode_elem_sep Logger LOG concode_elem_sep List m_writeBuffers concode_field_sep long getTotalBytes concode_elem_sep void disableWriteLater concode_elem_sep void onWrite concode_elem_sep void writeLater concode_elem_sep void writeLater concode_elem_sep void writeLater concode_elem_sep boolean writeBuffer concode_elem_sep void enableWrite concode_elem_sep Collection getBuffers concode_elem_sep void checkForNull concode_elem_sep long getStartTime concode_elem_sep void write concode_elem_sep void write concode_elem_sep void write concode_elem_sep boolean write concode_elem_sep void close concode_elem_sep WriteListener getListener concode_elem_sep int getNumQueued", "code_tokens": ["void", "function", "(", ")", "{", "this", ".", "m_selectorManager", ".", "addChannelInterestLater", "(", "this", ".", "m_socketChannel", ",", "SelectionKey", ".", "OP_WRITE", ")", ";", "}"], "nl_tokens": ["activates", "interest", "in", "writing", "from", "a", "thread", "other", "than", "the", "selector", "thread", ".", "concode_field_sep", "WriteListener", "m_listener", "concode_elem_sep", "SocketChannel", "m_socketChannel", "concode_elem_sep", "SelectorManager", "m_selectorManager", "concode_elem_sep", "int", "m_numQueued", "concode_elem_sep", "Collection", "m_buffers", "concode_elem_sep", "long", "m_totalBytes", "concode_elem_sep", "boolean", "m_closed", "concode_elem_sep", "WriteListener", "NO_OP_LISTENER", "concode_elem_sep", "long", "m_startTime", "concode_elem_sep", "Logger", "LOG", "concode_elem_sep", "List", "m_writeBuffers", "concode_field_sep", "long", "getTotalBytes", "concode_elem_sep", "void", "disableWriteLater", "concode_elem_sep", "void", "onWrite", "concode_elem_sep", "void", "writeLater", "concode_elem_sep", "void", "writeLater", "concode_elem_sep", "void", "writeLater", "concode_elem_sep", "boolean", "writeBuffer", "concode_elem_sep", "void", "enableWrite", "concode_elem_sep", "Collection", "getBuffers", "concode_elem_sep", "void", "checkForNull", "concode_elem_sep", "long", "getStartTime", "concode_elem_sep", "void", "write", "concode_elem_sep", "void", "write", "concode_elem_sep", "void", "write", "concode_elem_sep", "boolean", "write", "concode_elem_sep", "void", "close", "concode_elem_sep", "WriteListener", "getListener", "concode_elem_sep", "int", "getNumQueued"]}
{"code": "Collection < Device > function ( ) { return devices . values ( ) ; }", "nl": "return list of devices as collection concode_field_sep HashMap<Integer,Device> devices concode_elem_sep ArrayList<Option> options concode_elem_sep String name concode_elem_sep String description concode_elem_sep HashMap<Integer,StatSource> statSources concode_field_sep boolean read concode_elem_sep String getName concode_elem_sep String getOptionValue concode_elem_sep Option getOption concode_elem_sep Option getOption concode_elem_sep ArrayList<Option> getOptions concode_elem_sep Collection<StatSource> getStatSources concode_elem_sep String getDescription concode_elem_sep StatSource getStatSource concode_elem_sep Device getDevice", "code_tokens": ["Collection", "<", "Device", ">", "function", "(", ")", "{", "return", "devices", ".", "values", "(", ")", ";", "}"], "nl_tokens": ["return", "list", "of", "devices", "as", "collection", "concode_field_sep", "HashMap", "<", "Integer", ",", "Device", ">", "devices", "concode_elem_sep", "ArrayList", "<", "Option", ">", "options", "concode_elem_sep", "String", "name", "concode_elem_sep", "String", "description", "concode_elem_sep", "HashMap", "<", "Integer", ",", "StatSource", ">", "statSources", "concode_field_sep", "boolean", "read", "concode_elem_sep", "String", "getName", "concode_elem_sep", "String", "getOptionValue", "concode_elem_sep", "Option", "getOption", "concode_elem_sep", "Option", "getOption", "concode_elem_sep", "ArrayList", "<", "Option", ">", "getOptions", "concode_elem_sep", "Collection", "<", "StatSource", ">", "getStatSources", "concode_elem_sep", "String", "getDescription", "concode_elem_sep", "StatSource", "getStatSource", "concode_elem_sep", "Device", "getDevice"]}
{"code": "int function ( boolean arg0 ) { int loc0 = getIntFromFormat ( arg0 ) ; if ( loc0 == 0 ) { loc0 = 1 ; } return loc0 ; }", "nl": "retrieve a length from the format string . either for a repeat count or a string length . return one if no explicit repeat count . \\ param advance whether to move the stream position . concode_field_sep int formatOff concode_elem_sep int formatRepeatCount concode_elem_sep String format concode_field_sep void checkType concode_elem_sep char getType concode_elem_sep int available concode_elem_sep void reset concode_elem_sep String toString concode_elem_sep void consume concode_elem_sep int getIntFromFormat", "code_tokens": ["int", "function", "(", "boolean", "arg0", ")", "{", "int", "loc0", "=", "getIntFromFormat", "(", "arg0", ")", ";", "if", "(", "loc0", "==", "0", ")", "{", "loc0", "=", "1", ";", "}", "return", "loc0", ";", "}"], "nl_tokens": ["retrieve", "a", "length", "from", "the", "format", "string", ".", "either", "for", "a", "repeat", "count", "or", "a", "string", "length", ".", "return", "one", "if", "no", "explicit", "repeat", "count", ".", "\\", "param", "advance", "whether", "to", "move", "the", "stream", "position", ".", "concode_field_sep", "int", "formatOff", "concode_elem_sep", "int", "formatRepeatCount", "concode_elem_sep", "String", "format", "concode_field_sep", "void", "checkType", "concode_elem_sep", "char", "getType", "concode_elem_sep", "int", "available", "concode_elem_sep", "void", "reset", "concode_elem_sep", "String", "toString", "concode_elem_sep", "void", "consume", "concode_elem_sep", "int", "getIntFromFormat"]}
{"code": "Map < String , String > function ( String arg0 ) { return null ; }", "nl": "retrieve the group attributes by group name concode_field_sep Log logger concode_elem_sep int tenantId concode_field_sep String getGroupName concode_elem_sep boolean isGroupExisting concode_elem_sep void deleteGroupAttributes concode_elem_sep Set<String> listSCIMRoles concode_elem_sep Map<String,String> getGroupAttributesById concode_elem_sep void addMandatoryAttributes concode_elem_sep void createSCIMAttributes concode_elem_sep void updateRoleName concode_elem_sep String getGroupId concode_elem_sep Group getGroupWithAttributes", "code_tokens": ["Map", "<", "String", ",", "String", ">", "function", "(", "String", "arg0", ")", "{", "return", "null", ";", "}"], "nl_tokens": ["retrieve", "the", "group", "attributes", "by", "group", "name", "concode_field_sep", "Log", "logger", "concode_elem_sep", "int", "tenantId", "concode_field_sep", "String", "getGroupName", "concode_elem_sep", "boolean", "isGroupExisting", "concode_elem_sep", "void", "deleteGroupAttributes", "concode_elem_sep", "Set", "<", "String", ">", "listSCIMRoles", "concode_elem_sep", "Map", "<", "String", ",", "String", ">", "getGroupAttributesById", "concode_elem_sep", "void", "addMandatoryAttributes", "concode_elem_sep", "void", "createSCIMAttributes", "concode_elem_sep", "void", "updateRoleName", "concode_elem_sep", "String", "getGroupId", "concode_elem_sep", "Group", "getGroupWithAttributes"]}
{"code": "void function ( String arg0 ) { this . srcFileName = arg0 ; }", "nl": "sets the src file name . concode_field_sep BigDecimal expDataUnitId concode_elem_sep BigDecimal dataUnitId concode_elem_sep Timestamp createTimeStamp concode_elem_sep String actValue concode_elem_sep String errorCode concode_elem_sep String srcFileName concode_elem_sep String errorMsg concode_elem_sep String failedAttrib concode_elem_sep BigDecimal expDataSetId concode_elem_sep RegPCLTestResultEntity regPclTestResult concode_elem_sep BigDecimal dataSetId concode_elem_sep RegPCLTestResultDetailsEntityPK id concode_elem_sep long serialVersionUID concode_elem_sep String expValue concode_field_sep void updateCreateTimeStamp concode_elem_sep void setActValue concode_elem_sep BigDecimal getDataSetId concode_elem_sep RegPCLTestResultDetailsEntityPK getId concode_elem_sep RegPCLTestResultEntity getRegPclTestResult concode_elem_sep void setExpValue concode_elem_sep String getSrcFileName concode_elem_sep void setErrorCode concode_elem_sep BigDecimal getDataUnitId concode_elem_sep void setErrorMsg concode_elem_sep String getErrorCode concode_elem_sep void setDataUnitId concode_elem_sep void setId concode_elem_sep void setFailedAttrib concode_elem_sep BigDecimal getExpDataSetId concode_elem_sep String getErrorMsg concode_elem_sep String getActValue concode_elem_sep void setRegPclTestResult concode_elem_sep String getExpValue concode_elem_sep void setCreateTimeStamp concode_elem_sep BigDecimal getExpDataUnitId concode_elem_sep Timestamp getCreateTimeStamp concode_elem_sep String getFailedAttrib concode_elem_sep void setExpDataSetId concode_elem_sep void setDataSetId concode_elem_sep void setExpDataUnitId", "code_tokens": ["void", "function", "(", "String", "arg0", ")", "{", "this", ".", "srcFileName", "=", "arg0", ";", "}"], "nl_tokens": ["sets", "the", "src", "file", "name", ".", "concode_field_sep", "BigDecimal", "expDataUnitId", "concode_elem_sep", "BigDecimal", "dataUnitId", "concode_elem_sep", "Timestamp", "createTimeStamp", "concode_elem_sep", "String", "actValue", "concode_elem_sep", "String", "errorCode", "concode_elem_sep", "String", "srcFileName", "concode_elem_sep", "String", "errorMsg", "concode_elem_sep", "String", "failedAttrib", "concode_elem_sep", "BigDecimal", "expDataSetId", "concode_elem_sep", "RegPCLTestResultEntity", "regPclTestResult", "concode_elem_sep", "BigDecimal", "dataSetId", "concode_elem_sep", "RegPCLTestResultDetailsEntityPK", "id", "concode_elem_sep", "long", "serialVersionUID", "concode_elem_sep", "String", "expValue", "concode_field_sep", "void", "updateCreateTimeStamp", "concode_elem_sep", "void", "setActValue", "concode_elem_sep", "BigDecimal", "getDataSetId", "concode_elem_sep", "RegPCLTestResultDetailsEntityPK", "getId", "concode_elem_sep", "RegPCLTestResultEntity", "getRegPclTestResult", "concode_elem_sep", "void", "setExpValue", "concode_elem_sep", "String", "getSrcFileName", "concode_elem_sep", "void", "setErrorCode", "concode_elem_sep", "BigDecimal", "getDataUnitId", "concode_elem_sep", "void", "setErrorMsg", "concode_elem_sep", "String", "getErrorCode", "concode_elem_sep", "void", "setDataUnitId", "concode_elem_sep", "void", "setId", "concode_elem_sep", "void", "setFailedAttrib", "concode_elem_sep", "BigDecimal", "getExpDataSetId", "concode_elem_sep", "String", "getErrorMsg", "concode_elem_sep", "String", "getActValue", "concode_elem_sep", "void", "setRegPclTestResult", "concode_elem_sep", "String", "getExpValue", "concode_elem_sep", "void", "setCreateTimeStamp", "concode_elem_sep", "BigDecimal", "getExpDataUnitId", "concode_elem_sep", "Timestamp", "getCreateTimeStamp", "concode_elem_sep", "String", "getFailedAttrib", "concode_elem_sep", "void", "setExpDataSetId", "concode_elem_sep", "void", "setDataSetId", "concode_elem_sep", "void", "setExpDataUnitId"]}
{"code": "String function ( ) { return ( new java . rmi . server . UID ( ) ) . toString ( ) ; }", "nl": "generates a new unique id and returns it as a string . the contents of the string is supposed to be unique with respect to all strings generated by other instances of this class . todo : we should consider using java.util.uuid for this instead . concode_field_sep Logger LOG concode_elem_sep Class MYCLASS concode_elem_sep String id concode_field_sep String readObjectID concode_elem_sep String createObjectID concode_elem_sep String toString concode_elem_sep String getIDOfObject", "code_tokens": ["String", "function", "(", ")", "{", "return", "(", "new", "java", ".", "rmi", ".", "server", ".", "UID", "(", ")", ")", ".", "toString", "(", ")", ";", "}"], "nl_tokens": ["generates", "a", "new", "unique", "id", "and", "returns", "it", "as", "a", "string", ".", "the", "contents", "of", "the", "string", "is", "supposed", "to", "be", "unique", "with", "respect", "to", "all", "strings", "generated", "by", "other", "instances", "of", "this", "class", ".", "todo", ":", "we", "should", "consider", "using", "java", ".", "util", ".", "uuid", "for", "this", "instead", ".", "concode_field_sep", "Logger", "LOG", "concode_elem_sep", "Class", "MYCLASS", "concode_elem_sep", "String", "id", "concode_field_sep", "String", "readObjectID", "concode_elem_sep", "String", "createObjectID", "concode_elem_sep", "String", "toString", "concode_elem_sep", "String", "getIDOfObject"]}
{"code": "Identifier function ( ) { return reliableEndpoint . getManager ( ) . getIdGenerator ( ) . generateSequenceIdentifier ( ) ; }", "nl": "generates and returns a new sequence identifier . concode_field_sep RMEndpoint reliableEndpoint concode_elem_sep AtomicInteger completedSequenceCount concode_elem_sep AtomicInteger processingSequenceCount concode_field_sep RMEndpoint getReliableEndpoint concode_elem_sep RMManager getManager concode_elem_sep Bus getBus concode_elem_sep String getName concode_elem_sep int getProcessingSequenceCount concode_elem_sep Endpoint getEndpoint concode_elem_sep int getCompletedSequenceCount", "code_tokens": ["Identifier", "function", "(", ")", "{", "return", "reliableEndpoint", ".", "getManager", "(", ")", ".", "getIdGenerator", "(", ")", ".", "generateSequenceIdentifier", "(", ")", ";", "}"], "nl_tokens": ["generates", "and", "returns", "a", "new", "sequence", "identifier", ".", "concode_field_sep", "RMEndpoint", "reliableEndpoint", "concode_elem_sep", "AtomicInteger", "completedSequenceCount", "concode_elem_sep", "AtomicInteger", "processingSequenceCount", "concode_field_sep", "RMEndpoint", "getReliableEndpoint", "concode_elem_sep", "RMManager", "getManager", "concode_elem_sep", "Bus", "getBus", "concode_elem_sep", "String", "getName", "concode_elem_sep", "int", "getProcessingSequenceCount", "concode_elem_sep", "Endpoint", "getEndpoint", "concode_elem_sep", "int", "getCompletedSequenceCount"]}
{"code": "long function ( ) { return tStop ; }", "nl": "gets the global chromosomal stop . concode_field_sep long tStart concode_elem_sep long qStart concode_elem_sep long tStop concode_elem_sep int blockSize concode_field_sep long getQStart concode_elem_sep long getTStart concode_elem_sep int getBlockSize", "code_tokens": ["long", "function", "(", ")", "{", "return", "tStop", ";", "}"], "nl_tokens": ["gets", "the", "global", "chromosomal", "stop", ".", "concode_field_sep", "long", "tStart", "concode_elem_sep", "long", "qStart", "concode_elem_sep", "long", "tStop", "concode_elem_sep", "int", "blockSize", "concode_field_sep", "long", "getQStart", "concode_elem_sep", "long", "getTStart", "concode_elem_sep", "int", "getBlockSize"]}
{"code": "Object function ( Object arg0 , String arg1 , Object [ ] arg2 ) { Class [ ] loc0 = null ; if ( arg2 != null ) { loc0 = new Class [ arg2 . length ] ; for ( int loc1 = 0 ; loc1 < arg2 . length ; loc1 ++ ) { if ( arg2 [ loc1 ] != null ) loc0 [ loc1 ] = arg2 [ loc1 ] . getClass ( ) ; } } return invokeMethod ( arg0 , arg1 , arg2 , loc0 ) ; }", "nl": "calls a method on the given object instance with the given arguments . concode_field_sep PlaceHolder placeHolder concode_field_sep Object getValue concode_elem_sep Class getClass concode_elem_sep List getAllStaticMethods concode_elem_sep Constructor getConstructorImpl concode_elem_sep Method getMethodImpl concode_elem_sep Field getFieldImpl concode_elem_sep Class getClassImpl concode_elem_sep void setValue concode_elem_sep List invokeAllStaticMethods concode_elem_sep Method getMethod concode_elem_sep Object invokeConstructor concode_elem_sep Object invokeConstructor", "code_tokens": ["Object", "function", "(", "Object", "arg0", ",", "String", "arg1", ",", "Object", "[", "]", "arg2", ")", "{", "Class", "[", "]", "loc0", "=", "null", ";", "if", "(", "arg2", "!=", "null", ")", "{", "loc0", "=", "new", "Class", "[", "arg2", ".", "length", "]", ";", "for", "(", "int", "loc1", "=", "0", ";", "loc1", "<", "arg2", ".", "length", ";", "loc1", "+", "+", ")", "{", "if", "(", "arg2", "[", "loc1", "]", "!=", "null", ")", "loc0", "[", "loc1", "]", "=", "arg2", "[", "loc1", "]", ".", "getClass", "(", ")", ";", "}", "}", "return", "invokeMethod", "(", "arg0", ",", "arg1", ",", "arg2", ",", "loc0", ")", ";", "}"], "nl_tokens": ["calls", "a", "method", "on", "the", "given", "object", "instance", "with", "the", "given", "arguments", ".", "concode_field_sep", "PlaceHolder", "placeHolder", "concode_field_sep", "Object", "getValue", "concode_elem_sep", "Class", "getClass", "concode_elem_sep", "List", "getAllStaticMethods", "concode_elem_sep", "Constructor", "getConstructorImpl", "concode_elem_sep", "Method", "getMethodImpl", "concode_elem_sep", "Field", "getFieldImpl", "concode_elem_sep", "Class", "getClassImpl", "concode_elem_sep", "void", "setValue", "concode_elem_sep", "List", "invokeAllStaticMethods", "concode_elem_sep", "Method", "getMethod", "concode_elem_sep", "Object", "invokeConstructor", "concode_elem_sep", "Object", "invokeConstructor"]}
{"code": "Method function ( final String arg0 ) { return getMethod ( arg0 , false ) ; }", "nl": "returns a method corresponding to the given java methoddeclaration . concode_field_sep String name concode_elem_sep Map DESCRIPTORS concode_elem_sep String desc concode_field_sep String getDescriptor concode_elem_sep Type[] getArgumentTypes concode_elem_sep String getName concode_elem_sep Type getReturnType concode_elem_sep int hashCode concode_elem_sep boolean equals concode_elem_sep String toString concode_elem_sep String map", "code_tokens": ["Method", "function", "(", "final", "String", "arg0", ")", "{", "return", "getMethod", "(", "arg0", ",", "false", ")", ";", "}"], "nl_tokens": ["returns", "a", "method", "corresponding", "to", "the", "given", "java", "methoddeclaration", ".", "concode_field_sep", "String", "name", "concode_elem_sep", "Map", "DESCRIPTORS", "concode_elem_sep", "String", "desc", "concode_field_sep", "String", "getDescriptor", "concode_elem_sep", "Type", "[", "]", "getArgumentTypes", "concode_elem_sep", "String", "getName", "concode_elem_sep", "Type", "getReturnType", "concode_elem_sep", "int", "hashCode", "concode_elem_sep", "boolean", "equals", "concode_elem_sep", "String", "toString", "concode_elem_sep", "String", "map"]}
{"code": "DataServer function ( final InetSocketAddress arg0 , final AlluxioWorkerService arg1 ) { try { return CommonUtils . createNewClassInstance ( Configuration . < DataServer > getClass ( PropertyKey . WORKER_DATA_SERVER_CLASS ) , new Class [ ] { InetSocketAddress . class , AlluxioWorkerService . class } , new Object [ ] { arg0 , arg1 } ) ; } catch ( Exception loc0 ) { throw Throwables . propagate ( loc0 ) ; } }", "nl": "factory for dataserver . concode_field_sep PlaceHolder placeHolder concode_field_sep int getPort concode_elem_sep boolean isClosed concode_elem_sep String getBindHost", "code_tokens": ["DataServer", "function", "(", "final", "InetSocketAddress", "arg0", ",", "final", "AlluxioWorkerService", "arg1", ")", "{", "try", "{", "return", "CommonUtils", ".", "createNewClassInstance", "(", "Configuration", ".", "<", "DataServer", ">", "getClass", "(", "PropertyKey", ".", "WORKER_DATA_SERVER_CLASS", ")", ",", "new", "Class", "[", "]", "{", "InetSocketAddress", ".", "class", ",", "AlluxioWorkerService", ".", "class", "}", ",", "new", "Object", "[", "]", "{", "arg0", ",", "arg1", "}", ")", ";", "}", "catch", "(", "Exception", "loc0", ")", "{", "throw", "Throwables", ".", "propagate", "(", "loc0", ")", ";", "}", "}"], "nl_tokens": ["factory", "for", "dataserver", ".", "concode_field_sep", "PlaceHolder", "placeHolder", "concode_field_sep", "int", "getPort", "concode_elem_sep", "boolean", "isClosed", "concode_elem_sep", "String", "getBindHost"]}
{"code": "void function ( ComplexNode arg0 ) { this . singleNestedComplexNode = arg0 ; }", "nl": "sets the value of the singlenestedcomplexnode property . concode_field_sep Date date concode_elem_sep Integer number concode_elem_sep ComplexNode singleNestedComplexNode concode_elem_sep List<ComplexNode> nestedComplexNodes concode_elem_sep Double _double concode_elem_sep long serialVersionUID concode_elem_sep String id concode_elem_sep BigDecimal decimal concode_field_sep Integer getNumber concode_elem_sep void setDouble concode_elem_sep BigDecimal getDecimal concode_elem_sep void setDecimal concode_elem_sep List<ComplexNode> getNestedComplexNodes concode_elem_sep Double getDouble concode_elem_sep void setId concode_elem_sep void setDate concode_elem_sep String getId concode_elem_sep Date getDate concode_elem_sep ComplexNode getSingleNestedComplexNode concode_elem_sep void setNumber", "code_tokens": ["void", "function", "(", "ComplexNode", "arg0", ")", "{", "this", ".", "singleNestedComplexNode", "=", "arg0", ";", "}"], "nl_tokens": ["sets", "the", "value", "of", "the", "singlenestedcomplexnode", "property", ".", "concode_field_sep", "Date", "date", "concode_elem_sep", "Integer", "number", "concode_elem_sep", "ComplexNode", "singleNestedComplexNode", "concode_elem_sep", "List", "<", "ComplexNode", ">", "nestedComplexNodes", "concode_elem_sep", "Double", "_double", "concode_elem_sep", "long", "serialVersionUID", "concode_elem_sep", "String", "id", "concode_elem_sep", "BigDecimal", "decimal", "concode_field_sep", "Integer", "getNumber", "concode_elem_sep", "void", "setDouble", "concode_elem_sep", "BigDecimal", "getDecimal", "concode_elem_sep", "void", "setDecimal", "concode_elem_sep", "List", "<", "ComplexNode", ">", "getNestedComplexNodes", "concode_elem_sep", "Double", "getDouble", "concode_elem_sep", "void", "setId", "concode_elem_sep", "void", "setDate", "concode_elem_sep", "String", "getId", "concode_elem_sep", "Date", "getDate", "concode_elem_sep", "ComplexNode", "getSingleNestedComplexNode", "concode_elem_sep", "void", "setNumber"]}
{"code": "AuthenticationHolderEntity function ( ) { return authenticationHolder ; }", "nl": "the authentication in place when this token was created . concode_field_sep String PARAM_REFERSH_TOKEN concode_elem_sep String QUERY_BY_RESOURCE_SET concode_elem_sep String PARAM_DATE concode_elem_sep AuthenticationHolderEntity authenticationHolder concode_elem_sep String tokenType concode_elem_sep String ID_TOKEN_FIELD_NAME concode_elem_sep String QUERY_EXPIRED_BY_DATE concode_elem_sep String PARAM_CLIENT concode_elem_sep String QUERY_BY_REFRESH_TOKEN concode_elem_sep String PARAM_TOKEN_VALUE concode_elem_sep Set<Permission> permissions concode_elem_sep JWT jwtValue concode_elem_sep Set<String> scope concode_elem_sep OAuth2AccessTokenEntity idToken concode_elem_sep ClientDetailsEntity client concode_elem_sep String QUERY_BY_CLIENT concode_elem_sep Date expiration concode_elem_sep String QUERY_BY_TOKEN_VALUE concode_elem_sep String PARAM_ID_TOKEN concode_elem_sep Long id concode_elem_sep String QUERY_BY_ID_TOKEN concode_elem_sep String QUERY_ALL concode_elem_sep String PARAM_RESOURCE_SET_ID concode_elem_sep OAuth2RefreshTokenEntity refreshToken concode_field_sep OAuth2RefreshTokenEntity getRefreshToken concode_elem_sep String getTokenType concode_elem_sep void setTokenType concode_elem_sep String getIdTokenString concode_elem_sep void setJwt concode_elem_sep Set<Permission> getPermissions concode_elem_sep Long getId concode_elem_sep void setAuthenticationHolder concode_elem_sep void setExpiration concode_elem_sep ClientDetailsEntity getClient concode_elem_sep void setPermissions concode_elem_sep String getValue concode_elem_sep void setClient concode_elem_sep Date getExpiration concode_elem_sep int getExpiresIn concode_elem_sep void setId concode_elem_sep JWT getJwt concode_elem_sep void setIdToken concode_elem_sep OAuth2AccessTokenEntity getIdToken concode_elem_sep void setScope concode_elem_sep boolean isExpired concode_elem_sep void setRefreshToken concode_elem_sep void setRefreshToken concode_elem_sep Set<String> getScope concode_elem_sep Map<String,Object> getAdditionalInformation", "code_tokens": ["AuthenticationHolderEntity", "function", "(", ")", "{", "return", "authenticationHolder", ";", "}"], "nl_tokens": ["the", "authentication", "in", "place", "when", "this", "token", "was", "created", ".", "concode_field_sep", "String", "PARAM_REFERSH_TOKEN", "concode_elem_sep", "String", "QUERY_BY_RESOURCE_SET", "concode_elem_sep", "String", "PARAM_DATE", "concode_elem_sep", "AuthenticationHolderEntity", "authenticationHolder", "concode_elem_sep", "String", "tokenType", "concode_elem_sep", "String", "ID_TOKEN_FIELD_NAME", "concode_elem_sep", "String", "QUERY_EXPIRED_BY_DATE", "concode_elem_sep", "String", "PARAM_CLIENT", "concode_elem_sep", "String", "QUERY_BY_REFRESH_TOKEN", "concode_elem_sep", "String", "PARAM_TOKEN_VALUE", "concode_elem_sep", "Set", "<", "Permission", ">", "permissions", "concode_elem_sep", "JWT", "jwtValue", "concode_elem_sep", "Set", "<", "String", ">", "scope", "concode_elem_sep", "OAuth2AccessTokenEntity", "idToken", "concode_elem_sep", "ClientDetailsEntity", "client", "concode_elem_sep", "String", "QUERY_BY_CLIENT", "concode_elem_sep", "Date", "expiration", "concode_elem_sep", "String", "QUERY_BY_TOKEN_VALUE", "concode_elem_sep", "String", "PARAM_ID_TOKEN", "concode_elem_sep", "Long", "id", "concode_elem_sep", "String", "QUERY_BY_ID_TOKEN", "concode_elem_sep", "String", "QUERY_ALL", "concode_elem_sep", "String", "PARAM_RESOURCE_SET_ID", "concode_elem_sep", "OAuth2RefreshTokenEntity", "refreshToken", "concode_field_sep", "OAuth2RefreshTokenEntity", "getRefreshToken", "concode_elem_sep", "String", "getTokenType", "concode_elem_sep", "void", "setTokenType", "concode_elem_sep", "String", "getIdTokenString", "concode_elem_sep", "void", "setJwt", "concode_elem_sep", "Set", "<", "Permission", ">", "getPermissions", "concode_elem_sep", "Long", "getId", "concode_elem_sep", "void", "setAuthenticationHolder", "concode_elem_sep", "void", "setExpiration", "concode_elem_sep", "ClientDetailsEntity", "getClient", "concode_elem_sep", "void", "setPermissions", "concode_elem_sep", "String", "getValue", "concode_elem_sep", "void", "setClient", "concode_elem_sep", "Date", "getExpiration", "concode_elem_sep", "int", "getExpiresIn", "concode_elem_sep", "void", "setId", "concode_elem_sep", "JWT", "getJwt", "concode_elem_sep", "void", "setIdToken", "concode_elem_sep", "OAuth2AccessTokenEntity", "getIdToken", "concode_elem_sep", "void", "setScope", "concode_elem_sep", "boolean", "isExpired", "concode_elem_sep", "void", "setRefreshToken", "concode_elem_sep", "void", "setRefreshToken", "concode_elem_sep", "Set", "<", "String", ">", "getScope", "concode_elem_sep", "Map", "<", "String", ",", "Object", ">", "getAdditionalInformation"]}
{"code": "boolean function ( String arg0 ) { return false ; }", "nl": "gets the visited attribute of the naiveuseragent object concode_field_sep int _imageCacheCapacity concode_elem_sep String _baseURL concode_elem_sep LinkedHashMap _imageCache concode_elem_sep Device _device concode_field_sep String getBaseURL concode_elem_sep ImageResource loadEmbeddedBase64ImageResource concode_elem_sep void disposeCache concode_elem_sep CSSResource getCSSResource concode_elem_sep ImageResource createImageResource concode_elem_sep XMLResource getXMLResource concode_elem_sep void setBaseURL concode_elem_sep ImageResource getImageResource concode_elem_sep String resolveURI concode_elem_sep byte[] getBinaryResource concode_elem_sep InputStream getInputStream", "code_tokens": ["boolean", "function", "(", "String", "arg0", ")", "{", "return", "false", ";", "}"], "nl_tokens": ["gets", "the", "visited", "attribute", "of", "the", "naiveuseragent", "object", "concode_field_sep", "int", "_imageCacheCapacity", "concode_elem_sep", "String", "_baseURL", "concode_elem_sep", "LinkedHashMap", "_imageCache", "concode_elem_sep", "Device", "_device", "concode_field_sep", "String", "getBaseURL", "concode_elem_sep", "ImageResource", "loadEmbeddedBase64ImageResource", "concode_elem_sep", "void", "disposeCache", "concode_elem_sep", "CSSResource", "getCSSResource", "concode_elem_sep", "ImageResource", "createImageResource", "concode_elem_sep", "XMLResource", "getXMLResource", "concode_elem_sep", "void", "setBaseURL", "concode_elem_sep", "ImageResource", "getImageResource", "concode_elem_sep", "String", "resolveURI", "concode_elem_sep", "byte", "[", "]", "getBinaryResource", "concode_elem_sep", "InputStream", "getInputStream"]}
{"code": "byte [ ] function ( ) { return value ; }", "nl": "returns the raw value byte array . concode_field_sep int valueLen concode_elem_sep PackFormatInputStream format concode_elem_sep int valueOff concode_elem_sep byte[] value concode_field_sep void getByteArrayInternal concode_elem_sep int getByteArrayLength concode_elem_sep byte getByte concode_elem_sep short getShort concode_elem_sep String getString concode_elem_sep long getLong concode_elem_sep int getInt concode_elem_sep int unpackInt concode_elem_sep short unpackShort concode_elem_sep void getByteArray concode_elem_sep void getByteArray concode_elem_sep byte[] getByteArray concode_elem_sep String getFormat concode_elem_sep long getRecord concode_elem_sep long unpackLong", "code_tokens": ["byte", "[", "]", "function", "(", ")", "{", "return", "value", ";", "}"], "nl_tokens": ["returns", "the", "raw", "value", "byte", "array", ".", "concode_field_sep", "int", "valueLen", "concode_elem_sep", "PackFormatInputStream", "format", "concode_elem_sep", "int", "valueOff", "concode_elem_sep", "byte", "[", "]", "value", "concode_field_sep", "void", "getByteArrayInternal", "concode_elem_sep", "int", "getByteArrayLength", "concode_elem_sep", "byte", "getByte", "concode_elem_sep", "short", "getShort", "concode_elem_sep", "String", "getString", "concode_elem_sep", "long", "getLong", "concode_elem_sep", "int", "getInt", "concode_elem_sep", "int", "unpackInt", "concode_elem_sep", "short", "unpackShort", "concode_elem_sep", "void", "getByteArray", "concode_elem_sep", "void", "getByteArray", "concode_elem_sep", "byte", "[", "]", "getByteArray", "concode_elem_sep", "String", "getFormat", "concode_elem_sep", "long", "getRecord", "concode_elem_sep", "long", "unpackLong"]}
{"code": "void function ( ) { CollisionDJBX33X loc0 = new CollisionDJBX33X ( ) ; int loc1 = loc0 . hashForth ( \"srini_string\" ) ; assertEquals ( 998537770 , loc1 ) ; System . out . println ( \"srini_string\" + ( loc0 . hashForth ( \"srini_string\" ) ) ) ; }", "nl": "hash forward first 7 characters concode_field_sep PlaceHolder placeHolder concode_field_sep void testCollisionsFail concode_elem_sep void testGenNCollisions concode_elem_sep void testCompare2CollisionString concode_elem_sep void TestPrecomputedFileExists concode_elem_sep void MeetInTheMiddleHashBackTest concode_elem_sep void setUp concode_elem_sep void testGetHash concode_elem_sep void tearDown concode_elem_sep void testCollisionsOk concode_elem_sep void testReadRandomStringForCollision", "code_tokens": ["void", "function", "(", ")", "{", "CollisionDJBX33X", "loc0", "=", "new", "CollisionDJBX33X", "(", ")", ";", "int", "loc1", "=", "loc0", ".", "hashForth", "(", "\"srini_string\"", ")", ";", "assertEquals", "(", "998537770", ",", "loc1", ")", ";", "System", ".", "out", ".", "println", "(", "\"srini_string\"", "+", "(", "loc0", ".", "hashForth", "(", "\"srini_string\"", ")", ")", ")", ";", "}"], "nl_tokens": ["hash", "forward", "first", "7", "characters", "concode_field_sep", "PlaceHolder", "placeHolder", "concode_field_sep", "void", "testCollisionsFail", "concode_elem_sep", "void", "testGenNCollisions", "concode_elem_sep", "void", "testCompare2CollisionString", "concode_elem_sep", "void", "TestPrecomputedFileExists", "concode_elem_sep", "void", "MeetInTheMiddleHashBackTest", "concode_elem_sep", "void", "setUp", "concode_elem_sep", "void", "testGetHash", "concode_elem_sep", "void", "tearDown", "concode_elem_sep", "void", "testCollisionsOk", "concode_elem_sep", "void", "testReadRandomStringForCollision"]}
{"code": "WorkflowStore function ( S arg0 ) { return null ; }", "nl": "return a workflow store instance with an existing transaction . the workflow store has to be committed and then closed to commit changes , if only close it rolls back . concode_field_sep String ACTIONS_TO_KILL concode_elem_sep String ACTIONS_TO_START concode_elem_sep String ACTION_ID concode_elem_sep String TRANSIENT_VAR_PREFIX concode_elem_sep String WORKFLOW_BEAN concode_elem_sep String ACTIONS_TO_FAIL concode_field_sep Class<? extends Service> getInterface concode_elem_sep List<WorkflowActionBean> getStartedActions concode_elem_sep List<String> getActionsToFail concode_elem_sep List<String> getActionsToKill concode_elem_sep WorkflowLib getWorkflowLibWithNoDB", "code_tokens": ["WorkflowStore", "function", "(", "S", "arg0", ")", "{", "return", "null", ";", "}"], "nl_tokens": ["return", "a", "workflow", "store", "instance", "with", "an", "existing", "transaction", ".", "the", "workflow", "store", "has", "to", "be", "committed", "and", "then", "closed", "to", "commit", "changes", ",", "if", "only", "close", "it", "rolls", "back", ".", "concode_field_sep", "String", "ACTIONS_TO_KILL", "concode_elem_sep", "String", "ACTIONS_TO_START", "concode_elem_sep", "String", "ACTION_ID", "concode_elem_sep", "String", "TRANSIENT_VAR_PREFIX", "concode_elem_sep", "String", "WORKFLOW_BEAN", "concode_elem_sep", "String", "ACTIONS_TO_FAIL", "concode_field_sep", "Class", "<", "?", "extends", "Service", ">", "getInterface", "concode_elem_sep", "List", "<", "WorkflowActionBean", ">", "getStartedActions", "concode_elem_sep", "List", "<", "String", ">", "getActionsToFail", "concode_elem_sep", "List", "<", "String", ">", "getActionsToKill", "concode_elem_sep", "WorkflowLib", "getWorkflowLibWithNoDB"]}
{"code": "int function ( ) { return priority ; }", "nl": "return the priority of the command . concode_field_sep String DEFAULT_LOCK_TIMEOUT concode_elem_sep XLog LOG concode_elem_sep boolean dryrun concode_elem_sep XLog.Info logInfo concode_elem_sep int priority concode_elem_sep String type concode_elem_sep Map<Long,List<XCommand<?>>> commandQueue concode_elem_sep boolean used concode_elem_sep String name concode_elem_sep long createdTime concode_elem_sep MemoryLocks.LockToken lock concode_elem_sep String INSTRUMENTATION_GROUP concode_elem_sep Instrumentation instrumentation concode_field_sep void loadState concode_elem_sep String getName concode_elem_sep long getLockTimeOut concode_elem_sep void releaseLock concode_elem_sep void eagerVerifyPrecondition concode_elem_sep T execute concode_elem_sep void resetUsed concode_elem_sep String getEntityKey concode_elem_sep Instrumentation getInstrumentation concode_elem_sep T call concode_elem_sep void verifyPrecondition concode_elem_sep boolean isLockRequired concode_elem_sep String getType concode_elem_sep void acquireLock concode_elem_sep void eagerLoadState concode_elem_sep long getCreatedTime concode_elem_sep void queue concode_elem_sep void queue", "code_tokens": ["int", "function", "(", ")", "{", "return", "priority", ";", "}"], "nl_tokens": ["return", "the", "priority", "of", "the", "command", ".", "concode_field_sep", "String", "DEFAULT_LOCK_TIMEOUT", "concode_elem_sep", "XLog", "LOG", "concode_elem_sep", "boolean", "dryrun", "concode_elem_sep", "XLog", ".", "Info", "logInfo", "concode_elem_sep", "int", "priority", "concode_elem_sep", "String", "type", "concode_elem_sep", "Map", "<", "Long", ",", "List", "<", "XCommand", "<", "?", ">>", ">", "commandQueue", "concode_elem_sep", "boolean", "used", "concode_elem_sep", "String", "name", "concode_elem_sep", "long", "createdTime", "concode_elem_sep", "MemoryLocks", ".", "LockToken", "lock", "concode_elem_sep", "String", "INSTRUMENTATION_GROUP", "concode_elem_sep", "Instrumentation", "instrumentation", "concode_field_sep", "void", "loadState", "concode_elem_sep", "String", "getName", "concode_elem_sep", "long", "getLockTimeOut", "concode_elem_sep", "void", "releaseLock", "concode_elem_sep", "void", "eagerVerifyPrecondition", "concode_elem_sep", "T", "execute", "concode_elem_sep", "void", "resetUsed", "concode_elem_sep", "String", "getEntityKey", "concode_elem_sep", "Instrumentation", "getInstrumentation", "concode_elem_sep", "T", "call", "concode_elem_sep", "void", "verifyPrecondition", "concode_elem_sep", "boolean", "isLockRequired", "concode_elem_sep", "String", "getType", "concode_elem_sep", "void", "acquireLock", "concode_elem_sep", "void", "eagerLoadState", "concode_elem_sep", "long", "getCreatedTime", "concode_elem_sep", "void", "queue", "concode_elem_sep", "void", "queue"]}
{"code": "BigInteger function ( final BigInteger arg0 , final BigInteger arg1 ) { if ( arg1 . compareTo ( BigInteger . ZERO ) == 0 ) { return arg0 ; } return findGCD ( arg1 , arg0 . mod ( arg1 ) ) ; }", "nl": "computes the greatest common divisor of two bigintegers . concode_field_sep PlaceHolder placeHolder concode_field_sep int findLCM concode_elem_sep BigInteger findLCM concode_elem_sep BigInteger findLCM concode_elem_sep byte[] correctSize", "code_tokens": ["BigInteger", "function", "(", "final", "BigInteger", "arg0", ",", "final", "BigInteger", "arg1", ")", "{", "if", "(", "arg1", ".", "compareTo", "(", "BigInteger", ".", "ZERO", ")", "==", "0", ")", "{", "return", "arg0", ";", "}", "return", "findGCD", "(", "arg1", ",", "arg0", ".", "mod", "(", "arg1", ")", ")", ";", "}"], "nl_tokens": ["computes", "the", "greatest", "common", "divisor", "of", "two", "bigintegers", ".", "concode_field_sep", "PlaceHolder", "placeHolder", "concode_field_sep", "int", "findLCM", "concode_elem_sep", "BigInteger", "findLCM", "concode_elem_sep", "BigInteger", "findLCM", "concode_elem_sep", "byte", "[", "]", "correctSize"]}
{"code": "void function ( String arg0 ) { this . gene = arg0 ; }", "nl": "sets the gene symbol . concode_field_sep double score concode_elem_sep String gene concode_elem_sep int entrezGeneId concode_elem_sep GeneWithSpec aGeneWithSpec concode_field_sep String getGene concode_elem_sep void setaGeneWithSpec concode_elem_sep int getEntrezGeneId concode_elem_sep GeneWithSpec getaGeneWithSpec concode_elem_sep double getScore concode_elem_sep void setScore concode_elem_sep void setEntrezGeneId", "code_tokens": ["void", "function", "(", "String", "arg0", ")", "{", "this", ".", "gene", "=", "arg0", ";", "}"], "nl_tokens": ["sets", "the", "gene", "symbol", ".", "concode_field_sep", "double", "score", "concode_elem_sep", "String", "gene", "concode_elem_sep", "int", "entrezGeneId", "concode_elem_sep", "GeneWithSpec", "aGeneWithSpec", "concode_field_sep", "String", "getGene", "concode_elem_sep", "void", "setaGeneWithSpec", "concode_elem_sep", "int", "getEntrezGeneId", "concode_elem_sep", "GeneWithSpec", "getaGeneWithSpec", "concode_elem_sep", "double", "getScore", "concode_elem_sep", "void", "setScore", "concode_elem_sep", "void", "setEntrezGeneId"]}
{"code": "void function ( Timestamp arg0 ) { this . modifiedDate = arg0 ; }", "nl": "sets the modified date . concode_field_sep long serialVersionUID concode_elem_sep String isSystemDerived concode_elem_sep String isActive concode_elem_sep BigDecimal predecessorId concode_elem_sep String srcFileName concode_elem_sep BigDecimal successorId concode_elem_sep BigDecimal feedId concode_elem_sep String checksum concode_elem_sep String transmissionDatasetId concode_elem_sep String comments concode_elem_sep String inactivationReasonType concode_elem_sep String isFormatValid concode_elem_sep long dataUnitId concode_elem_sep Timestamp receiptDate concode_elem_sep String srcUniqueFileName concode_elem_sep Timestamp createdDate concode_elem_sep Long dataSetId concode_elem_sep BigDecimal fileSize concode_elem_sep String destFileName concode_elem_sep String loadedInCats concode_elem_sep String checksumType concode_elem_sep Timestamp modifiedDate concode_elem_sep BigDecimal runId concode_elem_sep String isPrepopulated concode_elem_sep String isBulk concode_elem_sep String isUpdate concode_elem_sep String receiptDateType concode_elem_sep String status concode_field_sep void setIsSystemDerived concode_elem_sep void setIsPrepopulated concode_elem_sep String getStatus concode_elem_sep String getIsUpdate concode_elem_sep long getDataUnitId concode_elem_sep BigDecimal getFileSize concode_elem_sep void setInactivationReasonType concode_elem_sep void setDataUnitId concode_elem_sep String getComments concode_elem_sep Timestamp getCreatedDate concode_elem_sep void setFileSize concode_elem_sep BigDecimal getPredecessorId concode_elem_sep void setIsUpdate concode_elem_sep String getReceiptDateType concode_elem_sep BigDecimal getFeedId concode_elem_sep void setReceiptDate concode_elem_sep Timestamp getModifiedDate concode_elem_sep void setSuccessorId concode_elem_sep void setDestFileName concode_elem_sep void setIsBulk concode_elem_sep String getIsFormatValid concode_elem_sep void setDataSetId concode_elem_sep void setIsActive concode_elem_sep void setChecksumType concode_elem_sep void setFeedId concode_elem_sep String getInactivationReasonType concode_elem_sep String getSrcUniqueFileName concode_elem_sep Long getDataSetId concode_elem_sep void setReceiptDateType concode_elem_sep BigDecimal getRunId concode_elem_sep void setSrcFileName concode_elem_sep String getChecksumType concode_elem_sep String getSrcFileName concode_elem_sep String getChecksum concode_elem_sep String getDestFileName concode_elem_sep Timestamp getReceiptDate concode_elem_sep void setTransmissionDatasetId concode_elem_sep String getTransmissionDatasetId concode_elem_sep void setComments concode_elem_sep String getLoadedInCats concode_elem_sep BigDecimal getSuccessorId concode_elem_sep void setLoadedInCats concode_elem_sep String getIsPrepopulated concode_elem_sep void setSrcUniqueFileName concode_elem_sep void setChecksum concode_elem_sep void setIsFormatValid concode_elem_sep String getIsBulk concode_elem_sep void setRunId concode_elem_sep void setStatus concode_elem_sep String getIsActive concode_elem_sep void setCreatedDate concode_elem_sep void setPredecessorId concode_elem_sep String getIsSystemDerived", "code_tokens": ["void", "function", "(", "Timestamp", "arg0", ")", "{", "this", ".", "modifiedDate", "=", "arg0", ";", "}"], "nl_tokens": ["sets", "the", "modified", "date", ".", "concode_field_sep", "long", "serialVersionUID", "concode_elem_sep", "String", "isSystemDerived", "concode_elem_sep", "String", "isActive", "concode_elem_sep", "BigDecimal", "predecessorId", "concode_elem_sep", "String", "srcFileName", "concode_elem_sep", "BigDecimal", "successorId", "concode_elem_sep", "BigDecimal", "feedId", "concode_elem_sep", "String", "checksum", "concode_elem_sep", "String", "transmissionDatasetId", "concode_elem_sep", "String", "comments", "concode_elem_sep", "String", "inactivationReasonType", "concode_elem_sep", "String", "isFormatValid", "concode_elem_sep", "long", "dataUnitId", "concode_elem_sep", "Timestamp", "receiptDate", "concode_elem_sep", "String", "srcUniqueFileName", "concode_elem_sep", "Timestamp", "createdDate", "concode_elem_sep", "Long", "dataSetId", "concode_elem_sep", "BigDecimal", "fileSize", "concode_elem_sep", "String", "destFileName", "concode_elem_sep", "String", "loadedInCats", "concode_elem_sep", "String", "checksumType", "concode_elem_sep", "Timestamp", "modifiedDate", "concode_elem_sep", "BigDecimal", "runId", "concode_elem_sep", "String", "isPrepopulated", "concode_elem_sep", "String", "isBulk", "concode_elem_sep", "String", "isUpdate", "concode_elem_sep", "String", "receiptDateType", "concode_elem_sep", "String", "status", "concode_field_sep", "void", "setIsSystemDerived", "concode_elem_sep", "void", "setIsPrepopulated", "concode_elem_sep", "String", "getStatus", "concode_elem_sep", "String", "getIsUpdate", "concode_elem_sep", "long", "getDataUnitId", "concode_elem_sep", "BigDecimal", "getFileSize", "concode_elem_sep", "void", "setInactivationReasonType", "concode_elem_sep", "void", "setDataUnitId", "concode_elem_sep", "String", "getComments", "concode_elem_sep", "Timestamp", "getCreatedDate", "concode_elem_sep", "void", "setFileSize", "concode_elem_sep", "BigDecimal", "getPredecessorId", "concode_elem_sep", "void", "setIsUpdate", "concode_elem_sep", "String", "getReceiptDateType", "concode_elem_sep", "BigDecimal", "getFeedId", "concode_elem_sep", "void", "setReceiptDate", "concode_elem_sep", "Timestamp", "getModifiedDate", "concode_elem_sep", "void", "setSuccessorId", "concode_elem_sep", "void", "setDestFileName", "concode_elem_sep", "void", "setIsBulk", "concode_elem_sep", "String", "getIsFormatValid", "concode_elem_sep", "void", "setDataSetId", "concode_elem_sep", "void", "setIsActive", "concode_elem_sep", "void", "setChecksumType", "concode_elem_sep", "void", "setFeedId", "concode_elem_sep", "String", "getInactivationReasonType", "concode_elem_sep", "String", "getSrcUniqueFileName", "concode_elem_sep", "Long", "getDataSetId", "concode_elem_sep", "void", "setReceiptDateType", "concode_elem_sep", "BigDecimal", "getRunId", "concode_elem_sep", "void", "setSrcFileName", "concode_elem_sep", "String", "getChecksumType", "concode_elem_sep", "String", "getSrcFileName", "concode_elem_sep", "String", "getChecksum", "concode_elem_sep", "String", "getDestFileName", "concode_elem_sep", "Timestamp", "getReceiptDate", "concode_elem_sep", "void", "setTransmissionDatasetId", "concode_elem_sep", "String", "getTransmissionDatasetId", "concode_elem_sep", "void", "setComments", "concode_elem_sep", "String", "getLoadedInCats", "concode_elem_sep", "BigDecimal", "getSuccessorId", "concode_elem_sep", "void", "setLoadedInCats", "concode_elem_sep", "String", "getIsPrepopulated", "concode_elem_sep", "void", "setSrcUniqueFileName", "concode_elem_sep", "void", "setChecksum", "concode_elem_sep", "void", "setIsFormatValid", "concode_elem_sep", "String", "getIsBulk", "concode_elem_sep", "void", "setRunId", "concode_elem_sep", "void", "setStatus", "concode_elem_sep", "String", "getIsActive", "concode_elem_sep", "void", "setCreatedDate", "concode_elem_sep", "void", "setPredecessorId", "concode_elem_sep", "String", "getIsSystemDerived"]}
{"code": "ELEvaluator function ( Date arg0 , Configuration arg1 ) { ELEvaluator loc0 = Services . get ( ) . get ( ELService . class ) . createEvaluator ( \"srini_string\" ) ; setConfigToEval ( loc0 , arg1 ) ; SyncCoordAction loc1 = new SyncCoordAction ( ) ; loc1 . setNominalTime ( arg0 ) ; CoordELFunctions . configureEvaluator ( loc0 , null , loc1 ) ; return loc0 ; }", "nl": "create a sla evaluator to be used during materialization concode_field_sep Integer HOUR concode_elem_sep Integer MINUTE concode_field_sep ELEvaluator createLazyEvaluator concode_elem_sep String make2Digits concode_elem_sep void setConfigToEval concode_elem_sep ELEvaluator createELEvaluatorForGroup concode_elem_sep ELEvaluator createELEvaluatorForDataEcho concode_elem_sep ELEvaluator createURIELEvaluator concode_elem_sep SyncCoordDataset getDSObject concode_elem_sep ELEvaluator createInstancesELEvaluator concode_elem_sep ELEvaluator createInstancesELEvaluator concode_elem_sep ELEvaluator createDataEvaluator", "code_tokens": ["ELEvaluator", "function", "(", "Date", "arg0", ",", "Configuration", "arg1", ")", "{", "ELEvaluator", "loc0", "=", "Services", ".", "get", "(", ")", ".", "get", "(", "ELService", ".", "class", ")", ".", "createEvaluator", "(", "\"srini_string\"", ")", ";", "setConfigToEval", "(", "loc0", ",", "arg1", ")", ";", "SyncCoordAction", "loc1", "=", "new", "SyncCoordAction", "(", ")", ";", "loc1", ".", "setNominalTime", "(", "arg0", ")", ";", "CoordELFunctions", ".", "configureEvaluator", "(", "loc0", ",", "null", ",", "loc1", ")", ";", "return", "loc0", ";", "}"], "nl_tokens": ["create", "a", "sla", "evaluator", "to", "be", "used", "during", "materialization", "concode_field_sep", "Integer", "HOUR", "concode_elem_sep", "Integer", "MINUTE", "concode_field_sep", "ELEvaluator", "createLazyEvaluator", "concode_elem_sep", "String", "make2Digits", "concode_elem_sep", "void", "setConfigToEval", "concode_elem_sep", "ELEvaluator", "createELEvaluatorForGroup", "concode_elem_sep", "ELEvaluator", "createELEvaluatorForDataEcho", "concode_elem_sep", "ELEvaluator", "createURIELEvaluator", "concode_elem_sep", "SyncCoordDataset", "getDSObject", "concode_elem_sep", "ELEvaluator", "createInstancesELEvaluator", "concode_elem_sep", "ELEvaluator", "createInstancesELEvaluator", "concode_elem_sep", "ELEvaluator", "createDataEvaluator"]}
{"code": "void function ( ARDrone arg0 ) { this . drone = arg0 ; this . cmd = this . drone . getCommandManager ( ) ; }", "nl": "should be called before once before any other method is called concode_field_sep GeneralMotorCon ourInstance concode_elem_sep int spin90Time concode_elem_sep String TAG concode_elem_sep int batLvl concode_elem_sep long threadTimer concode_elem_sep int spinSpeed concode_elem_sep CommandManager cmd concode_elem_sep int hoverTime concode_elem_sep int speed concode_elem_sep int spin90Speed concode_elem_sep ARDrone drone concode_elem_sep int spinTime concode_field_sep void spin90Left concode_elem_sep void spinRight concode_elem_sep void takeoff concode_elem_sep void forward concode_elem_sep void spinLeft concode_elem_sep void right concode_elem_sep void lowerAltitude concode_elem_sep void spin90Right concode_elem_sep void landing concode_elem_sep void left concode_elem_sep void backward concode_elem_sep GeneralMotorCon getInstance concode_elem_sep void setBatLvl concode_elem_sep void waitFor concode_elem_sep int getBatLvl concode_elem_sep void onStop concode_elem_sep void raiseAltitude", "code_tokens": ["void", "function", "(", "ARDrone", "arg0", ")", "{", "this", ".", "drone", "=", "arg0", ";", "this", ".", "cmd", "=", "this", ".", "drone", ".", "getCommandManager", "(", ")", ";", "}"], "nl_tokens": ["should", "be", "called", "before", "once", "before", "any", "other", "method", "is", "called", "concode_field_sep", "GeneralMotorCon", "ourInstance", "concode_elem_sep", "int", "spin90Time", "concode_elem_sep", "String", "TAG", "concode_elem_sep", "int", "batLvl", "concode_elem_sep", "long", "threadTimer", "concode_elem_sep", "int", "spinSpeed", "concode_elem_sep", "CommandManager", "cmd", "concode_elem_sep", "int", "hoverTime", "concode_elem_sep", "int", "speed", "concode_elem_sep", "int", "spin90Speed", "concode_elem_sep", "ARDrone", "drone", "concode_elem_sep", "int", "spinTime", "concode_field_sep", "void", "spin90Left", "concode_elem_sep", "void", "spinRight", "concode_elem_sep", "void", "takeoff", "concode_elem_sep", "void", "forward", "concode_elem_sep", "void", "spinLeft", "concode_elem_sep", "void", "right", "concode_elem_sep", "void", "lowerAltitude", "concode_elem_sep", "void", "spin90Right", "concode_elem_sep", "void", "landing", "concode_elem_sep", "void", "left", "concode_elem_sep", "void", "backward", "concode_elem_sep", "GeneralMotorCon", "getInstance", "concode_elem_sep", "void", "setBatLvl", "concode_elem_sep", "void", "waitFor", "concode_elem_sep", "int", "getBatLvl", "concode_elem_sep", "void", "onStop", "concode_elem_sep", "void", "raiseAltitude"]}
{"code": "T function ( T arg0 , long arg1 ) { if ( isHealthy ( arg0 ) ) { return arg0 ; } else { LOG . info ( \"srini_string\" , arg0 ) ; remove ( arg0 ) ; closeResource ( arg0 ) ; return acquire ( arg1 - mClock . millis ( ) , TimeUnit . MILLISECONDS ) ; } }", "nl": "check whether the resource is healthy . if not retry . when this called , the resource is not in mresourceavailable . concode_field_sep ReentrantLock mLock concode_elem_sep ScheduledExecutorService mExecutor concode_elem_sep Clock mClock concode_elem_sep long mInitialDelayMs concode_elem_sep long mLastAccessTimeMs concode_elem_sep Condition mNotEmpty concode_elem_sep ScheduledExecutorService mGcExecutor concode_elem_sep long mGcIntervalMs concode_elem_sep int mIdentity concode_elem_sep T mResource concode_elem_sep int mMaxCapacity concode_elem_sep HashMap<T,ResourceInternal<T>> mResources concode_elem_sep int mMaxCapacity concode_elem_sep ScheduledFuture<?> mGcFuture concode_elem_sep TreeSet<ResourceInternal<T>> mResourceAvailable concode_elem_sep int mMinCapacity concode_elem_sep Logger LOG concode_elem_sep int mMinCapacity concode_field_sep T createNewResource concode_elem_sep int compare concode_elem_sep void release concode_elem_sep ResourceInternal<T> poll concode_elem_sep T acquire concode_elem_sep T acquire concode_elem_sep void remove concode_elem_sep boolean isHealthy concode_elem_sep boolean shouldGc concode_elem_sep void setLastAccessTimeMs concode_elem_sep Options setMinCapacity concode_elem_sep Options setGcIntervalMs concode_elem_sep Options setGcExecutor concode_elem_sep Options setInitialDelayMs concode_elem_sep long getInitialDelayMs concode_elem_sep long getLastAccessTimeMs concode_elem_sep void close concode_elem_sep boolean add concode_elem_sep ScheduledExecutorService getGcExecutor concode_elem_sep int getMaxCapacity concode_elem_sep Options defaultOptions concode_elem_sep void closeResource concode_elem_sep Options setMaxCapacity concode_elem_sep void closeResourceSync concode_elem_sep int size concode_elem_sep long getGcIntervalMs concode_elem_sep int getMinCapacity concode_elem_sep boolean isFull", "code_tokens": ["T", "function", "(", "T", "arg0", ",", "long", "arg1", ")", "{", "if", "(", "isHealthy", "(", "arg0", ")", ")", "{", "return", "arg0", ";", "}", "else", "{", "LOG", ".", "info", "(", "\"srini_string\"", ",", "arg0", ")", ";", "remove", "(", "arg0", ")", ";", "closeResource", "(", "arg0", ")", ";", "return", "acquire", "(", "arg1", "-", "mClock", ".", "millis", "(", ")", ",", "TimeUnit", ".", "MILLISECONDS", ")", ";", "}", "}"], "nl_tokens": ["check", "whether", "the", "resource", "is", "healthy", ".", "if", "not", "retry", ".", "when", "this", "called", ",", "the", "resource", "is", "not", "in", "mresourceavailable", ".", "concode_field_sep", "ReentrantLock", "mLock", "concode_elem_sep", "ScheduledExecutorService", "mExecutor", "concode_elem_sep", "Clock", "mClock", "concode_elem_sep", "long", "mInitialDelayMs", "concode_elem_sep", "long", "mLastAccessTimeMs", "concode_elem_sep", "Condition", "mNotEmpty", "concode_elem_sep", "ScheduledExecutorService", "mGcExecutor", "concode_elem_sep", "long", "mGcIntervalMs", "concode_elem_sep", "int", "mIdentity", "concode_elem_sep", "T", "mResource", "concode_elem_sep", "int", "mMaxCapacity", "concode_elem_sep", "HashMap", "<", "T", ",", "ResourceInternal", "<", "T", ">>", "mResources", "concode_elem_sep", "int", "mMaxCapacity", "concode_elem_sep", "ScheduledFuture", "<", "?", ">", "mGcFuture", "concode_elem_sep", "TreeSet", "<", "ResourceInternal", "<", "T", ">>", "mResourceAvailable", "concode_elem_sep", "int", "mMinCapacity", "concode_elem_sep", "Logger", "LOG", "concode_elem_sep", "int", "mMinCapacity", "concode_field_sep", "T", "createNewResource", "concode_elem_sep", "int", "compare", "concode_elem_sep", "void", "release", "concode_elem_sep", "ResourceInternal", "<", "T", ">", "poll", "concode_elem_sep", "T", "acquire", "concode_elem_sep", "T", "acquire", "concode_elem_sep", "void", "remove", "concode_elem_sep", "boolean", "isHealthy", "concode_elem_sep", "boolean", "shouldGc", "concode_elem_sep", "void", "setLastAccessTimeMs", "concode_elem_sep", "Options", "setMinCapacity", "concode_elem_sep", "Options", "setGcIntervalMs", "concode_elem_sep", "Options", "setGcExecutor", "concode_elem_sep", "Options", "setInitialDelayMs", "concode_elem_sep", "long", "getInitialDelayMs", "concode_elem_sep", "long", "getLastAccessTimeMs", "concode_elem_sep", "void", "close", "concode_elem_sep", "boolean", "add", "concode_elem_sep", "ScheduledExecutorService", "getGcExecutor", "concode_elem_sep", "int", "getMaxCapacity", "concode_elem_sep", "Options", "defaultOptions", "concode_elem_sep", "void", "closeResource", "concode_elem_sep", "Options", "setMaxCapacity", "concode_elem_sep", "void", "closeResourceSync", "concode_elem_sep", "int", "size", "concode_elem_sep", "long", "getGcIntervalMs", "concode_elem_sep", "int", "getMinCapacity", "concode_elem_sep", "boolean", "isFull"]}
{"code": "JSONArray function ( List < ? extends JsonWorkflowAction > arg0 ) { JSONArray loc0 = new JSONArray ( ) ; for ( JsonWorkflowAction loc1 : arg0 ) { loc0 . add ( loc1 . toJSONObject ( ) ) ; } return loc0 ; }", "nl": "convert a nodes list into a jsonarray . concode_field_sep Status status concode_elem_sep String conf concode_elem_sep String consoleUrl concode_elem_sep String externalStatus concode_elem_sep String trackerUri concode_elem_sep String data concode_elem_sep String name concode_elem_sep int retries concode_elem_sep String transition concode_elem_sep String externalId concode_elem_sep String errorMessage concode_elem_sep String type concode_elem_sep String errorCode concode_elem_sep Date startTime concode_elem_sep String id concode_elem_sep Date endTime concode_field_sep void setName concode_elem_sep String getConsoleUrl concode_elem_sep String getName concode_elem_sep String getId concode_elem_sep Status getStatus concode_elem_sep String getExternalId concode_elem_sep void setTrackerUri concode_elem_sep Date getEndTime concode_elem_sep int getRetries concode_elem_sep String getErrorCode concode_elem_sep JSONObject toJSONObject concode_elem_sep void setId concode_elem_sep Date getStartTime concode_elem_sep void setStartTime concode_elem_sep void setExternalId concode_elem_sep String getData concode_elem_sep List<JsonWorkflowAction> fromJSONArray concode_elem_sep String getConf concode_elem_sep void setData concode_elem_sep void setExternalStatus concode_elem_sep void setConsoleUrl concode_elem_sep void setType concode_elem_sep String getExternalStatus concode_elem_sep void setConf concode_elem_sep void setStatus concode_elem_sep void setRetries concode_elem_sep void setErrorInfo concode_elem_sep String getType concode_elem_sep void setEndTime concode_elem_sep String getTransition concode_elem_sep void setTransition concode_elem_sep String toString concode_elem_sep String getTrackerUri concode_elem_sep String getErrorMessage", "code_tokens": ["JSONArray", "function", "(", "List", "<", "?", "extends", "JsonWorkflowAction", ">", "arg0", ")", "{", "JSONArray", "loc0", "=", "new", "JSONArray", "(", ")", ";", "for", "(", "JsonWorkflowAction", "loc1", ":", "arg0", ")", "{", "loc0", ".", "add", "(", "loc1", ".", "toJSONObject", "(", ")", ")", ";", "}", "return", "loc0", ";", "}"], "nl_tokens": ["convert", "a", "nodes", "list", "into", "a", "jsonarray", ".", "concode_field_sep", "Status", "status", "concode_elem_sep", "String", "conf", "concode_elem_sep", "String", "consoleUrl", "concode_elem_sep", "String", "externalStatus", "concode_elem_sep", "String", "trackerUri", "concode_elem_sep", "String", "data", "concode_elem_sep", "String", "name", "concode_elem_sep", "int", "retries", "concode_elem_sep", "String", "transition", "concode_elem_sep", "String", "externalId", "concode_elem_sep", "String", "errorMessage", "concode_elem_sep", "String", "type", "concode_elem_sep", "String", "errorCode", "concode_elem_sep", "Date", "startTime", "concode_elem_sep", "String", "id", "concode_elem_sep", "Date", "endTime", "concode_field_sep", "void", "setName", "concode_elem_sep", "String", "getConsoleUrl", "concode_elem_sep", "String", "getName", "concode_elem_sep", "String", "getId", "concode_elem_sep", "Status", "getStatus", "concode_elem_sep", "String", "getExternalId", "concode_elem_sep", "void", "setTrackerUri", "concode_elem_sep", "Date", "getEndTime", "concode_elem_sep", "int", "getRetries", "concode_elem_sep", "String", "getErrorCode", "concode_elem_sep", "JSONObject", "toJSONObject", "concode_elem_sep", "void", "setId", "concode_elem_sep", "Date", "getStartTime", "concode_elem_sep", "void", "setStartTime", "concode_elem_sep", "void", "setExternalId", "concode_elem_sep", "String", "getData", "concode_elem_sep", "List", "<", "JsonWorkflowAction", ">", "fromJSONArray", "concode_elem_sep", "String", "getConf", "concode_elem_sep", "void", "setData", "concode_elem_sep", "void", "setExternalStatus", "concode_elem_sep", "void", "setConsoleUrl", "concode_elem_sep", "void", "setType", "concode_elem_sep", "String", "getExternalStatus", "concode_elem_sep", "void", "setConf", "concode_elem_sep", "void", "setStatus", "concode_elem_sep", "void", "setRetries", "concode_elem_sep", "void", "setErrorInfo", "concode_elem_sep", "String", "getType", "concode_elem_sep", "void", "setEndTime", "concode_elem_sep", "String", "getTransition", "concode_elem_sep", "void", "setTransition", "concode_elem_sep", "String", "toString", "concode_elem_sep", "String", "getTrackerUri", "concode_elem_sep", "String", "getErrorMessage"]}
{"code": "ProfileData function ( ) { return this . profileData ; }", "nl": "gets the new merged profile data object . concode_field_sep String VALUE_SEPARATOR concode_elem_sep String TYPE_VALUE_SEPARATOR concode_elem_sep ProfileData profileData concode_field_sep void mergeProfiles concode_elem_sep void createUnion concode_elem_sep String determineAlteredStatus concode_elem_sep String createKey", "code_tokens": ["ProfileData", "function", "(", ")", "{", "return", "this", ".", "profileData", ";", "}"], "nl_tokens": ["gets", "the", "new", "merged", "profile", "data", "object", ".", "concode_field_sep", "String", "VALUE_SEPARATOR", "concode_elem_sep", "String", "TYPE_VALUE_SEPARATOR", "concode_elem_sep", "ProfileData", "profileData", "concode_field_sep", "void", "mergeProfiles", "concode_elem_sep", "void", "createUnion", "concode_elem_sep", "String", "determineAlteredStatus", "concode_elem_sep", "String", "createKey"]}
{"code": "Map < String , String > function ( ) { return this . attributes ; }", "nl": "return a map of attributes for the launched task . the specific keys and values returned are dependent on the runtime where the task has been launched . this may include extra information such as execution location or specific error messages in the case of failure . concode_field_sep Map<String,String> attributes concode_elem_sep String id concode_elem_sep LaunchState state concode_field_sep String getTaskLaunchId concode_elem_sep LaunchState getState concode_elem_sep String toString", "code_tokens": ["Map", "<", "String", ",", "String", ">", "function", "(", ")", "{", "return", "this", ".", "attributes", ";", "}"], "nl_tokens": ["return", "a", "map", "of", "attributes", "for", "the", "launched", "task", ".", "the", "specific", "keys", "and", "values", "returned", "are", "dependent", "on", "the", "runtime", "where", "the", "task", "has", "been", "launched", ".", "this", "may", "include", "extra", "information", "such", "as", "execution", "location", "or", "specific", "error", "messages", "in", "the", "case", "of", "failure", ".", "concode_field_sep", "Map", "<", "String", ",", "String", ">", "attributes", "concode_elem_sep", "String", "id", "concode_elem_sep", "LaunchState", "state", "concode_field_sep", "String", "getTaskLaunchId", "concode_elem_sep", "LaunchState", "getState", "concode_elem_sep", "String", "toString"]}
{"code": "void function ( TreePath arg0 ) { Object loc0 = arg0 . getLastPathComponent ( ) ; TreePath loc1 = arg0 . getParentPath ( ) ; if ( loc1 == null ) { fireChildrenChanged ( arg0 , null , null ) ; } else { Object loc2 = loc1 . getLastPathComponent ( ) ; fireChildChanged ( loc1 , getIndexOfChild ( loc2 , loc0 ) , loc0 ) ; } }", "nl": "call when the path itself has changed , but no structure changes have occurred . concode_field_sep EventListenerList listeners concode_field_sep void fireChildAdded concode_elem_sep void fireChildRemoved concode_elem_sep int getIndexOfChild concode_elem_sep void fireTreeStructureChanged concode_elem_sep void addTreeModelListener concode_elem_sep void fireNewRoot concode_elem_sep void fireChildrenAdded concode_elem_sep void removeTreeModelListener concode_elem_sep void fireChildrenChanged concode_elem_sep void fireChildrenRemoved concode_elem_sep Object clone concode_elem_sep void fireStructureChanged concode_elem_sep void firePathLeafStateChanged concode_elem_sep void fireChildChanged", "code_tokens": ["void", "function", "(", "TreePath", "arg0", ")", "{", "Object", "loc0", "=", "arg0", ".", "getLastPathComponent", "(", ")", ";", "TreePath", "loc1", "=", "arg0", ".", "getParentPath", "(", ")", ";", "if", "(", "loc1", "==", "null", ")", "{", "fireChildrenChanged", "(", "arg0", ",", "null", ",", "null", ")", ";", "}", "else", "{", "Object", "loc2", "=", "loc1", ".", "getLastPathComponent", "(", ")", ";", "fireChildChanged", "(", "loc1", ",", "getIndexOfChild", "(", "loc2", ",", "loc0", ")", ",", "loc0", ")", ";", "}", "}"], "nl_tokens": ["call", "when", "the", "path", "itself", "has", "changed", ",", "but", "no", "structure", "changes", "have", "occurred", ".", "concode_field_sep", "EventListenerList", "listeners", "concode_field_sep", "void", "fireChildAdded", "concode_elem_sep", "void", "fireChildRemoved", "concode_elem_sep", "int", "getIndexOfChild", "concode_elem_sep", "void", "fireTreeStructureChanged", "concode_elem_sep", "void", "addTreeModelListener", "concode_elem_sep", "void", "fireNewRoot", "concode_elem_sep", "void", "fireChildrenAdded", "concode_elem_sep", "void", "removeTreeModelListener", "concode_elem_sep", "void", "fireChildrenChanged", "concode_elem_sep", "void", "fireChildrenRemoved", "concode_elem_sep", "Object", "clone", "concode_elem_sep", "void", "fireStructureChanged", "concode_elem_sep", "void", "firePathLeafStateChanged", "concode_elem_sep", "void", "fireChildChanged"]}
{"code": "void function ( ) { try { vCloseRequested = true ; socket . close ( ) ; } catch ( IOException loc0 ) { throw new RuntimeException ( loc0 ) ; } }", "nl": "closes the connection to the server , triggering the streamparser #connectionclosed event on the network-handling thread where all callbacks occur . concode_field_sep ByteBuffer dbuf concode_elem_sep int BUFFER_SIZE_LOWER_BOUND concode_elem_sep Socket socket concode_elem_sep org.slf4j.Logger log concode_elem_sep int BUFFER_SIZE_UPPER_BOUND concode_elem_sep boolean vCloseRequested concode_field_sep void writeBytes", "code_tokens": ["void", "function", "(", ")", "{", "try", "{", "vCloseRequested", "=", "true", ";", "socket", ".", "close", "(", ")", ";", "}", "catch", "(", "IOException", "loc0", ")", "{", "throw", "new", "RuntimeException", "(", "loc0", ")", ";", "}", "}"], "nl_tokens": ["closes", "the", "connection", "to", "the", "server", ",", "triggering", "the", "streamparser", "#connectionclosed event on the network-handling thread where all callbacks occur . concode_field_sep ByteBuffer dbuf concode_elem_sep int BUFFER_SIZE_LOWER_BOUND concode_elem_sep Socket socket concode_elem_sep org.slf4j.Logger log concode_elem_sep int BUFFER_SIZE_UPPER_BOUND concode_elem_sep boolean vCloseRequested concode_field_sep void writeBytes"]}
{"code": "AppStatus function ( ) { return status ; }", "nl": "return a new instance of appstatus based onthe provided individual app instances via #with appinstancestatus . concode_field_sep Map<String,AppInstanceStatus> instances concode_elem_sep String deploymentId concode_elem_sep AppStatus status concode_field_sep Map<String,AppInstanceStatus> getInstances concode_elem_sep Builder with concode_elem_sep void addInstance concode_elem_sep DeploymentState getState concode_elem_sep Builder of concode_elem_sep String toString concode_elem_sep String getDeploymentId", "code_tokens": ["AppStatus", "function", "(", ")", "{", "return", "status", ";", "}"], "nl_tokens": ["return", "a", "new", "instance", "of", "appstatus", "based", "onthe", "provided", "individual", "app", "instances", "via", "#with appinstancestatus . concode_field_sep Map<String,AppInstanceStatus> instances concode_elem_sep String deploymentId concode_elem_sep AppStatus status concode_field_sep Map<String,AppInstanceStatus> getInstances concode_elem_sep Builder with concode_elem_sep void addInstance concode_elem_sep DeploymentState getState concode_elem_sep Builder of concode_elem_sep String toString concode_elem_sep String getDeploymentId"]}
{"code": "void function ( ) { if ( connection != null && connection . isOpen ( ) ) { try { connection . close ( ) ; } catch ( IOException loc0 ) { handleException ( \"srini_string\" , loc0 ) ; } finally { connection = null ; } } }", "nl": "close the connection concode_field_sep Connection connection concode_elem_sep String targetEPR concode_elem_sep Hashtable<String,String> properties concode_elem_sep Log log concode_field_sep AMQP.BasicProperties.Builder buildBasicProperties concode_elem_sep void handleException concode_elem_sep void handleException concode_elem_sep void send", "code_tokens": ["void", "function", "(", ")", "{", "if", "(", "connection", "!=", "null", "&", "&", "connection", ".", "isOpen", "(", ")", ")", "{", "try", "{", "connection", ".", "close", "(", ")", ";", "}", "catch", "(", "IOException", "loc0", ")", "{", "handleException", "(", "\"srini_string\"", ",", "loc0", ")", ";", "}", "finally", "{", "connection", "=", "null", ";", "}", "}", "}"], "nl_tokens": ["close", "the", "connection", "concode_field_sep", "Connection", "connection", "concode_elem_sep", "String", "targetEPR", "concode_elem_sep", "Hashtable", "<", "String", ",", "String", ">", "properties", "concode_elem_sep", "Log", "log", "concode_field_sep", "AMQP", ".", "BasicProperties", ".", "Builder", "buildBasicProperties", "concode_elem_sep", "void", "handleException", "concode_elem_sep", "void", "handleException", "concode_elem_sep", "void", "send"]}
{"code": "void function ( ) { try { connection . close ( ) ; } catch ( SQLException loc0 ) { Jamuz . getLogger ( ) . log ( Level . SEVERE , \"srini_string\" , loc0 ) ; } }", "nl": "disconnect database concode_field_sep Connection connection concode_elem_sep DbInfo info concode_field_sep String getStringValue concode_elem_sep String getStringValue concode_elem_sep String getStringValue concode_elem_sep DbInfo getInfo concode_elem_sep Connection getConnnection concode_elem_sep boolean connect", "code_tokens": ["void", "function", "(", ")", "{", "try", "{", "connection", ".", "close", "(", ")", ";", "}", "catch", "(", "SQLException", "loc0", ")", "{", "Jamuz", ".", "getLogger", "(", ")", ".", "log", "(", "Level", ".", "SEVERE", ",", "\"srini_string\"", ",", "loc0", ")", ";", "}", "}"], "nl_tokens": ["disconnect", "database", "concode_field_sep", "Connection", "connection", "concode_elem_sep", "DbInfo", "info", "concode_field_sep", "String", "getStringValue", "concode_elem_sep", "String", "getStringValue", "concode_elem_sep", "String", "getStringValue", "concode_elem_sep", "DbInfo", "getInfo", "concode_elem_sep", "Connection", "getConnnection", "concode_elem_sep", "boolean", "connect"]}
{"code": "String function ( String arg0 , Document arg1 ) { try { return engine . evaluate ( arg0 , new DOMSource ( arg1 ) ) ; } catch ( XMLUnitException loc0 ) { throw new XpathException ( loc0 . getCause ( ) ) ; } }", "nl": "evaluate the result of executing the specified xpath syntax select expression on the specified document concode_field_sep JAXPXPathEngine engine concode_elem_sep List<Node> l concode_field_sep Node item concode_elem_sep void setNamespaceContext concode_elem_sep NodeList getMatchingNodes concode_elem_sep int getLength", "code_tokens": ["String", "function", "(", "String", "arg0", ",", "Document", "arg1", ")", "{", "try", "{", "return", "engine", ".", "evaluate", "(", "arg0", ",", "new", "DOMSource", "(", "arg1", ")", ")", ";", "}", "catch", "(", "XMLUnitException", "loc0", ")", "{", "throw", "new", "XpathException", "(", "loc0", ".", "getCause", "(", ")", ")", ";", "}", "}"], "nl_tokens": ["evaluate", "the", "result", "of", "executing", "the", "specified", "xpath", "syntax", "select", "expression", "on", "the", "specified", "document", "concode_field_sep", "JAXPXPathEngine", "engine", "concode_elem_sep", "List", "<", "Node", ">", "l", "concode_field_sep", "Node", "item", "concode_elem_sep", "void", "setNamespaceContext", "concode_elem_sep", "NodeList", "getMatchingNodes", "concode_elem_sep", "int", "getLength"]}
{"code": "void function ( String arg0 ) { this . errorMsg = arg0 ; }", "nl": "sets the error msg . concode_field_sep Long expectedDataUnitId concode_elem_sep Long seqNo concode_elem_sep Long dataSetId concode_elem_sep Long dataUnitId concode_elem_sep String expectedValue concode_elem_sep String actualValue concode_elem_sep Long expectedDataSetId concode_elem_sep String errorCode concode_elem_sep Long testId concode_elem_sep String failedAttributeName concode_elem_sep String srcFileName concode_elem_sep String errorMsg concode_field_sep void setExpectedValue concode_elem_sep String getExpectedValue concode_elem_sep Long getExpectedDataSetId concode_elem_sep void setExpectedDataSetId concode_elem_sep void setActualValue concode_elem_sep Long getDataSetId concode_elem_sep void setSrcFileName concode_elem_sep Long getExpectedDataUnitId concode_elem_sep void setExpectedDataUnitId concode_elem_sep String getSrcFileName concode_elem_sep Long getSeqNo concode_elem_sep String getFailedAttributeName concode_elem_sep void setTestId concode_elem_sep void setFailedAttributeName concode_elem_sep Long getTestId concode_elem_sep void setErrorCode concode_elem_sep String getActualValue concode_elem_sep Long getDataUnitId concode_elem_sep void setSeqNo concode_elem_sep String getErrorCode concode_elem_sep void setDataUnitId concode_elem_sep void setDataSetId concode_elem_sep String toString concode_elem_sep String getErrorMsg", "code_tokens": ["void", "function", "(", "String", "arg0", ")", "{", "this", ".", "errorMsg", "=", "arg0", ";", "}"], "nl_tokens": ["sets", "the", "error", "msg", ".", "concode_field_sep", "Long", "expectedDataUnitId", "concode_elem_sep", "Long", "seqNo", "concode_elem_sep", "Long", "dataSetId", "concode_elem_sep", "Long", "dataUnitId", "concode_elem_sep", "String", "expectedValue", "concode_elem_sep", "String", "actualValue", "concode_elem_sep", "Long", "expectedDataSetId", "concode_elem_sep", "String", "errorCode", "concode_elem_sep", "Long", "testId", "concode_elem_sep", "String", "failedAttributeName", "concode_elem_sep", "String", "srcFileName", "concode_elem_sep", "String", "errorMsg", "concode_field_sep", "void", "setExpectedValue", "concode_elem_sep", "String", "getExpectedValue", "concode_elem_sep", "Long", "getExpectedDataSetId", "concode_elem_sep", "void", "setExpectedDataSetId", "concode_elem_sep", "void", "setActualValue", "concode_elem_sep", "Long", "getDataSetId", "concode_elem_sep", "void", "setSrcFileName", "concode_elem_sep", "Long", "getExpectedDataUnitId", "concode_elem_sep", "void", "setExpectedDataUnitId", "concode_elem_sep", "String", "getSrcFileName", "concode_elem_sep", "Long", "getSeqNo", "concode_elem_sep", "String", "getFailedAttributeName", "concode_elem_sep", "void", "setTestId", "concode_elem_sep", "void", "setFailedAttributeName", "concode_elem_sep", "Long", "getTestId", "concode_elem_sep", "void", "setErrorCode", "concode_elem_sep", "String", "getActualValue", "concode_elem_sep", "Long", "getDataUnitId", "concode_elem_sep", "void", "setSeqNo", "concode_elem_sep", "String", "getErrorCode", "concode_elem_sep", "void", "setDataUnitId", "concode_elem_sep", "void", "setDataSetId", "concode_elem_sep", "String", "toString", "concode_elem_sep", "String", "getErrorMsg"]}
{"code": "void function ( THashSet < String > arg0 ) { mWhitelist . addAll ( arg0 ) ; }", "nl": "add whitelist to this host file . this supports simple regex in entries . concode_field_sep boolean mParseWhitelist concode_elem_sep THashMap<String,String> mRedirectionList concode_elem_sep Matcher mHostsParserMatcher concode_elem_sep THashSet<String> mWhitelist concode_elem_sep THashSet<String> mBlacklist concode_elem_sep Pattern mHostsParserPattern concode_elem_sep boolean mParseRedirections concode_field_sep void addRedirectionList concode_elem_sep THashSet<String> getBlacklist concode_elem_sep void addBlacklist concode_elem_sep THashSet<String> getWhitelist concode_elem_sep THashMap<String,String> getRedirectionList concode_elem_sep void parse concode_elem_sep void compileList", "code_tokens": ["void", "function", "(", "THashSet", "<", "String", ">", "arg0", ")", "{", "mWhitelist", ".", "addAll", "(", "arg0", ")", ";", "}"], "nl_tokens": ["add", "whitelist", "to", "this", "host", "file", ".", "this", "supports", "simple", "regex", "in", "entries", ".", "concode_field_sep", "boolean", "mParseWhitelist", "concode_elem_sep", "THashMap", "<", "String", ",", "String", ">", "mRedirectionList", "concode_elem_sep", "Matcher", "mHostsParserMatcher", "concode_elem_sep", "THashSet", "<", "String", ">", "mWhitelist", "concode_elem_sep", "THashSet", "<", "String", ">", "mBlacklist", "concode_elem_sep", "Pattern", "mHostsParserPattern", "concode_elem_sep", "boolean", "mParseRedirections", "concode_field_sep", "void", "addRedirectionList", "concode_elem_sep", "THashSet", "<", "String", ">", "getBlacklist", "concode_elem_sep", "void", "addBlacklist", "concode_elem_sep", "THashSet", "<", "String", ">", "getWhitelist", "concode_elem_sep", "THashMap", "<", "String", ",", "String", ">", "getRedirectionList", "concode_elem_sep", "void", "parse", "concode_elem_sep", "void", "compileList"]}
{"code": "HTTPConduit function ( ) { Conduit loc0 = getConduit ( ) ; return loc0 instanceof HTTPConduit ? ( HTTPConduit ) loc0 : null ; }", "nl": "gets the http conduit responsible for a transport-level communication with the remote service . concode_field_sep ConduitSelector conduitSelector concode_elem_sep Map<String,Object> requestContext concode_elem_sep Bus bus concode_elem_sep List<Interceptor<? extends Message>> inInterceptors concode_elem_sep long synchronousTimeout concode_elem_sep List<Interceptor<? extends Message>> outInterceptors concode_elem_sep Logger LOG concode_elem_sep List<Interceptor<? extends Message>> inFault concode_elem_sep Map<String,Object> responseContext concode_elem_sep List<Interceptor<? extends Message>> outFault concode_field_sep Bus getBus concode_elem_sep List<Interceptor<? extends Message>> getOutFaultInterceptors concode_elem_sep Endpoint getEndpoint concode_elem_sep long getSynchronousTimeout concode_elem_sep void setConduitSelector concode_elem_sep void setOutInterceptors concode_elem_sep List<Interceptor<? extends Message>> getInInterceptors concode_elem_sep Map<String,Object> getResponseContext concode_elem_sep boolean isResponseExpectedForOneway concode_elem_sep void setOutFaultInterceptors concode_elem_sep Conduit getConduit concode_elem_sep void setSynchronousTimeout concode_elem_sep ConduitSelector getConduitSelector concode_elem_sep List<Interceptor<? extends Message>> getInFaultInterceptors concode_elem_sep List<Interceptor<? extends Message>> getOutInterceptors concode_elem_sep void setInInterceptors concode_elem_sep Map<String,Object> getRequestContext concode_elem_sep void setInFaultInterceptors concode_elem_sep void setBus concode_elem_sep void prepareConduitSelector", "code_tokens": ["HTTPConduit", "function", "(", ")", "{", "Conduit", "loc0", "=", "getConduit", "(", ")", ";", "return", "loc0", "instanceof", "HTTPConduit", "?", "(", "HTTPConduit", ")", "loc0", ":", "null", ";", "}"], "nl_tokens": ["gets", "the", "http", "conduit", "responsible", "for", "a", "transport", "-", "level", "communication", "with", "the", "remote", "service", ".", "concode_field_sep", "ConduitSelector", "conduitSelector", "concode_elem_sep", "Map", "<", "String", ",", "Object", ">", "requestContext", "concode_elem_sep", "Bus", "bus", "concode_elem_sep", "List", "<", "Interceptor", "<", "?", "extends", "Message", ">>", "inInterceptors", "concode_elem_sep", "long", "synchronousTimeout", "concode_elem_sep", "List", "<", "Interceptor", "<", "?", "extends", "Message", ">>", "outInterceptors", "concode_elem_sep", "Logger", "LOG", "concode_elem_sep", "List", "<", "Interceptor", "<", "?", "extends", "Message", ">>", "inFault", "concode_elem_sep", "Map", "<", "String", ",", "Object", ">", "responseContext", "concode_elem_sep", "List", "<", "Interceptor", "<", "?", "extends", "Message", ">>", "outFault", "concode_field_sep", "Bus", "getBus", "concode_elem_sep", "List", "<", "Interceptor", "<", "?", "extends", "Message", ">>", "getOutFaultInterceptors", "concode_elem_sep", "Endpoint", "getEndpoint", "concode_elem_sep", "long", "getSynchronousTimeout", "concode_elem_sep", "void", "setConduitSelector", "concode_elem_sep", "void", "setOutInterceptors", "concode_elem_sep", "List", "<", "Interceptor", "<", "?", "extends", "Message", ">>", "getInInterceptors", "concode_elem_sep", "Map", "<", "String", ",", "Object", ">", "getResponseContext", "concode_elem_sep", "boolean", "isResponseExpectedForOneway", "concode_elem_sep", "void", "setOutFaultInterceptors", "concode_elem_sep", "Conduit", "getConduit", "concode_elem_sep", "void", "setSynchronousTimeout", "concode_elem_sep", "ConduitSelector", "getConduitSelector", "concode_elem_sep", "List", "<", "Interceptor", "<", "?", "extends", "Message", ">>", "getInFaultInterceptors", "concode_elem_sep", "List", "<", "Interceptor", "<", "?", "extends", "Message", ">>", "getOutInterceptors", "concode_elem_sep", "void", "setInInterceptors", "concode_elem_sep", "Map", "<", "String", ",", "Object", ">", "getRequestContext", "concode_elem_sep", "void", "setInFaultInterceptors", "concode_elem_sep", "void", "setBus", "concode_elem_sep", "void", "prepareConduitSelector"]}
{"code": "String function ( ) { return signatureAlias ; }", "nl": "get the signature alias to use for this saml realm concode_field_sep CallbackHandler callbackHandler concode_elem_sep Logger LOG concode_elem_sep Crypto signatureCrypto concode_elem_sep SignatureProperties signatureProperties concode_elem_sep String callbackHandlerClass concode_elem_sep String signaturePropertiesFile concode_elem_sep String signatureAlias concode_elem_sep String issuer concode_field_sep String getIssuer concode_elem_sep void setSignatureCrypto concode_elem_sep void setCallbackHandlerClass concode_elem_sep void setIssuer concode_elem_sep Crypto getSignatureCrypto concode_elem_sep CallbackHandler getCallbackHandler concode_elem_sep SignatureProperties getSignatureProperties concode_elem_sep void setSignatureAlias concode_elem_sep void setSignaturePropertiesFile concode_elem_sep void setSignatureProperties concode_elem_sep void setCallbackHandler", "code_tokens": ["String", "function", "(", ")", "{", "return", "signatureAlias", ";", "}"], "nl_tokens": ["get", "the", "signature", "alias", "to", "use", "for", "this", "saml", "realm", "concode_field_sep", "CallbackHandler", "callbackHandler", "concode_elem_sep", "Logger", "LOG", "concode_elem_sep", "Crypto", "signatureCrypto", "concode_elem_sep", "SignatureProperties", "signatureProperties", "concode_elem_sep", "String", "callbackHandlerClass", "concode_elem_sep", "String", "signaturePropertiesFile", "concode_elem_sep", "String", "signatureAlias", "concode_elem_sep", "String", "issuer", "concode_field_sep", "String", "getIssuer", "concode_elem_sep", "void", "setSignatureCrypto", "concode_elem_sep", "void", "setCallbackHandlerClass", "concode_elem_sep", "void", "setIssuer", "concode_elem_sep", "Crypto", "getSignatureCrypto", "concode_elem_sep", "CallbackHandler", "getCallbackHandler", "concode_elem_sep", "SignatureProperties", "getSignatureProperties", "concode_elem_sep", "void", "setSignatureAlias", "concode_elem_sep", "void", "setSignaturePropertiesFile", "concode_elem_sep", "void", "setSignatureProperties", "concode_elem_sep", "void", "setCallbackHandler"]}
{"code": "void function ( AbstractPlugin arg0 ) { arg0 . removePluginObserver ( this ) ; activePlugins . remove ( arg0 ) ; allPlugins . remove ( arg0 ) ; }", "nl": "remove plugin from available list concode_field_sep PluginContainer activePlugins concode_elem_sep List<PluginManagerListener> listeners concode_elem_sep Logger LOG concode_elem_sep PluginManager singleton concode_elem_sep PluginContainer allPlugins concode_field_sep void notifyContainerChanged concode_elem_sep void addPlugin concode_elem_sep void loadPlugins concode_elem_sep boolean isActive concode_elem_sep Iterator<AbstractPlugin> iterator concode_elem_sep int countActivePlugins concode_elem_sep AbstractPlugin getByName concode_elem_sep void loadAvailablePlugins concode_elem_sep int indexOf concode_elem_sep void addListener concode_elem_sep void removeAllPlugins concode_elem_sep Iterator<AbstractPlugin> getActivePluginIterator concode_elem_sep void setAllActive concode_elem_sep AbstractPlugin getByIndex concode_elem_sep void notifyActiveChanged concode_elem_sep void addToClasspath concode_elem_sep void removeListener concode_elem_sep void pluginStateChanged concode_elem_sep int indexOfActive concode_elem_sep int countPlugins concode_elem_sep void savePlugins concode_elem_sep void setActive concode_elem_sep void loadAvailableJars concode_elem_sep AbstractPlugin getActive concode_elem_sep PluginManager getInstance concode_elem_sep void currentPointsChanged", "code_tokens": ["void", "function", "(", "AbstractPlugin", "arg0", ")", "{", "arg0", ".", "removePluginObserver", "(", "this", ")", ";", "activePlugins", ".", "remove", "(", "arg0", ")", ";", "allPlugins", ".", "remove", "(", "arg0", ")", ";", "}"], "nl_tokens": ["remove", "plugin", "from", "available", "list", "concode_field_sep", "PluginContainer", "activePlugins", "concode_elem_sep", "List", "<", "PluginManagerListener", ">", "listeners", "concode_elem_sep", "Logger", "LOG", "concode_elem_sep", "PluginManager", "singleton", "concode_elem_sep", "PluginContainer", "allPlugins", "concode_field_sep", "void", "notifyContainerChanged", "concode_elem_sep", "void", "addPlugin", "concode_elem_sep", "void", "loadPlugins", "concode_elem_sep", "boolean", "isActive", "concode_elem_sep", "Iterator", "<", "AbstractPlugin", ">", "iterator", "concode_elem_sep", "int", "countActivePlugins", "concode_elem_sep", "AbstractPlugin", "getByName", "concode_elem_sep", "void", "loadAvailablePlugins", "concode_elem_sep", "int", "indexOf", "concode_elem_sep", "void", "addListener", "concode_elem_sep", "void", "removeAllPlugins", "concode_elem_sep", "Iterator", "<", "AbstractPlugin", ">", "getActivePluginIterator", "concode_elem_sep", "void", "setAllActive", "concode_elem_sep", "AbstractPlugin", "getByIndex", "concode_elem_sep", "void", "notifyActiveChanged", "concode_elem_sep", "void", "addToClasspath", "concode_elem_sep", "void", "removeListener", "concode_elem_sep", "void", "pluginStateChanged", "concode_elem_sep", "int", "indexOfActive", "concode_elem_sep", "int", "countPlugins", "concode_elem_sep", "void", "savePlugins", "concode_elem_sep", "void", "setActive", "concode_elem_sep", "void", "loadAvailableJars", "concode_elem_sep", "AbstractPlugin", "getActive", "concode_elem_sep", "PluginManager", "getInstance", "concode_elem_sep", "void", "currentPointsChanged"]}
{"code": "Iterable < T > function ( final Iterable < T > arg0 , final Predicate < ? super T > arg1 ) { return new Iterable < T > ( ) { @ Override public Iterator < T > iterator ( ) { return new FilteringIterator < T > ( arg0 . iterator ( ) , arg1 ) ; } } ; }", "nl": "exclude all elements from an iterable that do n't match a given predicate . concode_field_sep Predicate<? super T> filter concode_elem_sep boolean iterated concode_elem_sep Iterator<T> i concode_elem_sep Mapper<? super F,T> mapper concode_elem_sep T lookAhead concode_elem_sep E element concode_field_sep Iterable<E> singleton concode_elem_sep Iterable<T> filter concode_elem_sep boolean all concode_elem_sep E next concode_elem_sep T next concode_elem_sep T next concode_elem_sep Iterable<E> cast concode_elem_sep int count concode_elem_sep boolean hasNext concode_elem_sep boolean hasNext concode_elem_sep boolean hasNext concode_elem_sep Iterable<T> map concode_elem_sep boolean any concode_elem_sep List<E> asList concode_elem_sep void remove concode_elem_sep void remove concode_elem_sep void remove", "code_tokens": ["Iterable", "<", "T", ">", "function", "(", "final", "Iterable", "<", "T", ">", "arg0", ",", "final", "Predicate", "<", "?", "super", "T", ">", "arg1", ")", "{", "return", "new", "Iterable", "<", "T", ">", "(", ")", "{", "@", "Override", "public", "Iterator", "<", "T", ">", "iterator", "(", ")", "{", "return", "new", "FilteringIterator", "<", "T", ">", "(", "arg0", ".", "iterator", "(", ")", ",", "arg1", ")", ";", "}", "}", ";", "}"], "nl_tokens": ["exclude", "all", "elements", "from", "an", "iterable", "that", "do", "n", "'", "t", "match", "a", "given", "predicate", ".", "concode_field_sep", "Predicate", "<", "?", "super", "T", ">", "filter", "concode_elem_sep", "boolean", "iterated", "concode_elem_sep", "Iterator", "<", "T", ">", "i", "concode_elem_sep", "Mapper", "<", "?", "super", "F", ",", "T", ">", "mapper", "concode_elem_sep", "T", "lookAhead", "concode_elem_sep", "E", "element", "concode_field_sep", "Iterable", "<", "E", ">", "singleton", "concode_elem_sep", "Iterable", "<", "T", ">", "filter", "concode_elem_sep", "boolean", "all", "concode_elem_sep", "E", "next", "concode_elem_sep", "T", "next", "concode_elem_sep", "T", "next", "concode_elem_sep", "Iterable", "<", "E", ">", "cast", "concode_elem_sep", "int", "count", "concode_elem_sep", "boolean", "hasNext", "concode_elem_sep", "boolean", "hasNext", "concode_elem_sep", "boolean", "hasNext", "concode_elem_sep", "Iterable", "<", "T", ">", "map", "concode_elem_sep", "boolean", "any", "concode_elem_sep", "List", "<", "E", ">", "asList", "concode_elem_sep", "void", "remove", "concode_elem_sep", "void", "remove", "concode_elem_sep", "void", "remove"]}
{"code": "List < CoordinatorActionBean > function ( ) { return actions ; }", "nl": "return the coordiantor actions being returned . concode_field_sep List<CoordinatorActionBean> actions concode_field_sep placeholderType placeHolder", "code_tokens": ["List", "<", "CoordinatorActionBean", ">", "function", "(", ")", "{", "return", "actions", ";", "}"], "nl_tokens": ["return", "the", "coordiantor", "actions", "being", "returned", ".", "concode_field_sep", "List", "<", "CoordinatorActionBean", ">", "actions", "concode_field_sep", "placeholderType", "placeHolder"]}
{"code": "void function ( ) { trigger ( null ) ; }", "nl": "activates the event . concode_field_sep Character character concode_elem_sep String sprite concode_elem_sep int id concode_elem_sep TriggerType triggerType concode_elem_sep String map concode_elem_sep Array<EventAction> actions concode_elem_sep String layer concode_elem_sep boolean collidable concode_field_sep void read concode_elem_sep void setLayer concode_elem_sep void setActions concode_elem_sep String getLayer concode_elem_sep int getId concode_elem_sep Array<EventAction> getActions concode_elem_sep void setSprite concode_elem_sep String getMap concode_elem_sep String getSprite concode_elem_sep void setCollidable concode_elem_sep boolean isCollidable concode_elem_sep void setTriggerType concode_elem_sep boolean equals concode_elem_sep void setMap concode_elem_sep void setId concode_elem_sep Character getCharacter concode_elem_sep void setCharacter concode_elem_sep TriggerType getTriggerType concode_elem_sep void write", "code_tokens": ["void", "function", "(", ")", "{", "trigger", "(", "null", ")", ";", "}"], "nl_tokens": ["activates", "the", "event", ".", "concode_field_sep", "Character", "character", "concode_elem_sep", "String", "sprite", "concode_elem_sep", "int", "id", "concode_elem_sep", "TriggerType", "triggerType", "concode_elem_sep", "String", "map", "concode_elem_sep", "Array", "<", "EventAction", ">", "actions", "concode_elem_sep", "String", "layer", "concode_elem_sep", "boolean", "collidable", "concode_field_sep", "void", "read", "concode_elem_sep", "void", "setLayer", "concode_elem_sep", "void", "setActions", "concode_elem_sep", "String", "getLayer", "concode_elem_sep", "int", "getId", "concode_elem_sep", "Array", "<", "EventAction", ">", "getActions", "concode_elem_sep", "void", "setSprite", "concode_elem_sep", "String", "getMap", "concode_elem_sep", "String", "getSprite", "concode_elem_sep", "void", "setCollidable", "concode_elem_sep", "boolean", "isCollidable", "concode_elem_sep", "void", "setTriggerType", "concode_elem_sep", "boolean", "equals", "concode_elem_sep", "void", "setMap", "concode_elem_sep", "void", "setId", "concode_elem_sep", "Character", "getCharacter", "concode_elem_sep", "void", "setCharacter", "concode_elem_sep", "TriggerType", "getTriggerType", "concode_elem_sep", "void", "write"]}
{"code": "boolean function ( Map < String , Object > arg0 , String arg1 ) { if ( arg0 == null || arg1 == null ) { return false ; } else { return isFalse ( arg0 . get ( arg1 ) ) ; } }", "nl": "it might seem odd to return ` true ' if a property == false , but it is required sometimes . concode_field_sep PlaceHolder placeHolder concode_field_sep Long getLong concode_elem_sep boolean isTrue concode_elem_sep boolean isTrue concode_elem_sep Integer getInteger", "code_tokens": ["boolean", "function", "(", "Map", "<", "String", ",", "Object", ">", "arg0", ",", "String", "arg1", ")", "{", "if", "(", "arg0", "==", "null", "|", "|", "arg1", "==", "null", ")", "{", "return", "false", ";", "}", "else", "{", "return", "isFalse", "(", "arg0", ".", "get", "(", "arg1", ")", ")", ";", "}", "}"], "nl_tokens": ["it", "might", "seem", "odd", "to", "return", "`", "true", "'", "if", "a", "property", "==", "false", ",", "but", "it", "is", "required", "sometimes", ".", "concode_field_sep", "PlaceHolder", "placeHolder", "concode_field_sep", "Long", "getLong", "concode_elem_sep", "boolean", "isTrue", "concode_elem_sep", "boolean", "isTrue", "concode_elem_sep", "Integer", "getInteger"]}
{"code": "int function ( Buffer arg0 , int arg1 , String arg2 , String arg3 ) { Block loc0 = arg0 . block ( ) ; if ( isTempBlock ( loc0 ) ) return - 1 ; else return new SetStringRecord ( txnum , loc0 , arg1 , arg2 , arg3 ) . writeToLog ( ) ; }", "nl": "writes a setstring record to the log , and returns its lsn . updates to temporary files are not logged ; instead , a `` dummy '' negative lsn is returned . concode_field_sep int txnum concode_field_sep void rollback concode_elem_sep void recover concode_elem_sep void doRollback concode_elem_sep void doRecover concode_elem_sep void commit concode_elem_sep boolean isTempBlock concode_elem_sep int setInt", "code_tokens": ["int", "function", "(", "Buffer", "arg0", ",", "int", "arg1", ",", "String", "arg2", ",", "String", "arg3", ")", "{", "Block", "loc0", "=", "arg0", ".", "block", "(", ")", ";", "if", "(", "isTempBlock", "(", "loc0", ")", ")", "return", "-", "1", ";", "else", "return", "new", "SetStringRecord", "(", "txnum", ",", "loc0", ",", "arg1", ",", "arg2", ",", "arg3", ")", ".", "writeToLog", "(", ")", ";", "}"], "nl_tokens": ["writes", "a", "setstring", "record", "to", "the", "log", ",", "and", "returns", "its", "lsn", ".", "updates", "to", "temporary", "files", "are", "not", "logged", ";", "instead", ",", "a", "`", "`", "dummy", "''", "negative", "lsn", "is", "returned", ".", "concode_field_sep", "int", "txnum", "concode_field_sep", "void", "rollback", "concode_elem_sep", "void", "recover", "concode_elem_sep", "void", "doRollback", "concode_elem_sep", "void", "doRecover", "concode_elem_sep", "void", "commit", "concode_elem_sep", "boolean", "isTempBlock", "concode_elem_sep", "int", "setInt"]}
{"code": "String function ( ) { return formatUTC ( new Date ( ) , DateTimeFormat . SQL , false ) ; }", "nl": "get current utc datetime in sql format . concode_field_sep String pattern concode_field_sep String formatUTCtoSqlLocal concode_elem_sep String formatUTC concode_elem_sep String formatUTC concode_elem_sep String getCurrentLocal concode_elem_sep String getPattern concode_elem_sep Date parseSqlUtc concode_elem_sep Date parseUTC concode_elem_sep String formatUTCtoSqlUTC", "code_tokens": ["String", "function", "(", ")", "{", "return", "formatUTC", "(", "new", "Date", "(", ")", ",", "DateTimeFormat", ".", "SQL", ",", "false", ")", ";", "}"], "nl_tokens": ["get", "current", "utc", "datetime", "in", "sql", "format", ".", "concode_field_sep", "String", "pattern", "concode_field_sep", "String", "formatUTCtoSqlLocal", "concode_elem_sep", "String", "formatUTC", "concode_elem_sep", "String", "formatUTC", "concode_elem_sep", "String", "getCurrentLocal", "concode_elem_sep", "String", "getPattern", "concode_elem_sep", "Date", "parseSqlUtc", "concode_elem_sep", "Date", "parseUTC", "concode_elem_sep", "String", "formatUTCtoSqlUTC"]}
{"code": "boolean function ( View arg0 , AccessibilityEvent arg1 ) { return IMPL . dispatchPopulateAccessibilityEvent ( DEFAULT_DELEGATE , arg0 , arg1 ) ; }", "nl": "dispatches an accessibilityevent to the host view first and thento its children for adding their text content to the event . the default implementation behaves as view #dispatchpopulateaccessibilityevent accessibilityevent view #dispatchpopulateaccessibilityevent accessibilityevent forthe case of no accessibility delegate been set . concode_field_sep AccessibilityDelegateImpl IMPL concode_elem_sep Object DEFAULT_DELEGATE concode_elem_sep Object mBridge concode_field_sep Object newAccessiblityDelegateDefaultImpl concode_elem_sep Object newAccessiblityDelegateDefaultImpl concode_elem_sep void onInitializeAccessibilityEvent concode_elem_sep void onInitializeAccessibilityEvent concode_elem_sep void onInitializeAccessibilityEvent concode_elem_sep Object getBridge concode_elem_sep void sendAccessibilityEventUnchecked concode_elem_sep void sendAccessibilityEventUnchecked concode_elem_sep void sendAccessibilityEventUnchecked concode_elem_sep void onPopulateAccessibilityEvent concode_elem_sep void onPopulateAccessibilityEvent concode_elem_sep void onPopulateAccessibilityEvent concode_elem_sep boolean onRequestSendAccessibilityEvent concode_elem_sep boolean onRequestSendAccessibilityEvent concode_elem_sep boolean onRequestSendAccessibilityEvent concode_elem_sep void onInitializeAccessibilityNodeInfo concode_elem_sep void onInitializeAccessibilityNodeInfo concode_elem_sep void onInitializeAccessibilityNodeInfo concode_elem_sep void sendAccessibilityEvent concode_elem_sep void sendAccessibilityEvent concode_elem_sep void sendAccessibilityEvent concode_elem_sep Object newAccessiblityDelegateBridge concode_elem_sep Object newAccessiblityDelegateBridge", "code_tokens": ["boolean", "function", "(", "View", "arg0", ",", "AccessibilityEvent", "arg1", ")", "{", "return", "IMPL", ".", "dispatchPopulateAccessibilityEvent", "(", "DEFAULT_DELEGATE", ",", "arg0", ",", "arg1", ")", ";", "}"], "nl_tokens": ["dispatches", "an", "accessibilityevent", "to", "the", "host", "view", "first", "and", "thento", "its", "children", "for", "adding", "their", "text", "content", "to", "the", "event", ".", "the", "default", "implementation", "behaves", "as", "view", "#dispatchpopulateaccessibilityevent accessibilityevent view #dispatchpopulateaccessibilityevent accessibilityevent forthe case of no accessibility delegate been set . concode_field_sep AccessibilityDelegateImpl IMPL concode_elem_sep Object DEFAULT_DELEGATE concode_elem_sep Object mBridge concode_field_sep Object newAccessiblityDelegateDefaultImpl concode_elem_sep Object newAccessiblityDelegateDefaultImpl concode_elem_sep void onInitializeAccessibilityEvent concode_elem_sep void onInitializeAccessibilityEvent concode_elem_sep void onInitializeAccessibilityEvent concode_elem_sep Object getBridge concode_elem_sep void sendAccessibilityEventUnchecked concode_elem_sep void sendAccessibilityEventUnchecked concode_elem_sep void sendAccessibilityEventUnchecked concode_elem_sep void onPopulateAccessibilityEvent concode_elem_sep void onPopulateAccessibilityEvent concode_elem_sep void onPopulateAccessibilityEvent concode_elem_sep boolean onRequestSendAccessibilityEvent concode_elem_sep boolean onRequestSendAccessibilityEvent concode_elem_sep boolean onRequestSendAccessibilityEvent concode_elem_sep void onInitializeAccessibilityNodeInfo concode_elem_sep void onInitializeAccessibilityNodeInfo concode_elem_sep void onInitializeAccessibilityNodeInfo concode_elem_sep void sendAccessibilityEvent concode_elem_sep void sendAccessibilityEvent concode_elem_sep void sendAccessibilityEvent concode_elem_sep Object newAccessiblityDelegateBridge concode_elem_sep Object newAccessiblityDelegateBridge"]}
{"code": "boolean function ( ) { return ! rawCommand . isEmpty ( ) ; }", "nl": "checks if this is a valid command or not . mainly if its just an empty string concode_field_sep String rawParameters concode_elem_sep boolean hasArgs concode_elem_sep HashMap<String,String> params concode_elem_sep String command concode_elem_sep String rawCommand concode_field_sep String[] getExternalArgs concode_elem_sep long getLong concode_elem_sep int getInt concode_elem_sep boolean hasArguments concode_elem_sep boolean isSet concode_elem_sep String getCommand concode_elem_sep String[] getExternalCommand concode_elem_sep String toString concode_elem_sep String getString concode_elem_sep String parameters concode_elem_sep boolean getBool concode_elem_sep void parseCommand", "code_tokens": ["boolean", "function", "(", ")", "{", "return", "!", "rawCommand", ".", "isEmpty", "(", ")", ";", "}"], "nl_tokens": ["checks", "if", "this", "is", "a", "valid", "command", "or", "not", ".", "mainly", "if", "its", "just", "an", "empty", "string", "concode_field_sep", "String", "rawParameters", "concode_elem_sep", "boolean", "hasArgs", "concode_elem_sep", "HashMap", "<", "String", ",", "String", ">", "params", "concode_elem_sep", "String", "command", "concode_elem_sep", "String", "rawCommand", "concode_field_sep", "String", "[", "]", "getExternalArgs", "concode_elem_sep", "long", "getLong", "concode_elem_sep", "int", "getInt", "concode_elem_sep", "boolean", "hasArguments", "concode_elem_sep", "boolean", "isSet", "concode_elem_sep", "String", "getCommand", "concode_elem_sep", "String", "[", "]", "getExternalCommand", "concode_elem_sep", "String", "toString", "concode_elem_sep", "String", "getString", "concode_elem_sep", "String", "parameters", "concode_elem_sep", "boolean", "getBool", "concode_elem_sep", "void", "parseCommand"]}
{"code": "List < T > function ( Class < T > arg0 ) { List < T > loc0 = new ArrayList < > ( ) ; Node loc1 = jjtGetParent ( ) ; while ( loc1 != null ) { if ( loc1 . getClass ( ) == arg0 ) { loc0 . add ( ( T ) loc1 ) ; } loc1 = loc1 . jjtGetParent ( ) ; } return loc0 ; }", "nl": "traverses up the tree to find all of the parent instances of type parenttype concode_field_sep int endLine concode_elem_sep GenericToken lastToken concode_elem_sep Node parent concode_elem_sep String image concode_elem_sep int endColumn concode_elem_sep Object userData concode_elem_sep GenericToken firstToken concode_elem_sep DataFlowNode dataFlowNode concode_elem_sep Node[] children concode_elem_sep int beginColumn concode_elem_sep int beginLine concode_elem_sep int childIndex concode_elem_sep int id concode_field_sep int jjtGetNumChildren concode_elem_sep void jjtClose concode_elem_sep Node jjtGetChild concode_elem_sep Node getNthParent concode_elem_sep boolean hasDescendantOfType concode_elem_sep int getEndLine concode_elem_sep void jjtSetFirstToken concode_elem_sep List<T> findDescendantsOfType concode_elem_sep void findDescendantsOfType concode_elem_sep void findDescendantsOfType concode_elem_sep T getFirstChildOfType concode_elem_sep GenericToken jjtGetLastToken concode_elem_sep boolean isFindBoundary concode_elem_sep void testingOnlySetEndColumn concode_elem_sep void setDataFlowNode concode_elem_sep DataFlowNode getDataFlowNode concode_elem_sep List<Node> findChildNodesWithXPath concode_elem_sep void jjtSetChildIndex concode_elem_sep int jjtGetChildIndex concode_elem_sep int getEndColumn concode_elem_sep void appendElement concode_elem_sep void testingOnlySetEndLine concode_elem_sep void jjtOpen concode_elem_sep T getFirstParentOfType concode_elem_sep boolean hasDescendantMatchingXPath concode_elem_sep int jjtGetId concode_elem_sep void testingOnlySetBeginLine concode_elem_sep List<T> findChildrenOfType concode_elem_sep GenericToken jjtGetFirstToken concode_elem_sep void jjtSetParent concode_elem_sep boolean hasImageEqualTo concode_elem_sep void testingOnlySetBeginColumn concode_elem_sep Document getAsDocument concode_elem_sep void jjtSetLastToken concode_elem_sep Node jjtGetParent concode_elem_sep int getBeginLine concode_elem_sep void jjtAddChild concode_elem_sep T getFirstDescendantOfType concode_elem_sep T getFirstDescendantOfType concode_elem_sep int getBeginColumn concode_elem_sep boolean isSingleLine concode_elem_sep String toString concode_elem_sep Object getUserData concode_elem_sep String getImage concode_elem_sep boolean hasDecendantOfAnyType concode_elem_sep void setUserData concode_elem_sep void setImage", "code_tokens": ["List", "<", "T", ">", "function", "(", "Class", "<", "T", ">", "arg0", ")", "{", "List", "<", "T", ">", "loc0", "=", "new", "ArrayList", "<", ">", "(", ")", ";", "Node", "loc1", "=", "jjtGetParent", "(", ")", ";", "while", "(", "loc1", "!=", "null", ")", "{", "if", "(", "loc1", ".", "getClass", "(", ")", "==", "arg0", ")", "{", "loc0", ".", "add", "(", "(", "T", ")", "loc1", ")", ";", "}", "loc1", "=", "loc1", ".", "jjtGetParent", "(", ")", ";", "}", "return", "loc0", ";", "}"], "nl_tokens": ["traverses", "up", "the", "tree", "to", "find", "all", "of", "the", "parent", "instances", "of", "type", "parenttype", "concode_field_sep", "int", "endLine", "concode_elem_sep", "GenericToken", "lastToken", "concode_elem_sep", "Node", "parent", "concode_elem_sep", "String", "image", "concode_elem_sep", "int", "endColumn", "concode_elem_sep", "Object", "userData", "concode_elem_sep", "GenericToken", "firstToken", "concode_elem_sep", "DataFlowNode", "dataFlowNode", "concode_elem_sep", "Node", "[", "]", "children", "concode_elem_sep", "int", "beginColumn", "concode_elem_sep", "int", "beginLine", "concode_elem_sep", "int", "childIndex", "concode_elem_sep", "int", "id", "concode_field_sep", "int", "jjtGetNumChildren", "concode_elem_sep", "void", "jjtClose", "concode_elem_sep", "Node", "jjtGetChild", "concode_elem_sep", "Node", "getNthParent", "concode_elem_sep", "boolean", "hasDescendantOfType", "concode_elem_sep", "int", "getEndLine", "concode_elem_sep", "void", "jjtSetFirstToken", "concode_elem_sep", "List", "<", "T", ">", "findDescendantsOfType", "concode_elem_sep", "void", "findDescendantsOfType", "concode_elem_sep", "void", "findDescendantsOfType", "concode_elem_sep", "T", "getFirstChildOfType", "concode_elem_sep", "GenericToken", "jjtGetLastToken", "concode_elem_sep", "boolean", "isFindBoundary", "concode_elem_sep", "void", "testingOnlySetEndColumn", "concode_elem_sep", "void", "setDataFlowNode", "concode_elem_sep", "DataFlowNode", "getDataFlowNode", "concode_elem_sep", "List", "<", "Node", ">", "findChildNodesWithXPath", "concode_elem_sep", "void", "jjtSetChildIndex", "concode_elem_sep", "int", "jjtGetChildIndex", "concode_elem_sep", "int", "getEndColumn", "concode_elem_sep", "void", "appendElement", "concode_elem_sep", "void", "testingOnlySetEndLine", "concode_elem_sep", "void", "jjtOpen", "concode_elem_sep", "T", "getFirstParentOfType", "concode_elem_sep", "boolean", "hasDescendantMatchingXPath", "concode_elem_sep", "int", "jjtGetId", "concode_elem_sep", "void", "testingOnlySetBeginLine", "concode_elem_sep", "List", "<", "T", ">", "findChildrenOfType", "concode_elem_sep", "GenericToken", "jjtGetFirstToken", "concode_elem_sep", "void", "jjtSetParent", "concode_elem_sep", "boolean", "hasImageEqualTo", "concode_elem_sep", "void", "testingOnlySetBeginColumn", "concode_elem_sep", "Document", "getAsDocument", "concode_elem_sep", "void", "jjtSetLastToken", "concode_elem_sep", "Node", "jjtGetParent", "concode_elem_sep", "int", "getBeginLine", "concode_elem_sep", "void", "jjtAddChild", "concode_elem_sep", "T", "getFirstDescendantOfType", "concode_elem_sep", "T", "getFirstDescendantOfType", "concode_elem_sep", "int", "getBeginColumn", "concode_elem_sep", "boolean", "isSingleLine", "concode_elem_sep", "String", "toString", "concode_elem_sep", "Object", "getUserData", "concode_elem_sep", "String", "getImage", "concode_elem_sep", "boolean", "hasDecendantOfAnyType", "concode_elem_sep", "void", "setUserData", "concode_elem_sep", "void", "setImage"]}
{"code": "void function ( List < RegPCLTestResultDetailsEntity > arg0 ) { this . regPclTestResultDetails = arg0 ; }", "nl": "sets the reg pcl test result details . concode_field_sep Timestamp lastModifiedTimeStamp concode_elem_sep Timestamp fetcherStartTimestamp concode_elem_sep Timestamp createTimeStamp concode_elem_sep long serialVersionUID concode_elem_sep BigDecimal batchId concode_elem_sep String errorMsg concode_elem_sep OutcomeType outcomeType concode_elem_sep String createdBy concode_elem_sep BigDecimal feedId concode_elem_sep long testId concode_elem_sep BigDecimal runId concode_elem_sep Timestamp fetcherEndTimeStamp concode_elem_sep List<RegPCLTestResultDetailsEntity> regPclTestResultDetails concode_elem_sep RunStatusType runStatus concode_field_sep void setLastModifiedTimeStamp concode_elem_sep void setFeedId concode_elem_sep void setFetcherStartTimestamp concode_elem_sep OutcomeType getOutcomeType concode_elem_sep void updateLastModifiedTimeStamp concode_elem_sep void updateCreateTimeStamp concode_elem_sep BigDecimal getRunId concode_elem_sep void setBatchId concode_elem_sep List<RegPCLTestResultDetailsEntity> getRegPclTestResultDetails concode_elem_sep void setTestId concode_elem_sep long getTestId concode_elem_sep RegPCLTestResultDetailsEntity removeRegPclTestResultDetail concode_elem_sep void setErrorMsg concode_elem_sep RunStatusType getRunStatus concode_elem_sep RegPCLTestResultDetailsEntity addRegPclTestResultDetail concode_elem_sep String getErrorMsg concode_elem_sep void setRunStatus concode_elem_sep Timestamp getFetcherEndTimeStamp concode_elem_sep Timestamp getLastModifiedTimeStamp concode_elem_sep BigDecimal getFeedId concode_elem_sep void setRunId concode_elem_sep Timestamp getFetcherStartTimestamp concode_elem_sep void setFetcherEndTimeStamp concode_elem_sep void setCreateTimeStamp concode_elem_sep void setCreatedBy concode_elem_sep Timestamp getCreateTimeStamp concode_elem_sep BigDecimal getBatchId concode_elem_sep void setOutcomeType concode_elem_sep String getCreatedBy", "code_tokens": ["void", "function", "(", "List", "<", "RegPCLTestResultDetailsEntity", ">", "arg0", ")", "{", "this", ".", "regPclTestResultDetails", "=", "arg0", ";", "}"], "nl_tokens": ["sets", "the", "reg", "pcl", "test", "result", "details", ".", "concode_field_sep", "Timestamp", "lastModifiedTimeStamp", "concode_elem_sep", "Timestamp", "fetcherStartTimestamp", "concode_elem_sep", "Timestamp", "createTimeStamp", "concode_elem_sep", "long", "serialVersionUID", "concode_elem_sep", "BigDecimal", "batchId", "concode_elem_sep", "String", "errorMsg", "concode_elem_sep", "OutcomeType", "outcomeType", "concode_elem_sep", "String", "createdBy", "concode_elem_sep", "BigDecimal", "feedId", "concode_elem_sep", "long", "testId", "concode_elem_sep", "BigDecimal", "runId", "concode_elem_sep", "Timestamp", "fetcherEndTimeStamp", "concode_elem_sep", "List", "<", "RegPCLTestResultDetailsEntity", ">", "regPclTestResultDetails", "concode_elem_sep", "RunStatusType", "runStatus", "concode_field_sep", "void", "setLastModifiedTimeStamp", "concode_elem_sep", "void", "setFeedId", "concode_elem_sep", "void", "setFetcherStartTimestamp", "concode_elem_sep", "OutcomeType", "getOutcomeType", "concode_elem_sep", "void", "updateLastModifiedTimeStamp", "concode_elem_sep", "void", "updateCreateTimeStamp", "concode_elem_sep", "BigDecimal", "getRunId", "concode_elem_sep", "void", "setBatchId", "concode_elem_sep", "List", "<", "RegPCLTestResultDetailsEntity", ">", "getRegPclTestResultDetails", "concode_elem_sep", "void", "setTestId", "concode_elem_sep", "long", "getTestId", "concode_elem_sep", "RegPCLTestResultDetailsEntity", "removeRegPclTestResultDetail", "concode_elem_sep", "void", "setErrorMsg", "concode_elem_sep", "RunStatusType", "getRunStatus", "concode_elem_sep", "RegPCLTestResultDetailsEntity", "addRegPclTestResultDetail", "concode_elem_sep", "String", "getErrorMsg", "concode_elem_sep", "void", "setRunStatus", "concode_elem_sep", "Timestamp", "getFetcherEndTimeStamp", "concode_elem_sep", "Timestamp", "getLastModifiedTimeStamp", "concode_elem_sep", "BigDecimal", "getFeedId", "concode_elem_sep", "void", "setRunId", "concode_elem_sep", "Timestamp", "getFetcherStartTimestamp", "concode_elem_sep", "void", "setFetcherEndTimeStamp", "concode_elem_sep", "void", "setCreateTimeStamp", "concode_elem_sep", "void", "setCreatedBy", "concode_elem_sep", "Timestamp", "getCreateTimeStamp", "concode_elem_sep", "BigDecimal", "getBatchId", "concode_elem_sep", "void", "setOutcomeType", "concode_elem_sep", "String", "getCreatedBy"]}
{"code": "BoundingBox function ( BoundingBox arg0 ) { latMin = Math . max ( latMin , arg0 . latMin ) ; lonMin = Math . max ( lonMin , arg0 . lonMin ) ; latMax = Math . min ( latMax , arg0 . latMax ) ; lonMax = Math . min ( lonMax , arg0 . lonMax ) ; return this ; }", "nl": "adjusts the box so that the result is the intersection of both boxes . concode_field_sep float lonMax concode_elem_sep float latMin concode_elem_sep float lonMin concode_elem_sep float latMax concode_field_sep float getWestEastDistKM concode_elem_sep float getLatMax concode_elem_sep boolean intersectsWith concode_elem_sep float getNorthSouthDistKM concode_elem_sep void adjust concode_elem_sep float getLatMin concode_elem_sep String toString concode_elem_sep boolean isInside concode_elem_sep float getLonMin concode_elem_sep float getLonMax concode_elem_sep BoundingBox unifyWith", "code_tokens": ["BoundingBox", "function", "(", "BoundingBox", "arg0", ")", "{", "latMin", "=", "Math", ".", "max", "(", "latMin", ",", "arg0", ".", "latMin", ")", ";", "lonMin", "=", "Math", ".", "max", "(", "lonMin", ",", "arg0", ".", "lonMin", ")", ";", "latMax", "=", "Math", ".", "min", "(", "latMax", ",", "arg0", ".", "latMax", ")", ";", "lonMax", "=", "Math", ".", "min", "(", "lonMax", ",", "arg0", ".", "lonMax", ")", ";", "return", "this", ";", "}"], "nl_tokens": ["adjusts", "the", "box", "so", "that", "the", "result", "is", "the", "intersection", "of", "both", "boxes", ".", "concode_field_sep", "float", "lonMax", "concode_elem_sep", "float", "latMin", "concode_elem_sep", "float", "lonMin", "concode_elem_sep", "float", "latMax", "concode_field_sep", "float", "getWestEastDistKM", "concode_elem_sep", "float", "getLatMax", "concode_elem_sep", "boolean", "intersectsWith", "concode_elem_sep", "float", "getNorthSouthDistKM", "concode_elem_sep", "void", "adjust", "concode_elem_sep", "float", "getLatMin", "concode_elem_sep", "String", "toString", "concode_elem_sep", "boolean", "isInside", "concode_elem_sep", "float", "getLonMin", "concode_elem_sep", "float", "getLonMax", "concode_elem_sep", "BoundingBox", "unifyWith"]}
{"code": "void function ( final ProtocolHandler arg0 ) { this . m_readHandler . setProtocolHandler ( arg0 ) ; }", "nl": "sets the protocol handler to use for this connection . concode_field_sep SocketChannel m_socketChannel concode_elem_sep SelectorManager m_selectorManager concode_elem_sep Logger LOG concode_elem_sep List m_closeListeners concode_elem_sep WriteHandlerImpl m_writeHandler concode_elem_sep ReadHandlerImpl m_readHandler concode_elem_sep boolean m_closed concode_field_sep void handleKey concode_elem_sep InetSocketAddress getLocalSocketAddress concode_elem_sep SocketChannel getSocketChannel concode_elem_sep void writeLater concode_elem_sep void writeLater concode_elem_sep void writeLater concode_elem_sep void registerRead concode_elem_sep void notifyCloseListeners concode_elem_sep void addCloseListener concode_elem_sep boolean isClosed concode_elem_sep int hashCode concode_elem_sep boolean equals concode_elem_sep String toString concode_elem_sep void close concode_elem_sep void write concode_elem_sep void write concode_elem_sep void write concode_elem_sep InetSocketAddress getRemoteSocketAddress", "code_tokens": ["void", "function", "(", "final", "ProtocolHandler", "arg0", ")", "{", "this", ".", "m_readHandler", ".", "setProtocolHandler", "(", "arg0", ")", ";", "}"], "nl_tokens": ["sets", "the", "protocol", "handler", "to", "use", "for", "this", "connection", ".", "concode_field_sep", "SocketChannel", "m_socketChannel", "concode_elem_sep", "SelectorManager", "m_selectorManager", "concode_elem_sep", "Logger", "LOG", "concode_elem_sep", "List", "m_closeListeners", "concode_elem_sep", "WriteHandlerImpl", "m_writeHandler", "concode_elem_sep", "ReadHandlerImpl", "m_readHandler", "concode_elem_sep", "boolean", "m_closed", "concode_field_sep", "void", "handleKey", "concode_elem_sep", "InetSocketAddress", "getLocalSocketAddress", "concode_elem_sep", "SocketChannel", "getSocketChannel", "concode_elem_sep", "void", "writeLater", "concode_elem_sep", "void", "writeLater", "concode_elem_sep", "void", "writeLater", "concode_elem_sep", "void", "registerRead", "concode_elem_sep", "void", "notifyCloseListeners", "concode_elem_sep", "void", "addCloseListener", "concode_elem_sep", "boolean", "isClosed", "concode_elem_sep", "int", "hashCode", "concode_elem_sep", "boolean", "equals", "concode_elem_sep", "String", "toString", "concode_elem_sep", "void", "close", "concode_elem_sep", "void", "write", "concode_elem_sep", "void", "write", "concode_elem_sep", "void", "write", "concode_elem_sep", "InetSocketAddress", "getRemoteSocketAddress"]}
{"code": "int function ( ) { return mix ( gen . getAndIncrement ( ) ) ; }", "nl": "produce the next identifier . concode_field_sep int salt concode_elem_sep AtomicInteger gen concode_field_sep int result concode_elem_sep short hi16 concode_elem_sep int unmix concode_elem_sep String format concode_elem_sep short lo16 concode_elem_sep int mix concode_elem_sep int mix", "code_tokens": ["int", "function", "(", ")", "{", "return", "mix", "(", "gen", ".", "getAndIncrement", "(", ")", ")", ";", "}"], "nl_tokens": ["produce", "the", "next", "identifier", ".", "concode_field_sep", "int", "salt", "concode_elem_sep", "AtomicInteger", "gen", "concode_field_sep", "int", "result", "concode_elem_sep", "short", "hi16", "concode_elem_sep", "int", "unmix", "concode_elem_sep", "String", "format", "concode_elem_sep", "short", "lo16", "concode_elem_sep", "int", "mix", "concode_elem_sep", "int", "mix"]}
{"code": "Site function ( String arg0 ) { log . debug ( \"srini_string\" , arg0 ) ; Site loc0 = siteRepository . findOne ( arg0 ) ; return loc0 ; }", "nl": "get one site by id . concode_field_sep SiteRepository siteRepository concode_elem_sep Logger log concode_field_sep Site save concode_elem_sep Site findOneByHost concode_elem_sep Page<Site> findAll concode_elem_sep void delete concode_elem_sep Site getWebNauAn", "code_tokens": ["Site", "function", "(", "String", "arg0", ")", "{", "log", ".", "debug", "(", "\"srini_string\"", ",", "arg0", ")", ";", "Site", "loc0", "=", "siteRepository", ".", "findOne", "(", "arg0", ")", ";", "return", "loc0", ";", "}"], "nl_tokens": ["get", "one", "site", "by", "id", ".", "concode_field_sep", "SiteRepository", "siteRepository", "concode_elem_sep", "Logger", "log", "concode_field_sep", "Site", "save", "concode_elem_sep", "Site", "findOneByHost", "concode_elem_sep", "Page", "<", "Site", ">", "findAll", "concode_elem_sep", "void", "delete", "concode_elem_sep", "Site", "getWebNauAn"]}
{"code": "DeterministicKey function ( ) { if ( ! hasPrivate ( ) ) return this ; final DeterministicKey loc0 = getParent ( ) == null ? null : getParent ( ) . getPubOnly ( ) ; return new DeterministicKey ( getChildNumberPath ( ) , getChainCode ( ) , getPubPoint ( ) , null , loc0 ) ; }", "nl": "returns the same key with the private part removed . may return the same instance . concode_field_sep Joiner PATH_JOINER concode_elem_sep DeterministicKey parent concode_elem_sep ImmutableList<ChildNumber> childNumberPath concode_elem_sep byte[] chainCode concode_elem_sep ECPoint publicAsPoint concode_elem_sep long serialVersionUID concode_elem_sep BigInteger privateAsFieldElement concode_field_sep DeterministicKey getParent concode_elem_sep int getDepth concode_elem_sep ECPoint getPubPoint concode_elem_sep String serializePrivB58 concode_elem_sep String toBase58 concode_elem_sep String serializePubB58 concode_elem_sep byte[] serializePublic concode_elem_sep byte[] getPrivKeyBytes33 concode_elem_sep boolean hasPrivate concode_elem_sep byte[] addChecksum concode_elem_sep byte[] getChainCode concode_elem_sep ECKey toECKey concode_elem_sep byte[] serialize concode_elem_sep byte[] serializePrivate concode_elem_sep ChildNumber getChildNumber concode_elem_sep byte[] getIdentifier concode_elem_sep String getPath concode_elem_sep BigInteger getPrivAsFieldElement concode_elem_sep byte[] getPubKeyBytes concode_elem_sep String toString concode_elem_sep byte[] getFingerprint concode_elem_sep ImmutableList<ChildNumber> getChildNumberPath concode_elem_sep byte[] getPrivKeyBytes", "code_tokens": ["DeterministicKey", "function", "(", ")", "{", "if", "(", "!", "hasPrivate", "(", ")", ")", "return", "this", ";", "final", "DeterministicKey", "loc0", "=", "getParent", "(", ")", "==", "null", "?", "null", ":", "getParent", "(", ")", ".", "getPubOnly", "(", ")", ";", "return", "new", "DeterministicKey", "(", "getChildNumberPath", "(", ")", ",", "getChainCode", "(", ")", ",", "getPubPoint", "(", ")", ",", "null", ",", "loc0", ")", ";", "}"], "nl_tokens": ["returns", "the", "same", "key", "with", "the", "private", "part", "removed", ".", "may", "return", "the", "same", "instance", ".", "concode_field_sep", "Joiner", "PATH_JOINER", "concode_elem_sep", "DeterministicKey", "parent", "concode_elem_sep", "ImmutableList", "<", "ChildNumber", ">", "childNumberPath", "concode_elem_sep", "byte", "[", "]", "chainCode", "concode_elem_sep", "ECPoint", "publicAsPoint", "concode_elem_sep", "long", "serialVersionUID", "concode_elem_sep", "BigInteger", "privateAsFieldElement", "concode_field_sep", "DeterministicKey", "getParent", "concode_elem_sep", "int", "getDepth", "concode_elem_sep", "ECPoint", "getPubPoint", "concode_elem_sep", "String", "serializePrivB58", "concode_elem_sep", "String", "toBase58", "concode_elem_sep", "String", "serializePubB58", "concode_elem_sep", "byte", "[", "]", "serializePublic", "concode_elem_sep", "byte", "[", "]", "getPrivKeyBytes33", "concode_elem_sep", "boolean", "hasPrivate", "concode_elem_sep", "byte", "[", "]", "addChecksum", "concode_elem_sep", "byte", "[", "]", "getChainCode", "concode_elem_sep", "ECKey", "toECKey", "concode_elem_sep", "byte", "[", "]", "serialize", "concode_elem_sep", "byte", "[", "]", "serializePrivate", "concode_elem_sep", "ChildNumber", "getChildNumber", "concode_elem_sep", "byte", "[", "]", "getIdentifier", "concode_elem_sep", "String", "getPath", "concode_elem_sep", "BigInteger", "getPrivAsFieldElement", "concode_elem_sep", "byte", "[", "]", "getPubKeyBytes", "concode_elem_sep", "String", "toString", "concode_elem_sep", "byte", "[", "]", "getFingerprint", "concode_elem_sep", "ImmutableList", "<", "ChildNumber", ">", "getChildNumberPath", "concode_elem_sep", "byte", "[", "]", "getPrivKeyBytes"]}
{"code": "void function ( ) { final double loc0 = 359.9 ; hdg . setHeading ( loc0 ) ; assertEquals ( loc0 , hdg . getHeading ( ) , 0.1 ) ; }", "nl": "test method for net.sf.marineapi.nmea.parser.hdgparser #setheading double . concode_field_sep HDGSentence hdg concode_elem_sep String EXAMPLE concode_field_sep void testSetDeviationTooHigh concode_elem_sep void testSetHeadingTooHigh concode_elem_sep void testIsTrue concode_elem_sep void testHDGParserTalkerId concode_elem_sep void testSetVariationWest concode_elem_sep void testConstructor concode_elem_sep void testSetVariationTooLow concode_elem_sep void testGetVariation concode_elem_sep void testSetVariationTooHigh concode_elem_sep void testSetVariationEast concode_elem_sep void testGetDeviation concode_elem_sep void testSetDeviationTooLow concode_elem_sep void setUp concode_elem_sep void testGetHeading concode_elem_sep void testSetDeviationEast concode_elem_sep void testHDGParserString concode_elem_sep void testSetDeviationWest concode_elem_sep void testSetHeadingTooLow", "code_tokens": ["void", "function", "(", ")", "{", "final", "double", "loc0", "=", "359.9", ";", "hdg", ".", "setHeading", "(", "loc0", ")", ";", "assertEquals", "(", "loc0", ",", "hdg", ".", "getHeading", "(", ")", ",", "0.1", ")", ";", "}"], "nl_tokens": ["test", "method", "for", "net", ".", "sf", ".", "marineapi", ".", "nmea", ".", "parser", ".", "hdgparser", "#setheading double . concode_field_sep HDGSentence hdg concode_elem_sep String EXAMPLE concode_field_sep void testSetDeviationTooHigh concode_elem_sep void testSetHeadingTooHigh concode_elem_sep void testIsTrue concode_elem_sep void testHDGParserTalkerId concode_elem_sep void testSetVariationWest concode_elem_sep void testConstructor concode_elem_sep void testSetVariationTooLow concode_elem_sep void testGetVariation concode_elem_sep void testSetVariationTooHigh concode_elem_sep void testSetVariationEast concode_elem_sep void testGetDeviation concode_elem_sep void testSetDeviationTooLow concode_elem_sep void setUp concode_elem_sep void testGetHeading concode_elem_sep void testSetDeviationEast concode_elem_sep void testHDGParserString concode_elem_sep void testSetDeviationWest concode_elem_sep void testSetHeadingTooLow"]}
{"code": "boolean function ( Class < ? > arg0 ) { return WRAPPER_TO_PRIMITIVE_TYPE . containsKey ( checkNotNull ( arg0 ) ) ; }", "nl": "returns true if type is one of the nine primitive-wrapper types , such as integer . concode_field_sep Map<Class<?>,Class<?>> PRIMITIVE_TO_WRAPPER_TYPE concode_elem_sep Map<Class<?>,Class<?>> WRAPPER_TO_PRIMITIVE_TYPE concode_field_sep void add concode_elem_sep Set<Class<?>> allWrapperTypes concode_elem_sep Set<Class<?>> allPrimitiveTypes concode_elem_sep Class<T> wrap concode_elem_sep Class<T> unwrap", "code_tokens": ["boolean", "function", "(", "Class", "<", "?", ">", "arg0", ")", "{", "return", "WRAPPER_TO_PRIMITIVE_TYPE", ".", "containsKey", "(", "checkNotNull", "(", "arg0", ")", ")", ";", "}"], "nl_tokens": ["returns", "true", "if", "type", "is", "one", "of", "the", "nine", "primitive", "-", "wrapper", "types", ",", "such", "as", "integer", ".", "concode_field_sep", "Map", "<", "Class", "<", "?", ">", ",", "Class", "<", "?", ">>", "PRIMITIVE_TO_WRAPPER_TYPE", "concode_elem_sep", "Map", "<", "Class", "<", "?", ">", ",", "Class", "<", "?", ">>", "WRAPPER_TO_PRIMITIVE_TYPE", "concode_field_sep", "void", "add", "concode_elem_sep", "Set", "<", "Class", "<", "?", ">>", "allWrapperTypes", "concode_elem_sep", "Set", "<", "Class", "<", "?", ">>", "allPrimitiveTypes", "concode_elem_sep", "Class", "<", "T", ">", "wrap", "concode_elem_sep", "Class", "<", "T", ">", "unwrap"]}
{"code": "void function ( ) { md5Cache . clear ( ) ; }", "nl": "clean the md5 cache concode_field_sep Map<String,byte[]> md5Cache concode_elem_sep byte[] b concode_elem_sep BlockingQueue<filechunk> filed concode_elem_sep filechunk poison concode_elem_sep Queue<MessageDigest> digestPool concode_elem_sep MessageDigest digest concode_elem_sep int n concode_elem_sep BlockingQueue<filechunk> empty concode_field_sep MessageDigest call concode_elem_sep byte[] longToBytes concode_elem_sep String encodeHex concode_elem_sep String encodeHex concode_elem_sep byte[] encodeMD5Raw concode_elem_sep byte[] encodeMD5Raw concode_elem_sep byte[] encodeMD5Raw concode_elem_sep String encodeOctal concode_elem_sep String encodeMD5Hex concode_elem_sep String encodeMD5Hex concode_elem_sep String encodeMD5Hex concode_elem_sep byte[] decodeHex concode_elem_sep byte[] fastFingerprintRaw concode_elem_sep void consume concode_elem_sep String fastFingerprintHex concode_elem_sep filechunk nextFree", "code_tokens": ["void", "function", "(", ")", "{", "md5Cache", ".", "clear", "(", ")", ";", "}"], "nl_tokens": ["clean", "the", "md5", "cache", "concode_field_sep", "Map", "<", "String", ",", "byte", "[", "]", ">", "md5Cache", "concode_elem_sep", "byte", "[", "]", "b", "concode_elem_sep", "BlockingQueue", "<", "filechunk", ">", "filed", "concode_elem_sep", "filechunk", "poison", "concode_elem_sep", "Queue", "<", "MessageDigest", ">", "digestPool", "concode_elem_sep", "MessageDigest", "digest", "concode_elem_sep", "int", "n", "concode_elem_sep", "BlockingQueue", "<", "filechunk", ">", "empty", "concode_field_sep", "MessageDigest", "call", "concode_elem_sep", "byte", "[", "]", "longToBytes", "concode_elem_sep", "String", "encodeHex", "concode_elem_sep", "String", "encodeHex", "concode_elem_sep", "byte", "[", "]", "encodeMD5Raw", "concode_elem_sep", "byte", "[", "]", "encodeMD5Raw", "concode_elem_sep", "byte", "[", "]", "encodeMD5Raw", "concode_elem_sep", "String", "encodeOctal", "concode_elem_sep", "String", "encodeMD5Hex", "concode_elem_sep", "String", "encodeMD5Hex", "concode_elem_sep", "String", "encodeMD5Hex", "concode_elem_sep", "byte", "[", "]", "decodeHex", "concode_elem_sep", "byte", "[", "]", "fastFingerprintRaw", "concode_elem_sep", "void", "consume", "concode_elem_sep", "String", "fastFingerprintHex", "concode_elem_sep", "filechunk", "nextFree"]}
{"code": "void function ( ) { String loc0 = WebUtils . convertMsToClockTime ( TimeUnit . HOURS . toMillis ( 1 ) ) ; Assert . assertEquals ( \"srini_string\" , loc0 ) ; }", "nl": "tests the webutils #convertmstoclocktime long method with one hour . concode_field_sep PlaceHolder placeHolder concode_field_sep void convertToClockTimeWithOneMinute30Seconds concode_elem_sep void convertToClockTimeWithOneDay4Hours10Minutes45SecondsWithStopwatch concode_elem_sep void convertToClockTimeWithNegativeValue concode_elem_sep void convertToClockTimeWithShortValue concode_elem_sep void convertToClockTimeWithOneDay4Hours10Minutes45Seconds concode_elem_sep void convertToClockTimeWithOneHour10Minutes45Seconds concode_elem_sep void convertToClockTimeWithOneMinute concode_elem_sep void convertToClockTimeWithOneSecond concode_elem_sep void convertToClockTimeWithOneDay", "code_tokens": ["void", "function", "(", ")", "{", "String", "loc0", "=", "WebUtils", ".", "convertMsToClockTime", "(", "TimeUnit", ".", "HOURS", ".", "toMillis", "(", "1", ")", ")", ";", "Assert", ".", "assertEquals", "(", "\"srini_string\"", ",", "loc0", ")", ";", "}"], "nl_tokens": ["tests", "the", "webutils", "#convertmstoclocktime long method with one hour . concode_field_sep PlaceHolder placeHolder concode_field_sep void convertToClockTimeWithOneMinute30Seconds concode_elem_sep void convertToClockTimeWithOneDay4Hours10Minutes45SecondsWithStopwatch concode_elem_sep void convertToClockTimeWithNegativeValue concode_elem_sep void convertToClockTimeWithShortValue concode_elem_sep void convertToClockTimeWithOneDay4Hours10Minutes45Seconds concode_elem_sep void convertToClockTimeWithOneHour10Minutes45Seconds concode_elem_sep void convertToClockTimeWithOneMinute concode_elem_sep void convertToClockTimeWithOneSecond concode_elem_sep void convertToClockTimeWithOneDay"]}
{"code": "BufferedByteWriter function ( byte [ ] arg0 ) { ensureCapacity ( 2 + arg0 . length ) ; mWriter . putShort ( ( short ) arg0 . length ) ; mWriter . put ( arg0 ) ; return this ; }", "nl": "write the 16-bit length of the given data followed by the data itself concode_field_sep ByteBuffer mWriter concode_elem_sep byte[] mBuffer concode_field_sep BufferedByteWriter put24 concode_elem_sep BufferedByteWriter put24 concode_elem_sep BufferedByteWriter put24 concode_elem_sep BufferedByteWriter putLen8 concode_elem_sep BufferedByteWriter put16 concode_elem_sep BufferedByteWriter put16 concode_elem_sep byte[] toByteArray concode_elem_sep void ensureCapacity concode_elem_sep BufferedByteWriter put64 concode_elem_sep BufferedByteWriter put64 concode_elem_sep BufferedByteWriter put64 concode_elem_sep BufferedByteWriter put64 concode_elem_sep BufferedByteWriter put concode_elem_sep BufferedByteWriter put concode_elem_sep BufferedByteWriter put32 concode_elem_sep BufferedByteWriter put32 concode_elem_sep BufferedByteWriter put32", "code_tokens": ["BufferedByteWriter", "function", "(", "byte", "[", "]", "arg0", ")", "{", "ensureCapacity", "(", "2", "+", "arg0", ".", "length", ")", ";", "mWriter", ".", "putShort", "(", "(", "short", ")", "arg0", ".", "length", ")", ";", "mWriter", ".", "put", "(", "arg0", ")", ";", "return", "this", ";", "}"], "nl_tokens": ["write", "the", "16", "-", "bit", "length", "of", "the", "given", "data", "followed", "by", "the", "data", "itself", "concode_field_sep", "ByteBuffer", "mWriter", "concode_elem_sep", "byte", "[", "]", "mBuffer", "concode_field_sep", "BufferedByteWriter", "put24", "concode_elem_sep", "BufferedByteWriter", "put24", "concode_elem_sep", "BufferedByteWriter", "put24", "concode_elem_sep", "BufferedByteWriter", "putLen8", "concode_elem_sep", "BufferedByteWriter", "put16", "concode_elem_sep", "BufferedByteWriter", "put16", "concode_elem_sep", "byte", "[", "]", "toByteArray", "concode_elem_sep", "void", "ensureCapacity", "concode_elem_sep", "BufferedByteWriter", "put64", "concode_elem_sep", "BufferedByteWriter", "put64", "concode_elem_sep", "BufferedByteWriter", "put64", "concode_elem_sep", "BufferedByteWriter", "put64", "concode_elem_sep", "BufferedByteWriter", "put", "concode_elem_sep", "BufferedByteWriter", "put", "concode_elem_sep", "BufferedByteWriter", "put32", "concode_elem_sep", "BufferedByteWriter", "put32", "concode_elem_sep", "BufferedByteWriter", "put32"]}
{"code": "List < Role > function ( ) { if ( roles == null ) { roles = new ArrayList < Role > ( ) ; } return this . roles ; }", "nl": "gets the value of the roles property . this accessor method returns a reference to the live list , not a snapshot . therefore any modification you make to the returned list will be present inside the jaxb object . this is why there is not a set method for the roles property . for example , to add a new item , do as follows : getroles . add newitem ; objects of the following type s are allowed in the list role concode_field_sep List<Role> roles concode_elem_sep String name concode_elem_sep String id concode_elem_sep byte[] secret concode_field_sep void setName concode_elem_sep String getName concode_elem_sep byte[] getSecret concode_elem_sep void setSecret concode_elem_sep void setId concode_elem_sep String getId", "code_tokens": ["List", "<", "Role", ">", "function", "(", ")", "{", "if", "(", "roles", "==", "null", ")", "{", "roles", "=", "new", "ArrayList", "<", "Role", ">", "(", ")", ";", "}", "return", "this", ".", "roles", ";", "}"], "nl_tokens": ["gets", "the", "value", "of", "the", "roles", "property", ".", "this", "accessor", "method", "returns", "a", "reference", "to", "the", "live", "list", ",", "not", "a", "snapshot", ".", "therefore", "any", "modification", "you", "make", "to", "the", "returned", "list", "will", "be", "present", "inside", "the", "jaxb", "object", ".", "this", "is", "why", "there", "is", "not", "a", "set", "method", "for", "the", "roles", "property", ".", "for", "example", ",", "to", "add", "a", "new", "item", ",", "do", "as", "follows", ":", "getroles", ".", "add", "newitem", ";", "objects", "of", "the", "following", "type", "s", "are", "allowed", "in", "the", "list", "role", "concode_field_sep", "List", "<", "Role", ">", "roles", "concode_elem_sep", "String", "name", "concode_elem_sep", "String", "id", "concode_elem_sep", "byte", "[", "]", "secret", "concode_field_sep", "void", "setName", "concode_elem_sep", "String", "getName", "concode_elem_sep", "byte", "[", "]", "getSecret", "concode_elem_sep", "void", "setSecret", "concode_elem_sep", "void", "setId", "concode_elem_sep", "String", "getId"]}
{"code": "boolean function ( symbol arg0 ) { return _all . containsKey ( arg0 . name ( ) ) ; }", "nl": "determine if the set contains a particular symbol . concode_field_sep HashMap<String,symbol> _all concode_field_sep boolean add concode_elem_sep boolean add concode_elem_sep Iterator<symbol> iterator concode_elem_sep int size concode_elem_sep void not_null concode_elem_sep int hashCode concode_elem_sep boolean is_superset_of concode_elem_sep boolean equals concode_elem_sep boolean equals concode_elem_sep boolean is_subset_of concode_elem_sep String toString concode_elem_sep void remove concode_elem_sep void remove", "code_tokens": ["boolean", "function", "(", "symbol", "arg0", ")", "{", "return", "_all", ".", "containsKey", "(", "arg0", ".", "name", "(", ")", ")", ";", "}"], "nl_tokens": ["determine", "if", "the", "set", "contains", "a", "particular", "symbol", ".", "concode_field_sep", "HashMap", "<", "String", ",", "symbol", ">", "_all", "concode_field_sep", "boolean", "add", "concode_elem_sep", "boolean", "add", "concode_elem_sep", "Iterator", "<", "symbol", ">", "iterator", "concode_elem_sep", "int", "size", "concode_elem_sep", "void", "not_null", "concode_elem_sep", "int", "hashCode", "concode_elem_sep", "boolean", "is_superset_of", "concode_elem_sep", "boolean", "equals", "concode_elem_sep", "boolean", "equals", "concode_elem_sep", "boolean", "is_subset_of", "concode_elem_sep", "String", "toString", "concode_elem_sep", "void", "remove", "concode_elem_sep", "void", "remove"]}
{"code": "boolean function ( long arg0 ) { synchronized ( mLock ) { return mPersistedFiles . contains ( arg0 ) ; } }", "nl": "checks if the given file is being persisted . concode_field_sep Set<Long> mPersistedFiles concode_elem_sep Object mLock concode_elem_sep UnderFileSystem mUfs concode_elem_sep BlockWorker mBlockWorker concode_elem_sep RateLimiter mPersistenceRateLimiter concode_elem_sep Map<Long,Map<Long,Long>> mPersistingInProgressFiles concode_elem_sep Logger LOG concode_field_sep String prepareUfsFilePath concode_elem_sep void clearPersistedFiles concode_elem_sep boolean fileExistsInUfs concode_elem_sep boolean needPersistence concode_elem_sep void persistFile concode_elem_sep void addPersistedFile concode_elem_sep boolean isFilePersisted concode_elem_sep void lockBlocks concode_elem_sep List<Long> getPersistedFiles", "code_tokens": ["boolean", "function", "(", "long", "arg0", ")", "{", "synchronized", "(", "mLock", ")", "{", "return", "mPersistedFiles", ".", "contains", "(", "arg0", ")", ";", "}", "}"], "nl_tokens": ["checks", "if", "the", "given", "file", "is", "being", "persisted", ".", "concode_field_sep", "Set", "<", "Long", ">", "mPersistedFiles", "concode_elem_sep", "Object", "mLock", "concode_elem_sep", "UnderFileSystem", "mUfs", "concode_elem_sep", "BlockWorker", "mBlockWorker", "concode_elem_sep", "RateLimiter", "mPersistenceRateLimiter", "concode_elem_sep", "Map", "<", "Long", ",", "Map", "<", "Long", ",", "Long", ">>", "mPersistingInProgressFiles", "concode_elem_sep", "Logger", "LOG", "concode_field_sep", "String", "prepareUfsFilePath", "concode_elem_sep", "void", "clearPersistedFiles", "concode_elem_sep", "boolean", "fileExistsInUfs", "concode_elem_sep", "boolean", "needPersistence", "concode_elem_sep", "void", "persistFile", "concode_elem_sep", "void", "addPersistedFile", "concode_elem_sep", "boolean", "isFilePersisted", "concode_elem_sep", "void", "lockBlocks", "concode_elem_sep", "List", "<", "Long", ">", "getPersistedFiles"]}
{"code": "boolean function ( StringBuilder arg0 , String arg1 , String arg2 ) { String loc0 = HTTPTransportUtils . getRawQueryStringParameter ( arg1 , arg2 ) ; if ( loc0 == null ) { return false ; } if ( arg0 . length ( ) > 0 ) { arg0 . append ( '&' ) ; } arg0 . append ( loc0 ) ; return true ; }", "nl": "find the raw query string parameter indicated and append it to the string builder . the appended value will be in the form ` paramname = paramvalue ' minus the quotes . concode_field_sep Log log concode_field_sep boolean validateSignature concode_elem_sep void init concode_elem_sep String buildSignedContentString concode_elem_sep byte[] getSignedContent concode_elem_sep CriteriaSet buildCriteriaSet concode_elem_sep byte[] getSignature concode_elem_sep String getSigAlg", "code_tokens": ["boolean", "function", "(", "StringBuilder", "arg0", ",", "String", "arg1", ",", "String", "arg2", ")", "{", "String", "loc0", "=", "HTTPTransportUtils", ".", "getRawQueryStringParameter", "(", "arg1", ",", "arg2", ")", ";", "if", "(", "loc0", "==", "null", ")", "{", "return", "false", ";", "}", "if", "(", "arg0", ".", "length", "(", ")", ">", "0", ")", "{", "arg0", ".", "append", "(", "'&'", ")", ";", "}", "arg0", ".", "append", "(", "loc0", ")", ";", "return", "true", ";", "}"], "nl_tokens": ["find", "the", "raw", "query", "string", "parameter", "indicated", "and", "append", "it", "to", "the", "string", "builder", ".", "the", "appended", "value", "will", "be", "in", "the", "form", "`", "paramname", "=", "paramvalue", "'", "minus", "the", "quotes", ".", "concode_field_sep", "Log", "log", "concode_field_sep", "boolean", "validateSignature", "concode_elem_sep", "void", "init", "concode_elem_sep", "String", "buildSignedContentString", "concode_elem_sep", "byte", "[", "]", "getSignedContent", "concode_elem_sep", "CriteriaSet", "buildCriteriaSet", "concode_elem_sep", "byte", "[", "]", "getSignature", "concode_elem_sep", "String", "getSigAlg"]}
{"code": "ApplicationManagementService function ( ) { return ApplicationManagementServiceImpl . getInstance ( ) ; }", "nl": "get applicationmanagementservice instance . concode_field_sep PlaceHolder placeHolder concode_field_sep String[] getAllLocalClaimUris concode_elem_sep RequestPathAuthenticatorConfig[] getAllRequestPathAuthenticators concode_elem_sep List<String> getAllRequestedClaimsByServiceProvider concode_elem_sep IdentityProvider[] getAllIdentityProviders concode_elem_sep ServiceProvider getServiceProvider concode_elem_sep void updateApplication concode_elem_sep Map<String,String> getServiceProviderToLocalIdPClaimMapping concode_elem_sep LocalAuthenticatorConfig[] getAllLocalAuthenticators concode_elem_sep String getServiceProviderNameByClientId concode_elem_sep ServiceProvider getApplicationExcludingFileBasedSPs concode_elem_sep void createApplication concode_elem_sep Map<String,String> getLocalIdPToServiceProviderClaimMapping concode_elem_sep ServiceProvider getServiceProviderByClientId concode_elem_sep ApplicationBasicInfo[] getAllApplicationBasicInfo concode_elem_sep IdentityProvider getIdentityProvider concode_elem_sep String getServiceProviderNameByClientIdExcludingFileBasedSPs concode_elem_sep void deleteApplication", "code_tokens": ["ApplicationManagementService", "function", "(", ")", "{", "return", "ApplicationManagementServiceImpl", ".", "getInstance", "(", ")", ";", "}"], "nl_tokens": ["get", "applicationmanagementservice", "instance", ".", "concode_field_sep", "PlaceHolder", "placeHolder", "concode_field_sep", "String", "[", "]", "getAllLocalClaimUris", "concode_elem_sep", "RequestPathAuthenticatorConfig", "[", "]", "getAllRequestPathAuthenticators", "concode_elem_sep", "List", "<", "String", ">", "getAllRequestedClaimsByServiceProvider", "concode_elem_sep", "IdentityProvider", "[", "]", "getAllIdentityProviders", "concode_elem_sep", "ServiceProvider", "getServiceProvider", "concode_elem_sep", "void", "updateApplication", "concode_elem_sep", "Map", "<", "String", ",", "String", ">", "getServiceProviderToLocalIdPClaimMapping", "concode_elem_sep", "LocalAuthenticatorConfig", "[", "]", "getAllLocalAuthenticators", "concode_elem_sep", "String", "getServiceProviderNameByClientId", "concode_elem_sep", "ServiceProvider", "getApplicationExcludingFileBasedSPs", "concode_elem_sep", "void", "createApplication", "concode_elem_sep", "Map", "<", "String", ",", "String", ">", "getLocalIdPToServiceProviderClaimMapping", "concode_elem_sep", "ServiceProvider", "getServiceProviderByClientId", "concode_elem_sep", "ApplicationBasicInfo", "[", "]", "getAllApplicationBasicInfo", "concode_elem_sep", "IdentityProvider", "getIdentityProvider", "concode_elem_sep", "String", "getServiceProviderNameByClientIdExcludingFileBasedSPs", "concode_elem_sep", "void", "deleteApplication"]}
{"code": "String function ( String arg0 ) { if ( arg0 == null ) throw new NullPointerException ( ) ; return DAVRepository . class . getName ( ) + \"srini_string\" + arg0 ; }", "nl": "retrieve the key in the servletcontext where the instance ofthe davrepository associated with a named davservlet can be found . concode_field_sep DAVProcessor processor concode_elem_sep ServletContext context concode_elem_sep DAVLogger logger concode_elem_sep DAVRepository repository concode_elem_sep ServletConfig config concode_field_sep void init concode_elem_sep ServletConfig getServletConfig concode_elem_sep ServletContext getServletContext concode_elem_sep void service concode_elem_sep void destroy concode_elem_sep String getServletInfo concode_elem_sep void notify", "code_tokens": ["String", "function", "(", "String", "arg0", ")", "{", "if", "(", "arg0", "==", "null", ")", "throw", "new", "NullPointerException", "(", ")", ";", "return", "DAVRepository", ".", "class", ".", "getName", "(", ")", "+", "\"srini_string\"", "+", "arg0", ";", "}"], "nl_tokens": ["retrieve", "the", "key", "in", "the", "servletcontext", "where", "the", "instance", "ofthe", "davrepository", "associated", "with", "a", "named", "davservlet", "can", "be", "found", ".", "concode_field_sep", "DAVProcessor", "processor", "concode_elem_sep", "ServletContext", "context", "concode_elem_sep", "DAVLogger", "logger", "concode_elem_sep", "DAVRepository", "repository", "concode_elem_sep", "ServletConfig", "config", "concode_field_sep", "void", "init", "concode_elem_sep", "ServletConfig", "getServletConfig", "concode_elem_sep", "ServletContext", "getServletContext", "concode_elem_sep", "void", "service", "concode_elem_sep", "void", "destroy", "concode_elem_sep", "String", "getServletInfo", "concode_elem_sep", "void", "notify"]}
{"code": "String function ( ) { return signatureUsername ; }", "nl": "get the username/alias to use to sign any issued tokens concode_field_sep Object encryptionCryptoProperties concode_elem_sep Bus bus concode_elem_sep Crypto signatureCrypto concode_elem_sep SignatureProperties signatureProperties concode_elem_sep Logger LOG concode_elem_sep String issuer concode_elem_sep EncryptionProperties encryptionProperties concode_elem_sep CallbackHandler callbackHandler concode_elem_sep List<Relationship> relationships concode_elem_sep boolean validateUseKey concode_elem_sep RelationshipResolver relationshipResolver concode_elem_sep String callbackHandlerClass concode_elem_sep String signatureUsername concode_elem_sep Crypto encryptionCrypto concode_elem_sep SAMLRealmCodec samlRealmCodec concode_elem_sep String encryptionUsername concode_elem_sep Object signatureCryptoProperties concode_elem_sep IdentityMapper identityMapper concode_elem_sep RealmParser realmParser concode_field_sep RelationshipResolver getRelationshipResolver concode_elem_sep Bus getBus concode_elem_sep void setSamlRealmCodec concode_elem_sep ResourceManager getResourceManager concode_elem_sep void setSignaturePropertiesFile concode_elem_sep void setCallbackHandler concode_elem_sep void setEncryptionProperties concode_elem_sep EncryptionProperties getEncryptionProperties concode_elem_sep boolean isValidateUseKey concode_elem_sep void setSignatureUsername concode_elem_sep List<Relationship> getRelationships concode_elem_sep SAMLRealmCodec getSamlRealmCodec concode_elem_sep String getEncryptionUsername concode_elem_sep void setIdentityMapper concode_elem_sep void setEncryptionPropertiesFile concode_elem_sep void setEncryptionUsername concode_elem_sep void setCallbackHandlerClass concode_elem_sep Crypto getEncryptionCrypto concode_elem_sep void setRelationships concode_elem_sep SignatureProperties getSignatureProperties concode_elem_sep void setSignatureProperties concode_elem_sep void setRealmParser concode_elem_sep String getIssuer concode_elem_sep void setSignatureCryptoProperties concode_elem_sep void setSignatureCrypto concode_elem_sep IdentityMapper getIdentityMapper concode_elem_sep void setValidateUseKey concode_elem_sep void configureProperties concode_elem_sep void setEncryptionCrypto concode_elem_sep RealmParser getRealmParser concode_elem_sep Crypto getSignatureCrypto concode_elem_sep void setIssuer concode_elem_sep CallbackHandler getCallbackHandler concode_elem_sep void setEncryptionCryptoProperties concode_elem_sep void setBus", "code_tokens": ["String", "function", "(", ")", "{", "return", "signatureUsername", ";", "}"], "nl_tokens": ["get", "the", "username", "/", "alias", "to", "use", "to", "sign", "any", "issued", "tokens", "concode_field_sep", "Object", "encryptionCryptoProperties", "concode_elem_sep", "Bus", "bus", "concode_elem_sep", "Crypto", "signatureCrypto", "concode_elem_sep", "SignatureProperties", "signatureProperties", "concode_elem_sep", "Logger", "LOG", "concode_elem_sep", "String", "issuer", "concode_elem_sep", "EncryptionProperties", "encryptionProperties", "concode_elem_sep", "CallbackHandler", "callbackHandler", "concode_elem_sep", "List", "<", "Relationship", ">", "relationships", "concode_elem_sep", "boolean", "validateUseKey", "concode_elem_sep", "RelationshipResolver", "relationshipResolver", "concode_elem_sep", "String", "callbackHandlerClass", "concode_elem_sep", "String", "signatureUsername", "concode_elem_sep", "Crypto", "encryptionCrypto", "concode_elem_sep", "SAMLRealmCodec", "samlRealmCodec", "concode_elem_sep", "String", "encryptionUsername", "concode_elem_sep", "Object", "signatureCryptoProperties", "concode_elem_sep", "IdentityMapper", "identityMapper", "concode_elem_sep", "RealmParser", "realmParser", "concode_field_sep", "RelationshipResolver", "getRelationshipResolver", "concode_elem_sep", "Bus", "getBus", "concode_elem_sep", "void", "setSamlRealmCodec", "concode_elem_sep", "ResourceManager", "getResourceManager", "concode_elem_sep", "void", "setSignaturePropertiesFile", "concode_elem_sep", "void", "setCallbackHandler", "concode_elem_sep", "void", "setEncryptionProperties", "concode_elem_sep", "EncryptionProperties", "getEncryptionProperties", "concode_elem_sep", "boolean", "isValidateUseKey", "concode_elem_sep", "void", "setSignatureUsername", "concode_elem_sep", "List", "<", "Relationship", ">", "getRelationships", "concode_elem_sep", "SAMLRealmCodec", "getSamlRealmCodec", "concode_elem_sep", "String", "getEncryptionUsername", "concode_elem_sep", "void", "setIdentityMapper", "concode_elem_sep", "void", "setEncryptionPropertiesFile", "concode_elem_sep", "void", "setEncryptionUsername", "concode_elem_sep", "void", "setCallbackHandlerClass", "concode_elem_sep", "Crypto", "getEncryptionCrypto", "concode_elem_sep", "void", "setRelationships", "concode_elem_sep", "SignatureProperties", "getSignatureProperties", "concode_elem_sep", "void", "setSignatureProperties", "concode_elem_sep", "void", "setRealmParser", "concode_elem_sep", "String", "getIssuer", "concode_elem_sep", "void", "setSignatureCryptoProperties", "concode_elem_sep", "void", "setSignatureCrypto", "concode_elem_sep", "IdentityMapper", "getIdentityMapper", "concode_elem_sep", "void", "setValidateUseKey", "concode_elem_sep", "void", "configureProperties", "concode_elem_sep", "void", "setEncryptionCrypto", "concode_elem_sep", "RealmParser", "getRealmParser", "concode_elem_sep", "Crypto", "getSignatureCrypto", "concode_elem_sep", "void", "setIssuer", "concode_elem_sep", "CallbackHandler", "getCallbackHandler", "concode_elem_sep", "void", "setEncryptionCryptoProperties", "concode_elem_sep", "void", "setBus"]}
{"code": "String function ( ) { return logPath ; }", "nl": "get application log path . used to backup database files also concode_field_sep String appPath concode_elem_sep Keys keys concode_elem_sep Machine machine concode_elem_sep String logPath concode_elem_sep Options options concode_elem_sep HashMap<Integer,Playlist> playlists concode_elem_sep DefaultListModel genreListModel concode_elem_sep Logger logger concode_elem_sep DbConnJaMuz db concode_elem_sep ArrayList<String> tags concode_field_sep void logConfig concode_elem_sep boolean getCurrentMachine concode_elem_sep boolean createLog concode_elem_sep Proxy getProxy concode_elem_sep void readTags concode_elem_sep List<Playlist> getPlaylistsVisible concode_elem_sep void readGenres concode_elem_sep boolean setProxy concode_elem_sep boolean connectDatabase concode_elem_sep Playlist getPlaylist concode_elem_sep boolean readPlaylists concode_elem_sep Logger getLogger concode_elem_sep ArrayList<String> getTags concode_elem_sep boolean configure concode_elem_sep Options getKeys concode_elem_sep File getFile concode_elem_sep DbConnJaMuz getDb concode_elem_sep Machine getMachine concode_elem_sep DefaultListModel getGenreListModel concode_elem_sep DefaultHttpClient getHttpClient concode_elem_sep Options getOptions concode_elem_sep List<String> getGenres concode_elem_sep List<Playlist> getPlaylists", "code_tokens": ["String", "function", "(", ")", "{", "return", "logPath", ";", "}"], "nl_tokens": ["get", "application", "log", "path", ".", "used", "to", "backup", "database", "files", "also", "concode_field_sep", "String", "appPath", "concode_elem_sep", "Keys", "keys", "concode_elem_sep", "Machine", "machine", "concode_elem_sep", "String", "logPath", "concode_elem_sep", "Options", "options", "concode_elem_sep", "HashMap", "<", "Integer", ",", "Playlist", ">", "playlists", "concode_elem_sep", "DefaultListModel", "genreListModel", "concode_elem_sep", "Logger", "logger", "concode_elem_sep", "DbConnJaMuz", "db", "concode_elem_sep", "ArrayList", "<", "String", ">", "tags", "concode_field_sep", "void", "logConfig", "concode_elem_sep", "boolean", "getCurrentMachine", "concode_elem_sep", "boolean", "createLog", "concode_elem_sep", "Proxy", "getProxy", "concode_elem_sep", "void", "readTags", "concode_elem_sep", "List", "<", "Playlist", ">", "getPlaylistsVisible", "concode_elem_sep", "void", "readGenres", "concode_elem_sep", "boolean", "setProxy", "concode_elem_sep", "boolean", "connectDatabase", "concode_elem_sep", "Playlist", "getPlaylist", "concode_elem_sep", "boolean", "readPlaylists", "concode_elem_sep", "Logger", "getLogger", "concode_elem_sep", "ArrayList", "<", "String", ">", "getTags", "concode_elem_sep", "boolean", "configure", "concode_elem_sep", "Options", "getKeys", "concode_elem_sep", "File", "getFile", "concode_elem_sep", "DbConnJaMuz", "getDb", "concode_elem_sep", "Machine", "getMachine", "concode_elem_sep", "DefaultListModel", "getGenreListModel", "concode_elem_sep", "DefaultHttpClient", "getHttpClient", "concode_elem_sep", "Options", "getOptions", "concode_elem_sep", "List", "<", "String", ">", "getGenres", "concode_elem_sep", "List", "<", "Playlist", ">", "getPlaylists"]}
{"code": "URI function ( ) { return this . uri ; }", "nl": "gets uri for connecting to remote server . concode_field_sep String TAB concode_elem_sep int GENE_SYMBOL concode_elem_sep ArrayList<String> warningList concode_elem_sep int ID_ENTREZ_GENE concode_elem_sep URI uri concode_elem_sep String content concode_field_sep String getAlleleCount concode_elem_sep ArrayList<String> getWarnings concode_elem_sep String getContent concode_elem_sep String getColumnHeaders concode_elem_sep List<ExtendedMutation> getMutationData concode_elem_sep String getProfileData", "code_tokens": ["URI", "function", "(", ")", "{", "return", "this", ".", "uri", ";", "}"], "nl_tokens": ["gets", "uri", "for", "connecting", "to", "remote", "server", ".", "concode_field_sep", "String", "TAB", "concode_elem_sep", "int", "GENE_SYMBOL", "concode_elem_sep", "ArrayList", "<", "String", ">", "warningList", "concode_elem_sep", "int", "ID_ENTREZ_GENE", "concode_elem_sep", "URI", "uri", "concode_elem_sep", "String", "content", "concode_field_sep", "String", "getAlleleCount", "concode_elem_sep", "ArrayList", "<", "String", ">", "getWarnings", "concode_elem_sep", "String", "getContent", "concode_elem_sep", "String", "getColumnHeaders", "concode_elem_sep", "List", "<", "ExtendedMutation", ">", "getMutationData", "concode_elem_sep", "String", "getProfileData"]}
{"code": "List < String > function ( ) { return mnemonicCode ; }", "nl": "get the mnemonic code , or null if unknown . concode_field_sep int MAX_SEED_ENTROPY_BITS concode_elem_sep byte[] seed concode_elem_sep long creationTimeSeconds concode_elem_sep EncryptedData encryptedMnemonicCode concode_elem_sep EncryptedData encryptedSeed concode_elem_sep List<String> mnemonicCode concode_elem_sep int DEFAULT_SEED_ENTROPY_BITS concode_field_sep String toHexString concode_elem_sep void check concode_elem_sep EncryptedData getEncryptedData concode_elem_sep byte[] getSecretBytes concode_elem_sep byte[] getEntropyBytes concode_elem_sep byte[] getSeedBytes concode_elem_sep byte[] getEntropy concode_elem_sep DeterministicSeed encrypt concode_elem_sep int hashCode concode_elem_sep boolean isEncrypted concode_elem_sep boolean equals concode_elem_sep String toString concode_elem_sep EncryptedData getEncryptedSeedData concode_elem_sep long getCreationTimeSeconds concode_elem_sep byte[] getMnemonicAsBytes concode_elem_sep DeterministicSeed decrypt concode_elem_sep List<String> decodeMnemonicCode concode_elem_sep List<String> decodeMnemonicCode concode_elem_sep Protos.Wallet.EncryptionType getEncryptionType", "code_tokens": ["List", "<", "String", ">", "function", "(", ")", "{", "return", "mnemonicCode", ";", "}"], "nl_tokens": ["get", "the", "mnemonic", "code", ",", "or", "null", "if", "unknown", ".", "concode_field_sep", "int", "MAX_SEED_ENTROPY_BITS", "concode_elem_sep", "byte", "[", "]", "seed", "concode_elem_sep", "long", "creationTimeSeconds", "concode_elem_sep", "EncryptedData", "encryptedMnemonicCode", "concode_elem_sep", "EncryptedData", "encryptedSeed", "concode_elem_sep", "List", "<", "String", ">", "mnemonicCode", "concode_elem_sep", "int", "DEFAULT_SEED_ENTROPY_BITS", "concode_field_sep", "String", "toHexString", "concode_elem_sep", "void", "check", "concode_elem_sep", "EncryptedData", "getEncryptedData", "concode_elem_sep", "byte", "[", "]", "getSecretBytes", "concode_elem_sep", "byte", "[", "]", "getEntropyBytes", "concode_elem_sep", "byte", "[", "]", "getSeedBytes", "concode_elem_sep", "byte", "[", "]", "getEntropy", "concode_elem_sep", "DeterministicSeed", "encrypt", "concode_elem_sep", "int", "hashCode", "concode_elem_sep", "boolean", "isEncrypted", "concode_elem_sep", "boolean", "equals", "concode_elem_sep", "String", "toString", "concode_elem_sep", "EncryptedData", "getEncryptedSeedData", "concode_elem_sep", "long", "getCreationTimeSeconds", "concode_elem_sep", "byte", "[", "]", "getMnemonicAsBytes", "concode_elem_sep", "DeterministicSeed", "decrypt", "concode_elem_sep", "List", "<", "String", ">", "decodeMnemonicCode", "concode_elem_sep", "List", "<", "String", ">", "decodeMnemonicCode", "concode_elem_sep", "Protos", ".", "Wallet", ".", "EncryptionType", "getEncryptionType"]}
{"code": "void function ( ) { mSessionTimeoutMs = Configuration . getInt ( PropertyKey . WORKER_SESSION_TIMEOUT_MS ) ; }", "nl": "sets up the configuration for alluxio before a test runs . concode_field_sep int MIN_LEN concode_elem_sep int MAX_LEN concode_elem_sep int mSessionTimeoutMs concode_elem_sep int DELTA concode_field_sep void constructor concode_elem_sep void constructorWithException concode_elem_sep void getSessionId concode_elem_sep void timeout", "code_tokens": ["void", "function", "(", ")", "{", "mSessionTimeoutMs", "=", "Configuration", ".", "getInt", "(", "PropertyKey", ".", "WORKER_SESSION_TIMEOUT_MS", ")", ";", "}"], "nl_tokens": ["sets", "up", "the", "configuration", "for", "alluxio", "before", "a", "test", "runs", ".", "concode_field_sep", "int", "MIN_LEN", "concode_elem_sep", "int", "MAX_LEN", "concode_elem_sep", "int", "mSessionTimeoutMs", "concode_elem_sep", "int", "DELTA", "concode_field_sep", "void", "constructor", "concode_elem_sep", "void", "constructorWithException", "concode_elem_sep", "void", "getSessionId", "concode_elem_sep", "void", "timeout"]}
{"code": "CommandHandler function ( final String arg0 ) { try { return CommandHandler . valueOf ( arg0 ) ; } catch ( Exception loc0 ) { return null ; } }", "nl": "a wrapper for #valueof string . it returns null instead of throwing an exception . concode_field_sep CommandHandler FILE_UPLOAD concode_elem_sep CommandHandler CREATE_FOLDER concode_elem_sep CommandHandler GET_FOLDERS concode_elem_sep CommandHandler GET_FOLDERS_AND_FILES concode_elem_sep Map<String,CommandHandler> postCommands concode_elem_sep String name concode_elem_sep Map<String,CommandHandler> getCommands concode_elem_sep CommandHandler QUICK_UPLOAD concode_field_sep boolean isValidForPost concode_elem_sep String getName concode_elem_sep CommandHandler valueOf concode_elem_sep int hashCode concode_elem_sep boolean equals concode_elem_sep String toString concode_elem_sep boolean isValidForGet", "code_tokens": ["CommandHandler", "function", "(", "final", "String", "arg0", ")", "{", "try", "{", "return", "CommandHandler", ".", "valueOf", "(", "arg0", ")", ";", "}", "catch", "(", "Exception", "loc0", ")", "{", "return", "null", ";", "}", "}"], "nl_tokens": ["a", "wrapper", "for", "#valueof string . it returns null instead of throwing an exception . concode_field_sep CommandHandler FILE_UPLOAD concode_elem_sep CommandHandler CREATE_FOLDER concode_elem_sep CommandHandler GET_FOLDERS concode_elem_sep CommandHandler GET_FOLDERS_AND_FILES concode_elem_sep Map<String,CommandHandler> postCommands concode_elem_sep String name concode_elem_sep Map<String,CommandHandler> getCommands concode_elem_sep CommandHandler QUICK_UPLOAD concode_field_sep boolean isValidForPost concode_elem_sep String getName concode_elem_sep CommandHandler valueOf concode_elem_sep int hashCode concode_elem_sep boolean equals concode_elem_sep String toString concode_elem_sep boolean isValidForGet"]}
{"code": "String function ( Date arg0 ) { return timeAgo ( arg0 , false ) ; }", "nl": "returns the string representation of the duration between now and the date . concode_field_sep long MIN concode_elem_sep long ONEYEAR concode_elem_sep TimeZone timezone concode_elem_sep ResourceBundle translation concode_elem_sep long ONEHOUR concode_elem_sep long HALFHOUR concode_elem_sep long ONEDAY concode_field_sep String duration concode_elem_sep String yesterday concode_elem_sep int daysAgo concode_elem_sep boolean isYesterday concode_elem_sep String today concode_elem_sep boolean isToday concode_elem_sep int hoursAgo concode_elem_sep String inFuture concode_elem_sep int convertFrequencyToMinutes concode_elem_sep int minutesAgo concode_elem_sep int minutesAgo concode_elem_sep String translate concode_elem_sep String translate concode_elem_sep String timeAgoCss", "code_tokens": ["String", "function", "(", "Date", "arg0", ")", "{", "return", "timeAgo", "(", "arg0", ",", "false", ")", ";", "}"], "nl_tokens": ["returns", "the", "string", "representation", "of", "the", "duration", "between", "now", "and", "the", "date", ".", "concode_field_sep", "long", "MIN", "concode_elem_sep", "long", "ONEYEAR", "concode_elem_sep", "TimeZone", "timezone", "concode_elem_sep", "ResourceBundle", "translation", "concode_elem_sep", "long", "ONEHOUR", "concode_elem_sep", "long", "HALFHOUR", "concode_elem_sep", "long", "ONEDAY", "concode_field_sep", "String", "duration", "concode_elem_sep", "String", "yesterday", "concode_elem_sep", "int", "daysAgo", "concode_elem_sep", "boolean", "isYesterday", "concode_elem_sep", "String", "today", "concode_elem_sep", "boolean", "isToday", "concode_elem_sep", "int", "hoursAgo", "concode_elem_sep", "String", "inFuture", "concode_elem_sep", "int", "convertFrequencyToMinutes", "concode_elem_sep", "int", "minutesAgo", "concode_elem_sep", "int", "minutesAgo", "concode_elem_sep", "String", "translate", "concode_elem_sep", "String", "translate", "concode_elem_sep", "String", "timeAgoCss"]}
{"code": "long function ( String arg0 , long arg1 ) { String loc0 = getString ( arg0 , null ) ; if ( StringUtils . isEmpty ( loc0 ) ) { return arg1 ; } return com . gitblit . utils . FileUtils . convertSizeToLong ( loc0 , arg1 ) ; }", "nl": "returns an long filesize from a string value such as 50m or 50mb concode_field_sep Logger logger concode_elem_sep Properties overrides concode_elem_sep Set<String> removals concode_field_sep Properties read concode_elem_sep Properties getSettings concode_elem_sep int getInteger concode_elem_sep boolean hasSettings concode_elem_sep String getString concode_elem_sep void removeSetting concode_elem_sep boolean saveSettings concode_elem_sep boolean saveSettings concode_elem_sep Map<String,String> getMap concode_elem_sep List<String> getStrings concode_elem_sep List<String> getStrings concode_elem_sep void overrideSetting concode_elem_sep void overrideSetting concode_elem_sep void overrideSetting concode_elem_sep long getLong concode_elem_sep char getChar concode_elem_sep String getRequiredString concode_elem_sep List<String> getAllKeys concode_elem_sep void merge concode_elem_sep boolean getBoolean concode_elem_sep List<Integer> getIntegers concode_elem_sep List<Integer> getIntegers", "code_tokens": ["long", "function", "(", "String", "arg0", ",", "long", "arg1", ")", "{", "String", "loc0", "=", "getString", "(", "arg0", ",", "null", ")", ";", "if", "(", "StringUtils", ".", "isEmpty", "(", "loc0", ")", ")", "{", "return", "arg1", ";", "}", "return", "com", ".", "gitblit", ".", "utils", ".", "FileUtils", ".", "convertSizeToLong", "(", "loc0", ",", "arg1", ")", ";", "}"], "nl_tokens": ["returns", "an", "long", "filesize", "from", "a", "string", "value", "such", "as", "50", "m", "or", "50", "mb", "concode_field_sep", "Logger", "logger", "concode_elem_sep", "Properties", "overrides", "concode_elem_sep", "Set", "<", "String", ">", "removals", "concode_field_sep", "Properties", "read", "concode_elem_sep", "Properties", "getSettings", "concode_elem_sep", "int", "getInteger", "concode_elem_sep", "boolean", "hasSettings", "concode_elem_sep", "String", "getString", "concode_elem_sep", "void", "removeSetting", "concode_elem_sep", "boolean", "saveSettings", "concode_elem_sep", "boolean", "saveSettings", "concode_elem_sep", "Map", "<", "String", ",", "String", ">", "getMap", "concode_elem_sep", "List", "<", "String", ">", "getStrings", "concode_elem_sep", "List", "<", "String", ">", "getStrings", "concode_elem_sep", "void", "overrideSetting", "concode_elem_sep", "void", "overrideSetting", "concode_elem_sep", "void", "overrideSetting", "concode_elem_sep", "long", "getLong", "concode_elem_sep", "char", "getChar", "concode_elem_sep", "String", "getRequiredString", "concode_elem_sep", "List", "<", "String", ">", "getAllKeys", "concode_elem_sep", "void", "merge", "concode_elem_sep", "boolean", "getBoolean", "concode_elem_sep", "List", "<", "Integer", ">", "getIntegers", "concode_elem_sep", "List", "<", "Integer", ">", "getIntegers"]}
{"code": "void function ( VertexLabelType arg0 , VertexLabelType arg1 ) { Hashtable < VertexLabelType , EdgeLabelType > loc0 = globalEdgeLookup . get ( arg0 ) ; if ( loc0 != null ) loc0 . remove ( arg1 ) ; }", "nl": "removes an edge from the graph . concode_field_sep List<VertexLabelType> vertexLabels concode_elem_sep Hashtable<VertexLabelType,Hashtable<VertexLabelType,EdgeLabelType>> globalEdgeLookup concode_field_sep void set concode_elem_sep List<VertexLabelType> getVertexLabels concode_elem_sep List<VertexLabelType> getSuccessors concode_elem_sep EdgeLabelType get concode_elem_sep boolean isVertexLabel concode_elem_sep void clear concode_elem_sep Hashtable<VertexLabelType,EdgeLabelType> checkForNewVertex concode_elem_sep void addVertex", "code_tokens": ["void", "function", "(", "VertexLabelType", "arg0", ",", "VertexLabelType", "arg1", ")", "{", "Hashtable", "<", "VertexLabelType", ",", "EdgeLabelType", ">", "loc0", "=", "globalEdgeLookup", ".", "get", "(", "arg0", ")", ";", "if", "(", "loc0", "!=", "null", ")", "loc0", ".", "remove", "(", "arg1", ")", ";", "}"], "nl_tokens": ["removes", "an", "edge", "from", "the", "graph", ".", "concode_field_sep", "List", "<", "VertexLabelType", ">", "vertexLabels", "concode_elem_sep", "Hashtable", "<", "VertexLabelType", ",", "Hashtable", "<", "VertexLabelType", ",", "EdgeLabelType", ">>", "globalEdgeLookup", "concode_field_sep", "void", "set", "concode_elem_sep", "List", "<", "VertexLabelType", ">", "getVertexLabels", "concode_elem_sep", "List", "<", "VertexLabelType", ">", "getSuccessors", "concode_elem_sep", "EdgeLabelType", "get", "concode_elem_sep", "boolean", "isVertexLabel", "concode_elem_sep", "void", "clear", "concode_elem_sep", "Hashtable", "<", "VertexLabelType", ",", "EdgeLabelType", ">", "checkForNewVertex", "concode_elem_sep", "void", "addVertex"]}
{"code": "List < String > function ( ) { return DEFAULT_SCHEME_PRIORITY ; }", "nl": "returns default list of auth scheme names in their order of preference . concode_field_sep Log log concode_elem_sep List<String> DEFAULT_SCHEME_PRIORITY concode_field_sep AuthScheme selectScheme concode_elem_sep Map<String,Header> parseChallenges", "code_tokens": ["List", "<", "String", ">", "function", "(", ")", "{", "return", "DEFAULT_SCHEME_PRIORITY", ";", "}"], "nl_tokens": ["returns", "default", "list", "of", "auth", "scheme", "names", "in", "their", "order", "of", "preference", ".", "concode_field_sep", "Log", "log", "concode_elem_sep", "List", "<", "String", ">", "DEFAULT_SCHEME_PRIORITY", "concode_field_sep", "AuthScheme", "selectScheme", "concode_elem_sep", "Map", "<", "String", ",", "Header", ">", "parseChallenges"]}
{"code": "int function ( String arg0 ) { try { return Integer . parseInt ( params . get ( arg0 ) ) ; } catch ( Exception loc0 ) { return - 1 ; } }", "nl": "gets the value of the given parameter as an integer concode_field_sep String rawParameters concode_elem_sep boolean hasArgs concode_elem_sep HashMap<String,String> params concode_elem_sep String command concode_elem_sep String rawCommand concode_field_sep String[] getExternalArgs concode_elem_sep long getLong concode_elem_sep boolean hasArguments concode_elem_sep boolean isSet concode_elem_sep String getCommand concode_elem_sep boolean isValid concode_elem_sep String[] getExternalCommand concode_elem_sep String toString concode_elem_sep String getString concode_elem_sep String parameters concode_elem_sep boolean getBool concode_elem_sep void parseCommand", "code_tokens": ["int", "function", "(", "String", "arg0", ")", "{", "try", "{", "return", "Integer", ".", "parseInt", "(", "params", ".", "get", "(", "arg0", ")", ")", ";", "}", "catch", "(", "Exception", "loc0", ")", "{", "return", "-", "1", ";", "}", "}"], "nl_tokens": ["gets", "the", "value", "of", "the", "given", "parameter", "as", "an", "integer", "concode_field_sep", "String", "rawParameters", "concode_elem_sep", "boolean", "hasArgs", "concode_elem_sep", "HashMap", "<", "String", ",", "String", ">", "params", "concode_elem_sep", "String", "command", "concode_elem_sep", "String", "rawCommand", "concode_field_sep", "String", "[", "]", "getExternalArgs", "concode_elem_sep", "long", "getLong", "concode_elem_sep", "boolean", "hasArguments", "concode_elem_sep", "boolean", "isSet", "concode_elem_sep", "String", "getCommand", "concode_elem_sep", "boolean", "isValid", "concode_elem_sep", "String", "[", "]", "getExternalCommand", "concode_elem_sep", "String", "toString", "concode_elem_sep", "String", "getString", "concode_elem_sep", "String", "parameters", "concode_elem_sep", "boolean", "getBool", "concode_elem_sep", "void", "parseCommand"]}
{"code": "void function ( ) { try { time . setHour ( - 1 ) ; fail ( \"srini_string\" ) ; } catch ( IllegalArgumentException loc0 ) { } }", "nl": "test method for net.sf.marineapi.nmea.util.time #sethour int . concode_field_sep Time time concode_field_sep void testDateRoundTrip concode_elem_sep void testParseTimeWithOneDecimal concode_elem_sep void testSetNegativeMinutes concode_elem_sep void testFormatTimeWithOneDecimal concode_elem_sep void testSetMinutes concode_elem_sep void testParseTimeWithoutDecimals concode_elem_sep void testGetMinutes concode_elem_sep void testParseTimeWithDecimals concode_elem_sep void testSetInvalidSeconds concode_elem_sep void testToDate concode_elem_sep void testGetSeconds concode_elem_sep void testSetHour concode_elem_sep void testGetHour concode_elem_sep void testSetSeconds concode_elem_sep void testSetTime concode_elem_sep void testGetMilliseconds concode_elem_sep void testSetInvalidHour concode_elem_sep void testSetNegativeSeconds concode_elem_sep void setUp concode_elem_sep void testSetInvalidMinutes concode_elem_sep void testFormatTimeNoDecimals concode_elem_sep void testFormatTimeWithDecimals concode_elem_sep void testEquals", "code_tokens": ["void", "function", "(", ")", "{", "try", "{", "time", ".", "setHour", "(", "-", "1", ")", ";", "fail", "(", "\"srini_string\"", ")", ";", "}", "catch", "(", "IllegalArgumentException", "loc0", ")", "{", "}", "}"], "nl_tokens": ["test", "method", "for", "net", ".", "sf", ".", "marineapi", ".", "nmea", ".", "util", ".", "time", "#sethour int . concode_field_sep Time time concode_field_sep void testDateRoundTrip concode_elem_sep void testParseTimeWithOneDecimal concode_elem_sep void testSetNegativeMinutes concode_elem_sep void testFormatTimeWithOneDecimal concode_elem_sep void testSetMinutes concode_elem_sep void testParseTimeWithoutDecimals concode_elem_sep void testGetMinutes concode_elem_sep void testParseTimeWithDecimals concode_elem_sep void testSetInvalidSeconds concode_elem_sep void testToDate concode_elem_sep void testGetSeconds concode_elem_sep void testSetHour concode_elem_sep void testGetHour concode_elem_sep void testSetSeconds concode_elem_sep void testSetTime concode_elem_sep void testGetMilliseconds concode_elem_sep void testSetInvalidHour concode_elem_sep void testSetNegativeSeconds concode_elem_sep void setUp concode_elem_sep void testSetInvalidMinutes concode_elem_sep void testFormatTimeNoDecimals concode_elem_sep void testFormatTimeWithDecimals concode_elem_sep void testEquals"]}
{"code": "boolean function ( ) { return bufferSize == 0 ; }", "nl": "determines if the buffer is empty . concode_field_sep byte[] buffer concode_elem_sep int INITIAL_BUFFER_CAPACITY concode_elem_sep int bufferSize concode_field_sep void add concode_elem_sep void clear concode_elem_sep byte[] toArray concode_elem_sep String toString", "code_tokens": ["boolean", "function", "(", ")", "{", "return", "bufferSize", "==", "0", ";", "}"], "nl_tokens": ["determines", "if", "the", "buffer", "is", "empty", ".", "concode_field_sep", "byte", "[", "]", "buffer", "concode_elem_sep", "int", "INITIAL_BUFFER_CAPACITY", "concode_elem_sep", "int", "bufferSize", "concode_field_sep", "void", "add", "concode_elem_sep", "void", "clear", "concode_elem_sep", "byte", "[", "]", "toArray", "concode_elem_sep", "String", "toString"]}
{"code": "Map < String , String > function ( String arg0 ) { Map < String , String > loc0 = new LinkedHashMap < String , String > ( ) ; for ( String loc1 : getStrings ( arg0 ) ) { String [ ] loc2 = loc1 . split ( \"srini_string\" , 2 ) ; String loc3 = loc2 [ 0 ] ; String loc4 = loc2 [ 1 ] ; loc0 . put ( loc3 , loc4 ) ; } return loc0 ; }", "nl": "returns a map of strings from the specified key . concode_field_sep Logger logger concode_elem_sep Properties overrides concode_elem_sep Set<String> removals concode_field_sep Properties read concode_elem_sep int getFilesize concode_elem_sep long getFilesize concode_elem_sep Properties getSettings concode_elem_sep int getInteger concode_elem_sep boolean hasSettings concode_elem_sep String getString concode_elem_sep void removeSetting concode_elem_sep boolean saveSettings concode_elem_sep boolean saveSettings concode_elem_sep List<String> getStrings concode_elem_sep List<String> getStrings concode_elem_sep void overrideSetting concode_elem_sep void overrideSetting concode_elem_sep void overrideSetting concode_elem_sep long getLong concode_elem_sep char getChar concode_elem_sep String getRequiredString concode_elem_sep List<String> getAllKeys concode_elem_sep void merge concode_elem_sep boolean getBoolean concode_elem_sep List<Integer> getIntegers concode_elem_sep List<Integer> getIntegers", "code_tokens": ["Map", "<", "String", ",", "String", ">", "function", "(", "String", "arg0", ")", "{", "Map", "<", "String", ",", "String", ">", "loc0", "=", "new", "LinkedHashMap", "<", "String", ",", "String", ">", "(", ")", ";", "for", "(", "String", "loc1", ":", "getStrings", "(", "arg0", ")", ")", "{", "String", "[", "]", "loc2", "=", "loc1", ".", "split", "(", "\"srini_string\"", ",", "2", ")", ";", "String", "loc3", "=", "loc2", "[", "0", "]", ";", "String", "loc4", "=", "loc2", "[", "1", "]", ";", "loc0", ".", "put", "(", "loc3", ",", "loc4", ")", ";", "}", "return", "loc0", ";", "}"], "nl_tokens": ["returns", "a", "map", "of", "strings", "from", "the", "specified", "key", ".", "concode_field_sep", "Logger", "logger", "concode_elem_sep", "Properties", "overrides", "concode_elem_sep", "Set", "<", "String", ">", "removals", "concode_field_sep", "Properties", "read", "concode_elem_sep", "int", "getFilesize", "concode_elem_sep", "long", "getFilesize", "concode_elem_sep", "Properties", "getSettings", "concode_elem_sep", "int", "getInteger", "concode_elem_sep", "boolean", "hasSettings", "concode_elem_sep", "String", "getString", "concode_elem_sep", "void", "removeSetting", "concode_elem_sep", "boolean", "saveSettings", "concode_elem_sep", "boolean", "saveSettings", "concode_elem_sep", "List", "<", "String", ">", "getStrings", "concode_elem_sep", "List", "<", "String", ">", "getStrings", "concode_elem_sep", "void", "overrideSetting", "concode_elem_sep", "void", "overrideSetting", "concode_elem_sep", "void", "overrideSetting", "concode_elem_sep", "long", "getLong", "concode_elem_sep", "char", "getChar", "concode_elem_sep", "String", "getRequiredString", "concode_elem_sep", "List", "<", "String", ">", "getAllKeys", "concode_elem_sep", "void", "merge", "concode_elem_sep", "boolean", "getBoolean", "concode_elem_sep", "List", "<", "Integer", ">", "getIntegers", "concode_elem_sep", "List", "<", "Integer", ">", "getIntegers"]}
{"code": "int function ( ) { return keyIdentifierType ; }", "nl": "get the wss4j key identifier type used to reference a certificate for encryption concode_field_sep String keyWrapAlgorithm concode_elem_sep int keyIdentifierType concode_elem_sep List<String> acceptedKeyWrapAlgorithms concode_elem_sep String encryptionName concode_elem_sep List<String> acceptedEncryptionAlgorithms concode_elem_sep String encryptionAlgorithm concode_field_sep void setEncryptionName concode_elem_sep List<String> getAcceptedEncryptionAlgorithms concode_elem_sep String getEncryptionAlgorithm concode_elem_sep void setAcceptedKeyWrapAlgorithms concode_elem_sep List<String> getAcceptedKeyWrapAlgorithms concode_elem_sep String getKeyWrapAlgorithm concode_elem_sep void setKeyWrapAlgorithm concode_elem_sep void setAcceptedEncryptionAlgorithms concode_elem_sep void setKeyIdentifierType concode_elem_sep void setEncryptionAlgorithm concode_elem_sep String getEncryptionName", "code_tokens": ["int", "function", "(", ")", "{", "return", "keyIdentifierType", ";", "}"], "nl_tokens": ["get", "the", "wss4j", "key", "identifier", "type", "used", "to", "reference", "a", "certificate", "for", "encryption", "concode_field_sep", "String", "keyWrapAlgorithm", "concode_elem_sep", "int", "keyIdentifierType", "concode_elem_sep", "List", "<", "String", ">", "acceptedKeyWrapAlgorithms", "concode_elem_sep", "String", "encryptionName", "concode_elem_sep", "List", "<", "String", ">", "acceptedEncryptionAlgorithms", "concode_elem_sep", "String", "encryptionAlgorithm", "concode_field_sep", "void", "setEncryptionName", "concode_elem_sep", "List", "<", "String", ">", "getAcceptedEncryptionAlgorithms", "concode_elem_sep", "String", "getEncryptionAlgorithm", "concode_elem_sep", "void", "setAcceptedKeyWrapAlgorithms", "concode_elem_sep", "List", "<", "String", ">", "getAcceptedKeyWrapAlgorithms", "concode_elem_sep", "String", "getKeyWrapAlgorithm", "concode_elem_sep", "void", "setKeyWrapAlgorithm", "concode_elem_sep", "void", "setAcceptedEncryptionAlgorithms", "concode_elem_sep", "void", "setKeyIdentifierType", "concode_elem_sep", "void", "setEncryptionAlgorithm", "concode_elem_sep", "String", "getEncryptionName"]}
{"code": "Set < String > function ( ) { return recentlyGrantedPermissions ; }", "nl": "getter for the recently granted permissions . concode_field_sep Set<String> recentlyDeniedPermissions concode_elem_sep AccessToken accessToken concode_elem_sep Set<String> recentlyGrantedPermissions concode_field_sep Set<String> getRecentlyDeniedPermissions concode_elem_sep AccessToken getAccessToken", "code_tokens": ["Set", "<", "String", ">", "function", "(", ")", "{", "return", "recentlyGrantedPermissions", ";", "}"], "nl_tokens": ["getter", "for", "the", "recently", "granted", "permissions", ".", "concode_field_sep", "Set", "<", "String", ">", "recentlyDeniedPermissions", "concode_elem_sep", "AccessToken", "accessToken", "concode_elem_sep", "Set", "<", "String", ">", "recentlyGrantedPermissions", "concode_field_sep", "Set", "<", "String", ">", "getRecentlyDeniedPermissions", "concode_elem_sep", "AccessToken", "getAccessToken"]}
{"code": "long function ( ) { return index ; }", "nl": "the index of this output in the transaction which holds it . concode_field_sep boolean coinbase concode_elem_sep long serialVersionUID concode_elem_sep long index concode_elem_sep Coin value concode_elem_sep byte[] scriptBytes concode_elem_sep Sha256Hash hash concode_elem_sep int height concode_field_sep Coin getValue concode_elem_sep int getHeight concode_elem_sep Sha256Hash getHash concode_elem_sep boolean isCoinbase concode_elem_sep int hashCode concode_elem_sep void serializeToStream concode_elem_sep boolean equals concode_elem_sep String toString concode_elem_sep byte[] getScriptBytes", "code_tokens": ["long", "function", "(", ")", "{", "return", "index", ";", "}"], "nl_tokens": ["the", "index", "of", "this", "output", "in", "the", "transaction", "which", "holds", "it", ".", "concode_field_sep", "boolean", "coinbase", "concode_elem_sep", "long", "serialVersionUID", "concode_elem_sep", "long", "index", "concode_elem_sep", "Coin", "value", "concode_elem_sep", "byte", "[", "]", "scriptBytes", "concode_elem_sep", "Sha256Hash", "hash", "concode_elem_sep", "int", "height", "concode_field_sep", "Coin", "getValue", "concode_elem_sep", "int", "getHeight", "concode_elem_sep", "Sha256Hash", "getHash", "concode_elem_sep", "boolean", "isCoinbase", "concode_elem_sep", "int", "hashCode", "concode_elem_sep", "void", "serializeToStream", "concode_elem_sep", "boolean", "equals", "concode_elem_sep", "String", "toString", "concode_elem_sep", "byte", "[", "]", "getScriptBytes"]}
{"code": "void function ( ) { mWorkDirectory = AlluxioTestDirectory . createTemporaryDirectory ( \"srini_string\" ) . getAbsolutePath ( ) ; }", "nl": "sets alluxio work directory . concode_field_sep UnderFileSystemCluster mUfsCluster concode_elem_sep int mNumWorkers concode_elem_sep String mWorkDirectory concode_elem_sep List<AlluxioWorkerService> mWorkers concode_elem_sep long DEFAULT_WORKER_MEMORY_BYTES concode_elem_sep Logger LOG concode_elem_sep int DEFAULT_BLOCK_SIZE_BYTES concode_elem_sep Random RANDOM_GENERATOR concode_elem_sep String mHostname concode_field_sep void setHostname concode_elem_sep void start concode_elem_sep FileSystem getClient concode_elem_sep void setupTest concode_elem_sep void stopUFS concode_elem_sep void initConfiguration concode_elem_sep void stop concode_elem_sep void startWorkers concode_elem_sep void runWorkers concode_elem_sep void startMaster concode_elem_sep void reset concode_elem_sep void stopFS concode_elem_sep LocalAlluxioMaster getMaster", "code_tokens": ["void", "function", "(", ")", "{", "mWorkDirectory", "=", "AlluxioTestDirectory", ".", "createTemporaryDirectory", "(", "\"srini_string\"", ")", ".", "getAbsolutePath", "(", ")", ";", "}"], "nl_tokens": ["sets", "alluxio", "work", "directory", ".", "concode_field_sep", "UnderFileSystemCluster", "mUfsCluster", "concode_elem_sep", "int", "mNumWorkers", "concode_elem_sep", "String", "mWorkDirectory", "concode_elem_sep", "List", "<", "AlluxioWorkerService", ">", "mWorkers", "concode_elem_sep", "long", "DEFAULT_WORKER_MEMORY_BYTES", "concode_elem_sep", "Logger", "LOG", "concode_elem_sep", "int", "DEFAULT_BLOCK_SIZE_BYTES", "concode_elem_sep", "Random", "RANDOM_GENERATOR", "concode_elem_sep", "String", "mHostname", "concode_field_sep", "void", "setHostname", "concode_elem_sep", "void", "start", "concode_elem_sep", "FileSystem", "getClient", "concode_elem_sep", "void", "setupTest", "concode_elem_sep", "void", "stopUFS", "concode_elem_sep", "void", "initConfiguration", "concode_elem_sep", "void", "stop", "concode_elem_sep", "void", "startWorkers", "concode_elem_sep", "void", "runWorkers", "concode_elem_sep", "void", "startMaster", "concode_elem_sep", "void", "reset", "concode_elem_sep", "void", "stopFS", "concode_elem_sep", "LocalAlluxioMaster", "getMaster"]}
{"code": "boolean function ( ) { return mConnected ; }", "nl": "returns the connected status of the client . concode_field_sep Pattern FRAME_SIZE_EXCEPTION_PATTERN concode_elem_sep boolean mConnected concode_elem_sep TProtocol mProtocol concode_elem_sep String mMode concode_elem_sep long mServiceVersion concode_elem_sep InetSocketAddress mAddress concode_elem_sep TransportProvider mTransportProvider concode_elem_sep Logger LOG concode_elem_sep int RPC_MAX_NUM_RETRY concode_elem_sep boolean mClosed concode_field_sep void beforeDisconnect concode_elem_sep void disconnect concode_elem_sep void afterDisconnect concode_elem_sep void afterConnect concode_elem_sep void checkVersion concode_elem_sep String getServiceName concode_elem_sep AlluxioService.Client getClient concode_elem_sep V call concode_elem_sep V call concode_elem_sep V retryRPC concode_elem_sep V retryRPC concode_elem_sep long getServiceVersion concode_elem_sep void resetConnection concode_elem_sep InetSocketAddress getAddress concode_elem_sep void close concode_elem_sep void connect", "code_tokens": ["boolean", "function", "(", ")", "{", "return", "mConnected", ";", "}"], "nl_tokens": ["returns", "the", "connected", "status", "of", "the", "client", ".", "concode_field_sep", "Pattern", "FRAME_SIZE_EXCEPTION_PATTERN", "concode_elem_sep", "boolean", "mConnected", "concode_elem_sep", "TProtocol", "mProtocol", "concode_elem_sep", "String", "mMode", "concode_elem_sep", "long", "mServiceVersion", "concode_elem_sep", "InetSocketAddress", "mAddress", "concode_elem_sep", "TransportProvider", "mTransportProvider", "concode_elem_sep", "Logger", "LOG", "concode_elem_sep", "int", "RPC_MAX_NUM_RETRY", "concode_elem_sep", "boolean", "mClosed", "concode_field_sep", "void", "beforeDisconnect", "concode_elem_sep", "void", "disconnect", "concode_elem_sep", "void", "afterDisconnect", "concode_elem_sep", "void", "afterConnect", "concode_elem_sep", "void", "checkVersion", "concode_elem_sep", "String", "getServiceName", "concode_elem_sep", "AlluxioService", ".", "Client", "getClient", "concode_elem_sep", "V", "call", "concode_elem_sep", "V", "call", "concode_elem_sep", "V", "retryRPC", "concode_elem_sep", "V", "retryRPC", "concode_elem_sep", "long", "getServiceVersion", "concode_elem_sep", "void", "resetConnection", "concode_elem_sep", "InetSocketAddress", "getAddress", "concode_elem_sep", "void", "close", "concode_elem_sep", "void", "connect"]}
{"code": "void function ( String arg0 ) { this . correlationId = arg0 ; }", "nl": "set correlation id of the message concode_field_sep Map<String,Object> headers concode_elem_sep byte body[] concode_elem_sep long deliveryTag concode_elem_sep String replyTo concode_elem_sep String contentEncoding concode_elem_sep String messageId concode_elem_sep String correlationId concode_elem_sep String soapAction concode_elem_sep String contentType concode_field_sep String getCorrelationId concode_elem_sep String getContentEncoding concode_elem_sep void setHeaders concode_elem_sep Map<String,Object> getHeaders concode_elem_sep byte[] getBody concode_elem_sep String getReplyTo concode_elem_sep void setContentEncoding concode_elem_sep long getDeliveryTag concode_elem_sep void setMessageId concode_elem_sep void setSoapAction concode_elem_sep void setBody concode_elem_sep String getMessageId concode_elem_sep void setReplyTo concode_elem_sep void setDeliveryTag concode_elem_sep String getContentType concode_elem_sep void setContentType concode_elem_sep String getSoapAction", "code_tokens": ["void", "function", "(", "String", "arg0", ")", "{", "this", ".", "correlationId", "=", "arg0", ";", "}"], "nl_tokens": ["set", "correlation", "id", "of", "the", "message", "concode_field_sep", "Map", "<", "String", ",", "Object", ">", "headers", "concode_elem_sep", "byte", "body", "[", "]", "concode_elem_sep", "long", "deliveryTag", "concode_elem_sep", "String", "replyTo", "concode_elem_sep", "String", "contentEncoding", "concode_elem_sep", "String", "messageId", "concode_elem_sep", "String", "correlationId", "concode_elem_sep", "String", "soapAction", "concode_elem_sep", "String", "contentType", "concode_field_sep", "String", "getCorrelationId", "concode_elem_sep", "String", "getContentEncoding", "concode_elem_sep", "void", "setHeaders", "concode_elem_sep", "Map", "<", "String", ",", "Object", ">", "getHeaders", "concode_elem_sep", "byte", "[", "]", "getBody", "concode_elem_sep", "String", "getReplyTo", "concode_elem_sep", "void", "setContentEncoding", "concode_elem_sep", "long", "getDeliveryTag", "concode_elem_sep", "void", "setMessageId", "concode_elem_sep", "void", "setSoapAction", "concode_elem_sep", "void", "setBody", "concode_elem_sep", "String", "getMessageId", "concode_elem_sep", "void", "setReplyTo", "concode_elem_sep", "void", "setDeliveryTag", "concode_elem_sep", "String", "getContentType", "concode_elem_sep", "void", "setContentType", "concode_elem_sep", "String", "getSoapAction"]}
{"code": "void function ( Boolean arg0 ) { this . accountNonExpired = arg0 ; }", "nl": "setea si la cuenta esta expirada o no . concode_field_sep String password concode_elem_sep Date credentialsExpirationDate concode_elem_sep Integer loginsFallidos concode_elem_sep Collection<GrantedAuthority> grantedAuthorities concode_elem_sep boolean credentialsNonExpired concode_elem_sep boolean accountNonExpired concode_elem_sep Long id concode_elem_sep boolean enabled concode_elem_sep String email concode_elem_sep String username concode_elem_sep boolean accountNonLocked concode_elem_sep String nombres concode_field_sep void setCredentialsNonExpired concode_elem_sep void setPassword concode_elem_sep Date getCredentialsExpirationDate concode_elem_sep void setUsername concode_elem_sep void setAccountNonLocked concode_elem_sep String getNombres concode_elem_sep boolean isAccountNonLocked concode_elem_sep Long getId concode_elem_sep void setNombres concode_elem_sep Collection<GrantedAuthority> getAuthorities concode_elem_sep String getUsername concode_elem_sep void setEnabled concode_elem_sep String getPassword concode_elem_sep void setEmail concode_elem_sep void setAuthorities concode_elem_sep boolean isAccountNonExpired concode_elem_sep boolean isCredentialsNonExpired concode_elem_sep boolean isEnabled concode_elem_sep String getEmail concode_elem_sep void setId concode_elem_sep void setCredentialsExpirationDate", "code_tokens": ["void", "function", "(", "Boolean", "arg0", ")", "{", "this", ".", "accountNonExpired", "=", "arg0", ";", "}"], "nl_tokens": ["setea", "si", "la", "cuenta", "esta", "expirada", "o", "no", ".", "concode_field_sep", "String", "password", "concode_elem_sep", "Date", "credentialsExpirationDate", "concode_elem_sep", "Integer", "loginsFallidos", "concode_elem_sep", "Collection", "<", "GrantedAuthority", ">", "grantedAuthorities", "concode_elem_sep", "boolean", "credentialsNonExpired", "concode_elem_sep", "boolean", "accountNonExpired", "concode_elem_sep", "Long", "id", "concode_elem_sep", "boolean", "enabled", "concode_elem_sep", "String", "email", "concode_elem_sep", "String", "username", "concode_elem_sep", "boolean", "accountNonLocked", "concode_elem_sep", "String", "nombres", "concode_field_sep", "void", "setCredentialsNonExpired", "concode_elem_sep", "void", "setPassword", "concode_elem_sep", "Date", "getCredentialsExpirationDate", "concode_elem_sep", "void", "setUsername", "concode_elem_sep", "void", "setAccountNonLocked", "concode_elem_sep", "String", "getNombres", "concode_elem_sep", "boolean", "isAccountNonLocked", "concode_elem_sep", "Long", "getId", "concode_elem_sep", "void", "setNombres", "concode_elem_sep", "Collection", "<", "GrantedAuthority", ">", "getAuthorities", "concode_elem_sep", "String", "getUsername", "concode_elem_sep", "void", "setEnabled", "concode_elem_sep", "String", "getPassword", "concode_elem_sep", "void", "setEmail", "concode_elem_sep", "void", "setAuthorities", "concode_elem_sep", "boolean", "isAccountNonExpired", "concode_elem_sep", "boolean", "isCredentialsNonExpired", "concode_elem_sep", "boolean", "isEnabled", "concode_elem_sep", "String", "getEmail", "concode_elem_sep", "void", "setId", "concode_elem_sep", "void", "setCredentialsExpirationDate"]}
{"code": "byte [ ] function ( int arg0 ) { Object loc0 = values . get ( arg0 ) ; if ( loc0 instanceof byte [ ] ) { return ( byte [ ] ) loc0 ; } else { throw new IllegalStateException ( ) ; } }", "nl": "returns result value as binary data . concode_field_sep String NAME concode_elem_sep String FAULT concode_elem_sep String MEMBER concode_elem_sep TimeZone tz concode_elem_sep ArrayList<Object> values concode_elem_sep String VALUE concode_field_sep String getStringValue concode_elem_sep ArrayList<Object> parseArray concode_elem_sep List getValues concode_elem_sep Map<String,Object> getStructValue concode_elem_sep Double getDoubleValue concode_elem_sep int getValueCount concode_elem_sep void parse concode_elem_sep Integer getIntegerValue concode_elem_sep Boolean getBooleanValue concode_elem_sep HashMap<String,Object> parseStruct concode_elem_sep List<Object> getArrayValue concode_elem_sep Object parseValue concode_elem_sep Date getDateValue", "code_tokens": ["byte", "[", "]", "function", "(", "int", "arg0", ")", "{", "Object", "loc0", "=", "values", ".", "get", "(", "arg0", ")", ";", "if", "(", "loc0", "instanceof", "byte", "[", "]", ")", "{", "return", "(", "byte", "[", "]", ")", "loc0", ";", "}", "else", "{", "throw", "new", "IllegalStateException", "(", ")", ";", "}", "}"], "nl_tokens": ["returns", "result", "value", "as", "binary", "data", ".", "concode_field_sep", "String", "NAME", "concode_elem_sep", "String", "FAULT", "concode_elem_sep", "String", "MEMBER", "concode_elem_sep", "TimeZone", "tz", "concode_elem_sep", "ArrayList", "<", "Object", ">", "values", "concode_elem_sep", "String", "VALUE", "concode_field_sep", "String", "getStringValue", "concode_elem_sep", "ArrayList", "<", "Object", ">", "parseArray", "concode_elem_sep", "List", "getValues", "concode_elem_sep", "Map", "<", "String", ",", "Object", ">", "getStructValue", "concode_elem_sep", "Double", "getDoubleValue", "concode_elem_sep", "int", "getValueCount", "concode_elem_sep", "void", "parse", "concode_elem_sep", "Integer", "getIntegerValue", "concode_elem_sep", "Boolean", "getBooleanValue", "concode_elem_sep", "HashMap", "<", "String", ",", "Object", ">", "parseStruct", "concode_elem_sep", "List", "<", "Object", ">", "getArrayValue", "concode_elem_sep", "Object", "parseValue", "concode_elem_sep", "Date", "getDateValue"]}
{"code": "double function ( D1Matrix64F arg0 ) { double loc0 = 0 ; int loc1 = arg0 . getNumElements ( ) ; for ( int loc2 = 0 ; loc2 < loc1 ; loc2 ++ ) { double loc3 = arg0 . get ( loc2 ) ; loc0 += loc3 * loc3 ; } return Math . sqrt ( loc0 ) ; }", "nl": "this implementation of the frobenius norm is a straight forward implementation and can be susceptible for overflow/underflow issues . a more resilient implementation is #normf . concode_field_sep PlaceHolder placeHolder concode_field_sep double inducedP2 concode_elem_sep double inducedP1 concode_elem_sep void normalizeF concode_elem_sep double normF concode_elem_sep double fastNormP concode_elem_sep double fastNormP2 concode_elem_sep double normPInf concode_elem_sep double conditionP concode_elem_sep double elementP concode_elem_sep double inducedPInf concode_elem_sep double normP concode_elem_sep double normP2 concode_elem_sep double fastElementP concode_elem_sep double normP1 concode_elem_sep double conditionP2", "code_tokens": ["double", "function", "(", "D1Matrix64F", "arg0", ")", "{", "double", "loc0", "=", "0", ";", "int", "loc1", "=", "arg0", ".", "getNumElements", "(", ")", ";", "for", "(", "int", "loc2", "=", "0", ";", "loc2", "<", "loc1", ";", "loc2", "+", "+", ")", "{", "double", "loc3", "=", "arg0", ".", "get", "(", "loc2", ")", ";", "loc0", "+=", "loc3", "*", "loc3", ";", "}", "return", "Math", ".", "sqrt", "(", "loc0", ")", ";", "}"], "nl_tokens": ["this", "implementation", "of", "the", "frobenius", "norm", "is", "a", "straight", "forward", "implementation", "and", "can", "be", "susceptible", "for", "overflow", "/", "underflow", "issues", ".", "a", "more", "resilient", "implementation", "is", "#normf . concode_field_sep PlaceHolder placeHolder concode_field_sep double inducedP2 concode_elem_sep double inducedP1 concode_elem_sep void normalizeF concode_elem_sep double normF concode_elem_sep double fastNormP concode_elem_sep double fastNormP2 concode_elem_sep double normPInf concode_elem_sep double conditionP concode_elem_sep double elementP concode_elem_sep double inducedPInf concode_elem_sep double normP concode_elem_sep double normP2 concode_elem_sep double fastElementP concode_elem_sep double normP1 concode_elem_sep double conditionP2"]}
{"code": "void function ( Iterable < ? extends T > arg0 ) { offerAll ( arg0 . iterator ( ) ) ; }", "nl": "adds each member of elements as a candidate for the top k elements . thisoperation takes amortized linear time in the length of elements . if all input data to this topkselector is in a single iterable , prefer ordering #leastof iterable , int , which provides a simpler api for that use case . concode_field_sep Comparator<? super T> comparator concode_elem_sep T threshold concode_elem_sep int k concode_elem_sep T[] buffer concode_elem_sep int bufferSize concode_field_sep void offer concode_elem_sep List<T> topK concode_elem_sep int partition concode_elem_sep void trim concode_elem_sep void swap concode_elem_sep TopKSelector<T> least concode_elem_sep TopKSelector<T> least concode_elem_sep TopKSelector<T> greatest concode_elem_sep TopKSelector<T> greatest concode_elem_sep TopKSelector<T> combine", "code_tokens": ["void", "function", "(", "Iterable", "<", "?", "extends", "T", ">", "arg0", ")", "{", "offerAll", "(", "arg0", ".", "iterator", "(", ")", ")", ";", "}"], "nl_tokens": ["adds", "each", "member", "of", "elements", "as", "a", "candidate", "for", "the", "top", "k", "elements", ".", "thisoperation", "takes", "amortized", "linear", "time", "in", "the", "length", "of", "elements", ".", "if", "all", "input", "data", "to", "this", "topkselector", "is", "in", "a", "single", "iterable", ",", "prefer", "ordering", "#leastof iterable , int , which provides a simpler api for that use case . concode_field_sep Comparator<? super T> comparator concode_elem_sep T threshold concode_elem_sep int k concode_elem_sep T[] buffer concode_elem_sep int bufferSize concode_field_sep void offer concode_elem_sep List<T> topK concode_elem_sep int partition concode_elem_sep void trim concode_elem_sep void swap concode_elem_sep TopKSelector<T> least concode_elem_sep TopKSelector<T> least concode_elem_sep TopKSelector<T> greatest concode_elem_sep TopKSelector<T> greatest concode_elem_sep TopKSelector<T> combine"]}
{"code": "void function ( Class < ? > arg0 , Object arg1 ) { isInstanceOf ( arg0 , arg1 , \"srini_string\" ) ; }", "nl": "assert that the provided object is an instance of the provided class . assert.instanceof foo.class , foo ; concode_field_sep PlaceHolder placeHolder concode_field_sep void isTrue concode_elem_sep void isTrue concode_elem_sep void isAssignable concode_elem_sep void isAssignable concode_elem_sep void notNull concode_elem_sep void notNull concode_elem_sep void isNull concode_elem_sep void isNull concode_elem_sep void noNullElements concode_elem_sep void noNullElements concode_elem_sep void state concode_elem_sep void state concode_elem_sep void notEmpty concode_elem_sep void notEmpty concode_elem_sep void notEmpty concode_elem_sep void notEmpty concode_elem_sep void notEmpty concode_elem_sep void notEmpty", "code_tokens": ["void", "function", "(", "Class", "<", "?", ">", "arg0", ",", "Object", "arg1", ")", "{", "isInstanceOf", "(", "arg0", ",", "arg1", ",", "\"srini_string\"", ")", ";", "}"], "nl_tokens": ["assert", "that", "the", "provided", "object", "is", "an", "instance", "of", "the", "provided", "class", ".", "assert", ".", "instanceof", "foo", ".", "class", ",", "foo", ";", "concode_field_sep", "PlaceHolder", "placeHolder", "concode_field_sep", "void", "isTrue", "concode_elem_sep", "void", "isTrue", "concode_elem_sep", "void", "isAssignable", "concode_elem_sep", "void", "isAssignable", "concode_elem_sep", "void", "notNull", "concode_elem_sep", "void", "notNull", "concode_elem_sep", "void", "isNull", "concode_elem_sep", "void", "isNull", "concode_elem_sep", "void", "noNullElements", "concode_elem_sep", "void", "noNullElements", "concode_elem_sep", "void", "state", "concode_elem_sep", "void", "state", "concode_elem_sep", "void", "notEmpty", "concode_elem_sep", "void", "notEmpty", "concode_elem_sep", "void", "notEmpty", "concode_elem_sep", "void", "notEmpty", "concode_elem_sep", "void", "notEmpty", "concode_elem_sep", "void", "notEmpty"]}
{"code": "Class < ? > function ( String arg0 ) { Class < ? > loc0 = COLLECTION_CLASSES_BY_NAMES . typeFor ( arg0 ) ; if ( loc0 != null ) { return loc0 ; } return COLLECTION_INTERFACES_BY_NAMES . typeFor ( arg0 ) ; }", "nl": "returns the collection type if we recognize it by its short name . concode_field_sep TypeMap COLLECTION_INTERFACES_BY_NAMES concode_elem_sep TypeMap COLLECTION_CLASSES_BY_NAMES concode_field_sep int addWithoutDuplicates concode_elem_sep T[] addWithoutDuplicates concode_elem_sep T[] addWithoutDuplicates concode_elem_sep boolean areEqual concode_elem_sep boolean areSemanticEquals concode_elem_sep boolean valuesAreTransitivelyEqual concode_elem_sep boolean isCollectionType concode_elem_sep boolean isCollectionType concode_elem_sep boolean isEmpty concode_elem_sep boolean isNotEmpty concode_elem_sep Set<T> asSet concode_elem_sep Map<V,K> invertedMapFrom concode_elem_sep boolean arraysAreEqual concode_elem_sep Map<K,V> mapFrom", "code_tokens": ["Class", "<", "?", ">", "function", "(", "String", "arg0", ")", "{", "Class", "<", "?", ">", "loc0", "=", "COLLECTION_CLASSES_BY_NAMES", ".", "typeFor", "(", "arg0", ")", ";", "if", "(", "loc0", "!=", "null", ")", "{", "return", "loc0", ";", "}", "return", "COLLECTION_INTERFACES_BY_NAMES", ".", "typeFor", "(", "arg0", ")", ";", "}"], "nl_tokens": ["returns", "the", "collection", "type", "if", "we", "recognize", "it", "by", "its", "short", "name", ".", "concode_field_sep", "TypeMap", "COLLECTION_INTERFACES_BY_NAMES", "concode_elem_sep", "TypeMap", "COLLECTION_CLASSES_BY_NAMES", "concode_field_sep", "int", "addWithoutDuplicates", "concode_elem_sep", "T", "[", "]", "addWithoutDuplicates", "concode_elem_sep", "T", "[", "]", "addWithoutDuplicates", "concode_elem_sep", "boolean", "areEqual", "concode_elem_sep", "boolean", "areSemanticEquals", "concode_elem_sep", "boolean", "valuesAreTransitivelyEqual", "concode_elem_sep", "boolean", "isCollectionType", "concode_elem_sep", "boolean", "isCollectionType", "concode_elem_sep", "boolean", "isEmpty", "concode_elem_sep", "boolean", "isNotEmpty", "concode_elem_sep", "Set", "<", "T", ">", "asSet", "concode_elem_sep", "Map", "<", "V", ",", "K", ">", "invertedMapFrom", "concode_elem_sep", "boolean", "arraysAreEqual", "concode_elem_sep", "Map", "<", "K", ",", "V", ">", "mapFrom"]}
{"code": "List < T > function ( ) { Arrays . sort ( buffer , 0 , bufferSize , comparator ) ; if ( bufferSize > k ) { Arrays . fill ( buffer , k , buffer . length , null ) ; bufferSize = k ; threshold = buffer [ k - 1 ] ; } return Collections . unmodifiableList ( Arrays . asList ( Arrays . copyOf ( buffer , bufferSize ) ) ) ; }", "nl": "returns the top k elements offered to this topkselector , or all elements if fewer than k have been offered , in the order specified by the factory used to createthis topkselector . the returned list is an unmodifiable copy and will not be affected by further changes to this topkselector . this method returns in o k log k time . concode_field_sep Comparator<? super T> comparator concode_elem_sep T threshold concode_elem_sep int k concode_elem_sep T[] buffer concode_elem_sep int bufferSize concode_field_sep void offer concode_elem_sep int partition concode_elem_sep void trim concode_elem_sep void swap concode_elem_sep void offerAll concode_elem_sep void offerAll concode_elem_sep TopKSelector<T> least concode_elem_sep TopKSelector<T> least concode_elem_sep TopKSelector<T> greatest concode_elem_sep TopKSelector<T> greatest concode_elem_sep TopKSelector<T> combine", "code_tokens": ["List", "<", "T", ">", "function", "(", ")", "{", "Arrays", ".", "sort", "(", "buffer", ",", "0", ",", "bufferSize", ",", "comparator", ")", ";", "if", "(", "bufferSize", ">", "k", ")", "{", "Arrays", ".", "fill", "(", "buffer", ",", "k", ",", "buffer", ".", "length", ",", "null", ")", ";", "bufferSize", "=", "k", ";", "threshold", "=", "buffer", "[", "k", "-", "1", "]", ";", "}", "return", "Collections", ".", "unmodifiableList", "(", "Arrays", ".", "asList", "(", "Arrays", ".", "copyOf", "(", "buffer", ",", "bufferSize", ")", ")", ")", ";", "}"], "nl_tokens": ["returns", "the", "top", "k", "elements", "offered", "to", "this", "topkselector", ",", "or", "all", "elements", "if", "fewer", "than", "k", "have", "been", "offered", ",", "in", "the", "order", "specified", "by", "the", "factory", "used", "to", "createthis", "topkselector", ".", "the", "returned", "list", "is", "an", "unmodifiable", "copy", "and", "will", "not", "be", "affected", "by", "further", "changes", "to", "this", "topkselector", ".", "this", "method", "returns", "in", "o", "k", "log", "k", "time", ".", "concode_field_sep", "Comparator", "<", "?", "super", "T", ">", "comparator", "concode_elem_sep", "T", "threshold", "concode_elem_sep", "int", "k", "concode_elem_sep", "T", "[", "]", "buffer", "concode_elem_sep", "int", "bufferSize", "concode_field_sep", "void", "offer", "concode_elem_sep", "int", "partition", "concode_elem_sep", "void", "trim", "concode_elem_sep", "void", "swap", "concode_elem_sep", "void", "offerAll", "concode_elem_sep", "void", "offerAll", "concode_elem_sep", "TopKSelector", "<", "T", ">", "least", "concode_elem_sep", "TopKSelector", "<", "T", ">", "least", "concode_elem_sep", "TopKSelector", "<", "T", ">", "greatest", "concode_elem_sep", "TopKSelector", "<", "T", ">", "greatest", "concode_elem_sep", "TopKSelector", "<", "T", ">", "combine"]}
{"code": "void function ( BigDecimal arg0 ) { this . runId = arg0 ; }", "nl": "sets the run id . concode_field_sep long serialVersionUID concode_elem_sep String isSystemDerived concode_elem_sep String isActive concode_elem_sep BigDecimal predecessorId concode_elem_sep String srcFileName concode_elem_sep BigDecimal successorId concode_elem_sep BigDecimal feedId concode_elem_sep String checksum concode_elem_sep String transmissionDatasetId concode_elem_sep String comments concode_elem_sep String inactivationReasonType concode_elem_sep String isFormatValid concode_elem_sep long dataUnitId concode_elem_sep Timestamp receiptDate concode_elem_sep String srcUniqueFileName concode_elem_sep Timestamp createdDate concode_elem_sep Long dataSetId concode_elem_sep BigDecimal fileSize concode_elem_sep String destFileName concode_elem_sep String loadedInCats concode_elem_sep String checksumType concode_elem_sep Timestamp modifiedDate concode_elem_sep BigDecimal runId concode_elem_sep String isPrepopulated concode_elem_sep String isBulk concode_elem_sep String isUpdate concode_elem_sep String receiptDateType concode_elem_sep String status concode_field_sep void setIsSystemDerived concode_elem_sep void setIsPrepopulated concode_elem_sep String getStatus concode_elem_sep String getIsUpdate concode_elem_sep long getDataUnitId concode_elem_sep BigDecimal getFileSize concode_elem_sep void setInactivationReasonType concode_elem_sep void setDataUnitId concode_elem_sep String getComments concode_elem_sep Timestamp getCreatedDate concode_elem_sep void setFileSize concode_elem_sep BigDecimal getPredecessorId concode_elem_sep void setIsUpdate concode_elem_sep String getReceiptDateType concode_elem_sep BigDecimal getFeedId concode_elem_sep void setReceiptDate concode_elem_sep Timestamp getModifiedDate concode_elem_sep void setSuccessorId concode_elem_sep void setDestFileName concode_elem_sep void setIsBulk concode_elem_sep String getIsFormatValid concode_elem_sep void setDataSetId concode_elem_sep void setIsActive concode_elem_sep void setChecksumType concode_elem_sep void setFeedId concode_elem_sep String getInactivationReasonType concode_elem_sep String getSrcUniqueFileName concode_elem_sep Long getDataSetId concode_elem_sep void setReceiptDateType concode_elem_sep BigDecimal getRunId concode_elem_sep void setSrcFileName concode_elem_sep String getChecksumType concode_elem_sep String getSrcFileName concode_elem_sep String getChecksum concode_elem_sep String getDestFileName concode_elem_sep Timestamp getReceiptDate concode_elem_sep void setTransmissionDatasetId concode_elem_sep String getTransmissionDatasetId concode_elem_sep void setComments concode_elem_sep String getLoadedInCats concode_elem_sep BigDecimal getSuccessorId concode_elem_sep void setLoadedInCats concode_elem_sep String getIsPrepopulated concode_elem_sep void setSrcUniqueFileName concode_elem_sep void setChecksum concode_elem_sep void setIsFormatValid concode_elem_sep String getIsBulk concode_elem_sep void setStatus concode_elem_sep String getIsActive concode_elem_sep void setModifiedDate concode_elem_sep void setCreatedDate concode_elem_sep void setPredecessorId concode_elem_sep String getIsSystemDerived", "code_tokens": ["void", "function", "(", "BigDecimal", "arg0", ")", "{", "this", ".", "runId", "=", "arg0", ";", "}"], "nl_tokens": ["sets", "the", "run", "id", ".", "concode_field_sep", "long", "serialVersionUID", "concode_elem_sep", "String", "isSystemDerived", "concode_elem_sep", "String", "isActive", "concode_elem_sep", "BigDecimal", "predecessorId", "concode_elem_sep", "String", "srcFileName", "concode_elem_sep", "BigDecimal", "successorId", "concode_elem_sep", "BigDecimal", "feedId", "concode_elem_sep", "String", "checksum", "concode_elem_sep", "String", "transmissionDatasetId", "concode_elem_sep", "String", "comments", "concode_elem_sep", "String", "inactivationReasonType", "concode_elem_sep", "String", "isFormatValid", "concode_elem_sep", "long", "dataUnitId", "concode_elem_sep", "Timestamp", "receiptDate", "concode_elem_sep", "String", "srcUniqueFileName", "concode_elem_sep", "Timestamp", "createdDate", "concode_elem_sep", "Long", "dataSetId", "concode_elem_sep", "BigDecimal", "fileSize", "concode_elem_sep", "String", "destFileName", "concode_elem_sep", "String", "loadedInCats", "concode_elem_sep", "String", "checksumType", "concode_elem_sep", "Timestamp", "modifiedDate", "concode_elem_sep", "BigDecimal", "runId", "concode_elem_sep", "String", "isPrepopulated", "concode_elem_sep", "String", "isBulk", "concode_elem_sep", "String", "isUpdate", "concode_elem_sep", "String", "receiptDateType", "concode_elem_sep", "String", "status", "concode_field_sep", "void", "setIsSystemDerived", "concode_elem_sep", "void", "setIsPrepopulated", "concode_elem_sep", "String", "getStatus", "concode_elem_sep", "String", "getIsUpdate", "concode_elem_sep", "long", "getDataUnitId", "concode_elem_sep", "BigDecimal", "getFileSize", "concode_elem_sep", "void", "setInactivationReasonType", "concode_elem_sep", "void", "setDataUnitId", "concode_elem_sep", "String", "getComments", "concode_elem_sep", "Timestamp", "getCreatedDate", "concode_elem_sep", "void", "setFileSize", "concode_elem_sep", "BigDecimal", "getPredecessorId", "concode_elem_sep", "void", "setIsUpdate", "concode_elem_sep", "String", "getReceiptDateType", "concode_elem_sep", "BigDecimal", "getFeedId", "concode_elem_sep", "void", "setReceiptDate", "concode_elem_sep", "Timestamp", "getModifiedDate", "concode_elem_sep", "void", "setSuccessorId", "concode_elem_sep", "void", "setDestFileName", "concode_elem_sep", "void", "setIsBulk", "concode_elem_sep", "String", "getIsFormatValid", "concode_elem_sep", "void", "setDataSetId", "concode_elem_sep", "void", "setIsActive", "concode_elem_sep", "void", "setChecksumType", "concode_elem_sep", "void", "setFeedId", "concode_elem_sep", "String", "getInactivationReasonType", "concode_elem_sep", "String", "getSrcUniqueFileName", "concode_elem_sep", "Long", "getDataSetId", "concode_elem_sep", "void", "setReceiptDateType", "concode_elem_sep", "BigDecimal", "getRunId", "concode_elem_sep", "void", "setSrcFileName", "concode_elem_sep", "String", "getChecksumType", "concode_elem_sep", "String", "getSrcFileName", "concode_elem_sep", "String", "getChecksum", "concode_elem_sep", "String", "getDestFileName", "concode_elem_sep", "Timestamp", "getReceiptDate", "concode_elem_sep", "void", "setTransmissionDatasetId", "concode_elem_sep", "String", "getTransmissionDatasetId", "concode_elem_sep", "void", "setComments", "concode_elem_sep", "String", "getLoadedInCats", "concode_elem_sep", "BigDecimal", "getSuccessorId", "concode_elem_sep", "void", "setLoadedInCats", "concode_elem_sep", "String", "getIsPrepopulated", "concode_elem_sep", "void", "setSrcUniqueFileName", "concode_elem_sep", "void", "setChecksum", "concode_elem_sep", "void", "setIsFormatValid", "concode_elem_sep", "String", "getIsBulk", "concode_elem_sep", "void", "setStatus", "concode_elem_sep", "String", "getIsActive", "concode_elem_sep", "void", "setModifiedDate", "concode_elem_sep", "void", "setCreatedDate", "concode_elem_sep", "void", "setPredecessorId", "concode_elem_sep", "String", "getIsSystemDerived"]}
{"code": "void function ( ) { mTextView . removeTextChangedListener ( mChangeListener ) ; }", "nl": "disconnect this undo/redo from the text view . concode_field_sep LinkedList<EditItem> mmHistory concode_elem_sep TextView mTextView concode_elem_sep int mmMaxHistorySize concode_elem_sep EditHistory mEditHistory concode_elem_sep CharSequence mmAfter concode_elem_sep CharSequence mmBefore concode_elem_sep boolean mIsUndoOrRedo concode_elem_sep int mmPosition concode_elem_sep EditTextChangeListener mChangeListener concode_elem_sep CharSequence mBeforeChange concode_elem_sep CharSequence mAfterChange concode_elem_sep int mmStart concode_field_sep void add concode_elem_sep EditItem getPrevious concode_elem_sep void onTextChanged concode_elem_sep void storePersistentState concode_elem_sep void clear concode_elem_sep boolean getCanRedo concode_elem_sep void afterTextChanged concode_elem_sep void redo concode_elem_sep EditItem getNext concode_elem_sep boolean getCanUndo concode_elem_sep void trimHistory concode_elem_sep boolean restorePersistentState concode_elem_sep void undo concode_elem_sep void clearHistory concode_elem_sep void beforeTextChanged concode_elem_sep boolean doRestorePersistentState concode_elem_sep void setMaxHistorySize concode_elem_sep void setMaxHistorySize", "code_tokens": ["void", "function", "(", ")", "{", "mTextView", ".", "removeTextChangedListener", "(", "mChangeListener", ")", ";", "}"], "nl_tokens": ["disconnect", "this", "undo", "/", "redo", "from", "the", "text", "view", ".", "concode_field_sep", "LinkedList", "<", "EditItem", ">", "mmHistory", "concode_elem_sep", "TextView", "mTextView", "concode_elem_sep", "int", "mmMaxHistorySize", "concode_elem_sep", "EditHistory", "mEditHistory", "concode_elem_sep", "CharSequence", "mmAfter", "concode_elem_sep", "CharSequence", "mmBefore", "concode_elem_sep", "boolean", "mIsUndoOrRedo", "concode_elem_sep", "int", "mmPosition", "concode_elem_sep", "EditTextChangeListener", "mChangeListener", "concode_elem_sep", "CharSequence", "mBeforeChange", "concode_elem_sep", "CharSequence", "mAfterChange", "concode_elem_sep", "int", "mmStart", "concode_field_sep", "void", "add", "concode_elem_sep", "EditItem", "getPrevious", "concode_elem_sep", "void", "onTextChanged", "concode_elem_sep", "void", "storePersistentState", "concode_elem_sep", "void", "clear", "concode_elem_sep", "boolean", "getCanRedo", "concode_elem_sep", "void", "afterTextChanged", "concode_elem_sep", "void", "redo", "concode_elem_sep", "EditItem", "getNext", "concode_elem_sep", "boolean", "getCanUndo", "concode_elem_sep", "void", "trimHistory", "concode_elem_sep", "boolean", "restorePersistentState", "concode_elem_sep", "void", "undo", "concode_elem_sep", "void", "clearHistory", "concode_elem_sep", "void", "beforeTextChanged", "concode_elem_sep", "boolean", "doRestorePersistentState", "concode_elem_sep", "void", "setMaxHistorySize", "concode_elem_sep", "void", "setMaxHistorySize"]}
{"code": "void function ( DefaultMapNode arg0 ) { nodes . put ( arg0 . getId ( ) , arg0 ) ; }", "nl": "adds a node to the central node hashtable . concode_field_sep BoundingBox boundingBox concode_elem_sep Hashtable<Long,MapNode> nodes concode_elem_sep Hashtable<Long,MapWay> ways concode_elem_sep ArrayList<MapEventListener> listeners concode_elem_sep long nextTrackId concode_elem_sep EntityClassifier<EntityViewInfo> entityClassifier concode_elem_sep KDTree entityTree concode_elem_sep Logger LOG concode_elem_sep ArrayList<MapNode> markers concode_elem_sep ArrayList<MapNode> pois concode_elem_sep ArrayList<Track> tracks concode_field_sep void visitEntities concode_elem_sep List<Track> getTracks concode_elem_sep List<MapNode> getWayNodes concode_elem_sep Object[][] getStatistics concode_elem_sep MapNode getNearestWayNode concode_elem_sep void setBoundingBox concode_elem_sep void removeMarker concode_elem_sep void clearTrack concode_elem_sep List<MapEntity> getVisibleMarkersAndTracks concode_elem_sep KDTree getEntityTree concode_elem_sep void fireMapDataEvent concode_elem_sep BoundingBox getBoundingBox concode_elem_sep void clearMarkersAndTracks concode_elem_sep List<MapNode> getMarkers concode_elem_sep int getNodeCount concode_elem_sep void compile concode_elem_sep List<MapNode> getPlaces concode_elem_sep void createTrack concode_elem_sep int getPoiCount concode_elem_sep Collection<MapWay> getWays concode_elem_sep List<MapNode> getPois concode_elem_sep void close concode_elem_sep void addToTrack concode_elem_sep Track getTrack concode_elem_sep Track getTrack concode_elem_sep void clear concode_elem_sep boolean isEmpty concode_elem_sep void setEntityClassifier concode_elem_sep void addMapDataEventListener concode_elem_sep void applyClassifierAndUpdateTree concode_elem_sep EntityFinder getEntityFinder concode_elem_sep void removeMapDataEventListener concode_elem_sep MapWay getWay concode_elem_sep MapBuilder getBuilder concode_elem_sep int getWayCount concode_elem_sep void addWay concode_elem_sep MapNode getNode concode_elem_sep void updateEntityViewInfo concode_elem_sep MapNode addMarker", "code_tokens": ["void", "function", "(", "DefaultMapNode", "arg0", ")", "{", "nodes", ".", "put", "(", "arg0", ".", "getId", "(", ")", ",", "arg0", ")", ";", "}"], "nl_tokens": ["adds", "a", "node", "to", "the", "central", "node", "hashtable", ".", "concode_field_sep", "BoundingBox", "boundingBox", "concode_elem_sep", "Hashtable", "<", "Long", ",", "MapNode", ">", "nodes", "concode_elem_sep", "Hashtable", "<", "Long", ",", "MapWay", ">", "ways", "concode_elem_sep", "ArrayList", "<", "MapEventListener", ">", "listeners", "concode_elem_sep", "long", "nextTrackId", "concode_elem_sep", "EntityClassifier", "<", "EntityViewInfo", ">", "entityClassifier", "concode_elem_sep", "KDTree", "entityTree", "concode_elem_sep", "Logger", "LOG", "concode_elem_sep", "ArrayList", "<", "MapNode", ">", "markers", "concode_elem_sep", "ArrayList", "<", "MapNode", ">", "pois", "concode_elem_sep", "ArrayList", "<", "Track", ">", "tracks", "concode_field_sep", "void", "visitEntities", "concode_elem_sep", "List", "<", "Track", ">", "getTracks", "concode_elem_sep", "List", "<", "MapNode", ">", "getWayNodes", "concode_elem_sep", "Object", "[", "]", "[", "]", "getStatistics", "concode_elem_sep", "MapNode", "getNearestWayNode", "concode_elem_sep", "void", "setBoundingBox", "concode_elem_sep", "void", "removeMarker", "concode_elem_sep", "void", "clearTrack", "concode_elem_sep", "List", "<", "MapEntity", ">", "getVisibleMarkersAndTracks", "concode_elem_sep", "KDTree", "getEntityTree", "concode_elem_sep", "void", "fireMapDataEvent", "concode_elem_sep", "BoundingBox", "getBoundingBox", "concode_elem_sep", "void", "clearMarkersAndTracks", "concode_elem_sep", "List", "<", "MapNode", ">", "getMarkers", "concode_elem_sep", "int", "getNodeCount", "concode_elem_sep", "void", "compile", "concode_elem_sep", "List", "<", "MapNode", ">", "getPlaces", "concode_elem_sep", "void", "createTrack", "concode_elem_sep", "int", "getPoiCount", "concode_elem_sep", "Collection", "<", "MapWay", ">", "getWays", "concode_elem_sep", "List", "<", "MapNode", ">", "getPois", "concode_elem_sep", "void", "close", "concode_elem_sep", "void", "addToTrack", "concode_elem_sep", "Track", "getTrack", "concode_elem_sep", "Track", "getTrack", "concode_elem_sep", "void", "clear", "concode_elem_sep", "boolean", "isEmpty", "concode_elem_sep", "void", "setEntityClassifier", "concode_elem_sep", "void", "addMapDataEventListener", "concode_elem_sep", "void", "applyClassifierAndUpdateTree", "concode_elem_sep", "EntityFinder", "getEntityFinder", "concode_elem_sep", "void", "removeMapDataEventListener", "concode_elem_sep", "MapWay", "getWay", "concode_elem_sep", "MapBuilder", "getBuilder", "concode_elem_sep", "int", "getWayCount", "concode_elem_sep", "void", "addWay", "concode_elem_sep", "MapNode", "getNode", "concode_elem_sep", "void", "updateEntityViewInfo", "concode_elem_sep", "MapNode", "addMarker"]}
{"code": "void function ( Attributes arg0 ) { attributes = new AttributesImpl ( arg0 ) ; }", "nl": "change the attributes for this element . concode_field_sep String name concode_elem_sep Attributes attributes concode_elem_sep StringBuffer text concode_field_sep void setName concode_elem_sep String getName concode_elem_sep String getAttribute concode_elem_sep String getAttributeValue concode_elem_sep String getText concode_elem_sep void addText concode_elem_sep void addText concode_elem_sep int length concode_elem_sep int getNumAttributes concode_elem_sep void resetText concode_elem_sep String getAttributeName concode_elem_sep void setText", "code_tokens": ["void", "function", "(", "Attributes", "arg0", ")", "{", "attributes", "=", "new", "AttributesImpl", "(", "arg0", ")", ";", "}"], "nl_tokens": ["change", "the", "attributes", "for", "this", "element", ".", "concode_field_sep", "String", "name", "concode_elem_sep", "Attributes", "attributes", "concode_elem_sep", "StringBuffer", "text", "concode_field_sep", "void", "setName", "concode_elem_sep", "String", "getName", "concode_elem_sep", "String", "getAttribute", "concode_elem_sep", "String", "getAttributeValue", "concode_elem_sep", "String", "getText", "concode_elem_sep", "void", "addText", "concode_elem_sep", "void", "addText", "concode_elem_sep", "int", "length", "concode_elem_sep", "int", "getNumAttributes", "concode_elem_sep", "void", "resetText", "concode_elem_sep", "String", "getAttributeName", "concode_elem_sep", "void", "setText"]}
{"code": "Integer function ( ) { return this . _id ; }", "nl": "all get methods concode_field_sep String _link concode_elem_sep String _rss_link concode_elem_sep String _title concode_elem_sep Integer _id concode_elem_sep String _image concode_elem_sep String _description concode_field_sep void setLink concode_elem_sep String getLink concode_elem_sep String getTitle concode_elem_sep void setRSSLink concode_elem_sep void setId concode_elem_sep void setTitle concode_elem_sep void setDescription concode_elem_sep String getRSSLink concode_elem_sep String getDescription concode_elem_sep String getImage concode_elem_sep void setImage", "code_tokens": ["Integer", "function", "(", ")", "{", "return", "this", ".", "_id", ";", "}"], "nl_tokens": ["all", "get", "methods", "concode_field_sep", "String", "_link", "concode_elem_sep", "String", "_rss_link", "concode_elem_sep", "String", "_title", "concode_elem_sep", "Integer", "_id", "concode_elem_sep", "String", "_image", "concode_elem_sep", "String", "_description", "concode_field_sep", "void", "setLink", "concode_elem_sep", "String", "getLink", "concode_elem_sep", "String", "getTitle", "concode_elem_sep", "void", "setRSSLink", "concode_elem_sep", "void", "setId", "concode_elem_sep", "void", "setTitle", "concode_elem_sep", "void", "setDescription", "concode_elem_sep", "String", "getRSSLink", "concode_elem_sep", "String", "getDescription", "concode_elem_sep", "String", "getImage", "concode_elem_sep", "void", "setImage"]}
{"code": "String function ( ) { return pmids ; }", "nl": "gets the pmids . concode_field_sep String interactionType concode_elem_sep String experimentTypes concode_elem_sep long geneB concode_elem_sep String pmids concode_elem_sep long geneA concode_elem_sep String source concode_field_sep void setSource concode_elem_sep String toSif concode_elem_sep void setExperimentTypes concode_elem_sep void setGeneA concode_elem_sep void setGeneB concode_elem_sep String getInteractionType concode_elem_sep long getGeneA concode_elem_sep long getGeneB concode_elem_sep void setPmids concode_elem_sep String getSource concode_elem_sep String toString concode_elem_sep void setInteractionType concode_elem_sep String getExperimentTypes", "code_tokens": ["String", "function", "(", ")", "{", "return", "pmids", ";", "}"], "nl_tokens": ["gets", "the", "pmids", ".", "concode_field_sep", "String", "interactionType", "concode_elem_sep", "String", "experimentTypes", "concode_elem_sep", "long", "geneB", "concode_elem_sep", "String", "pmids", "concode_elem_sep", "long", "geneA", "concode_elem_sep", "String", "source", "concode_field_sep", "void", "setSource", "concode_elem_sep", "String", "toSif", "concode_elem_sep", "void", "setExperimentTypes", "concode_elem_sep", "void", "setGeneA", "concode_elem_sep", "void", "setGeneB", "concode_elem_sep", "String", "getInteractionType", "concode_elem_sep", "long", "getGeneA", "concode_elem_sep", "long", "getGeneB", "concode_elem_sep", "void", "setPmids", "concode_elem_sep", "String", "getSource", "concode_elem_sep", "String", "toString", "concode_elem_sep", "void", "setInteractionType", "concode_elem_sep", "String", "getExperimentTypes"]}
{"code": "int function ( ) { return children == null ? 1 : 1 + Math . max ( children [ 0 ] . depth ( ) , children [ 1 ] . depth ( ) ) ; }", "nl": "returns the depth of the tree longest path length from root to leaf . concode_field_sep BoundingBox bb concode_elem_sep float splitValue concode_elem_sep float testLatMin concode_elem_sep boolean splitAtLat concode_elem_sep int maxDepth concode_elem_sep float testLatMax concode_elem_sep int depth concode_elem_sep int maxEntities concode_elem_sep KDTree[] children concode_elem_sep ArrayList<DefaultMapEntity> entities concode_elem_sep float testLonMax concode_elem_sep boolean isTrue concode_elem_sep boolean isSorted concode_elem_sep float testLonMin concode_field_sep void setUnsorted concode_elem_sep void visitEntities concode_elem_sep int compare concode_elem_sep List<double[]> getSplitCoords concode_elem_sep void insertEntity concode_elem_sep void computeSplitValues concode_elem_sep boolean isVisible concode_elem_sep BoundingBox getBoundingBox", "code_tokens": ["int", "function", "(", ")", "{", "return", "children", "==", "null", "?", "1", ":", "1", "+", "Math", ".", "max", "(", "children", "[", "0", "]", ".", "depth", "(", ")", ",", "children", "[", "1", "]", ".", "depth", "(", ")", ")", ";", "}"], "nl_tokens": ["returns", "the", "depth", "of", "the", "tree", "longest", "path", "length", "from", "root", "to", "leaf", ".", "concode_field_sep", "BoundingBox", "bb", "concode_elem_sep", "float", "splitValue", "concode_elem_sep", "float", "testLatMin", "concode_elem_sep", "boolean", "splitAtLat", "concode_elem_sep", "int", "maxDepth", "concode_elem_sep", "float", "testLatMax", "concode_elem_sep", "int", "depth", "concode_elem_sep", "int", "maxEntities", "concode_elem_sep", "KDTree", "[", "]", "children", "concode_elem_sep", "ArrayList", "<", "DefaultMapEntity", ">", "entities", "concode_elem_sep", "float", "testLonMax", "concode_elem_sep", "boolean", "isTrue", "concode_elem_sep", "boolean", "isSorted", "concode_elem_sep", "float", "testLonMin", "concode_field_sep", "void", "setUnsorted", "concode_elem_sep", "void", "visitEntities", "concode_elem_sep", "int", "compare", "concode_elem_sep", "List", "<", "double", "[", "]", ">", "getSplitCoords", "concode_elem_sep", "void", "insertEntity", "concode_elem_sep", "void", "computeSplitValues", "concode_elem_sep", "boolean", "isVisible", "concode_elem_sep", "BoundingBox", "getBoundingBox"]}
{"code": "Sha256Hash function ( ) { return hash ; }", "nl": "the hash of the transaction which holds this output . concode_field_sep boolean coinbase concode_elem_sep long serialVersionUID concode_elem_sep long index concode_elem_sep Coin value concode_elem_sep byte[] scriptBytes concode_elem_sep Sha256Hash hash concode_elem_sep int height concode_field_sep Coin getValue concode_elem_sep int getHeight concode_elem_sep long getIndex concode_elem_sep boolean isCoinbase concode_elem_sep int hashCode concode_elem_sep void serializeToStream concode_elem_sep boolean equals concode_elem_sep String toString concode_elem_sep byte[] getScriptBytes", "code_tokens": ["Sha256Hash", "function", "(", ")", "{", "return", "hash", ";", "}"], "nl_tokens": ["the", "hash", "of", "the", "transaction", "which", "holds", "this", "output", ".", "concode_field_sep", "boolean", "coinbase", "concode_elem_sep", "long", "serialVersionUID", "concode_elem_sep", "long", "index", "concode_elem_sep", "Coin", "value", "concode_elem_sep", "byte", "[", "]", "scriptBytes", "concode_elem_sep", "Sha256Hash", "hash", "concode_elem_sep", "int", "height", "concode_field_sep", "Coin", "getValue", "concode_elem_sep", "int", "getHeight", "concode_elem_sep", "long", "getIndex", "concode_elem_sep", "boolean", "isCoinbase", "concode_elem_sep", "int", "hashCode", "concode_elem_sep", "void", "serializeToStream", "concode_elem_sep", "boolean", "equals", "concode_elem_sep", "String", "toString", "concode_elem_sep", "byte", "[", "]", "getScriptBytes"]}
{"code": "void function ( ) { assertEquals ( 11 , ttm . getNumber ( ) ) ; }", "nl": "test method for net.sf.marineapi.nmea.parser.ttmparser #getnumber . concode_field_sep String EXAMPLE concode_elem_sep TTMParser ttm concode_elem_sep TTMParser empty concode_field_sep void testGetAcquisitionType concode_elem_sep void testGetDistance concode_elem_sep void testSetStatus concode_elem_sep void testSetNumber concode_elem_sep void testSetDistanceOfCPA concode_elem_sep void testConstructor concode_elem_sep void testGetTime concode_elem_sep void testSetCourse concode_elem_sep void testGetName concode_elem_sep void testGetDistanceOfCPA concode_elem_sep void setUp concode_elem_sep void testGetCourse concode_elem_sep void testSetReferenceTrue concode_elem_sep void testSetReferenceFalse concode_elem_sep void testSetAcquisitionType concode_elem_sep void testSetBearing concode_elem_sep void testGetBearing concode_elem_sep void testSetDistance concode_elem_sep void testSetTimeToCPA concode_elem_sep void testSetTime concode_elem_sep void testGetSpeed concode_elem_sep void testGetStatus concode_elem_sep void testGetTimeToCPA concode_elem_sep void testSetName concode_elem_sep void testSetSpeed", "code_tokens": ["void", "function", "(", ")", "{", "assertEquals", "(", "11", ",", "ttm", ".", "getNumber", "(", ")", ")", ";", "}"], "nl_tokens": ["test", "method", "for", "net", ".", "sf", ".", "marineapi", ".", "nmea", ".", "parser", ".", "ttmparser", "#getnumber . concode_field_sep String EXAMPLE concode_elem_sep TTMParser ttm concode_elem_sep TTMParser empty concode_field_sep void testGetAcquisitionType concode_elem_sep void testGetDistance concode_elem_sep void testSetStatus concode_elem_sep void testSetNumber concode_elem_sep void testSetDistanceOfCPA concode_elem_sep void testConstructor concode_elem_sep void testGetTime concode_elem_sep void testSetCourse concode_elem_sep void testGetName concode_elem_sep void testGetDistanceOfCPA concode_elem_sep void setUp concode_elem_sep void testGetCourse concode_elem_sep void testSetReferenceTrue concode_elem_sep void testSetReferenceFalse concode_elem_sep void testSetAcquisitionType concode_elem_sep void testSetBearing concode_elem_sep void testGetBearing concode_elem_sep void testSetDistance concode_elem_sep void testSetTimeToCPA concode_elem_sep void testSetTime concode_elem_sep void testGetSpeed concode_elem_sep void testGetStatus concode_elem_sep void testGetTimeToCPA concode_elem_sep void testSetName concode_elem_sep void testSetSpeed"]}
{"code": "void function ( final HttpParams arg0 , boolean arg1 ) { if ( arg0 == null ) { throw new IllegalArgumentException ( \"srini_string\" ) ; } arg0 . setBooleanParameter ( CoreConnectionPNames . TCP_NODELAY , arg1 ) ; }", "nl": "sets value of the coreconnectionpnames #tcp_nodelay parameter . concode_field_sep PlaceHolder placeHolder concode_field_sep void setSoReuseaddr concode_elem_sep int getLinger concode_elem_sep void setConnectionTimeout concode_elem_sep void setSoTimeout concode_elem_sep boolean getSoReuseaddr concode_elem_sep boolean getTcpNoDelay concode_elem_sep void setLinger concode_elem_sep int getSocketBufferSize concode_elem_sep void setSocketBufferSize concode_elem_sep int getSoTimeout concode_elem_sep boolean isStaleCheckingEnabled concode_elem_sep void setStaleCheckingEnabled concode_elem_sep int getConnectionTimeout", "code_tokens": ["void", "function", "(", "final", "HttpParams", "arg0", ",", "boolean", "arg1", ")", "{", "if", "(", "arg0", "==", "null", ")", "{", "throw", "new", "IllegalArgumentException", "(", "\"srini_string\"", ")", ";", "}", "arg0", ".", "setBooleanParameter", "(", "CoreConnectionPNames", ".", "TCP_NODELAY", ",", "arg1", ")", ";", "}"], "nl_tokens": ["sets", "value", "of", "the", "coreconnectionpnames", "#tcp_nodelay parameter . concode_field_sep PlaceHolder placeHolder concode_field_sep void setSoReuseaddr concode_elem_sep int getLinger concode_elem_sep void setConnectionTimeout concode_elem_sep void setSoTimeout concode_elem_sep boolean getSoReuseaddr concode_elem_sep boolean getTcpNoDelay concode_elem_sep void setLinger concode_elem_sep int getSocketBufferSize concode_elem_sep void setSocketBufferSize concode_elem_sep int getSoTimeout concode_elem_sep boolean isStaleCheckingEnabled concode_elem_sep void setStaleCheckingEnabled concode_elem_sep int getConnectionTimeout"]}
{"code": "void function ( HttpServletRequest arg0 ) { arg0 . getSession ( ) . removeAttribute ( EMAIL ) ; }", "nl": "logs out the user . concode_field_sep String EMAIL concode_field_sep boolean isUserAuthenticated concode_elem_sep void loginUser concode_elem_sep String getEmailId", "code_tokens": ["void", "function", "(", "HttpServletRequest", "arg0", ")", "{", "arg0", ".", "getSession", "(", ")", ".", "removeAttribute", "(", "EMAIL", ")", ";", "}"], "nl_tokens": ["logs", "out", "the", "user", ".", "concode_field_sep", "String", "EMAIL", "concode_field_sep", "boolean", "isUserAuthenticated", "concode_elem_sep", "void", "loginUser", "concode_elem_sep", "String", "getEmailId"]}
{"code": "boolean function ( CharSequence arg0 , int arg1 ) { return arg1 >= 0 && arg1 <= ( arg0 . length ( ) - 2 ) && Character . isHighSurrogate ( arg0 . charAt ( arg1 ) ) && Character . isLowSurrogate ( arg0 . charAt ( arg1 + 1 ) ) ; }", "nl": "true when a valid surrogate pair starts at the given index in the given string . out-of-range indexes return false . concode_field_sep PlaceHolder placeHolder concode_field_sep String nullToEmpty concode_elem_sep String padStart concode_elem_sep String commonPrefix concode_elem_sep boolean isNullOrEmpty concode_elem_sep String repeat concode_elem_sep String commonSuffix concode_elem_sep String emptyToNull concode_elem_sep String padEnd", "code_tokens": ["boolean", "function", "(", "CharSequence", "arg0", ",", "int", "arg1", ")", "{", "return", "arg1", ">=", "0", "&", "&", "arg1", "<=", "(", "arg0", ".", "length", "(", ")", "-", "2", ")", "&", "&", "Character", ".", "isHighSurrogate", "(", "arg0", ".", "charAt", "(", "arg1", ")", ")", "&", "&", "Character", ".", "isLowSurrogate", "(", "arg0", ".", "charAt", "(", "arg1", "+", "1", ")", ")", ";", "}"], "nl_tokens": ["true", "when", "a", "valid", "surrogate", "pair", "starts", "at", "the", "given", "index", "in", "the", "given", "string", ".", "out", "-", "of", "-", "range", "indexes", "return", "false", ".", "concode_field_sep", "PlaceHolder", "placeHolder", "concode_field_sep", "String", "nullToEmpty", "concode_elem_sep", "String", "padStart", "concode_elem_sep", "String", "commonPrefix", "concode_elem_sep", "boolean", "isNullOrEmpty", "concode_elem_sep", "String", "repeat", "concode_elem_sep", "String", "commonSuffix", "concode_elem_sep", "String", "emptyToNull", "concode_elem_sep", "String", "padEnd"]}
{"code": "TypeNode function ( String arg0 , Object ... arg1 ) { return ( TypeNode ) parse ( TYPE , arg0 , arg1 ) ; }", "nl": "parse a string into a typenode ast node , applying substitutions . concode_field_sep ExtensionInfo ext concode_elem_sep int EXPR concode_elem_sep int DECL concode_elem_sep Position pos concode_elem_sep int MEMB concode_elem_sep int STMT concode_elem_sep int TYPE concode_elem_sep int FILE concode_field_sep ClassMember parseMember concode_elem_sep ClassMember parseMember concode_elem_sep QQParser parser concode_elem_sep Stmt parseStmt concode_elem_sep Stmt parseStmt concode_elem_sep ClassDecl parseDecl concode_elem_sep ClassDecl parseDecl concode_elem_sep SourceFile parseFile concode_elem_sep SourceFile parseFile concode_elem_sep Position type_position concode_elem_sep Node parse concode_elem_sep Lexer lexer concode_elem_sep Expr parseExpr concode_elem_sep Expr parseExpr", "code_tokens": ["TypeNode", "function", "(", "String", "arg0", ",", "Object", "...", "arg1", ")", "{", "return", "(", "TypeNode", ")", "parse", "(", "TYPE", ",", "arg0", ",", "arg1", ")", ";", "}"], "nl_tokens": ["parse", "a", "string", "into", "a", "typenode", "ast", "node", ",", "applying", "substitutions", ".", "concode_field_sep", "ExtensionInfo", "ext", "concode_elem_sep", "int", "EXPR", "concode_elem_sep", "int", "DECL", "concode_elem_sep", "Position", "pos", "concode_elem_sep", "int", "MEMB", "concode_elem_sep", "int", "STMT", "concode_elem_sep", "int", "TYPE", "concode_elem_sep", "int", "FILE", "concode_field_sep", "ClassMember", "parseMember", "concode_elem_sep", "ClassMember", "parseMember", "concode_elem_sep", "QQParser", "parser", "concode_elem_sep", "Stmt", "parseStmt", "concode_elem_sep", "Stmt", "parseStmt", "concode_elem_sep", "ClassDecl", "parseDecl", "concode_elem_sep", "ClassDecl", "parseDecl", "concode_elem_sep", "SourceFile", "parseFile", "concode_elem_sep", "SourceFile", "parseFile", "concode_elem_sep", "Position", "type_position", "concode_elem_sep", "Node", "parse", "concode_elem_sep", "Lexer", "lexer", "concode_elem_sep", "Expr", "parseExpr", "concode_elem_sep", "Expr", "parseExpr"]}
{"code": "void function ( String arg0 ) { to = arg0 ; }", "nl": "sets the to address of this message . concode_field_sep long messageNumber concode_elem_sep String to concode_elem_sep List<InputStream> attachments concode_elem_sep InputStream content concode_field_sep List<InputStream> getAttachments concode_elem_sep void setAttachments concode_elem_sep void setContent concode_elem_sep void setMessageNumber concode_elem_sep InputStream getContent concode_elem_sep String getTo concode_elem_sep long getMessageNumber", "code_tokens": ["void", "function", "(", "String", "arg0", ")", "{", "to", "=", "arg0", ";", "}"], "nl_tokens": ["sets", "the", "to", "address", "of", "this", "message", ".", "concode_field_sep", "long", "messageNumber", "concode_elem_sep", "String", "to", "concode_elem_sep", "List", "<", "InputStream", ">", "attachments", "concode_elem_sep", "InputStream", "content", "concode_field_sep", "List", "<", "InputStream", ">", "getAttachments", "concode_elem_sep", "void", "setAttachments", "concode_elem_sep", "void", "setContent", "concode_elem_sep", "void", "setMessageNumber", "concode_elem_sep", "InputStream", "getContent", "concode_elem_sep", "String", "getTo", "concode_elem_sep", "long", "getMessageNumber"]}
{"code": "void function ( InputStream arg0 ) { }", "nl": "initialize the hessian stream with the underlying input stream . concode_field_sep HessianRemoteResolver resolver concode_elem_sep byte[] _buffer concode_field_sep void readEnd concode_elem_sep HessianRemoteResolver getRemoteResolver concode_elem_sep int addRef concode_elem_sep String getMethod concode_elem_sep String readHeader concode_elem_sep Object readReply concode_elem_sep void resetReferences concode_elem_sep void setRef concode_elem_sep void startReply concode_elem_sep void startReplyBody concode_elem_sep int readCall concode_elem_sep double readDouble concode_elem_sep InputStream readInputStream concode_elem_sep Object readRemote concode_elem_sep void skipOptionalCall concode_elem_sep int readInt concode_elem_sep void close concode_elem_sep int readMapStart concode_elem_sep int readMethodArgLength concode_elem_sep void readListEnd concode_elem_sep boolean readToOutputStream concode_elem_sep Reader getReader concode_elem_sep String readString concode_elem_sep void startCall concode_elem_sep boolean isEnd concode_elem_sep Object readObject concode_elem_sep Object readObject concode_elem_sep void completeCall concode_elem_sep void readMapEnd concode_elem_sep long readUTCDate concode_elem_sep long readLong concode_elem_sep int readListStart concode_elem_sep int readLength concode_elem_sep void setSerializerFactory concode_elem_sep void setRemoteResolver concode_elem_sep String readMethod concode_elem_sep Object readRef concode_elem_sep void completeReply concode_elem_sep byte[] readBytes concode_elem_sep boolean readBoolean concode_elem_sep void readNull concode_elem_sep String readType concode_elem_sep org.w3c.dom.Node readNode", "code_tokens": ["void", "function", "(", "InputStream", "arg0", ")", "{", "}"], "nl_tokens": ["initialize", "the", "hessian", "stream", "with", "the", "underlying", "input", "stream", ".", "concode_field_sep", "HessianRemoteResolver", "resolver", "concode_elem_sep", "byte", "[", "]", "_buffer", "concode_field_sep", "void", "readEnd", "concode_elem_sep", "HessianRemoteResolver", "getRemoteResolver", "concode_elem_sep", "int", "addRef", "concode_elem_sep", "String", "getMethod", "concode_elem_sep", "String", "readHeader", "concode_elem_sep", "Object", "readReply", "concode_elem_sep", "void", "resetReferences", "concode_elem_sep", "void", "setRef", "concode_elem_sep", "void", "startReply", "concode_elem_sep", "void", "startReplyBody", "concode_elem_sep", "int", "readCall", "concode_elem_sep", "double", "readDouble", "concode_elem_sep", "InputStream", "readInputStream", "concode_elem_sep", "Object", "readRemote", "concode_elem_sep", "void", "skipOptionalCall", "concode_elem_sep", "int", "readInt", "concode_elem_sep", "void", "close", "concode_elem_sep", "int", "readMapStart", "concode_elem_sep", "int", "readMethodArgLength", "concode_elem_sep", "void", "readListEnd", "concode_elem_sep", "boolean", "readToOutputStream", "concode_elem_sep", "Reader", "getReader", "concode_elem_sep", "String", "readString", "concode_elem_sep", "void", "startCall", "concode_elem_sep", "boolean", "isEnd", "concode_elem_sep", "Object", "readObject", "concode_elem_sep", "Object", "readObject", "concode_elem_sep", "void", "completeCall", "concode_elem_sep", "void", "readMapEnd", "concode_elem_sep", "long", "readUTCDate", "concode_elem_sep", "long", "readLong", "concode_elem_sep", "int", "readListStart", "concode_elem_sep", "int", "readLength", "concode_elem_sep", "void", "setSerializerFactory", "concode_elem_sep", "void", "setRemoteResolver", "concode_elem_sep", "String", "readMethod", "concode_elem_sep", "Object", "readRef", "concode_elem_sep", "void", "completeReply", "concode_elem_sep", "byte", "[", "]", "readBytes", "concode_elem_sep", "boolean", "readBoolean", "concode_elem_sep", "void", "readNull", "concode_elem_sep", "String", "readType", "concode_elem_sep", "org", ".", "w3c", ".", "dom", ".", "Node", "readNode"]}
{"code": "EndpointImplFactory function ( ) { return singleton ; }", "nl": "avoid the need to construct these objects over and over in cases where the code knows that it needs the basic case . concode_field_sep EndpointImplFactory singleton concode_field_sep EndpointImpl newEndpointImpl", "code_tokens": ["EndpointImplFactory", "function", "(", ")", "{", "return", "singleton", ";", "}"], "nl_tokens": ["avoid", "the", "need", "to", "construct", "these", "objects", "over", "and", "over", "in", "cases", "where", "the", "code", "knows", "that", "it", "needs", "the", "basic", "case", ".", "concode_field_sep", "EndpointImplFactory", "singleton", "concode_field_sep", "EndpointImpl", "newEndpointImpl"]}
{"code": "void function ( ) { time . setMinutes ( 30 ) ; assertEquals ( 30 , time . getMinutes ( ) ) ; }", "nl": "test method for net.sf.marineapi.nmea.util.time #setminutes int . concode_field_sep Time time concode_field_sep void testDateRoundTrip concode_elem_sep void testParseTimeWithOneDecimal concode_elem_sep void testSetNegativeMinutes concode_elem_sep void testFormatTimeWithOneDecimal concode_elem_sep void testParseTimeWithoutDecimals concode_elem_sep void testGetMinutes concode_elem_sep void testParseTimeWithDecimals concode_elem_sep void testSetInvalidSeconds concode_elem_sep void testSetNegativeHour concode_elem_sep void testToDate concode_elem_sep void testGetSeconds concode_elem_sep void testSetHour concode_elem_sep void testGetHour concode_elem_sep void testSetSeconds concode_elem_sep void testSetTime concode_elem_sep void testGetMilliseconds concode_elem_sep void testSetInvalidHour concode_elem_sep void testSetNegativeSeconds concode_elem_sep void setUp concode_elem_sep void testSetInvalidMinutes concode_elem_sep void testFormatTimeNoDecimals concode_elem_sep void testFormatTimeWithDecimals concode_elem_sep void testEquals", "code_tokens": ["void", "function", "(", ")", "{", "time", ".", "setMinutes", "(", "30", ")", ";", "assertEquals", "(", "30", ",", "time", ".", "getMinutes", "(", ")", ")", ";", "}"], "nl_tokens": ["test", "method", "for", "net", ".", "sf", ".", "marineapi", ".", "nmea", ".", "util", ".", "time", "#setminutes int . concode_field_sep Time time concode_field_sep void testDateRoundTrip concode_elem_sep void testParseTimeWithOneDecimal concode_elem_sep void testSetNegativeMinutes concode_elem_sep void testFormatTimeWithOneDecimal concode_elem_sep void testParseTimeWithoutDecimals concode_elem_sep void testGetMinutes concode_elem_sep void testParseTimeWithDecimals concode_elem_sep void testSetInvalidSeconds concode_elem_sep void testSetNegativeHour concode_elem_sep void testToDate concode_elem_sep void testGetSeconds concode_elem_sep void testSetHour concode_elem_sep void testGetHour concode_elem_sep void testSetSeconds concode_elem_sep void testSetTime concode_elem_sep void testGetMilliseconds concode_elem_sep void testSetInvalidHour concode_elem_sep void testSetNegativeSeconds concode_elem_sep void setUp concode_elem_sep void testSetInvalidMinutes concode_elem_sep void testFormatTimeNoDecimals concode_elem_sep void testFormatTimeWithDecimals concode_elem_sep void testEquals"]}
{"code": "String function ( String arg0 ) { String loc0 = arg0 ; int loc1 = arg0 . lastIndexOf ( '.' ) ; if ( loc1 != - 1 ) { loc0 = arg0 . substring ( 0 , loc1 ) ; } return loc0 ; }", "nl": "helper method to get a filename without its extension concode_field_sep PlaceHolder placeHolder concode_field_sep boolean findPatternInFile concode_elem_sep String readFilelist concode_elem_sep String normalizeFilename concode_elem_sep List<DataSource> collectFiles concode_elem_sep List<DataSource> collect", "code_tokens": ["String", "function", "(", "String", "arg0", ")", "{", "String", "loc0", "=", "arg0", ";", "int", "loc1", "=", "arg0", ".", "lastIndexOf", "(", "'.'", ")", ";", "if", "(", "loc1", "!=", "-", "1", ")", "{", "loc0", "=", "arg0", ".", "substring", "(", "0", ",", "loc1", ")", ";", "}", "return", "loc0", ";", "}"], "nl_tokens": ["helper", "method", "to", "get", "a", "filename", "without", "its", "extension", "concode_field_sep", "PlaceHolder", "placeHolder", "concode_field_sep", "boolean", "findPatternInFile", "concode_elem_sep", "String", "readFilelist", "concode_elem_sep", "String", "normalizeFilename", "concode_elem_sep", "List", "<", "DataSource", ">", "collectFiles", "concode_elem_sep", "List", "<", "DataSource", ">", "collect"]}
{"code": "Script function ( @ Nullable TransactionSignature arg0 , ECKey arg1 ) { byte [ ] loc0 = arg1 . getPubKey ( ) ; byte [ ] loc1 = arg0 != null ? arg0 . encodeToBitcoin ( ) : new byte [ ] { } ; return new ScriptBuilder ( ) . data ( loc1 ) . data ( loc0 ) . build ( ) ; }", "nl": "creates a scriptsig that can redeem a pay-to-address output . if given signature is null , incomplete scriptsig will be created with op_0 instead of signature concode_field_sep List<ScriptChunk> chunks concode_field_sep ScriptBuilder op concode_elem_sep ScriptBuilder op concode_elem_sep Script updateScriptWithSignature concode_elem_sep Script createOpReturnScript concode_elem_sep ScriptBuilder data concode_elem_sep ScriptBuilder data concode_elem_sep Script createMultiSigInputScriptBytes concode_elem_sep Script createMultiSigInputScriptBytes concode_elem_sep ScriptBuilder smallNum concode_elem_sep ScriptBuilder smallNum concode_elem_sep Script createRedeemScript concode_elem_sep ScriptBuilder addChunk concode_elem_sep ScriptBuilder addChunk concode_elem_sep Script createOutputScript concode_elem_sep Script createOutputScript concode_elem_sep Script createMultiSigInputScript concode_elem_sep Script createMultiSigInputScript concode_elem_sep Script createMultiSigOutputScript concode_elem_sep Script build concode_elem_sep Script createP2SHMultiSigInputScript concode_elem_sep Script createP2SHOutputScript concode_elem_sep Script createP2SHOutputScript concode_elem_sep Script createP2SHOutputScript", "code_tokens": ["Script", "function", "(", "@", "Nullable", "TransactionSignature", "arg0", ",", "ECKey", "arg1", ")", "{", "byte", "[", "]", "loc0", "=", "arg1", ".", "getPubKey", "(", ")", ";", "byte", "[", "]", "loc1", "=", "arg0", "!=", "null", "?", "arg0", ".", "encodeToBitcoin", "(", ")", ":", "new", "byte", "[", "]", "{", "}", ";", "return", "new", "ScriptBuilder", "(", ")", ".", "data", "(", "loc1", ")", ".", "data", "(", "loc0", ")", ".", "build", "(", ")", ";", "}"], "nl_tokens": ["creates", "a", "scriptsig", "that", "can", "redeem", "a", "pay", "-", "to", "-", "address", "output", ".", "if", "given", "signature", "is", "null", ",", "incomplete", "scriptsig", "will", "be", "created", "with", "op_0", "instead", "of", "signature", "concode_field_sep", "List", "<", "ScriptChunk", ">", "chunks", "concode_field_sep", "ScriptBuilder", "op", "concode_elem_sep", "ScriptBuilder", "op", "concode_elem_sep", "Script", "updateScriptWithSignature", "concode_elem_sep", "Script", "createOpReturnScript", "concode_elem_sep", "ScriptBuilder", "data", "concode_elem_sep", "ScriptBuilder", "data", "concode_elem_sep", "Script", "createMultiSigInputScriptBytes", "concode_elem_sep", "Script", "createMultiSigInputScriptBytes", "concode_elem_sep", "ScriptBuilder", "smallNum", "concode_elem_sep", "ScriptBuilder", "smallNum", "concode_elem_sep", "Script", "createRedeemScript", "concode_elem_sep", "ScriptBuilder", "addChunk", "concode_elem_sep", "ScriptBuilder", "addChunk", "concode_elem_sep", "Script", "createOutputScript", "concode_elem_sep", "Script", "createOutputScript", "concode_elem_sep", "Script", "createMultiSigInputScript", "concode_elem_sep", "Script", "createMultiSigInputScript", "concode_elem_sep", "Script", "createMultiSigOutputScript", "concode_elem_sep", "Script", "build", "concode_elem_sep", "Script", "createP2SHMultiSigInputScript", "concode_elem_sep", "Script", "createP2SHOutputScript", "concode_elem_sep", "Script", "createP2SHOutputScript", "concode_elem_sep", "Script", "createP2SHOutputScript"]}
{"code": "void function ( Context arg0 , View arg1 ) { if ( arg1 == null ) return ; InputMethodManager loc0 = ( InputMethodManager ) arg0 . getSystemService ( Context . INPUT_METHOD_SERVICE ) ; loc0 . hideSoftInputFromWindow ( arg1 . getWindowToken ( ) , 0 ) ; }", "nl": "hide keyboard concode_field_sep PlaceHolder placeHolder concode_field_sep void showSoftInput", "code_tokens": ["void", "function", "(", "Context", "arg0", ",", "View", "arg1", ")", "{", "if", "(", "arg1", "==", "null", ")", "return", ";", "InputMethodManager", "loc0", "=", "(", "InputMethodManager", ")", "arg0", ".", "getSystemService", "(", "Context", ".", "INPUT_METHOD_SERVICE", ")", ";", "loc0", ".", "hideSoftInputFromWindow", "(", "arg1", ".", "getWindowToken", "(", ")", ",", "0", ")", ";", "}"], "nl_tokens": ["hide", "keyboard", "concode_field_sep", "PlaceHolder", "placeHolder", "concode_field_sep", "void", "showSoftInput"]}
{"code": "void function ( ) { }", "nl": "destroy the workflow application service . concode_field_sep String HADOOP_NN_KERBEROS_NAME concode_elem_sep String APP_LIB_PATH_LIST concode_elem_sep String HADOOP_USER concode_elem_sep String CONF_PREFIX concode_elem_sep String SYSTEM_LIB_PATH concode_elem_sep String HADOOP_UGI concode_elem_sep String HADOOP_JT_KERBEROS_NAME concode_elem_sep Path systemLibPath concode_field_sep void init concode_elem_sep Class<? extends Service> getInterface concode_elem_sep XConfiguration createProtoActionConf concode_elem_sep List<String> getLibFiles concode_elem_sep String readDefinition concode_elem_sep WorkflowApp parseDef concode_elem_sep WorkflowApp parseDef concode_elem_sep boolean accept", "code_tokens": ["void", "function", "(", ")", "{", "}"], "nl_tokens": ["destroy", "the", "workflow", "application", "service", ".", "concode_field_sep", "String", "HADOOP_NN_KERBEROS_NAME", "concode_elem_sep", "String", "APP_LIB_PATH_LIST", "concode_elem_sep", "String", "HADOOP_USER", "concode_elem_sep", "String", "CONF_PREFIX", "concode_elem_sep", "String", "SYSTEM_LIB_PATH", "concode_elem_sep", "String", "HADOOP_UGI", "concode_elem_sep", "String", "HADOOP_JT_KERBEROS_NAME", "concode_elem_sep", "Path", "systemLibPath", "concode_field_sep", "void", "init", "concode_elem_sep", "Class", "<", "?", "extends", "Service", ">", "getInterface", "concode_elem_sep", "XConfiguration", "createProtoActionConf", "concode_elem_sep", "List", "<", "String", ">", "getLibFiles", "concode_elem_sep", "String", "readDefinition", "concode_elem_sep", "WorkflowApp", "parseDef", "concode_elem_sep", "WorkflowApp", "parseDef", "concode_elem_sep", "boolean", "accept"]}
{"code": "Object function ( String arg0 ) { Object loc0 = new InitialContext ( ) . lookup ( arg0 ) ; Method loc1 = loc0 . getClass ( ) . getMethod ( \"srini_string\" , new Class [ 0 ] ) ; return loc1 . invoke ( loc0 , new Object [ 0 ] ) ; }", "nl": "looks up the target object by ejb local reference . concode_field_sep long serialVersionUID concode_field_sep void ejbCreate concode_elem_sep void setMessageDrivenContext concode_elem_sep void ejbRemove", "code_tokens": ["Object", "function", "(", "String", "arg0", ")", "{", "Object", "loc0", "=", "new", "InitialContext", "(", ")", ".", "lookup", "(", "arg0", ")", ";", "Method", "loc1", "=", "loc0", ".", "getClass", "(", ")", ".", "getMethod", "(", "\"srini_string\"", ",", "new", "Class", "[", "0", "]", ")", ";", "return", "loc1", ".", "invoke", "(", "loc0", ",", "new", "Object", "[", "0", "]", ")", ";", "}"], "nl_tokens": ["looks", "up", "the", "target", "object", "by", "ejb", "local", "reference", ".", "concode_field_sep", "long", "serialVersionUID", "concode_field_sep", "void", "ejbCreate", "concode_elem_sep", "void", "setMessageDrivenContext", "concode_elem_sep", "void", "ejbRemove"]}
{"code": "Waypoint function ( String arg0 ) { return new Waypoint ( arg0 , getLatitude ( ) , getLongitude ( ) ) ; }", "nl": "convenience method for creating a waypoint based in the position . concode_field_sep double altitude concode_elem_sep double latitude concode_elem_sep Datum datum concode_elem_sep double longitude concode_field_sep CompassPoint getLatitudeHemisphere concode_elem_sep double haversine concode_elem_sep double getLongitude concode_elem_sep double getAltitude concode_elem_sep boolean isLatitudeNorth concode_elem_sep double getLatitude concode_elem_sep boolean isLongitudeEast concode_elem_sep double distanceTo concode_elem_sep void setLatitude concode_elem_sep void setAltitude concode_elem_sep CompassPoint getLongitudeHemisphere concode_elem_sep Datum getDatum concode_elem_sep String toString concode_elem_sep void setLongitude", "code_tokens": ["Waypoint", "function", "(", "String", "arg0", ")", "{", "return", "new", "Waypoint", "(", "arg0", ",", "getLatitude", "(", ")", ",", "getLongitude", "(", ")", ")", ";", "}"], "nl_tokens": ["convenience", "method", "for", "creating", "a", "waypoint", "based", "in", "the", "position", ".", "concode_field_sep", "double", "altitude", "concode_elem_sep", "double", "latitude", "concode_elem_sep", "Datum", "datum", "concode_elem_sep", "double", "longitude", "concode_field_sep", "CompassPoint", "getLatitudeHemisphere", "concode_elem_sep", "double", "haversine", "concode_elem_sep", "double", "getLongitude", "concode_elem_sep", "double", "getAltitude", "concode_elem_sep", "boolean", "isLatitudeNorth", "concode_elem_sep", "double", "getLatitude", "concode_elem_sep", "boolean", "isLongitudeEast", "concode_elem_sep", "double", "distanceTo", "concode_elem_sep", "void", "setLatitude", "concode_elem_sep", "void", "setAltitude", "concode_elem_sep", "CompassPoint", "getLongitudeHemisphere", "concode_elem_sep", "Datum", "getDatum", "concode_elem_sep", "String", "toString", "concode_elem_sep", "void", "setLongitude"]}
{"code": "PrintStream function ( ) { return debugGui . getConsole ( ) . getErr ( ) ; }", "nl": "returns a printstream for stderr in the debugger 's internalconsole window . concode_field_sep Scriptable scope concode_elem_sep Dim dim concode_elem_sep int type concode_elem_sep SwingGui debugGui concode_elem_sep int EXIT_ACTION concode_elem_sep int SCOPE_PROVIDER concode_field_sep InputStream getIn concode_elem_sep void setExitAction concode_elem_sep void doBreak concode_elem_sep void main concode_elem_sep void run concode_elem_sep void setBreakOnReturn concode_elem_sep PrintStream getOut concode_elem_sep void setSize concode_elem_sep void setSize concode_elem_sep void setBreakOnExceptions concode_elem_sep void contextCreated concode_elem_sep void setVisible concode_elem_sep void mainEmbedded concode_elem_sep void mainEmbedded concode_elem_sep void mainEmbedded concode_elem_sep void contextExited concode_elem_sep void setBreakOnEnter concode_elem_sep void mainEmbeddedImpl concode_elem_sep void go concode_elem_sep boolean isVisible concode_elem_sep ScopeProvider newScopeProvider concode_elem_sep void setScopeProvider concode_elem_sep void pack concode_elem_sep void clearAllBreakpoints concode_elem_sep void contextReleased concode_elem_sep void setOptimizationLevel concode_elem_sep void detach concode_elem_sep void dispose concode_elem_sep void setScope concode_elem_sep void attachTo concode_elem_sep void contextEntered concode_elem_sep Scriptable getScope concode_elem_sep JFrame getDebugFrame", "code_tokens": ["PrintStream", "function", "(", ")", "{", "return", "debugGui", ".", "getConsole", "(", ")", ".", "getErr", "(", ")", ";", "}"], "nl_tokens": ["returns", "a", "printstream", "for", "stderr", "in", "the", "debugger", "'", "s", "internalconsole", "window", ".", "concode_field_sep", "Scriptable", "scope", "concode_elem_sep", "Dim", "dim", "concode_elem_sep", "int", "type", "concode_elem_sep", "SwingGui", "debugGui", "concode_elem_sep", "int", "EXIT_ACTION", "concode_elem_sep", "int", "SCOPE_PROVIDER", "concode_field_sep", "InputStream", "getIn", "concode_elem_sep", "void", "setExitAction", "concode_elem_sep", "void", "doBreak", "concode_elem_sep", "void", "main", "concode_elem_sep", "void", "run", "concode_elem_sep", "void", "setBreakOnReturn", "concode_elem_sep", "PrintStream", "getOut", "concode_elem_sep", "void", "setSize", "concode_elem_sep", "void", "setSize", "concode_elem_sep", "void", "setBreakOnExceptions", "concode_elem_sep", "void", "contextCreated", "concode_elem_sep", "void", "setVisible", "concode_elem_sep", "void", "mainEmbedded", "concode_elem_sep", "void", "mainEmbedded", "concode_elem_sep", "void", "mainEmbedded", "concode_elem_sep", "void", "contextExited", "concode_elem_sep", "void", "setBreakOnEnter", "concode_elem_sep", "void", "mainEmbeddedImpl", "concode_elem_sep", "void", "go", "concode_elem_sep", "boolean", "isVisible", "concode_elem_sep", "ScopeProvider", "newScopeProvider", "concode_elem_sep", "void", "setScopeProvider", "concode_elem_sep", "void", "pack", "concode_elem_sep", "void", "clearAllBreakpoints", "concode_elem_sep", "void", "contextReleased", "concode_elem_sep", "void", "setOptimizationLevel", "concode_elem_sep", "void", "detach", "concode_elem_sep", "void", "dispose", "concode_elem_sep", "void", "setScope", "concode_elem_sep", "void", "attachTo", "concode_elem_sep", "void", "contextEntered", "concode_elem_sep", "Scriptable", "getScope", "concode_elem_sep", "JFrame", "getDebugFrame"]}
{"code": "int function ( int arg0 , int arg1 ) { int loc0 = 0 ; return loc0 ; }", "nl": "returns the next available tile in the specified lane that is closest to the base . a tile is available if it 's not occupied by a card . concode_field_sep Array<Array<Array<Card>>> tiles concode_elem_sep int HUMAN_PLAYER concode_elem_sep String name concode_elem_sep int id concode_elem_sep int COMPUTER_PLAYER concode_field_sep int playerBaseAttacked concode_elem_sep int laneWithMoreEnemiesInvading concode_elem_sep int nextAvailableLane concode_elem_sep void read concode_elem_sep int nextAvailableTile concode_elem_sep int laneWithMoreEnemies concode_elem_sep String getName concode_elem_sep int tileFurthestFromBase concode_elem_sep int enemyBaseAttacked concode_elem_sep Array<Card> getEnemyCards concode_elem_sep boolean cardOnMap concode_elem_sep void addCard concode_elem_sep Array<Card> getPlayerCards concode_elem_sep void setTiles concode_elem_sep void write concode_elem_sep int laneWithLessAllies concode_elem_sep Array<Array<Array<Card>>> getTiles", "code_tokens": ["int", "function", "(", "int", "arg0", ",", "int", "arg1", ")", "{", "int", "loc0", "=", "0", ";", "return", "loc0", ";", "}"], "nl_tokens": ["returns", "the", "next", "available", "tile", "in", "the", "specified", "lane", "that", "is", "closest", "to", "the", "base", ".", "a", "tile", "is", "available", "if", "it", "'", "s", "not", "occupied", "by", "a", "card", ".", "concode_field_sep", "Array", "<", "Array", "<", "Array", "<", "Card", ">>", ">", "tiles", "concode_elem_sep", "int", "HUMAN_PLAYER", "concode_elem_sep", "String", "name", "concode_elem_sep", "int", "id", "concode_elem_sep", "int", "COMPUTER_PLAYER", "concode_field_sep", "int", "playerBaseAttacked", "concode_elem_sep", "int", "laneWithMoreEnemiesInvading", "concode_elem_sep", "int", "nextAvailableLane", "concode_elem_sep", "void", "read", "concode_elem_sep", "int", "nextAvailableTile", "concode_elem_sep", "int", "laneWithMoreEnemies", "concode_elem_sep", "String", "getName", "concode_elem_sep", "int", "tileFurthestFromBase", "concode_elem_sep", "int", "enemyBaseAttacked", "concode_elem_sep", "Array", "<", "Card", ">", "getEnemyCards", "concode_elem_sep", "boolean", "cardOnMap", "concode_elem_sep", "void", "addCard", "concode_elem_sep", "Array", "<", "Card", ">", "getPlayerCards", "concode_elem_sep", "void", "setTiles", "concode_elem_sep", "void", "write", "concode_elem_sep", "int", "laneWithLessAllies", "concode_elem_sep", "Array", "<", "Array", "<", "Array", "<", "Card", ">>", ">", "getTiles"]}
{"code": "List < E > function ( Iterable < E > arg0 ) { ArrayList < E > loc0 = new ArrayList < E > ( ) ; for ( E loc1 : arg0 ) { loc0 . add ( loc1 ) ; } return loc0 ; }", "nl": "turns the iterable into a list . concode_field_sep Predicate<? super T> filter concode_elem_sep boolean iterated concode_elem_sep Iterator<T> i concode_elem_sep Mapper<? super F,T> mapper concode_elem_sep T lookAhead concode_elem_sep E element concode_field_sep Iterable<E> singleton concode_elem_sep Iterable<T> filter concode_elem_sep boolean all concode_elem_sep E next concode_elem_sep T next concode_elem_sep T next concode_elem_sep Iterable<E> cast concode_elem_sep int count concode_elem_sep boolean hasNext concode_elem_sep boolean hasNext concode_elem_sep boolean hasNext concode_elem_sep Iterable<T> map concode_elem_sep boolean any concode_elem_sep void remove concode_elem_sep void remove concode_elem_sep void remove", "code_tokens": ["List", "<", "E", ">", "function", "(", "Iterable", "<", "E", ">", "arg0", ")", "{", "ArrayList", "<", "E", ">", "loc0", "=", "new", "ArrayList", "<", "E", ">", "(", ")", ";", "for", "(", "E", "loc1", ":", "arg0", ")", "{", "loc0", ".", "add", "(", "loc1", ")", ";", "}", "return", "loc0", ";", "}"], "nl_tokens": ["turns", "the", "iterable", "into", "a", "list", ".", "concode_field_sep", "Predicate", "<", "?", "super", "T", ">", "filter", "concode_elem_sep", "boolean", "iterated", "concode_elem_sep", "Iterator", "<", "T", ">", "i", "concode_elem_sep", "Mapper", "<", "?", "super", "F", ",", "T", ">", "mapper", "concode_elem_sep", "T", "lookAhead", "concode_elem_sep", "E", "element", "concode_field_sep", "Iterable", "<", "E", ">", "singleton", "concode_elem_sep", "Iterable", "<", "T", ">", "filter", "concode_elem_sep", "boolean", "all", "concode_elem_sep", "E", "next", "concode_elem_sep", "T", "next", "concode_elem_sep", "T", "next", "concode_elem_sep", "Iterable", "<", "E", ">", "cast", "concode_elem_sep", "int", "count", "concode_elem_sep", "boolean", "hasNext", "concode_elem_sep", "boolean", "hasNext", "concode_elem_sep", "boolean", "hasNext", "concode_elem_sep", "Iterable", "<", "T", ">", "map", "concode_elem_sep", "boolean", "any", "concode_elem_sep", "void", "remove", "concode_elem_sep", "void", "remove", "concode_elem_sep", "void", "remove"]}
{"code": "ConfigurationKey function ( String arg0 , String arg1 , String arg2 ) { return new ConfigurationKeyImpl ( arg0 , arg1 , arg2 ) ; }", "nl": "create a three-component configuration key . concode_field_sep String URL_SAVED concode_elem_sep String FILE_SAVED concode_elem_sep String URL_LOADED concode_elem_sep ConfigurationHandler config concode_elem_sep String FILE_LOADED concode_field_sep boolean save concode_elem_sep boolean save concode_elem_sep void setInteger concode_elem_sep double getDouble concode_elem_sep double getDouble concode_elem_sep int getInteger concode_elem_sep int getInteger concode_elem_sep String getString concode_elem_sep String getString concode_elem_sep void removeListener concode_elem_sep void removeListener concode_elem_sep IConfigurationFactory getFactory concode_elem_sep void setDouble concode_elem_sep void setString concode_elem_sep boolean load concode_elem_sep boolean load concode_elem_sep boolean load concode_elem_sep void removeKey concode_elem_sep ConfigurationHandler getConfigurationHandler concode_elem_sep boolean getBoolean concode_elem_sep boolean getBoolean concode_elem_sep void setBoolean concode_elem_sep void addListener concode_elem_sep void addListener", "code_tokens": ["ConfigurationKey", "function", "(", "String", "arg0", ",", "String", "arg1", ",", "String", "arg2", ")", "{", "return", "new", "ConfigurationKeyImpl", "(", "arg0", ",", "arg1", ",", "arg2", ")", ";", "}"], "nl_tokens": ["create", "a", "three", "-", "component", "configuration", "key", ".", "concode_field_sep", "String", "URL_SAVED", "concode_elem_sep", "String", "FILE_SAVED", "concode_elem_sep", "String", "URL_LOADED", "concode_elem_sep", "ConfigurationHandler", "config", "concode_elem_sep", "String", "FILE_LOADED", "concode_field_sep", "boolean", "save", "concode_elem_sep", "boolean", "save", "concode_elem_sep", "void", "setInteger", "concode_elem_sep", "double", "getDouble", "concode_elem_sep", "double", "getDouble", "concode_elem_sep", "int", "getInteger", "concode_elem_sep", "int", "getInteger", "concode_elem_sep", "String", "getString", "concode_elem_sep", "String", "getString", "concode_elem_sep", "void", "removeListener", "concode_elem_sep", "void", "removeListener", "concode_elem_sep", "IConfigurationFactory", "getFactory", "concode_elem_sep", "void", "setDouble", "concode_elem_sep", "void", "setString", "concode_elem_sep", "boolean", "load", "concode_elem_sep", "boolean", "load", "concode_elem_sep", "boolean", "load", "concode_elem_sep", "void", "removeKey", "concode_elem_sep", "ConfigurationHandler", "getConfigurationHandler", "concode_elem_sep", "boolean", "getBoolean", "concode_elem_sep", "boolean", "getBoolean", "concode_elem_sep", "void", "setBoolean", "concode_elem_sep", "void", "addListener", "concode_elem_sep", "void", "addListener"]}
{"code": "Object function ( Object arg0 , Object arg1 ) { return ( arg0 != null ) ? arg0 : arg1 ; }", "nl": "return the first not null value , or null if both are null . defined for el as ` object firstnotnull object , object ' . concode_field_sep int SUBMIT_MINUTES concode_elem_sep long KB concode_elem_sep long MB concode_elem_sep int SUBMIT_DAYS concode_elem_sep int SUBMIT_HOURS concode_elem_sep long PB concode_elem_sep long TB concode_elem_sep long GB concode_field_sep String trim concode_elem_sep String concat concode_elem_sep String urlEncode concode_elem_sep String timestamp", "code_tokens": ["Object", "function", "(", "Object", "arg0", ",", "Object", "arg1", ")", "{", "return", "(", "arg0", "!=", "null", ")", "?", "arg0", ":", "arg1", ";", "}"], "nl_tokens": ["return", "the", "first", "not", "null", "value", ",", "or", "null", "if", "both", "are", "null", ".", "defined", "for", "el", "as", "`", "object", "firstnotnull", "object", ",", "object", "'", ".", "concode_field_sep", "int", "SUBMIT_MINUTES", "concode_elem_sep", "long", "KB", "concode_elem_sep", "long", "MB", "concode_elem_sep", "int", "SUBMIT_DAYS", "concode_elem_sep", "int", "SUBMIT_HOURS", "concode_elem_sep", "long", "PB", "concode_elem_sep", "long", "TB", "concode_elem_sep", "long", "GB", "concode_field_sep", "String", "trim", "concode_elem_sep", "String", "concat", "concode_elem_sep", "String", "urlEncode", "concode_elem_sep", "String", "timestamp"]}
{"code": "void function ( ) { assertEquals ( Datum . WGS84 , instance . getDatum ( ) ) ; }", "nl": "test for getdatum concode_field_sep Position instance concode_field_sep void testGetLatitude concode_elem_sep void testSetIllegalLatitudeSouth concode_elem_sep void testDistanceToSelf concode_elem_sep void testSetIllegalLongitudeWest concode_elem_sep void testSetLatitudeSouth concode_elem_sep void testDistanceTo concode_elem_sep void testSetIllegalLongitudeEast concode_elem_sep void testToWaypoint concode_elem_sep void testSetLongitudeEast concode_elem_sep void setUp concode_elem_sep void testGetLongitude concode_elem_sep void testSetLongitudeWest concode_elem_sep void testGetLatitudeHemisphere concode_elem_sep void testSetLatitudeNorth concode_elem_sep void testGetLongitudeHemisphere concode_elem_sep void testSetIllegalLatitudeNorth", "code_tokens": ["void", "function", "(", ")", "{", "assertEquals", "(", "Datum", ".", "WGS84", ",", "instance", ".", "getDatum", "(", ")", ")", ";", "}"], "nl_tokens": ["test", "for", "getdatum", "concode_field_sep", "Position", "instance", "concode_field_sep", "void", "testGetLatitude", "concode_elem_sep", "void", "testSetIllegalLatitudeSouth", "concode_elem_sep", "void", "testDistanceToSelf", "concode_elem_sep", "void", "testSetIllegalLongitudeWest", "concode_elem_sep", "void", "testSetLatitudeSouth", "concode_elem_sep", "void", "testDistanceTo", "concode_elem_sep", "void", "testSetIllegalLongitudeEast", "concode_elem_sep", "void", "testToWaypoint", "concode_elem_sep", "void", "testSetLongitudeEast", "concode_elem_sep", "void", "setUp", "concode_elem_sep", "void", "testGetLongitude", "concode_elem_sep", "void", "testSetLongitudeWest", "concode_elem_sep", "void", "testGetLatitudeHemisphere", "concode_elem_sep", "void", "testSetLatitudeNorth", "concode_elem_sep", "void", "testGetLongitudeHemisphere", "concode_elem_sep", "void", "testSetIllegalLatitudeNorth"]}
{"code": "String function ( String arg0 ) { return CacheUtil . md5sum ( arg0 ) ; }", "nl": "generates an md5 key for the given text . concode_field_sep PlaceHolder placeHolder concode_field_sep void deleteAllKeys concode_elem_sep String getText concode_elem_sep void purgeOldKeys concode_elem_sep int cacheText", "code_tokens": ["String", "function", "(", "String", "arg0", ")", "{", "return", "CacheUtil", ".", "md5sum", "(", "arg0", ")", ";", "}"], "nl_tokens": ["generates", "an", "md5", "key", "for", "the", "given", "text", ".", "concode_field_sep", "PlaceHolder", "placeHolder", "concode_field_sep", "void", "deleteAllKeys", "concode_elem_sep", "String", "getText", "concode_elem_sep", "void", "purgeOldKeys", "concode_elem_sep", "int", "cacheText"]}
{"code": "boolean function ( String arg0 ) { boolean loc0 = false ; for ( Card loc1 : enemyHandCards ) { if ( loc1 . getName ( ) . equals ( arg0 ) ) { loc0 = true ; } } return loc0 ; }", "nl": "checks for a card on the enemy hand . concode_field_sep Enemy enemy concode_elem_sep DefaultRules rules concode_elem_sep Deck playerDeck concode_elem_sep Card selectedCard concode_elem_sep Array<Card> playerHandCards concode_elem_sep Deck enemyDeck concode_elem_sep Field playerField concode_elem_sep Array<Card> enemyHandCards concode_elem_sep Field enemyField concode_elem_sep Array<Card> playerDestroyedCards concode_elem_sep int id concode_elem_sep boolean tutorial concode_elem_sep BattleMap map concode_elem_sep Array<Modifier> rewards concode_elem_sep Array<Card> enemyDestroyedCards concode_field_sep void addPlayerHandCard concode_elem_sep Deck getPlayerDeck concode_elem_sep Field getPlayerField concode_elem_sep void setPlayerHandCards concode_elem_sep void setEnemyHandCards concode_elem_sep int getId concode_elem_sep Field getEnemyField concode_elem_sep void setEnemyDestroyedCards concode_elem_sep Array<Card> getEnemyHandCards concode_elem_sep Card getSelectedCard concode_elem_sep Deck getEnemyDeck concode_elem_sep void setMap concode_elem_sep DefaultRules getRules concode_elem_sep void setRules concode_elem_sep void setPlayerField concode_elem_sep void write concode_elem_sep void setPlayerDestroyedCards concode_elem_sep Array<Card> getEnemyDestroyedCards concode_elem_sep void read concode_elem_sep Array<Card> getPlayerHandCards concode_elem_sep void addEnemyHandCard concode_elem_sep void setPlayerDeck concode_elem_sep void setEnemy concode_elem_sep Card getCardFromEnemy concode_elem_sep void setSelectedCard concode_elem_sep void setEnemyDeck concode_elem_sep BattleMap getMap concode_elem_sep Enemy getEnemy concode_elem_sep Array<Card> getPlayerDestroyedCards concode_elem_sep void setEnemyField", "code_tokens": ["boolean", "function", "(", "String", "arg0", ")", "{", "boolean", "loc0", "=", "false", ";", "for", "(", "Card", "loc1", ":", "enemyHandCards", ")", "{", "if", "(", "loc1", ".", "getName", "(", ")", ".", "equals", "(", "arg0", ")", ")", "{", "loc0", "=", "true", ";", "}", "}", "return", "loc0", ";", "}"], "nl_tokens": ["checks", "for", "a", "card", "on", "the", "enemy", "hand", ".", "concode_field_sep", "Enemy", "enemy", "concode_elem_sep", "DefaultRules", "rules", "concode_elem_sep", "Deck", "playerDeck", "concode_elem_sep", "Card", "selectedCard", "concode_elem_sep", "Array", "<", "Card", ">", "playerHandCards", "concode_elem_sep", "Deck", "enemyDeck", "concode_elem_sep", "Field", "playerField", "concode_elem_sep", "Array", "<", "Card", ">", "enemyHandCards", "concode_elem_sep", "Field", "enemyField", "concode_elem_sep", "Array", "<", "Card", ">", "playerDestroyedCards", "concode_elem_sep", "int", "id", "concode_elem_sep", "boolean", "tutorial", "concode_elem_sep", "BattleMap", "map", "concode_elem_sep", "Array", "<", "Modifier", ">", "rewards", "concode_elem_sep", "Array", "<", "Card", ">", "enemyDestroyedCards", "concode_field_sep", "void", "addPlayerHandCard", "concode_elem_sep", "Deck", "getPlayerDeck", "concode_elem_sep", "Field", "getPlayerField", "concode_elem_sep", "void", "setPlayerHandCards", "concode_elem_sep", "void", "setEnemyHandCards", "concode_elem_sep", "int", "getId", "concode_elem_sep", "Field", "getEnemyField", "concode_elem_sep", "void", "setEnemyDestroyedCards", "concode_elem_sep", "Array", "<", "Card", ">", "getEnemyHandCards", "concode_elem_sep", "Card", "getSelectedCard", "concode_elem_sep", "Deck", "getEnemyDeck", "concode_elem_sep", "void", "setMap", "concode_elem_sep", "DefaultRules", "getRules", "concode_elem_sep", "void", "setRules", "concode_elem_sep", "void", "setPlayerField", "concode_elem_sep", "void", "write", "concode_elem_sep", "void", "setPlayerDestroyedCards", "concode_elem_sep", "Array", "<", "Card", ">", "getEnemyDestroyedCards", "concode_elem_sep", "void", "read", "concode_elem_sep", "Array", "<", "Card", ">", "getPlayerHandCards", "concode_elem_sep", "void", "addEnemyHandCard", "concode_elem_sep", "void", "setPlayerDeck", "concode_elem_sep", "void", "setEnemy", "concode_elem_sep", "Card", "getCardFromEnemy", "concode_elem_sep", "void", "setSelectedCard", "concode_elem_sep", "void", "setEnemyDeck", "concode_elem_sep", "BattleMap", "getMap", "concode_elem_sep", "Enemy", "getEnemy", "concode_elem_sep", "Array", "<", "Card", ">", "getPlayerDestroyedCards", "concode_elem_sep", "void", "setEnemyField"]}
{"code": "List < DirectedAcyclicGraphNode < T >> function ( ) { return mChildren ; }", "nl": "gets the children nodes of the node . concode_field_sep List<DirectedAcyclicGraphNode<T>> mParents concode_elem_sep List<DirectedAcyclicGraphNode<T>> mChildren concode_elem_sep T mPayload concode_field_sep List<DirectedAcyclicGraphNode<T>> getParents concode_elem_sep T getPayload concode_elem_sep void removeChild concode_elem_sep void addParent concode_elem_sep void addChild", "code_tokens": ["List", "<", "DirectedAcyclicGraphNode", "<", "T", ">>", "function", "(", ")", "{", "return", "mChildren", ";", "}"], "nl_tokens": ["gets", "the", "children", "nodes", "of", "the", "node", ".", "concode_field_sep", "List", "<", "DirectedAcyclicGraphNode", "<", "T", ">>", "mParents", "concode_elem_sep", "List", "<", "DirectedAcyclicGraphNode", "<", "T", ">>", "mChildren", "concode_elem_sep", "T", "mPayload", "concode_field_sep", "List", "<", "DirectedAcyclicGraphNode", "<", "T", ">>", "getParents", "concode_elem_sep", "T", "getPayload", "concode_elem_sep", "void", "removeChild", "concode_elem_sep", "void", "addParent", "concode_elem_sep", "void", "addChild"]}
{"code": "void function ( ) { Time loc0 = new Time ( \"srini_string\" ) ; assertEquals ( 1 , loc0 . getHour ( ) ) ; assertEquals ( 2 , loc0 . getMinutes ( ) ) ; assertEquals ( 3.4 , loc0 . getSeconds ( ) , 0.001 ) ; }", "nl": "test method for net.sf.marineapi.nmea.util.time java.lang.string . concode_field_sep Time time concode_field_sep void testDateRoundTrip concode_elem_sep void testSetNegativeMinutes concode_elem_sep void testFormatTimeWithOneDecimal concode_elem_sep void testSetMinutes concode_elem_sep void testParseTimeWithoutDecimals concode_elem_sep void testGetMinutes concode_elem_sep void testParseTimeWithDecimals concode_elem_sep void testSetInvalidSeconds concode_elem_sep void testSetNegativeHour concode_elem_sep void testToDate concode_elem_sep void testGetSeconds concode_elem_sep void testSetHour concode_elem_sep void testGetHour concode_elem_sep void testSetSeconds concode_elem_sep void testSetTime concode_elem_sep void testGetMilliseconds concode_elem_sep void testSetInvalidHour concode_elem_sep void testSetNegativeSeconds concode_elem_sep void setUp concode_elem_sep void testSetInvalidMinutes concode_elem_sep void testFormatTimeNoDecimals concode_elem_sep void testFormatTimeWithDecimals concode_elem_sep void testEquals", "code_tokens": ["void", "function", "(", ")", "{", "Time", "loc0", "=", "new", "Time", "(", "\"srini_string\"", ")", ";", "assertEquals", "(", "1", ",", "loc0", ".", "getHour", "(", ")", ")", ";", "assertEquals", "(", "2", ",", "loc0", ".", "getMinutes", "(", ")", ")", ";", "assertEquals", "(", "3.4", ",", "loc0", ".", "getSeconds", "(", ")", ",", "0.001", ")", ";", "}"], "nl_tokens": ["test", "method", "for", "net", ".", "sf", ".", "marineapi", ".", "nmea", ".", "util", ".", "time", "java", ".", "lang", ".", "string", ".", "concode_field_sep", "Time", "time", "concode_field_sep", "void", "testDateRoundTrip", "concode_elem_sep", "void", "testSetNegativeMinutes", "concode_elem_sep", "void", "testFormatTimeWithOneDecimal", "concode_elem_sep", "void", "testSetMinutes", "concode_elem_sep", "void", "testParseTimeWithoutDecimals", "concode_elem_sep", "void", "testGetMinutes", "concode_elem_sep", "void", "testParseTimeWithDecimals", "concode_elem_sep", "void", "testSetInvalidSeconds", "concode_elem_sep", "void", "testSetNegativeHour", "concode_elem_sep", "void", "testToDate", "concode_elem_sep", "void", "testGetSeconds", "concode_elem_sep", "void", "testSetHour", "concode_elem_sep", "void", "testGetHour", "concode_elem_sep", "void", "testSetSeconds", "concode_elem_sep", "void", "testSetTime", "concode_elem_sep", "void", "testGetMilliseconds", "concode_elem_sep", "void", "testSetInvalidHour", "concode_elem_sep", "void", "testSetNegativeSeconds", "concode_elem_sep", "void", "setUp", "concode_elem_sep", "void", "testSetInvalidMinutes", "concode_elem_sep", "void", "testFormatTimeNoDecimals", "concode_elem_sep", "void", "testFormatTimeWithDecimals", "concode_elem_sep", "void", "testEquals"]}
{"code": "void function ( ) { Assert . assertEquals ( TieredBlockStoreTestUtils . getDefaultTotalCapacityBytes ( ) , mBlockStoreMeta . getCapacityBytes ( ) ) ; }", "nl": "tests the blockstoremeta #getcapacitybytes method . concode_field_sep long COMMITTED_BLOCKS_NUM concode_elem_sep long TEST_SESSION_ID concode_elem_sep BlockStoreMeta mBlockStoreMeta concode_elem_sep BlockStoreMeta mBlockStoreMetaFull concode_elem_sep long TEST_BLOCK_SIZE concode_elem_sep BlockMetadataManager mMetadataManager concode_elem_sep TemporaryFolder mTestFolder concode_field_sep void getUsedBytesOnTiers concode_elem_sep void before concode_elem_sep void getCapacityBytesOnDirs concode_elem_sep void getUsedBytes concode_elem_sep void getNumberOfBlocks concode_elem_sep void getCapacityBytesOnTiers concode_elem_sep void getUsedBytesOnDirs concode_elem_sep void getBlockList", "code_tokens": ["void", "function", "(", ")", "{", "Assert", ".", "assertEquals", "(", "TieredBlockStoreTestUtils", ".", "getDefaultTotalCapacityBytes", "(", ")", ",", "mBlockStoreMeta", ".", "getCapacityBytes", "(", ")", ")", ";", "}"], "nl_tokens": ["tests", "the", "blockstoremeta", "#getcapacitybytes method . concode_field_sep long COMMITTED_BLOCKS_NUM concode_elem_sep long TEST_SESSION_ID concode_elem_sep BlockStoreMeta mBlockStoreMeta concode_elem_sep BlockStoreMeta mBlockStoreMetaFull concode_elem_sep long TEST_BLOCK_SIZE concode_elem_sep BlockMetadataManager mMetadataManager concode_elem_sep TemporaryFolder mTestFolder concode_field_sep void getUsedBytesOnTiers concode_elem_sep void before concode_elem_sep void getCapacityBytesOnDirs concode_elem_sep void getUsedBytes concode_elem_sep void getNumberOfBlocks concode_elem_sep void getCapacityBytesOnTiers concode_elem_sep void getUsedBytesOnDirs concode_elem_sep void getBlockList"]}
{"code": "long function ( ) { return mDir . getCommittedBytes ( ) ; }", "nl": "gets committed bytes for this dir . this includes all blocks , locked , pinned , committed etc. . concode_field_sep BlockMetadataManagerView mManagerView concode_elem_sep StorageDir mDir concode_elem_sep long mBlocksToMoveOutSize concode_elem_sep long mBlocksToMoveInSize concode_elem_sep StorageTierView mTierView concode_elem_sep Set<Long> mBlocksToMoveIn concode_elem_sep Set<Long> mBlocksToMoveOut concode_field_sep long getEvitableBytes concode_elem_sep StorageTierView getParentTierView concode_elem_sep boolean isMarkedToMoveOut concode_elem_sep void markBlockMoveIn concode_elem_sep TempBlockMeta createTempBlockMeta concode_elem_sep void clearBlockMarks concode_elem_sep int getDirViewIndex concode_elem_sep List<BlockMeta> getEvictableBlocks concode_elem_sep long getCapacityBytes concode_elem_sep long getAvailableBytes concode_elem_sep BlockStoreLocation toBlockStoreLocation concode_elem_sep void markBlockMoveOut", "code_tokens": ["long", "function", "(", ")", "{", "return", "mDir", ".", "getCommittedBytes", "(", ")", ";", "}"], "nl_tokens": ["gets", "committed", "bytes", "for", "this", "dir", ".", "this", "includes", "all", "blocks", ",", "locked", ",", "pinned", ",", "committed", "etc", ".", ".", "concode_field_sep", "BlockMetadataManagerView", "mManagerView", "concode_elem_sep", "StorageDir", "mDir", "concode_elem_sep", "long", "mBlocksToMoveOutSize", "concode_elem_sep", "long", "mBlocksToMoveInSize", "concode_elem_sep", "StorageTierView", "mTierView", "concode_elem_sep", "Set", "<", "Long", ">", "mBlocksToMoveIn", "concode_elem_sep", "Set", "<", "Long", ">", "mBlocksToMoveOut", "concode_field_sep", "long", "getEvitableBytes", "concode_elem_sep", "StorageTierView", "getParentTierView", "concode_elem_sep", "boolean", "isMarkedToMoveOut", "concode_elem_sep", "void", "markBlockMoveIn", "concode_elem_sep", "TempBlockMeta", "createTempBlockMeta", "concode_elem_sep", "void", "clearBlockMarks", "concode_elem_sep", "int", "getDirViewIndex", "concode_elem_sep", "List", "<", "BlockMeta", ">", "getEvictableBlocks", "concode_elem_sep", "long", "getCapacityBytes", "concode_elem_sep", "long", "getAvailableBytes", "concode_elem_sep", "BlockStoreLocation", "toBlockStoreLocation", "concode_elem_sep", "void", "markBlockMoveOut"]}
{"code": "BufferedByteWriter function ( byte arg0 ) { return put32 ( arg0 & 0xFF ) ; }", "nl": "write the given int value 32-bit in big-endian order to the buffer concode_field_sep ByteBuffer mWriter concode_elem_sep byte[] mBuffer concode_field_sep BufferedByteWriter put24 concode_elem_sep BufferedByteWriter put24 concode_elem_sep BufferedByteWriter put24 concode_elem_sep BufferedByteWriter putLen8 concode_elem_sep BufferedByteWriter put16 concode_elem_sep BufferedByteWriter put16 concode_elem_sep BufferedByteWriter putLen16 concode_elem_sep byte[] toByteArray concode_elem_sep void ensureCapacity concode_elem_sep BufferedByteWriter put64 concode_elem_sep BufferedByteWriter put64 concode_elem_sep BufferedByteWriter put64 concode_elem_sep BufferedByteWriter put64 concode_elem_sep BufferedByteWriter put concode_elem_sep BufferedByteWriter put", "code_tokens": ["BufferedByteWriter", "function", "(", "byte", "arg0", ")", "{", "return", "put32", "(", "arg0", "&", "0xFF", ")", ";", "}"], "nl_tokens": ["write", "the", "given", "int", "value", "32", "-", "bit", "in", "big", "-", "endian", "order", "to", "the", "buffer", "concode_field_sep", "ByteBuffer", "mWriter", "concode_elem_sep", "byte", "[", "]", "mBuffer", "concode_field_sep", "BufferedByteWriter", "put24", "concode_elem_sep", "BufferedByteWriter", "put24", "concode_elem_sep", "BufferedByteWriter", "put24", "concode_elem_sep", "BufferedByteWriter", "putLen8", "concode_elem_sep", "BufferedByteWriter", "put16", "concode_elem_sep", "BufferedByteWriter", "put16", "concode_elem_sep", "BufferedByteWriter", "putLen16", "concode_elem_sep", "byte", "[", "]", "toByteArray", "concode_elem_sep", "void", "ensureCapacity", "concode_elem_sep", "BufferedByteWriter", "put64", "concode_elem_sep", "BufferedByteWriter", "put64", "concode_elem_sep", "BufferedByteWriter", "put64", "concode_elem_sep", "BufferedByteWriter", "put64", "concode_elem_sep", "BufferedByteWriter", "put", "concode_elem_sep", "BufferedByteWriter", "put"]}
{"code": "double function ( DenseMatrix64F arg0 ) { PermuteArray loc0 = new PermuteArray ( arg0 . numCols ) ; double loc1 = 0 ; int loc2 [ ] = loc0 . next ( ) ; while ( loc2 != null ) { double loc3 = 1 ; for ( int loc4 = 0 ; loc4 < arg0 . numRows ; loc4 ++ ) { loc3 *= arg0 . get ( loc4 , loc2 [ loc4 ] ) ; } loc1 += loc0 . sgn ( ) * loc3 ; loc2 = loc0 . next ( ) ; } return loc1 ; }", "nl": "computes the determinant of the matrix using leibniz 's formula a direct implementation of leibniz determinant equation . this is of little practical use because of its slow runtime of o n ! where n is the width of the matrix . lu decomposition should be used instead . one advantage of leibniz 's equation is how simplistic it is . det a = sum & sigma ; in sn ; sgn & sigma ;-rrb- prod i = 1 to n ; ai , & sigma ; i sgn is the sign function of permutations . +1 or -1 for even and odd permutations a set of permutations . if n = 3 then the possible permutations are 1,2,3 1,3,2 , 3,2,1 , ... etc concode_field_sep PlaceHolder placeHolder concode_field_sep double recursive", "code_tokens": ["double", "function", "(", "DenseMatrix64F", "arg0", ")", "{", "PermuteArray", "loc0", "=", "new", "PermuteArray", "(", "arg0", ".", "numCols", ")", ";", "double", "loc1", "=", "0", ";", "int", "loc2", "[", "]", "=", "loc0", ".", "next", "(", ")", ";", "while", "(", "loc2", "!=", "null", ")", "{", "double", "loc3", "=", "1", ";", "for", "(", "int", "loc4", "=", "0", ";", "loc4", "<", "arg0", ".", "numRows", ";", "loc4", "+", "+", ")", "{", "loc3", "*=", "arg0", ".", "get", "(", "loc4", ",", "loc2", "[", "loc4", "]", ")", ";", "}", "loc1", "+=", "loc0", ".", "sgn", "(", ")", "*", "loc3", ";", "loc2", "=", "loc0", ".", "next", "(", ")", ";", "}", "return", "loc1", ";", "}"], "nl_tokens": ["computes", "the", "determinant", "of", "the", "matrix", "using", "leibniz", "'s formula a direct implementation of leibniz determinant equation . this is of little practical use because of its slow runtime of o n ! where n is the width of the matrix . lu decomposition should be used instead . one advantage of leibniz '", "s", "equation", "is", "how", "simplistic", "it", "is", ".", "det", "a", "=", "sum", "&", "sigma", ";", "in", "sn", ";", "sgn", "&", "sigma", ";", "-", "rrb", "-", "prod", "i", "=", "1", "to", "n", ";", "ai", ",", "&", "sigma", ";", "i", "sgn", "is", "the", "sign", "function", "of", "permutations", ".", "+", "1", "or", "-", "1", "for", "even", "and", "odd", "permutations", "a", "set", "of", "permutations", ".", "if", "n", "=", "3", "then", "the", "possible", "permutations", "are", "1", ",", "2", ",", "3", "1", ",", "3", ",", "2", ",", "3", ",", "2", ",", "1", ",", "...", "etc", "concode_field_sep", "PlaceHolder", "placeHolder", "concode_field_sep", "double", "recursive"]}
{"code": "void function ( ) { when ( mockServerSession . getId ( ) ) . thenReturn ( null ) ; notificationController . registerUserSession ( mockServerSession , mockServerMessage ) ; }", "nl": "test method for notificationcontroller #registerusersession serversession , servermessage . verifies that method throws nullpointerexception when serversession id is null . concode_field_sep ServerMessage mockServerMessage concode_elem_sep ServerSession mockServerSession concode_elem_sep HashMap<String,Object> testEventProperties concode_elem_sep String MOCK_SESSION_ID concode_elem_sep NotificationController notificationController concode_field_sep void testHandleEventThrowsIllegalArgumentExceptionOnEmptyUser concode_elem_sep void testHandleEventThrowsIllegalArgumentExceptionOnEmptyApplication concode_elem_sep void testDeregisterUserSessionWithNullServerSessonThrowsException concode_elem_sep void testDeregisterUserSessionWithNullServerSessionIdThrowsException concode_elem_sep void testHandleEventThrowsIllegalArgumentExceptionOnNullTitle concode_elem_sep void testGetServerSessionByUserId concode_elem_sep void tearDown concode_elem_sep void testHandleEventThrowsIllegalArgumentExceptionOnEmptyTitle concode_elem_sep void testDeletePersistentNotificationThrowsIllegalArgumentOnNullServerSession concode_elem_sep void testDeregisterUserSessionRemovesUserFromKnownClients concode_elem_sep void testHandleEventThrowsIllegalArgumentExceptionOnEmptyMessage concode_elem_sep void testHandleEventThrowsIllegalArgumentExceptionOnNullApplication concode_elem_sep void testDeletePersistentNotificationThrowsIllegalArgumentOnNullUserId concode_elem_sep void testRegisterUserSessionWithNullServerSessionThrowsException concode_elem_sep void testHandleEventThrowsIllegalArgumentExceptionOnNullUser concode_elem_sep void testRegisterUserSession concode_elem_sep void setUp concode_elem_sep void testHandleEventThrowsIllegalArgumentExceptionOnNullTimestamp concode_elem_sep void testHandleEventThrowsIllegalArgumentExceptionOnNullMessage", "code_tokens": ["void", "function", "(", ")", "{", "when", "(", "mockServerSession", ".", "getId", "(", ")", ")", ".", "thenReturn", "(", "null", ")", ";", "notificationController", ".", "registerUserSession", "(", "mockServerSession", ",", "mockServerMessage", ")", ";", "}"], "nl_tokens": ["test", "method", "for", "notificationcontroller", "#registerusersession serversession , servermessage . verifies that method throws nullpointerexception when serversession id is null . concode_field_sep ServerMessage mockServerMessage concode_elem_sep ServerSession mockServerSession concode_elem_sep HashMap<String,Object> testEventProperties concode_elem_sep String MOCK_SESSION_ID concode_elem_sep NotificationController notificationController concode_field_sep void testHandleEventThrowsIllegalArgumentExceptionOnEmptyUser concode_elem_sep void testHandleEventThrowsIllegalArgumentExceptionOnEmptyApplication concode_elem_sep void testDeregisterUserSessionWithNullServerSessonThrowsException concode_elem_sep void testDeregisterUserSessionWithNullServerSessionIdThrowsException concode_elem_sep void testHandleEventThrowsIllegalArgumentExceptionOnNullTitle concode_elem_sep void testGetServerSessionByUserId concode_elem_sep void tearDown concode_elem_sep void testHandleEventThrowsIllegalArgumentExceptionOnEmptyTitle concode_elem_sep void testDeletePersistentNotificationThrowsIllegalArgumentOnNullServerSession concode_elem_sep void testDeregisterUserSessionRemovesUserFromKnownClients concode_elem_sep void testHandleEventThrowsIllegalArgumentExceptionOnEmptyMessage concode_elem_sep void testHandleEventThrowsIllegalArgumentExceptionOnNullApplication concode_elem_sep void testDeletePersistentNotificationThrowsIllegalArgumentOnNullUserId concode_elem_sep void testRegisterUserSessionWithNullServerSessionThrowsException concode_elem_sep void testHandleEventThrowsIllegalArgumentExceptionOnNullUser concode_elem_sep void testRegisterUserSession concode_elem_sep void setUp concode_elem_sep void testHandleEventThrowsIllegalArgumentExceptionOnNullTimestamp concode_elem_sep void testHandleEventThrowsIllegalArgumentExceptionOnNullMessage"]}
{"code": "long function ( ) { checkReady ( ) ; return mSessionId ; }", "nl": "gets the sessionid of the worker making the request . make sure the message is ready before calling this method . concode_field_sep ByteBuffer mData concode_elem_sep int REQUEST_HEADER_LENGTH concode_elem_sep int RESPONSE_HEADER_LENGTH concode_elem_sep int ERROR_RESPONSE_HEADER_LENGTH concode_elem_sep long mOffset concode_elem_sep RPCResponse.Status mStatus concode_elem_sep long mLockId concode_elem_sep boolean mToSendData concode_elem_sep long mLength concode_elem_sep long mBlockId concode_elem_sep int HEADER_PREFIX_LENGTH concode_elem_sep long mSessionId concode_elem_sep RPCMessage.Type mMessageType concode_elem_sep boolean mIsMessageReady concode_elem_sep ByteBuffer mHeader concode_elem_sep Logger LOG concode_field_sep void checkReady concode_elem_sep long getOffset concode_elem_sep void setLockId concode_elem_sep RPCResponse.Status getStatus concode_elem_sep DataServerMessage createBlockResponseMessage concode_elem_sep DataServerMessage createBlockResponseMessage concode_elem_sep boolean finishSending concode_elem_sep long getLockId concode_elem_sep int recv concode_elem_sep long getBlockId concode_elem_sep void generateHeader concode_elem_sep ByteBuffer getReadOnlyData concode_elem_sep long getLength concode_elem_sep void isSend concode_elem_sep DataServerMessage createBlockRequestMessage concode_elem_sep DataServerMessage createBlockRequestMessage concode_elem_sep void close concode_elem_sep void send concode_elem_sep boolean isMessageReady", "code_tokens": ["long", "function", "(", ")", "{", "checkReady", "(", ")", ";", "return", "mSessionId", ";", "}"], "nl_tokens": ["gets", "the", "sessionid", "of", "the", "worker", "making", "the", "request", ".", "make", "sure", "the", "message", "is", "ready", "before", "calling", "this", "method", ".", "concode_field_sep", "ByteBuffer", "mData", "concode_elem_sep", "int", "REQUEST_HEADER_LENGTH", "concode_elem_sep", "int", "RESPONSE_HEADER_LENGTH", "concode_elem_sep", "int", "ERROR_RESPONSE_HEADER_LENGTH", "concode_elem_sep", "long", "mOffset", "concode_elem_sep", "RPCResponse", ".", "Status", "mStatus", "concode_elem_sep", "long", "mLockId", "concode_elem_sep", "boolean", "mToSendData", "concode_elem_sep", "long", "mLength", "concode_elem_sep", "long", "mBlockId", "concode_elem_sep", "int", "HEADER_PREFIX_LENGTH", "concode_elem_sep", "long", "mSessionId", "concode_elem_sep", "RPCMessage", ".", "Type", "mMessageType", "concode_elem_sep", "boolean", "mIsMessageReady", "concode_elem_sep", "ByteBuffer", "mHeader", "concode_elem_sep", "Logger", "LOG", "concode_field_sep", "void", "checkReady", "concode_elem_sep", "long", "getOffset", "concode_elem_sep", "void", "setLockId", "concode_elem_sep", "RPCResponse", ".", "Status", "getStatus", "concode_elem_sep", "DataServerMessage", "createBlockResponseMessage", "concode_elem_sep", "DataServerMessage", "createBlockResponseMessage", "concode_elem_sep", "boolean", "finishSending", "concode_elem_sep", "long", "getLockId", "concode_elem_sep", "int", "recv", "concode_elem_sep", "long", "getBlockId", "concode_elem_sep", "void", "generateHeader", "concode_elem_sep", "ByteBuffer", "getReadOnlyData", "concode_elem_sep", "long", "getLength", "concode_elem_sep", "void", "isSend", "concode_elem_sep", "DataServerMessage", "createBlockRequestMessage", "concode_elem_sep", "DataServerMessage", "createBlockRequestMessage", "concode_elem_sep", "void", "close", "concode_elem_sep", "void", "send", "concode_elem_sep", "boolean", "isMessageReady"]}
{"code": "void function ( Object arg0 , String arg1 , Object arg2 ) { Field loc0 ; if ( arg0 instanceof Class ) loc0 = getFieldImpl ( ( Class ) arg0 , arg1 ) ; else loc0 = getFieldImpl ( arg0 . getClass ( ) , arg1 ) ; loc0 . setAccessible ( true ) ; loc0 . set ( arg0 , arg2 ) ; }", "nl": "sets the value of the named field . concode_field_sep PlaceHolder placeHolder concode_field_sep Object getValue concode_elem_sep Class getClass concode_elem_sep List getAllStaticMethods concode_elem_sep Constructor getConstructorImpl concode_elem_sep Method getMethodImpl concode_elem_sep Field getFieldImpl concode_elem_sep Class getClassImpl concode_elem_sep List invokeAllStaticMethods concode_elem_sep Method getMethod concode_elem_sep Object invokeMethod concode_elem_sep Object invokeMethod concode_elem_sep Object invokeMethod concode_elem_sep Object invokeConstructor concode_elem_sep Object invokeConstructor", "code_tokens": ["void", "function", "(", "Object", "arg0", ",", "String", "arg1", ",", "Object", "arg2", ")", "{", "Field", "loc0", ";", "if", "(", "arg0", "instanceof", "Class", ")", "loc0", "=", "getFieldImpl", "(", "(", "Class", ")", "arg0", ",", "arg1", ")", ";", "else", "loc0", "=", "getFieldImpl", "(", "arg0", ".", "getClass", "(", ")", ",", "arg1", ")", ";", "loc0", ".", "setAccessible", "(", "true", ")", ";", "loc0", ".", "set", "(", "arg0", ",", "arg2", ")", ";", "}"], "nl_tokens": ["sets", "the", "value", "of", "the", "named", "field", ".", "concode_field_sep", "PlaceHolder", "placeHolder", "concode_field_sep", "Object", "getValue", "concode_elem_sep", "Class", "getClass", "concode_elem_sep", "List", "getAllStaticMethods", "concode_elem_sep", "Constructor", "getConstructorImpl", "concode_elem_sep", "Method", "getMethodImpl", "concode_elem_sep", "Field", "getFieldImpl", "concode_elem_sep", "Class", "getClassImpl", "concode_elem_sep", "List", "invokeAllStaticMethods", "concode_elem_sep", "Method", "getMethod", "concode_elem_sep", "Object", "invokeMethod", "concode_elem_sep", "Object", "invokeMethod", "concode_elem_sep", "Object", "invokeMethod", "concode_elem_sep", "Object", "invokeConstructor", "concode_elem_sep", "Object", "invokeConstructor"]}
{"code": "int function ( Date arg0 , boolean arg1 ) { return minutesAgo ( arg0 , System . currentTimeMillis ( ) , arg1 ) ; }", "nl": "return the difference in minutes between now and the date . concode_field_sep long MIN concode_elem_sep long ONEYEAR concode_elem_sep TimeZone timezone concode_elem_sep ResourceBundle translation concode_elem_sep long ONEHOUR concode_elem_sep long HALFHOUR concode_elem_sep long ONEDAY concode_field_sep String duration concode_elem_sep String yesterday concode_elem_sep int daysAgo concode_elem_sep String timeAgo concode_elem_sep String timeAgo concode_elem_sep boolean isYesterday concode_elem_sep String today concode_elem_sep boolean isToday concode_elem_sep int hoursAgo concode_elem_sep String inFuture concode_elem_sep int convertFrequencyToMinutes concode_elem_sep String translate concode_elem_sep String translate concode_elem_sep String timeAgoCss", "code_tokens": ["int", "function", "(", "Date", "arg0", ",", "boolean", "arg1", ")", "{", "return", "minutesAgo", "(", "arg0", ",", "System", ".", "currentTimeMillis", "(", ")", ",", "arg1", ")", ";", "}"], "nl_tokens": ["return", "the", "difference", "in", "minutes", "between", "now", "and", "the", "date", ".", "concode_field_sep", "long", "MIN", "concode_elem_sep", "long", "ONEYEAR", "concode_elem_sep", "TimeZone", "timezone", "concode_elem_sep", "ResourceBundle", "translation", "concode_elem_sep", "long", "ONEHOUR", "concode_elem_sep", "long", "HALFHOUR", "concode_elem_sep", "long", "ONEDAY", "concode_field_sep", "String", "duration", "concode_elem_sep", "String", "yesterday", "concode_elem_sep", "int", "daysAgo", "concode_elem_sep", "String", "timeAgo", "concode_elem_sep", "String", "timeAgo", "concode_elem_sep", "boolean", "isYesterday", "concode_elem_sep", "String", "today", "concode_elem_sep", "boolean", "isToday", "concode_elem_sep", "int", "hoursAgo", "concode_elem_sep", "String", "inFuture", "concode_elem_sep", "int", "convertFrequencyToMinutes", "concode_elem_sep", "String", "translate", "concode_elem_sep", "String", "translate", "concode_elem_sep", "String", "timeAgoCss"]}
{"code": "void function ( int arg0 , int arg1 ) { if ( initialized ) { framingRect = getFramingRect ( ) ; Log . d ( TAG , \"srini_string\" + framingRect ) ; framingRectInPreview = null ; } else { requestedFramingRectWidth = arg0 ; requestedFramingRectHeight = arg1 ; } }", "nl": "allows third party apps to specify the scanning rectangle dimensions , rather than determine them automatically based on screen resolution . concode_field_sep int MAX_FRAME_HEIGHT concode_elem_sep String TAG concode_elem_sep int requestedFramingRectHeight concode_elem_sep AutoFocusManager autoFocusManager concode_elem_sep CameraConfigurationManager configManager concode_elem_sep WindowManager windowManager concode_elem_sep PreviewCallback previewCallback concode_elem_sep Rect framingRectInPreview concode_elem_sep int MAX_FRAME_WIDTH concode_elem_sep Context context concode_elem_sep Rect framingRect concode_elem_sep boolean initialized concode_elem_sep int requestedFramingRectWidth concode_elem_sep Camera camera concode_elem_sep int MIN_FRAME_WIDTH concode_elem_sep boolean previewing concode_elem_sep int MIN_FRAME_HEIGHT concode_field_sep void requestPreviewFrame concode_elem_sep void stopPreview concode_elem_sep boolean isOpen concode_elem_sep void startPreview concode_elem_sep Rect getFramingRect concode_elem_sep PlanarYUVLuminanceSource buildLuminanceSource concode_elem_sep void closeDriver concode_elem_sep void setTorch concode_elem_sep void openDriver concode_elem_sep Rect getFramingRectInPreview", "code_tokens": ["void", "function", "(", "int", "arg0", ",", "int", "arg1", ")", "{", "if", "(", "initialized", ")", "{", "framingRect", "=", "getFramingRect", "(", ")", ";", "Log", ".", "d", "(", "TAG", ",", "\"srini_string\"", "+", "framingRect", ")", ";", "framingRectInPreview", "=", "null", ";", "}", "else", "{", "requestedFramingRectWidth", "=", "arg0", ";", "requestedFramingRectHeight", "=", "arg1", ";", "}", "}"], "nl_tokens": ["allows", "third", "party", "apps", "to", "specify", "the", "scanning", "rectangle", "dimensions", ",", "rather", "than", "determine", "them", "automatically", "based", "on", "screen", "resolution", ".", "concode_field_sep", "int", "MAX_FRAME_HEIGHT", "concode_elem_sep", "String", "TAG", "concode_elem_sep", "int", "requestedFramingRectHeight", "concode_elem_sep", "AutoFocusManager", "autoFocusManager", "concode_elem_sep", "CameraConfigurationManager", "configManager", "concode_elem_sep", "WindowManager", "windowManager", "concode_elem_sep", "PreviewCallback", "previewCallback", "concode_elem_sep", "Rect", "framingRectInPreview", "concode_elem_sep", "int", "MAX_FRAME_WIDTH", "concode_elem_sep", "Context", "context", "concode_elem_sep", "Rect", "framingRect", "concode_elem_sep", "boolean", "initialized", "concode_elem_sep", "int", "requestedFramingRectWidth", "concode_elem_sep", "Camera", "camera", "concode_elem_sep", "int", "MIN_FRAME_WIDTH", "concode_elem_sep", "boolean", "previewing", "concode_elem_sep", "int", "MIN_FRAME_HEIGHT", "concode_field_sep", "void", "requestPreviewFrame", "concode_elem_sep", "void", "stopPreview", "concode_elem_sep", "boolean", "isOpen", "concode_elem_sep", "void", "startPreview", "concode_elem_sep", "Rect", "getFramingRect", "concode_elem_sep", "PlanarYUVLuminanceSource", "buildLuminanceSource", "concode_elem_sep", "void", "closeDriver", "concode_elem_sep", "void", "setTorch", "concode_elem_sep", "void", "openDriver", "concode_elem_sep", "Rect", "getFramingRectInPreview"]}
{"code": "Function < Object , T > function ( Supplier < T > arg0 ) { return new SupplierFunction < T > ( arg0 ) ; }", "nl": "returns a function that ignores its input and returns the result of supplier.get . java 8 users : use the lambda expression o - > supplier.get instead . concode_field_sep long serialVersionUID concode_elem_sep Predicate<T> predicate concode_elem_sep V defaultValue concode_elem_sep Function<A,? extends B> f concode_elem_sep Function<B,C> g concode_elem_sep Supplier<T> supplier concode_elem_sep Map<K,? extends V> map concode_elem_sep E value concode_field_sep Function<T,Boolean> forPredicate concode_elem_sep Function<Object,E> constant concode_elem_sep String apply concode_elem_sep Object apply concode_elem_sep V apply concode_elem_sep V apply concode_elem_sep C apply concode_elem_sep Boolean apply concode_elem_sep E apply concode_elem_sep T apply concode_elem_sep Function<A,C> compose concode_elem_sep Function<E,E> identity concode_elem_sep int hashCode concode_elem_sep int hashCode concode_elem_sep int hashCode concode_elem_sep int hashCode concode_elem_sep int hashCode concode_elem_sep int hashCode concode_elem_sep boolean equals concode_elem_sep boolean equals concode_elem_sep boolean equals concode_elem_sep boolean equals concode_elem_sep boolean equals concode_elem_sep boolean equals concode_elem_sep Function<Object,String> toStringFunction concode_elem_sep String toString concode_elem_sep String toString concode_elem_sep String toString concode_elem_sep String toString concode_elem_sep String toString concode_elem_sep String toString concode_elem_sep String toString concode_elem_sep String toString concode_elem_sep Function<K,V> forMap concode_elem_sep Function<K,V> forMap", "code_tokens": ["Function", "<", "Object", ",", "T", ">", "function", "(", "Supplier", "<", "T", ">", "arg0", ")", "{", "return", "new", "SupplierFunction", "<", "T", ">", "(", "arg0", ")", ";", "}"], "nl_tokens": ["returns", "a", "function", "that", "ignores", "its", "input", "and", "returns", "the", "result", "of", "supplier", ".", "get", ".", "java", "8", "users", ":", "use", "the", "lambda", "expression", "o", "-", ">", "supplier", ".", "get", "instead", ".", "concode_field_sep", "long", "serialVersionUID", "concode_elem_sep", "Predicate", "<", "T", ">", "predicate", "concode_elem_sep", "V", "defaultValue", "concode_elem_sep", "Function", "<", "A", ",", "?", "extends", "B", ">", "f", "concode_elem_sep", "Function", "<", "B", ",", "C", ">", "g", "concode_elem_sep", "Supplier", "<", "T", ">", "supplier", "concode_elem_sep", "Map", "<", "K", ",", "?", "extends", "V", ">", "map", "concode_elem_sep", "E", "value", "concode_field_sep", "Function", "<", "T", ",", "Boolean", ">", "forPredicate", "concode_elem_sep", "Function", "<", "Object", ",", "E", ">", "constant", "concode_elem_sep", "String", "apply", "concode_elem_sep", "Object", "apply", "concode_elem_sep", "V", "apply", "concode_elem_sep", "V", "apply", "concode_elem_sep", "C", "apply", "concode_elem_sep", "Boolean", "apply", "concode_elem_sep", "E", "apply", "concode_elem_sep", "T", "apply", "concode_elem_sep", "Function", "<", "A", ",", "C", ">", "compose", "concode_elem_sep", "Function", "<", "E", ",", "E", ">", "identity", "concode_elem_sep", "int", "hashCode", "concode_elem_sep", "int", "hashCode", "concode_elem_sep", "int", "hashCode", "concode_elem_sep", "int", "hashCode", "concode_elem_sep", "int", "hashCode", "concode_elem_sep", "int", "hashCode", "concode_elem_sep", "boolean", "equals", "concode_elem_sep", "boolean", "equals", "concode_elem_sep", "boolean", "equals", "concode_elem_sep", "boolean", "equals", "concode_elem_sep", "boolean", "equals", "concode_elem_sep", "boolean", "equals", "concode_elem_sep", "Function", "<", "Object", ",", "String", ">", "toStringFunction", "concode_elem_sep", "String", "toString", "concode_elem_sep", "String", "toString", "concode_elem_sep", "String", "toString", "concode_elem_sep", "String", "toString", "concode_elem_sep", "String", "toString", "concode_elem_sep", "String", "toString", "concode_elem_sep", "String", "toString", "concode_elem_sep", "String", "toString", "concode_elem_sep", "Function", "<", "K", ",", "V", ">", "forMap", "concode_elem_sep", "Function", "<", "K", ",", "V", ">", "forMap"]}
{"code": "CategoricalDistribution function ( RandomVariable [ ] arg0 , AssignmentProposition [ ] arg1 , BayesianNetwork arg2 , int arg3 ) { double [ ] loc0 = new double [ ProbUtil . expectedSizeOfCategoricalDistribution ( arg0 ) ] ; for ( int loc1 = 0 ; loc1 < arg3 ; loc1 ++ ) { Pair < Map < RandomVariable , Object > , Double > loc2 = weightedSample ( arg2 , arg1 ) ; loc0 [ ProbUtil . indexOf ( arg0 , loc2 . getFirst ( ) ) ] += loc2 . getSecond ( ) ; } return new ProbabilityTable ( loc0 , arg0 ) . normalize ( ) ; }", "nl": "the likelihood-weighting algorithm in figure 14.15 . for answering queries given evidence in a bayesian network . concode_field_sep Randomizer randomizer concode_field_sep Pair<Map<RandomVariable,Object>,Double> weightedSample concode_elem_sep CategoricalDistribution ask", "code_tokens": ["CategoricalDistribution", "function", "(", "RandomVariable", "[", "]", "arg0", ",", "AssignmentProposition", "[", "]", "arg1", ",", "BayesianNetwork", "arg2", ",", "int", "arg3", ")", "{", "double", "[", "]", "loc0", "=", "new", "double", "[", "ProbUtil", ".", "expectedSizeOfCategoricalDistribution", "(", "arg0", ")", "]", ";", "for", "(", "int", "loc1", "=", "0", ";", "loc1", "<", "arg3", ";", "loc1", "+", "+", ")", "{", "Pair", "<", "Map", "<", "RandomVariable", ",", "Object", ">", ",", "Double", ">", "loc2", "=", "weightedSample", "(", "arg2", ",", "arg1", ")", ";", "loc0", "[", "ProbUtil", ".", "indexOf", "(", "arg0", ",", "loc2", ".", "getFirst", "(", ")", ")", "]", "+=", "loc2", ".", "getSecond", "(", ")", ";", "}", "return", "new", "ProbabilityTable", "(", "loc0", ",", "arg0", ")", ".", "normalize", "(", ")", ";", "}"], "nl_tokens": ["the", "likelihood", "-", "weighting", "algorithm", "in", "figure", "14.15", ".", "for", "answering", "queries", "given", "evidence", "in", "a", "bayesian", "network", ".", "concode_field_sep", "Randomizer", "randomizer", "concode_field_sep", "Pair", "<", "Map", "<", "RandomVariable", ",", "Object", ">", ",", "Double", ">", "weightedSample", "concode_elem_sep", "CategoricalDistribution", "ask"]}
{"code": "void function ( String arg0 ) { if ( isRunningOnServer ( ) ) return ; progressMonitor . arg0 = arg0 ; progressMonitor . log . append ( arg0 + \"srini_string\" ) ; if ( progressMonitor . consoleMode ) { System . out . println ( arg0 ) ; } }", "nl": "logs a message . concode_field_sep boolean consoleMode concode_elem_sep org.apache.log4j.Logger logger concode_elem_sep int maxValue concode_elem_sep boolean showProgress concode_elem_sep ProgressMonitor progressMonitor concode_elem_sep StringBuffer log concode_elem_sep String currentMessage concode_elem_sep List<String> debugMessages concode_elem_sep TreeSet<String> warnings concode_elem_sep int curValue concode_elem_sep HashMap<String,Integer> warningCounts concode_field_sep void setCurValue concode_elem_sep void setConsoleModeAndParseShowProgress concode_elem_sep void setShowProgress concode_elem_sep int getMaxValue concode_elem_sep String getLog concode_elem_sep void logWarning concode_elem_sep ArrayList<String> getWarnings concode_elem_sep void logDebug concode_elem_sep ArrayList<String> getMessages concode_elem_sep boolean isConsoleMode concode_elem_sep List<String> getDebugMessages concode_elem_sep void setMaxValue concode_elem_sep void incrementCurValue concode_elem_sep boolean isRunningOnServer concode_elem_sep String getCurrentMessage concode_elem_sep void setConsoleMode concode_elem_sep int getCurValue concode_elem_sep boolean isShowProgress concode_elem_sep double getPercentComplete", "code_tokens": ["void", "function", "(", "String", "arg0", ")", "{", "if", "(", "isRunningOnServer", "(", ")", ")", "return", ";", "progressMonitor", ".", "arg0", "=", "arg0", ";", "progressMonitor", ".", "log", ".", "append", "(", "arg0", "+", "\"srini_string\"", ")", ";", "if", "(", "progressMonitor", ".", "consoleMode", ")", "{", "System", ".", "out", ".", "println", "(", "arg0", ")", ";", "}", "}"], "nl_tokens": ["logs", "a", "message", ".", "concode_field_sep", "boolean", "consoleMode", "concode_elem_sep", "org", ".", "apache", ".", "log4j", ".", "Logger", "logger", "concode_elem_sep", "int", "maxValue", "concode_elem_sep", "boolean", "showProgress", "concode_elem_sep", "ProgressMonitor", "progressMonitor", "concode_elem_sep", "StringBuffer", "log", "concode_elem_sep", "String", "currentMessage", "concode_elem_sep", "List", "<", "String", ">", "debugMessages", "concode_elem_sep", "TreeSet", "<", "String", ">", "warnings", "concode_elem_sep", "int", "curValue", "concode_elem_sep", "HashMap", "<", "String", ",", "Integer", ">", "warningCounts", "concode_field_sep", "void", "setCurValue", "concode_elem_sep", "void", "setConsoleModeAndParseShowProgress", "concode_elem_sep", "void", "setShowProgress", "concode_elem_sep", "int", "getMaxValue", "concode_elem_sep", "String", "getLog", "concode_elem_sep", "void", "logWarning", "concode_elem_sep", "ArrayList", "<", "String", ">", "getWarnings", "concode_elem_sep", "void", "logDebug", "concode_elem_sep", "ArrayList", "<", "String", ">", "getMessages", "concode_elem_sep", "boolean", "isConsoleMode", "concode_elem_sep", "List", "<", "String", ">", "getDebugMessages", "concode_elem_sep", "void", "setMaxValue", "concode_elem_sep", "void", "incrementCurValue", "concode_elem_sep", "boolean", "isRunningOnServer", "concode_elem_sep", "String", "getCurrentMessage", "concode_elem_sep", "void", "setConsoleMode", "concode_elem_sep", "int", "getCurValue", "concode_elem_sep", "boolean", "isShowProgress", "concode_elem_sep", "double", "getPercentComplete"]}
{"code": "void function ( ) { assertEquals ( 20.2 , ttm . getTimeToCPA ( ) , 0.001 ) ; }", "nl": "test method for net.sf.marineapi.nmea.parser.ttmparser #gettimetocpa . concode_field_sep String EXAMPLE concode_elem_sep TTMParser ttm concode_elem_sep TTMParser empty concode_field_sep void testGetAcquisitionType concode_elem_sep void testGetDistance concode_elem_sep void testSetStatus concode_elem_sep void testSetNumber concode_elem_sep void testSetDistanceOfCPA concode_elem_sep void testConstructor concode_elem_sep void testGetTime concode_elem_sep void testSetCourse concode_elem_sep void testGetName concode_elem_sep void testGetNumber concode_elem_sep void testGetDistanceOfCPA concode_elem_sep void setUp concode_elem_sep void testGetCourse concode_elem_sep void testSetReferenceTrue concode_elem_sep void testSetReferenceFalse concode_elem_sep void testSetAcquisitionType concode_elem_sep void testSetBearing concode_elem_sep void testGetBearing concode_elem_sep void testSetDistance concode_elem_sep void testSetTimeToCPA concode_elem_sep void testSetTime concode_elem_sep void testGetSpeed concode_elem_sep void testGetStatus concode_elem_sep void testSetName concode_elem_sep void testSetSpeed", "code_tokens": ["void", "function", "(", ")", "{", "assertEquals", "(", "20.2", ",", "ttm", ".", "getTimeToCPA", "(", ")", ",", "0.001", ")", ";", "}"], "nl_tokens": ["test", "method", "for", "net", ".", "sf", ".", "marineapi", ".", "nmea", ".", "parser", ".", "ttmparser", "#gettimetocpa . concode_field_sep String EXAMPLE concode_elem_sep TTMParser ttm concode_elem_sep TTMParser empty concode_field_sep void testGetAcquisitionType concode_elem_sep void testGetDistance concode_elem_sep void testSetStatus concode_elem_sep void testSetNumber concode_elem_sep void testSetDistanceOfCPA concode_elem_sep void testConstructor concode_elem_sep void testGetTime concode_elem_sep void testSetCourse concode_elem_sep void testGetName concode_elem_sep void testGetNumber concode_elem_sep void testGetDistanceOfCPA concode_elem_sep void setUp concode_elem_sep void testGetCourse concode_elem_sep void testSetReferenceTrue concode_elem_sep void testSetReferenceFalse concode_elem_sep void testSetAcquisitionType concode_elem_sep void testSetBearing concode_elem_sep void testGetBearing concode_elem_sep void testSetDistance concode_elem_sep void testSetTimeToCPA concode_elem_sep void testSetTime concode_elem_sep void testGetSpeed concode_elem_sep void testGetStatus concode_elem_sep void testSetName concode_elem_sep void testSetSpeed"]}
{"code": "String function ( ) { return withExceptionHandling ( new Trans < String > ( ) { public String transform ( ) { return transformation . transformToString ( ) ; } } ) ; }", "nl": "perform the xslt transformation specified in the constructor concode_field_sep File PWD concode_elem_sep Map<String,Object> parameters concode_elem_sep Transformation transformation concode_field_sep R withExceptionHandling concode_elem_sep void setOutputProperties concode_elem_sep R transform concode_elem_sep void transformTo concode_elem_sep String getDefaultSystemId concode_elem_sep void setParameter concode_elem_sep void setErrorListener concode_elem_sep void setOutputProperty concode_elem_sep void clearParameters concode_elem_sep Document getResultDocument concode_elem_sep void setURIResolver concode_elem_sep void provideSystemIdIfRequired concode_elem_sep Object getParameter", "code_tokens": ["String", "function", "(", ")", "{", "return", "withExceptionHandling", "(", "new", "Trans", "<", "String", ">", "(", ")", "{", "public", "String", "transform", "(", ")", "{", "return", "transformation", ".", "transformToString", "(", ")", ";", "}", "}", ")", ";", "}"], "nl_tokens": ["perform", "the", "xslt", "transformation", "specified", "in", "the", "constructor", "concode_field_sep", "File", "PWD", "concode_elem_sep", "Map", "<", "String", ",", "Object", ">", "parameters", "concode_elem_sep", "Transformation", "transformation", "concode_field_sep", "R", "withExceptionHandling", "concode_elem_sep", "void", "setOutputProperties", "concode_elem_sep", "R", "transform", "concode_elem_sep", "void", "transformTo", "concode_elem_sep", "String", "getDefaultSystemId", "concode_elem_sep", "void", "setParameter", "concode_elem_sep", "void", "setErrorListener", "concode_elem_sep", "void", "setOutputProperty", "concode_elem_sep", "void", "clearParameters", "concode_elem_sep", "Document", "getResultDocument", "concode_elem_sep", "void", "setURIResolver", "concode_elem_sep", "void", "provideSystemIdIfRequired", "concode_elem_sep", "Object", "getParameter"]}
{"code": "Script function ( TransactionSignature arg0 ) { return new ScriptBuilder ( ) . data ( arg0 . encodeToBitcoin ( ) ) . build ( ) ; }", "nl": "creates a scriptsig that can redeem a pay-to-pubkey output . concode_field_sep List<ScriptChunk> chunks concode_field_sep ScriptBuilder op concode_elem_sep ScriptBuilder data concode_elem_sep Script createMultiSigOutputScript concode_elem_sep Script build concode_elem_sep Script createMultiSigInputScriptBytes concode_elem_sep ScriptBuilder smallNum concode_elem_sep Script createP2SHOutputScript concode_elem_sep Script createOutputScript concode_elem_sep Script createOutputScript concode_elem_sep Script createMultiSigInputScript concode_elem_sep Script createMultiSigInputScript", "code_tokens": ["Script", "function", "(", "TransactionSignature", "arg0", ")", "{", "return", "new", "ScriptBuilder", "(", ")", ".", "data", "(", "arg0", ".", "encodeToBitcoin", "(", ")", ")", ".", "build", "(", ")", ";", "}"], "nl_tokens": ["creates", "a", "scriptsig", "that", "can", "redeem", "a", "pay", "-", "to", "-", "pubkey", "output", ".", "concode_field_sep", "List", "<", "ScriptChunk", ">", "chunks", "concode_field_sep", "ScriptBuilder", "op", "concode_elem_sep", "ScriptBuilder", "data", "concode_elem_sep", "Script", "createMultiSigOutputScript", "concode_elem_sep", "Script", "build", "concode_elem_sep", "Script", "createMultiSigInputScriptBytes", "concode_elem_sep", "ScriptBuilder", "smallNum", "concode_elem_sep", "Script", "createP2SHOutputScript", "concode_elem_sep", "Script", "createOutputScript", "concode_elem_sep", "Script", "createOutputScript", "concode_elem_sep", "Script", "createMultiSigInputScript", "concode_elem_sep", "Script", "createMultiSigInputScript"]}
{"code": "Wrapper function ( Class < ? > arg0 ) { while ( ClassGenerator . isDynamicClass ( arg0 ) ) arg0 = arg0 . getSuperclass ( ) ; if ( arg0 == Object . class ) return OBJECT_WRAPPER ; Wrapper loc0 = WRAPPER_MAP . get ( arg0 ) ; if ( loc0 == null ) { loc0 = makeWrapper ( arg0 ) ; WRAPPER_MAP . put ( arg0 , loc0 ) ; } return loc0 ; }", "nl": "get wrapper . concode_field_sep Map<Class<?>,Wrapper> WRAPPER_MAP concode_elem_sep Wrapper OBJECT_WRAPPER concode_elem_sep String[] EMPTY_STRING_ARRAY concode_elem_sep AtomicLong WRAPPER_CLASS_COUNTER concode_elem_sep String[] OBJECT_METHODS concode_field_sep boolean hasMethods concode_elem_sep String[] getDeclaredMethodNames concode_elem_sep String[] getDeclaredMethodNames concode_elem_sep void setPropertyValues concode_elem_sep Object[] getPropertyValues concode_elem_sep String[] getMethodNames concode_elem_sep String[] getMethodNames concode_elem_sep boolean hasProperty concode_elem_sep boolean hasProperty concode_elem_sep boolean hasMethod concode_elem_sep Class<?> getPropertyType concode_elem_sep Class<?> getPropertyType concode_elem_sep String args concode_elem_sep Wrapper makeWrapper concode_elem_sep Object getPropertyValue concode_elem_sep Object getPropertyValue concode_elem_sep String propertyName concode_elem_sep void setPropertyValue concode_elem_sep void setPropertyValue concode_elem_sep String arg concode_elem_sep String[] getPropertyNames concode_elem_sep String[] getPropertyNames concode_elem_sep Object invokeMethod concode_elem_sep Object invokeMethod", "code_tokens": ["Wrapper", "function", "(", "Class", "<", "?", ">", "arg0", ")", "{", "while", "(", "ClassGenerator", ".", "isDynamicClass", "(", "arg0", ")", ")", "arg0", "=", "arg0", ".", "getSuperclass", "(", ")", ";", "if", "(", "arg0", "==", "Object", ".", "class", ")", "return", "OBJECT_WRAPPER", ";", "Wrapper", "loc0", "=", "WRAPPER_MAP", ".", "get", "(", "arg0", ")", ";", "if", "(", "loc0", "==", "null", ")", "{", "loc0", "=", "makeWrapper", "(", "arg0", ")", ";", "WRAPPER_MAP", ".", "put", "(", "arg0", ",", "loc0", ")", ";", "}", "return", "loc0", ";", "}"], "nl_tokens": ["get", "wrapper", ".", "concode_field_sep", "Map", "<", "Class", "<", "?", ">", ",", "Wrapper", ">", "WRAPPER_MAP", "concode_elem_sep", "Wrapper", "OBJECT_WRAPPER", "concode_elem_sep", "String", "[", "]", "EMPTY_STRING_ARRAY", "concode_elem_sep", "AtomicLong", "WRAPPER_CLASS_COUNTER", "concode_elem_sep", "String", "[", "]", "OBJECT_METHODS", "concode_field_sep", "boolean", "hasMethods", "concode_elem_sep", "String", "[", "]", "getDeclaredMethodNames", "concode_elem_sep", "String", "[", "]", "getDeclaredMethodNames", "concode_elem_sep", "void", "setPropertyValues", "concode_elem_sep", "Object", "[", "]", "getPropertyValues", "concode_elem_sep", "String", "[", "]", "getMethodNames", "concode_elem_sep", "String", "[", "]", "getMethodNames", "concode_elem_sep", "boolean", "hasProperty", "concode_elem_sep", "boolean", "hasProperty", "concode_elem_sep", "boolean", "hasMethod", "concode_elem_sep", "Class", "<", "?", ">", "getPropertyType", "concode_elem_sep", "Class", "<", "?", ">", "getPropertyType", "concode_elem_sep", "String", "args", "concode_elem_sep", "Wrapper", "makeWrapper", "concode_elem_sep", "Object", "getPropertyValue", "concode_elem_sep", "Object", "getPropertyValue", "concode_elem_sep", "String", "propertyName", "concode_elem_sep", "void", "setPropertyValue", "concode_elem_sep", "void", "setPropertyValue", "concode_elem_sep", "String", "arg", "concode_elem_sep", "String", "[", "]", "getPropertyNames", "concode_elem_sep", "String", "[", "]", "getPropertyNames", "concode_elem_sep", "Object", "invokeMethod", "concode_elem_sep", "Object", "invokeMethod"]}
{"code": "void function ( ) { RPCFileReadResponse loc0 = new RPCFileReadResponse ( TEMP_UFS_FILE_ID , OFFSET , LENGTH , null , STATUS ) ; int loc1 = loc0 . getEncodedLength ( ) ; loc0 . encode ( mBuffer ) ; Assert . assertEquals ( loc1 , mBuffer . readableBytes ( ) ) ; }", "nl": "tests the rpcblockreadresponse #getencodedlength method . concode_field_sep long OFFSET concode_elem_sep long TEMP_UFS_FILE_ID concode_elem_sep ByteBuf mBuffer concode_elem_sep ExpectedException mThrown concode_elem_sep long LENGTH concode_elem_sep RPCResponse.Status STATUS concode_field_sep void encodeDecode concode_elem_sep void before concode_elem_sep void getPayloadDataBuffer concode_elem_sep void assertValid concode_elem_sep void assertValid concode_elem_sep void createErrorResponse concode_elem_sep void validate", "code_tokens": ["void", "function", "(", ")", "{", "RPCFileReadResponse", "loc0", "=", "new", "RPCFileReadResponse", "(", "TEMP_UFS_FILE_ID", ",", "OFFSET", ",", "LENGTH", ",", "null", ",", "STATUS", ")", ";", "int", "loc1", "=", "loc0", ".", "getEncodedLength", "(", ")", ";", "loc0", ".", "encode", "(", "mBuffer", ")", ";", "Assert", ".", "assertEquals", "(", "loc1", ",", "mBuffer", ".", "readableBytes", "(", ")", ")", ";", "}"], "nl_tokens": ["tests", "the", "rpcblockreadresponse", "#getencodedlength method . concode_field_sep long OFFSET concode_elem_sep long TEMP_UFS_FILE_ID concode_elem_sep ByteBuf mBuffer concode_elem_sep ExpectedException mThrown concode_elem_sep long LENGTH concode_elem_sep RPCResponse.Status STATUS concode_field_sep void encodeDecode concode_elem_sep void before concode_elem_sep void getPayloadDataBuffer concode_elem_sep void assertValid concode_elem_sep void assertValid concode_elem_sep void createErrorResponse concode_elem_sep void validate"]}
{"code": "XPathContext function ( ) { try { XPathContext loc0 = ( XPathContext ) super . clone ( ) ; loc0 . path = new LinkedList < Level > ( ) ; for ( Level loc1 : path ) { loc0 . path . addLast ( loc1 . clone ( ) ) ; } return loc0 ; } catch ( CloneNotSupportedException loc0 ) { throw new RuntimeException ( \"srini_string\" , loc0 ) ; } }", "nl": "creates a deep copy of this xpathcontext . concode_field_sep String OPEN concode_elem_sep String expression concode_elem_sep String PI concode_elem_sep String TEXT concode_elem_sep short type concode_elem_sep String EMPTY concode_elem_sep Map<String,String> uri2Prefix concode_elem_sep Map<QName,Level> attributes concode_elem_sep Deque<Level> path concode_elem_sep String SEP concode_elem_sep String COMMENT concode_elem_sep String xpath concode_elem_sep String ATTR concode_elem_sep List<Level> children concode_elem_sep QName name concode_elem_sep String CLOSE concode_field_sep void navigateToParent concode_elem_sep String getName concode_elem_sep QName getName concode_elem_sep QName getName concode_elem_sep void appendChildren concode_elem_sep Map<String,String> invert concode_elem_sep void addAttribute concode_elem_sep short getType concode_elem_sep short getType concode_elem_sep void addAttributes concode_elem_sep int add1OrIncrement concode_elem_sep String getXPath concode_elem_sep String getXPath concode_elem_sep void navigateToChild concode_elem_sep void setChildren concode_elem_sep void navigateToAttribute", "code_tokens": ["XPathContext", "function", "(", ")", "{", "try", "{", "XPathContext", "loc0", "=", "(", "XPathContext", ")", "super", ".", "clone", "(", ")", ";", "loc0", ".", "path", "=", "new", "LinkedList", "<", "Level", ">", "(", ")", ";", "for", "(", "Level", "loc1", ":", "path", ")", "{", "loc0", ".", "path", ".", "addLast", "(", "loc1", ".", "clone", "(", ")", ")", ";", "}", "return", "loc0", ";", "}", "catch", "(", "CloneNotSupportedException", "loc0", ")", "{", "throw", "new", "RuntimeException", "(", "\"srini_string\"", ",", "loc0", ")", ";", "}", "}"], "nl_tokens": ["creates", "a", "deep", "copy", "of", "this", "xpathcontext", ".", "concode_field_sep", "String", "OPEN", "concode_elem_sep", "String", "expression", "concode_elem_sep", "String", "PI", "concode_elem_sep", "String", "TEXT", "concode_elem_sep", "short", "type", "concode_elem_sep", "String", "EMPTY", "concode_elem_sep", "Map", "<", "String", ",", "String", ">", "uri2Prefix", "concode_elem_sep", "Map", "<", "QName", ",", "Level", ">", "attributes", "concode_elem_sep", "Deque", "<", "Level", ">", "path", "concode_elem_sep", "String", "SEP", "concode_elem_sep", "String", "COMMENT", "concode_elem_sep", "String", "xpath", "concode_elem_sep", "String", "ATTR", "concode_elem_sep", "List", "<", "Level", ">", "children", "concode_elem_sep", "QName", "name", "concode_elem_sep", "String", "CLOSE", "concode_field_sep", "void", "navigateToParent", "concode_elem_sep", "String", "getName", "concode_elem_sep", "QName", "getName", "concode_elem_sep", "QName", "getName", "concode_elem_sep", "void", "appendChildren", "concode_elem_sep", "Map", "<", "String", ",", "String", ">", "invert", "concode_elem_sep", "void", "addAttribute", "concode_elem_sep", "short", "getType", "concode_elem_sep", "short", "getType", "concode_elem_sep", "void", "addAttributes", "concode_elem_sep", "int", "add1OrIncrement", "concode_elem_sep", "String", "getXPath", "concode_elem_sep", "String", "getXPath", "concode_elem_sep", "void", "navigateToChild", "concode_elem_sep", "void", "setChildren", "concode_elem_sep", "void", "navigateToAttribute"]}
{"code": "File function ( ) { return sourceCodeFile ; }", "nl": "get the file associated with the current source file . concode_field_sep boolean ignoreExceptions concode_elem_sep File sourceCodeFile concode_elem_sep String sourceCodeFilename concode_elem_sep LanguageVersion languageVersion concode_elem_sep ConcurrentMap<String,Object> attributes concode_elem_sep Report report concode_field_sep void setSourceCodeFile concode_elem_sep void setLanguageVersion concode_elem_sep boolean setAttribute concode_elem_sep LanguageVersion getLanguageVersion concode_elem_sep Object getAttribute concode_elem_sep boolean isIgnoreExceptions concode_elem_sep void setSourceCodeFilename concode_elem_sep void setIgnoreExceptions concode_elem_sep Report getReport concode_elem_sep Object removeAttribute concode_elem_sep String getSourceCodeFilename concode_elem_sep void setReport", "code_tokens": ["File", "function", "(", ")", "{", "return", "sourceCodeFile", ";", "}"], "nl_tokens": ["get", "the", "file", "associated", "with", "the", "current", "source", "file", ".", "concode_field_sep", "boolean", "ignoreExceptions", "concode_elem_sep", "File", "sourceCodeFile", "concode_elem_sep", "String", "sourceCodeFilename", "concode_elem_sep", "LanguageVersion", "languageVersion", "concode_elem_sep", "ConcurrentMap", "<", "String", ",", "Object", ">", "attributes", "concode_elem_sep", "Report", "report", "concode_field_sep", "void", "setSourceCodeFile", "concode_elem_sep", "void", "setLanguageVersion", "concode_elem_sep", "boolean", "setAttribute", "concode_elem_sep", "LanguageVersion", "getLanguageVersion", "concode_elem_sep", "Object", "getAttribute", "concode_elem_sep", "boolean", "isIgnoreExceptions", "concode_elem_sep", "void", "setSourceCodeFilename", "concode_elem_sep", "void", "setIgnoreExceptions", "concode_elem_sep", "Report", "getReport", "concode_elem_sep", "Object", "removeAttribute", "concode_elem_sep", "String", "getSourceCodeFilename", "concode_elem_sep", "void", "setReport"]}
{"code": "Bundle function ( ) { return ( Bundle ) this . bundle . clone ( ) ; }", "nl": "returns the values in the container packaged in a bundle . concode_field_sep Bundle bundle concode_elem_sep Bundle bundle concode_field_sep E putStringArrayList concode_elem_sep SharePhoto getPhoto concode_elem_sep E putPhotoArrayList concode_elem_sep E putDoubleArray concode_elem_sep double getDouble concode_elem_sep E putDouble concode_elem_sep E putLong concode_elem_sep double[] getDoubleArray concode_elem_sep Object get concode_elem_sep ArrayList<ShareOpenGraphObject> getObjectArrayList concode_elem_sep E putIntArray concode_elem_sep boolean getBoolean concode_elem_sep E putLongArray concode_elem_sep Set<String> keySet concode_elem_sep E putBoolean concode_elem_sep boolean[] getBooleanArray concode_elem_sep ArrayList<SharePhoto> getPhotoArrayList concode_elem_sep ShareOpenGraphObject getObject concode_elem_sep E putPhoto concode_elem_sep E readFrom concode_elem_sep E putInt concode_elem_sep E putString concode_elem_sep ArrayList<String> getStringArrayList concode_elem_sep String getString concode_elem_sep int describeContents concode_elem_sep long[] getLongArray concode_elem_sep long getLong concode_elem_sep int getInt concode_elem_sep E putObjectArrayList concode_elem_sep E putBooleanArray concode_elem_sep E putObject concode_elem_sep void writeToParcel concode_elem_sep int[] getIntArray", "code_tokens": ["Bundle", "function", "(", ")", "{", "return", "(", "Bundle", ")", "this", ".", "bundle", ".", "clone", "(", ")", ";", "}"], "nl_tokens": ["returns", "the", "values", "in", "the", "container", "packaged", "in", "a", "bundle", ".", "concode_field_sep", "Bundle", "bundle", "concode_elem_sep", "Bundle", "bundle", "concode_field_sep", "E", "putStringArrayList", "concode_elem_sep", "SharePhoto", "getPhoto", "concode_elem_sep", "E", "putPhotoArrayList", "concode_elem_sep", "E", "putDoubleArray", "concode_elem_sep", "double", "getDouble", "concode_elem_sep", "E", "putDouble", "concode_elem_sep", "E", "putLong", "concode_elem_sep", "double", "[", "]", "getDoubleArray", "concode_elem_sep", "Object", "get", "concode_elem_sep", "ArrayList", "<", "ShareOpenGraphObject", ">", "getObjectArrayList", "concode_elem_sep", "E", "putIntArray", "concode_elem_sep", "boolean", "getBoolean", "concode_elem_sep", "E", "putLongArray", "concode_elem_sep", "Set", "<", "String", ">", "keySet", "concode_elem_sep", "E", "putBoolean", "concode_elem_sep", "boolean", "[", "]", "getBooleanArray", "concode_elem_sep", "ArrayList", "<", "SharePhoto", ">", "getPhotoArrayList", "concode_elem_sep", "ShareOpenGraphObject", "getObject", "concode_elem_sep", "E", "putPhoto", "concode_elem_sep", "E", "readFrom", "concode_elem_sep", "E", "putInt", "concode_elem_sep", "E", "putString", "concode_elem_sep", "ArrayList", "<", "String", ">", "getStringArrayList", "concode_elem_sep", "String", "getString", "concode_elem_sep", "int", "describeContents", "concode_elem_sep", "long", "[", "]", "getLongArray", "concode_elem_sep", "long", "getLong", "concode_elem_sep", "int", "getInt", "concode_elem_sep", "E", "putObjectArrayList", "concode_elem_sep", "E", "putBooleanArray", "concode_elem_sep", "E", "putObject", "concode_elem_sep", "void", "writeToParcel", "concode_elem_sep", "int", "[", "]", "getIntArray"]}
{"code": "void function ( ) { System . out . println ( \"srini_string\" ) ; Device loc0 = null ; String loc1 = \"srini_string\" ; String loc2 = loc0 . toString ( ) ; assertEquals ( loc1 , loc2 ) ; fail ( \"srini_string\" ) ; }", "nl": "test of tostring method , of class device . concode_field_sep Device dev concode_field_sep void testGetType concode_elem_sep void setUpClass concode_elem_sep void testGetDeviceName_0args concode_elem_sep void testAddToPane concode_elem_sep void testGetAddress concode_elem_sep void tearDownClass concode_elem_sep void tearDown concode_elem_sep void testGetDeviceNames concode_elem_sep void testGetDeviceBlock concode_elem_sep void testAddCapabilities concode_elem_sep void testGetImgName concode_elem_sep void testAddCapability concode_elem_sep void testGetDeviceName_Locale concode_elem_sep void setUp concode_elem_sep void testGetImage concode_elem_sep void testGetDeviceID concode_elem_sep void testGetCapabilityBlock concode_elem_sep void testGetCapabilities concode_elem_sep void testRemoveCapability", "code_tokens": ["void", "function", "(", ")", "{", "System", ".", "out", ".", "println", "(", "\"srini_string\"", ")", ";", "Device", "loc0", "=", "null", ";", "String", "loc1", "=", "\"srini_string\"", ";", "String", "loc2", "=", "loc0", ".", "toString", "(", ")", ";", "assertEquals", "(", "loc1", ",", "loc2", ")", ";", "fail", "(", "\"srini_string\"", ")", ";", "}"], "nl_tokens": ["test", "of", "tostring", "method", ",", "of", "class", "device", ".", "concode_field_sep", "Device", "dev", "concode_field_sep", "void", "testGetType", "concode_elem_sep", "void", "setUpClass", "concode_elem_sep", "void", "testGetDeviceName_0args", "concode_elem_sep", "void", "testAddToPane", "concode_elem_sep", "void", "testGetAddress", "concode_elem_sep", "void", "tearDownClass", "concode_elem_sep", "void", "tearDown", "concode_elem_sep", "void", "testGetDeviceNames", "concode_elem_sep", "void", "testGetDeviceBlock", "concode_elem_sep", "void", "testAddCapabilities", "concode_elem_sep", "void", "testGetImgName", "concode_elem_sep", "void", "testAddCapability", "concode_elem_sep", "void", "testGetDeviceName_Locale", "concode_elem_sep", "void", "setUp", "concode_elem_sep", "void", "testGetImage", "concode_elem_sep", "void", "testGetDeviceID", "concode_elem_sep", "void", "testGetCapabilityBlock", "concode_elem_sep", "void", "testGetCapabilities", "concode_elem_sep", "void", "testRemoveCapability"]}
{"code": "boolean function ( ArrayList < String > arg0 ) { String loc0 = arg0 . get ( 0 ) ; String loc1 = arg0 . get ( 1 ) ; if ( this . logLevels == null || this . logLevels . containsKey ( loc0 . toUpperCase ( ) ) ) { Matcher loc2 = filterPattern . matcher ( loc1 ) ; return loc2 . matches ( ) ; } else { return false ; } }", "nl": "checks if the loglevel and logmessage goes through the logfilter . concode_field_sep String fileName concode_elem_sep String DEFAULT_REGEX concode_elem_sep Writer logWriter concode_elem_sep String WHITE_SPACE_REGEX concode_elem_sep Map<String,Integer> logLevels concode_elem_sep String LOG_LEVEL_REGEX concode_elem_sep Filter logFilter concode_elem_sep long logRotation concode_elem_sep String ALLOW_ALL_REGEX concode_elem_sep String PREFIX_REGEX concode_elem_sep Pattern filterPattern concode_elem_sep String logPath concode_elem_sep long modTime concode_elem_sep String logFile concode_elem_sep String TIMESTAMP_REGEX concode_elem_sep List<String> parameters concode_elem_sep boolean noFilter concode_elem_sep Map<String,String> filterParams concode_elem_sep Pattern SPLITTER_PATTERN concode_field_sep boolean isFilterPresent concode_elem_sep void setLogLevel concode_elem_sep void constructPattern concode_elem_sep void setParameter concode_elem_sep void defineParameter concode_elem_sep void reset concode_elem_sep void streamLog concode_elem_sep int compareTo concode_elem_sep String getFileName concode_elem_sep ArrayList<String> splitLogMessage concode_elem_sep long getModTime concode_elem_sep ArrayList<FileInfo> getFileList", "code_tokens": ["boolean", "function", "(", "ArrayList", "<", "String", ">", "arg0", ")", "{", "String", "loc0", "=", "arg0", ".", "get", "(", "0", ")", ";", "String", "loc1", "=", "arg0", ".", "get", "(", "1", ")", ";", "if", "(", "this", ".", "logLevels", "==", "null", "|", "|", "this", ".", "logLevels", ".", "containsKey", "(", "loc0", ".", "toUpperCase", "(", ")", ")", ")", "{", "Matcher", "loc2", "=", "filterPattern", ".", "matcher", "(", "loc1", ")", ";", "return", "loc2", ".", "matches", "(", ")", ";", "}", "else", "{", "return", "false", ";", "}", "}"], "nl_tokens": ["checks", "if", "the", "loglevel", "and", "logmessage", "goes", "through", "the", "logfilter", ".", "concode_field_sep", "String", "fileName", "concode_elem_sep", "String", "DEFAULT_REGEX", "concode_elem_sep", "Writer", "logWriter", "concode_elem_sep", "String", "WHITE_SPACE_REGEX", "concode_elem_sep", "Map", "<", "String", ",", "Integer", ">", "logLevels", "concode_elem_sep", "String", "LOG_LEVEL_REGEX", "concode_elem_sep", "Filter", "logFilter", "concode_elem_sep", "long", "logRotation", "concode_elem_sep", "String", "ALLOW_ALL_REGEX", "concode_elem_sep", "String", "PREFIX_REGEX", "concode_elem_sep", "Pattern", "filterPattern", "concode_elem_sep", "String", "logPath", "concode_elem_sep", "long", "modTime", "concode_elem_sep", "String", "logFile", "concode_elem_sep", "String", "TIMESTAMP_REGEX", "concode_elem_sep", "List", "<", "String", ">", "parameters", "concode_elem_sep", "boolean", "noFilter", "concode_elem_sep", "Map", "<", "String", ",", "String", ">", "filterParams", "concode_elem_sep", "Pattern", "SPLITTER_PATTERN", "concode_field_sep", "boolean", "isFilterPresent", "concode_elem_sep", "void", "setLogLevel", "concode_elem_sep", "void", "constructPattern", "concode_elem_sep", "void", "setParameter", "concode_elem_sep", "void", "defineParameter", "concode_elem_sep", "void", "reset", "concode_elem_sep", "void", "streamLog", "concode_elem_sep", "int", "compareTo", "concode_elem_sep", "String", "getFileName", "concode_elem_sep", "ArrayList", "<", "String", ">", "splitLogMessage", "concode_elem_sep", "long", "getModTime", "concode_elem_sep", "ArrayList", "<", "FileInfo", ">", "getFileList"]}
{"code": "List < String > function ( CertificateConstraintsType arg0 ) { if ( arg0 != null && arg0 . isSetIssuerDNConstraints ( ) ) { DNConstraintsType loc0 = arg0 . getIssuerDNConstraints ( ) ; return loc0 . getRegularExpression ( ) ; } return java . util . Collections . emptyList ( ) ; }", "nl": "get a list of strings that corresponds to the issuer regular expression constraints from a jaxb certificateconstraintstype concode_field_sep PlaceHolder placeHolder concode_field_sep CertConstraints createCertConstraints concode_elem_sep List<String> getSubjectConstraints concode_elem_sep CertConstraints.Combinator getSubjectConstraintsCombinator concode_elem_sep CertConstraints.Combinator getIssuerConstraintsCombinator", "code_tokens": ["List", "<", "String", ">", "function", "(", "CertificateConstraintsType", "arg0", ")", "{", "if", "(", "arg0", "!=", "null", "&", "&", "arg0", ".", "isSetIssuerDNConstraints", "(", ")", ")", "{", "DNConstraintsType", "loc0", "=", "arg0", ".", "getIssuerDNConstraints", "(", ")", ";", "return", "loc0", ".", "getRegularExpression", "(", ")", ";", "}", "return", "java", ".", "util", ".", "Collections", ".", "emptyList", "(", ")", ";", "}"], "nl_tokens": ["get", "a", "list", "of", "strings", "that", "corresponds", "to", "the", "issuer", "regular", "expression", "constraints", "from", "a", "jaxb", "certificateconstraintstype", "concode_field_sep", "PlaceHolder", "placeHolder", "concode_field_sep", "CertConstraints", "createCertConstraints", "concode_elem_sep", "List", "<", "String", ">", "getSubjectConstraints", "concode_elem_sep", "CertConstraints", ".", "Combinator", "getSubjectConstraintsCombinator", "concode_elem_sep", "CertConstraints", ".", "Combinator", "getIssuerConstraintsCombinator"]}
{"code": "int function ( ) { return i ; }", "nl": "returns the uint32 encoded form of the path element , including the most significant bit . concode_field_sep int i concode_elem_sep ChildNumber ZERO concode_elem_sep ChildNumber ONE concode_elem_sep ChildNumber ZERO_HARDENED concode_elem_sep int HARDENED_BIT concode_field_sep int hashCode concode_elem_sep int num concode_elem_sep boolean equals concode_elem_sep int i concode_elem_sep boolean hasHardenedBit concode_elem_sep boolean isHardened concode_elem_sep String toString", "code_tokens": ["int", "function", "(", ")", "{", "return", "i", ";", "}"], "nl_tokens": ["returns", "the", "uint32", "encoded", "form", "of", "the", "path", "element", ",", "including", "the", "most", "significant", "bit", ".", "concode_field_sep", "int", "i", "concode_elem_sep", "ChildNumber", "ZERO", "concode_elem_sep", "ChildNumber", "ONE", "concode_elem_sep", "ChildNumber", "ZERO_HARDENED", "concode_elem_sep", "int", "HARDENED_BIT", "concode_field_sep", "int", "hashCode", "concode_elem_sep", "int", "num", "concode_elem_sep", "boolean", "equals", "concode_elem_sep", "int", "i", "concode_elem_sep", "boolean", "hasHardenedBit", "concode_elem_sep", "boolean", "isHardened", "concode_elem_sep", "String", "toString"]}
{"code": "boolean function ( EntityMobWithInventory arg0 ) { if ( theTarget == null ) { return false ; } if ( theTarget . getEntityId ( ) == arg0 . getEntityId ( ) ) { arg0 . setAttackTarget ( null ) ; return false ; } if ( arg0 . getDistanceToEntity ( theTarget ) > 30.0D ) { return false ; } return true ; }", "nl": "returns whether the entityaibase should begin execution . concode_field_sep Entity theTarget concode_elem_sep Item lastAttackedItem concode_elem_sep boolean activated concode_field_sep void updateLastTarget concode_elem_sep Entity getLastTarget", "code_tokens": ["boolean", "function", "(", "EntityMobWithInventory", "arg0", ")", "{", "if", "(", "theTarget", "==", "null", ")", "{", "return", "false", ";", "}", "if", "(", "theTarget", ".", "getEntityId", "(", ")", "==", "arg0", ".", "getEntityId", "(", ")", ")", "{", "arg0", ".", "setAttackTarget", "(", "null", ")", ";", "return", "false", ";", "}", "if", "(", "arg0", ".", "getDistanceToEntity", "(", "theTarget", ")", ">", "30.0", "D", ")", "{", "return", "false", ";", "}", "return", "true", ";", "}"], "nl_tokens": ["returns", "whether", "the", "entityaibase", "should", "begin", "execution", ".", "concode_field_sep", "Entity", "theTarget", "concode_elem_sep", "Item", "lastAttackedItem", "concode_elem_sep", "boolean", "activated", "concode_field_sep", "void", "updateLastTarget", "concode_elem_sep", "Entity", "getLastTarget"]}
{"code": "UntypedItem function ( PlatformLayerKey arg0 , Tag arg1 , String arg2 , Format arg3 ) { return platformLayerClient . putItemByTag ( arg0 , arg1 , arg2 , arg3 ) ; }", "nl": "if using directly , consider using owneditem instead concode_field_sep Logger log concode_elem_sep TypedItemMapper mapper concode_elem_sep PlatformLayerClient platformLayerClient concode_field_sep JobExecutionList listJobExecutions concode_elem_sep JobExecutionList listJobExecutions concode_elem_sep UntypedItemCollection listRoots concode_elem_sep Tags changeTags concode_elem_sep Tags changeTags concode_elem_sep String getSshPublicKey concode_elem_sep T promoteToTyped concode_elem_sep T promoteToTyped concode_elem_sep T getItem concode_elem_sep T getItem concode_elem_sep Tags getItemTags concode_elem_sep Tags addTag concode_elem_sep List<T> listItems concode_elem_sep List<T> listItems concode_elem_sep List<T> listItems concode_elem_sep List<T> listItems concode_elem_sep Collection<ServiceInfo> listServices concode_elem_sep T findItem concode_elem_sep T findItem concode_elem_sep T findItem concode_elem_sep Tags addTags concode_elem_sep UntypedItemCollection listItemsUntyped concode_elem_sep MetricInfoCollection listMetrics concode_elem_sep Tags addUniqueTag concode_elem_sep List<ItemBase> listChildrenTyped concode_elem_sep PlatformLayerEndpointInfo getEndpointInfo concode_elem_sep T putItem concode_elem_sep UntypedItem putItem concode_elem_sep UntypedItem getItemUntyped concode_elem_sep UntypedItem getItemUntyped concode_elem_sep JobDataList listJobs concode_elem_sep JobDataList listJobs concode_elem_sep String getActivation concode_elem_sep String getSchema concode_elem_sep PlatformLayerKey toKey concode_elem_sep String activateService concode_elem_sep JobData deleteItem concode_elem_sep void ensureLoggedIn concode_elem_sep MetricDataStream getMetric concode_elem_sep JobData doAction concode_elem_sep JobData doAction concode_elem_sep ProjectId getProject concode_elem_sep UntypedItemCollection listChildren concode_elem_sep JobLog getJobExecutionLog", "code_tokens": ["UntypedItem", "function", "(", "PlatformLayerKey", "arg0", ",", "Tag", "arg1", ",", "String", "arg2", ",", "Format", "arg3", ")", "{", "return", "platformLayerClient", ".", "putItemByTag", "(", "arg0", ",", "arg1", ",", "arg2", ",", "arg3", ")", ";", "}"], "nl_tokens": ["if", "using", "directly", ",", "consider", "using", "owneditem", "instead", "concode_field_sep", "Logger", "log", "concode_elem_sep", "TypedItemMapper", "mapper", "concode_elem_sep", "PlatformLayerClient", "platformLayerClient", "concode_field_sep", "JobExecutionList", "listJobExecutions", "concode_elem_sep", "JobExecutionList", "listJobExecutions", "concode_elem_sep", "UntypedItemCollection", "listRoots", "concode_elem_sep", "Tags", "changeTags", "concode_elem_sep", "Tags", "changeTags", "concode_elem_sep", "String", "getSshPublicKey", "concode_elem_sep", "T", "promoteToTyped", "concode_elem_sep", "T", "promoteToTyped", "concode_elem_sep", "T", "getItem", "concode_elem_sep", "T", "getItem", "concode_elem_sep", "Tags", "getItemTags", "concode_elem_sep", "Tags", "addTag", "concode_elem_sep", "List", "<", "T", ">", "listItems", "concode_elem_sep", "List", "<", "T", ">", "listItems", "concode_elem_sep", "List", "<", "T", ">", "listItems", "concode_elem_sep", "List", "<", "T", ">", "listItems", "concode_elem_sep", "Collection", "<", "ServiceInfo", ">", "listServices", "concode_elem_sep", "T", "findItem", "concode_elem_sep", "T", "findItem", "concode_elem_sep", "T", "findItem", "concode_elem_sep", "Tags", "addTags", "concode_elem_sep", "UntypedItemCollection", "listItemsUntyped", "concode_elem_sep", "MetricInfoCollection", "listMetrics", "concode_elem_sep", "Tags", "addUniqueTag", "concode_elem_sep", "List", "<", "ItemBase", ">", "listChildrenTyped", "concode_elem_sep", "PlatformLayerEndpointInfo", "getEndpointInfo", "concode_elem_sep", "T", "putItem", "concode_elem_sep", "UntypedItem", "putItem", "concode_elem_sep", "UntypedItem", "getItemUntyped", "concode_elem_sep", "UntypedItem", "getItemUntyped", "concode_elem_sep", "JobDataList", "listJobs", "concode_elem_sep", "JobDataList", "listJobs", "concode_elem_sep", "String", "getActivation", "concode_elem_sep", "String", "getSchema", "concode_elem_sep", "PlatformLayerKey", "toKey", "concode_elem_sep", "String", "activateService", "concode_elem_sep", "JobData", "deleteItem", "concode_elem_sep", "void", "ensureLoggedIn", "concode_elem_sep", "MetricDataStream", "getMetric", "concode_elem_sep", "JobData", "doAction", "concode_elem_sep", "JobData", "doAction", "concode_elem_sep", "ProjectId", "getProject", "concode_elem_sep", "UntypedItemCollection", "listChildren", "concode_elem_sep", "JobLog", "getJobExecutionLog"]}
{"code": "void function ( Document arg0 , String arg1 ) { panel . setDocument ( arg0 , arg1 ) ; }", "nl": "sets the document to render , lays it out , and renders it . concode_field_sep Dimension dim concode_elem_sep XHTMLPanel panel concode_field_sep void layout concode_elem_sep BufferedImage renderToImageAutoSize concode_elem_sep BufferedImage renderToImageAutoSize concode_elem_sep void setSharedContext concode_elem_sep Rectangle getMinimumSize concode_elem_sep XHTMLPanel getPanel concode_elem_sep SharedContext getSharedContext concode_elem_sep void render concode_elem_sep BufferedImage renderToImage concode_elem_sep BufferedImage renderToImage", "code_tokens": ["void", "function", "(", "Document", "arg0", ",", "String", "arg1", ")", "{", "panel", ".", "setDocument", "(", "arg0", ",", "arg1", ")", ";", "}"], "nl_tokens": ["sets", "the", "document", "to", "render", ",", "lays", "it", "out", ",", "and", "renders", "it", ".", "concode_field_sep", "Dimension", "dim", "concode_elem_sep", "XHTMLPanel", "panel", "concode_field_sep", "void", "layout", "concode_elem_sep", "BufferedImage", "renderToImageAutoSize", "concode_elem_sep", "BufferedImage", "renderToImageAutoSize", "concode_elem_sep", "void", "setSharedContext", "concode_elem_sep", "Rectangle", "getMinimumSize", "concode_elem_sep", "XHTMLPanel", "getPanel", "concode_elem_sep", "SharedContext", "getSharedContext", "concode_elem_sep", "void", "render", "concode_elem_sep", "BufferedImage", "renderToImage", "concode_elem_sep", "BufferedImage", "renderToImage"]}
{"code": "int function ( ) { return bip32HeaderPub ; }", "nl": "returns the 4 byte header for bip32 hd wallet - public key part . concode_field_sep int INTERVAL concode_elem_sep String ID_UNITTESTNET concode_elem_sep long MAX_COINS concode_elem_sep int p2shHeader concode_elem_sep int PROTOCOL_VERSION concode_elem_sep BigInteger maxTarget concode_elem_sep int TARGET_SPACING concode_elem_sep String[] dnsSeeds concode_elem_sep String id concode_elem_sep int spendableCoinbaseDepth concode_elem_sep int dumpedPrivateKeyHeader concode_elem_sep int targetTimespan concode_elem_sep int TARGET_TIMESPAN concode_elem_sep String PAYMENT_PROTOCOL_ID_MAINNET concode_elem_sep int addressHeader concode_elem_sep Coin MAX_MONEY concode_elem_sep int bip32HeaderPriv concode_elem_sep byte[] alertSigningKey concode_elem_sep int[] acceptableAddressCodes concode_elem_sep int bip32HeaderPub concode_elem_sep String ID_MAINNET concode_elem_sep long packetMagic concode_elem_sep byte[] SATOSHI_KEY concode_elem_sep Block genesisBlock concode_elem_sep String PAYMENT_PROTOCOL_ID_TESTNET concode_elem_sep int subsidyDecreaseBlockCount concode_elem_sep int port concode_elem_sep String ID_TESTNET concode_elem_sep Map<Integer,Sha256Hash> checkpoints concode_elem_sep int interval concode_elem_sep String ID_REGTEST concode_elem_sep int BIP16_ENFORCE_TIME concode_field_sep NetworkParameters regTests concode_elem_sep boolean allowEmptyPeerChain concode_elem_sep int getDumpedPrivateKeyHeader concode_elem_sep NetworkParameters testNet2 concode_elem_sep int getBip32HeaderPriv concode_elem_sep NetworkParameters testNet3 concode_elem_sep NetworkParameters unitTests concode_elem_sep String getId concode_elem_sep String getPaymentProtocolId concode_elem_sep int getAddressHeader concode_elem_sep int[] getAcceptableAddressCodes concode_elem_sep NetworkParameters prodNet concode_elem_sep NetworkParameters fromID concode_elem_sep int getTargetTimespan concode_elem_sep String[] getDnsSeeds concode_elem_sep int hashCode concode_elem_sep int getSpendableCoinbaseDepth concode_elem_sep NetworkParameters testNet concode_elem_sep boolean isCheckpoint concode_elem_sep int getP2SHHeader concode_elem_sep int getInterval concode_elem_sep Block getGenesisBlock concode_elem_sep int getSubsidyDecreaseBlockCount concode_elem_sep Block createGenesis concode_elem_sep BigInteger getMaxTarget concode_elem_sep long getPacketMagic concode_elem_sep int getPort concode_elem_sep byte[] getAlertSigningKey concode_elem_sep boolean equals concode_elem_sep boolean passesCheckpoint concode_elem_sep NetworkParameters fromPmtProtocolID", "code_tokens": ["int", "function", "(", ")", "{", "return", "bip32HeaderPub", ";", "}"], "nl_tokens": ["returns", "the", "4", "byte", "header", "for", "bip32", "hd", "wallet", "-", "public", "key", "part", ".", "concode_field_sep", "int", "INTERVAL", "concode_elem_sep", "String", "ID_UNITTESTNET", "concode_elem_sep", "long", "MAX_COINS", "concode_elem_sep", "int", "p2shHeader", "concode_elem_sep", "int", "PROTOCOL_VERSION", "concode_elem_sep", "BigInteger", "maxTarget", "concode_elem_sep", "int", "TARGET_SPACING", "concode_elem_sep", "String", "[", "]", "dnsSeeds", "concode_elem_sep", "String", "id", "concode_elem_sep", "int", "spendableCoinbaseDepth", "concode_elem_sep", "int", "dumpedPrivateKeyHeader", "concode_elem_sep", "int", "targetTimespan", "concode_elem_sep", "int", "TARGET_TIMESPAN", "concode_elem_sep", "String", "PAYMENT_PROTOCOL_ID_MAINNET", "concode_elem_sep", "int", "addressHeader", "concode_elem_sep", "Coin", "MAX_MONEY", "concode_elem_sep", "int", "bip32HeaderPriv", "concode_elem_sep", "byte", "[", "]", "alertSigningKey", "concode_elem_sep", "int", "[", "]", "acceptableAddressCodes", "concode_elem_sep", "int", "bip32HeaderPub", "concode_elem_sep", "String", "ID_MAINNET", "concode_elem_sep", "long", "packetMagic", "concode_elem_sep", "byte", "[", "]", "SATOSHI_KEY", "concode_elem_sep", "Block", "genesisBlock", "concode_elem_sep", "String", "PAYMENT_PROTOCOL_ID_TESTNET", "concode_elem_sep", "int", "subsidyDecreaseBlockCount", "concode_elem_sep", "int", "port", "concode_elem_sep", "String", "ID_TESTNET", "concode_elem_sep", "Map", "<", "Integer", ",", "Sha256Hash", ">", "checkpoints", "concode_elem_sep", "int", "interval", "concode_elem_sep", "String", "ID_REGTEST", "concode_elem_sep", "int", "BIP16_ENFORCE_TIME", "concode_field_sep", "NetworkParameters", "regTests", "concode_elem_sep", "boolean", "allowEmptyPeerChain", "concode_elem_sep", "int", "getDumpedPrivateKeyHeader", "concode_elem_sep", "NetworkParameters", "testNet2", "concode_elem_sep", "int", "getBip32HeaderPriv", "concode_elem_sep", "NetworkParameters", "testNet3", "concode_elem_sep", "NetworkParameters", "unitTests", "concode_elem_sep", "String", "getId", "concode_elem_sep", "String", "getPaymentProtocolId", "concode_elem_sep", "int", "getAddressHeader", "concode_elem_sep", "int", "[", "]", "getAcceptableAddressCodes", "concode_elem_sep", "NetworkParameters", "prodNet", "concode_elem_sep", "NetworkParameters", "fromID", "concode_elem_sep", "int", "getTargetTimespan", "concode_elem_sep", "String", "[", "]", "getDnsSeeds", "concode_elem_sep", "int", "hashCode", "concode_elem_sep", "int", "getSpendableCoinbaseDepth", "concode_elem_sep", "NetworkParameters", "testNet", "concode_elem_sep", "boolean", "isCheckpoint", "concode_elem_sep", "int", "getP2SHHeader", "concode_elem_sep", "int", "getInterval", "concode_elem_sep", "Block", "getGenesisBlock", "concode_elem_sep", "int", "getSubsidyDecreaseBlockCount", "concode_elem_sep", "Block", "createGenesis", "concode_elem_sep", "BigInteger", "getMaxTarget", "concode_elem_sep", "long", "getPacketMagic", "concode_elem_sep", "int", "getPort", "concode_elem_sep", "byte", "[", "]", "getAlertSigningKey", "concode_elem_sep", "boolean", "equals", "concode_elem_sep", "boolean", "passesCheckpoint", "concode_elem_sep", "NetworkParameters", "fromPmtProtocolID"]}
{"code": "void function ( String arg0 ) { this . contentEncoding = arg0 ; }", "nl": "set content encoding for the message concode_field_sep Map<String,Object> headers concode_elem_sep byte body[] concode_elem_sep long deliveryTag concode_elem_sep String replyTo concode_elem_sep String contentEncoding concode_elem_sep String messageId concode_elem_sep String correlationId concode_elem_sep String soapAction concode_elem_sep String contentType concode_field_sep String getCorrelationId concode_elem_sep String getContentEncoding concode_elem_sep void setHeaders concode_elem_sep Map<String,Object> getHeaders concode_elem_sep byte[] getBody concode_elem_sep String getReplyTo concode_elem_sep void setCorrelationId concode_elem_sep long getDeliveryTag concode_elem_sep void setMessageId concode_elem_sep void setSoapAction concode_elem_sep void setBody concode_elem_sep String getMessageId concode_elem_sep void setReplyTo concode_elem_sep void setDeliveryTag concode_elem_sep String getContentType concode_elem_sep void setContentType concode_elem_sep String getSoapAction", "code_tokens": ["void", "function", "(", "String", "arg0", ")", "{", "this", ".", "contentEncoding", "=", "arg0", ";", "}"], "nl_tokens": ["set", "content", "encoding", "for", "the", "message", "concode_field_sep", "Map", "<", "String", ",", "Object", ">", "headers", "concode_elem_sep", "byte", "body", "[", "]", "concode_elem_sep", "long", "deliveryTag", "concode_elem_sep", "String", "replyTo", "concode_elem_sep", "String", "contentEncoding", "concode_elem_sep", "String", "messageId", "concode_elem_sep", "String", "correlationId", "concode_elem_sep", "String", "soapAction", "concode_elem_sep", "String", "contentType", "concode_field_sep", "String", "getCorrelationId", "concode_elem_sep", "String", "getContentEncoding", "concode_elem_sep", "void", "setHeaders", "concode_elem_sep", "Map", "<", "String", ",", "Object", ">", "getHeaders", "concode_elem_sep", "byte", "[", "]", "getBody", "concode_elem_sep", "String", "getReplyTo", "concode_elem_sep", "void", "setCorrelationId", "concode_elem_sep", "long", "getDeliveryTag", "concode_elem_sep", "void", "setMessageId", "concode_elem_sep", "void", "setSoapAction", "concode_elem_sep", "void", "setBody", "concode_elem_sep", "String", "getMessageId", "concode_elem_sep", "void", "setReplyTo", "concode_elem_sep", "void", "setDeliveryTag", "concode_elem_sep", "String", "getContentType", "concode_elem_sep", "void", "setContentType", "concode_elem_sep", "String", "getSoapAction"]}
{"code": "void function ( ) { mMasterThread . start ( ) ; }", "nl": "starts the master . concode_field_sep Supplier<String> mClientSupplier concode_elem_sep String mJournalFolder concode_elem_sep ClientPool mClientPool concode_elem_sep AlluxioMaster mAlluxioMaster concode_elem_sep Thread mMasterThread concode_elem_sep Logger LOG concode_elem_sep String mHostname concode_field_sep AlluxioMaster getInternalMaster concode_elem_sep int getRPCLocalPort concode_elem_sep String getWebBindHost concode_elem_sep String uniquePath concode_elem_sep String getRPCBindHost concode_elem_sep FileSystem getClient concode_elem_sep void kill concode_elem_sep String getJournalFolder concode_elem_sep void stop concode_elem_sep int getWebLocalPort concode_elem_sep String get concode_elem_sep boolean isServing concode_elem_sep LocalAlluxioMaster create concode_elem_sep LocalAlluxioMaster create concode_elem_sep InetSocketAddress getAddress concode_elem_sep void clearClients concode_elem_sep String getUri", "code_tokens": ["void", "function", "(", ")", "{", "mMasterThread", ".", "start", "(", ")", ";", "}"], "nl_tokens": ["starts", "the", "master", ".", "concode_field_sep", "Supplier", "<", "String", ">", "mClientSupplier", "concode_elem_sep", "String", "mJournalFolder", "concode_elem_sep", "ClientPool", "mClientPool", "concode_elem_sep", "AlluxioMaster", "mAlluxioMaster", "concode_elem_sep", "Thread", "mMasterThread", "concode_elem_sep", "Logger", "LOG", "concode_elem_sep", "String", "mHostname", "concode_field_sep", "AlluxioMaster", "getInternalMaster", "concode_elem_sep", "int", "getRPCLocalPort", "concode_elem_sep", "String", "getWebBindHost", "concode_elem_sep", "String", "uniquePath", "concode_elem_sep", "String", "getRPCBindHost", "concode_elem_sep", "FileSystem", "getClient", "concode_elem_sep", "void", "kill", "concode_elem_sep", "String", "getJournalFolder", "concode_elem_sep", "void", "stop", "concode_elem_sep", "int", "getWebLocalPort", "concode_elem_sep", "String", "get", "concode_elem_sep", "boolean", "isServing", "concode_elem_sep", "LocalAlluxioMaster", "create", "concode_elem_sep", "LocalAlluxioMaster", "create", "concode_elem_sep", "InetSocketAddress", "getAddress", "concode_elem_sep", "void", "clearClients", "concode_elem_sep", "String", "getUri"]}
{"code": "void function ( ) { try { createTextureAtlas ( ) ; } catch ( IOException loc0 ) { Gdx . app . error ( LOG , \"srini_string\" , loc0 ) ; } loadTextureAtlas ( ) ; loadTextures ( ) ; loadSounds ( ) ; loadMaps ( ) ; }", "nl": "starts loading the assets . loader #setassetstoload must becalled first . concode_field_sep ShadowStruggles game concode_elem_sep Array<Asset> textures concode_elem_sep Array<Asset> sounds concode_elem_sep Array<Asset> rpgMaps concode_elem_sep String assetName concode_elem_sep Array<Asset> textureRegions concode_elem_sep String LOG concode_elem_sep String assetType concode_field_sep void loadMaps concode_elem_sep void disposeSounds concode_elem_sep TextureRegion getTextureRegion concode_elem_sep TiledMap getTiledMap concode_elem_sep void disposeTextures concode_elem_sep void disposeMaps concode_elem_sep Texture getTexture concode_elem_sep void unloadSounds concode_elem_sep void loadSounds concode_elem_sep boolean equals concode_elem_sep void setAssetsToLoad concode_elem_sep void dispose concode_elem_sep void loadTextureAtlas concode_elem_sep void createTextureAtlas concode_elem_sep void disposeAtlas concode_elem_sep void loadTextures", "code_tokens": ["void", "function", "(", ")", "{", "try", "{", "createTextureAtlas", "(", ")", ";", "}", "catch", "(", "IOException", "loc0", ")", "{", "Gdx", ".", "app", ".", "error", "(", "LOG", ",", "\"srini_string\"", ",", "loc0", ")", ";", "}", "loadTextureAtlas", "(", ")", ";", "loadTextures", "(", ")", ";", "loadSounds", "(", ")", ";", "loadMaps", "(", ")", ";", "}"], "nl_tokens": ["starts", "loading", "the", "assets", ".", "loader", "#setassetstoload must becalled first . concode_field_sep ShadowStruggles game concode_elem_sep Array<Asset> textures concode_elem_sep Array<Asset> sounds concode_elem_sep Array<Asset> rpgMaps concode_elem_sep String assetName concode_elem_sep Array<Asset> textureRegions concode_elem_sep String LOG concode_elem_sep String assetType concode_field_sep void loadMaps concode_elem_sep void disposeSounds concode_elem_sep TextureRegion getTextureRegion concode_elem_sep TiledMap getTiledMap concode_elem_sep void disposeTextures concode_elem_sep void disposeMaps concode_elem_sep Texture getTexture concode_elem_sep void unloadSounds concode_elem_sep void loadSounds concode_elem_sep boolean equals concode_elem_sep void setAssetsToLoad concode_elem_sep void dispose concode_elem_sep void loadTextureAtlas concode_elem_sep void createTextureAtlas concode_elem_sep void disposeAtlas concode_elem_sep void loadTextures"]}
{"code": "void function ( final JSONObject arg0 , final String arg1 , final Collection arg2 ) { try { arg0 . put ( arg1 , arg2 ) ; } catch ( final JSONException loc0 ) { LOG . warn ( \"srini_string\" , loc0 ) ; } }", "nl": "puts the specified name/value pair in the specified json object . concode_field_sep Logger LOG concode_field_sep int extractInt concode_elem_sep Collection<InetSocketAddress> getInetAddresses", "code_tokens": ["void", "function", "(", "final", "JSONObject", "arg0", ",", "final", "String", "arg1", ",", "final", "Collection", "arg2", ")", "{", "try", "{", "arg0", ".", "put", "(", "arg1", ",", "arg2", ")", ";", "}", "catch", "(", "final", "JSONException", "loc0", ")", "{", "LOG", ".", "warn", "(", "\"srini_string\"", ",", "loc0", ")", ";", "}", "}"], "nl_tokens": ["puts", "the", "specified", "name", "/", "value", "pair", "in", "the", "specified", "json", "object", ".", "concode_field_sep", "Logger", "LOG", "concode_field_sep", "int", "extractInt", "concode_elem_sep", "Collection", "<", "InetSocketAddress", ">", "getInetAddresses"]}
{"code": "String function ( ) { return TodoParser . encode ( item . getHeadline ( ) ) ; }", "nl": "encodes the headline of this todoitem in an xml safe way and returns the new string . the string can be regained by running the returned string through todoparser #decode string . concode_field_sep ToDoItem item concode_field_sep String getPriority concode_elem_sep String getMoreInfoURL concode_elem_sep String getDescription", "code_tokens": ["String", "function", "(", ")", "{", "return", "TodoParser", ".", "encode", "(", "item", ".", "getHeadline", "(", ")", ")", ";", "}"], "nl_tokens": ["encodes", "the", "headline", "of", "this", "todoitem", "in", "an", "xml", "safe", "way", "and", "returns", "the", "new", "string", ".", "the", "string", "can", "be", "regained", "by", "running", "the", "returned", "string", "through", "todoparser", "#decode string . concode_field_sep ToDoItem item concode_field_sep String getPriority concode_elem_sep String getMoreInfoURL concode_elem_sep String getDescription"]}
{"code": "List < String > function ( String arg0 ) { return Lists . newArrayList ( arg0 ) ; }", "nl": "returns list of groups for a user . concode_field_sep PlaceHolder placeHolder concode_field_sep placeholderType placeHolder", "code_tokens": ["List", "<", "String", ">", "function", "(", "String", "arg0", ")", "{", "return", "Lists", ".", "newArrayList", "(", "arg0", ")", ";", "}"], "nl_tokens": ["returns", "list", "of", "groups", "for", "a", "user", ".", "concode_field_sep", "PlaceHolder", "placeHolder", "concode_field_sep", "placeholderType", "placeHolder"]}
{"code": "void function ( DirectedAcyclicGraphNode < T > arg0 ) { Preconditions . checkState ( mChildren . contains ( arg0 ) ) ; mChildren . remove ( arg0 ) ; }", "nl": "removes a child node from the node . concode_field_sep List<DirectedAcyclicGraphNode<T>> mParents concode_elem_sep List<DirectedAcyclicGraphNode<T>> mChildren concode_elem_sep T mPayload concode_field_sep List<DirectedAcyclicGraphNode<T>> getParents concode_elem_sep T getPayload concode_elem_sep List<DirectedAcyclicGraphNode<T>> getChildren concode_elem_sep void addParent concode_elem_sep void addChild", "code_tokens": ["void", "function", "(", "DirectedAcyclicGraphNode", "<", "T", ">", "arg0", ")", "{", "Preconditions", ".", "checkState", "(", "mChildren", ".", "contains", "(", "arg0", ")", ")", ";", "mChildren", ".", "remove", "(", "arg0", ")", ";", "}"], "nl_tokens": ["removes", "a", "child", "node", "from", "the", "node", ".", "concode_field_sep", "List", "<", "DirectedAcyclicGraphNode", "<", "T", ">>", "mParents", "concode_elem_sep", "List", "<", "DirectedAcyclicGraphNode", "<", "T", ">>", "mChildren", "concode_elem_sep", "T", "mPayload", "concode_field_sep", "List", "<", "DirectedAcyclicGraphNode", "<", "T", ">>", "getParents", "concode_elem_sep", "T", "getPayload", "concode_elem_sep", "List", "<", "DirectedAcyclicGraphNode", "<", "T", ">>", "getChildren", "concode_elem_sep", "void", "addParent", "concode_elem_sep", "void", "addChild"]}
{"code": "long function ( ) { return tStart ; }", "nl": "gets the global chromosomal strt . concode_field_sep long tStart concode_elem_sep long qStart concode_elem_sep long tStop concode_elem_sep int blockSize concode_field_sep long getQStart concode_elem_sep int getBlockSize concode_elem_sep long getTStop", "code_tokens": ["long", "function", "(", ")", "{", "return", "tStart", ";", "}"], "nl_tokens": ["gets", "the", "global", "chromosomal", "strt", ".", "concode_field_sep", "long", "tStart", "concode_elem_sep", "long", "qStart", "concode_elem_sep", "long", "tStop", "concode_elem_sep", "int", "blockSize", "concode_field_sep", "long", "getQStart", "concode_elem_sep", "int", "getBlockSize", "concode_elem_sep", "long", "getTStop"]}
{"code": "void function ( ) { Symbol loc0 ; if ( real_next >= real_stack . size ( ) ) return ; loc0 = real_stack . elementAt ( real_stack . size ( ) - 1 - real_next ) ; real_next ++ ; vstack . push ( new Integer ( loc0 . parse_state ) ) ; }", "nl": "transfer an element from the real to the virtual stack . this assumes that the virtual stack is currently empty . concode_field_sep int real_next concode_elem_sep Stack<Integer> vstack concode_elem_sep Stack<Symbol> real_stack concode_field_sep void pop concode_elem_sep int top concode_elem_sep void push concode_elem_sep boolean empty", "code_tokens": ["void", "function", "(", ")", "{", "Symbol", "loc0", ";", "if", "(", "real_next", ">=", "real_stack", ".", "size", "(", ")", ")", "return", ";", "loc0", "=", "real_stack", ".", "elementAt", "(", "real_stack", ".", "size", "(", ")", "-", "1", "-", "real_next", ")", ";", "real_next", "+", "+", ";", "vstack", ".", "push", "(", "new", "Integer", "(", "loc0", ".", "parse_state", ")", ")", ";", "}"], "nl_tokens": ["transfer", "an", "element", "from", "the", "real", "to", "the", "virtual", "stack", ".", "this", "assumes", "that", "the", "virtual", "stack", "is", "currently", "empty", ".", "concode_field_sep", "int", "real_next", "concode_elem_sep", "Stack", "<", "Integer", ">", "vstack", "concode_elem_sep", "Stack", "<", "Symbol", ">", "real_stack", "concode_field_sep", "void", "pop", "concode_elem_sep", "int", "top", "concode_elem_sep", "void", "push", "concode_elem_sep", "boolean", "empty"]}
{"code": "void function ( Date arg0 ) { this . expires = arg0 ; }", "nl": "set the date that this token expires concode_field_sep TokenReference unAttachedReference concode_elem_sep Date expires concode_elem_sep String tokenId concode_elem_sep Date created concode_elem_sep long lifetime concode_elem_sep TokenReference attachedReference concode_elem_sep Element token concode_field_sep void setAttachedReference concode_elem_sep String getTokenId concode_elem_sep TokenReference getUnAttachedReference concode_elem_sep long getLifetime concode_elem_sep Date getCreated concode_elem_sep void setCreated concode_elem_sep void setUnattachedReference concode_elem_sep void setToken concode_elem_sep Element getToken concode_elem_sep void setLifetime concode_elem_sep void setTokenId concode_elem_sep Date getExpires concode_elem_sep TokenReference getAttachedReference", "code_tokens": ["void", "function", "(", "Date", "arg0", ")", "{", "this", ".", "expires", "=", "arg0", ";", "}"], "nl_tokens": ["set", "the", "date", "that", "this", "token", "expires", "concode_field_sep", "TokenReference", "unAttachedReference", "concode_elem_sep", "Date", "expires", "concode_elem_sep", "String", "tokenId", "concode_elem_sep", "Date", "created", "concode_elem_sep", "long", "lifetime", "concode_elem_sep", "TokenReference", "attachedReference", "concode_elem_sep", "Element", "token", "concode_field_sep", "void", "setAttachedReference", "concode_elem_sep", "String", "getTokenId", "concode_elem_sep", "TokenReference", "getUnAttachedReference", "concode_elem_sep", "long", "getLifetime", "concode_elem_sep", "Date", "getCreated", "concode_elem_sep", "void", "setCreated", "concode_elem_sep", "void", "setUnattachedReference", "concode_elem_sep", "void", "setToken", "concode_elem_sep", "Element", "getToken", "concode_elem_sep", "void", "setLifetime", "concode_elem_sep", "void", "setTokenId", "concode_elem_sep", "Date", "getExpires", "concode_elem_sep", "TokenReference", "getAttachedReference"]}
{"code": "void function ( ) { initializeModelImplementation ( \"srini_string\" ) ; }", "nl": "initialize the model subsystem with the mdr modelimplementation . concode_field_sep String DEFAULT_MODEL_IMPLEMENTATION concode_field_sep ModelImplementation initializeModelImplementation concode_elem_sep void initializeDefault", "code_tokens": ["void", "function", "(", ")", "{", "initializeModelImplementation", "(", "\"srini_string\"", ")", ";", "}"], "nl_tokens": ["initialize", "the", "model", "subsystem", "with", "the", "mdr", "modelimplementation", ".", "concode_field_sep", "String", "DEFAULT_MODEL_IMPLEMENTATION", "concode_field_sep", "ModelImplementation", "initializeModelImplementation", "concode_elem_sep", "void", "initializeDefault"]}
{"code": "boolean function ( CSSPrimitiveValue arg0 ) { short loc0 = 0 ; loc0 = ( ( CSSPrimitiveValue ) arg0 ) . getPrimitiveType ( ) ; return isAbsoluteUnit ( loc0 ) ; }", "nl": "returns true if the specified value was absolute even if we have a computed value for it , meaning that either the value can be used directly e.g. pixels or there is a fixed context-independent conversion for it e.g. inches . proportional types e.g. % return false . concode_field_sep List TYPE_DESCRIPTIONS concode_elem_sep Map sacTypesStrings concode_field_sep short guessType concode_elem_sep short sacPrimitiveTypeForString concode_elem_sep String stringForSACPrimitiveType concode_elem_sep boolean isNumber concode_elem_sep String getCssValueTypeDesc concode_elem_sep String cssType", "code_tokens": ["boolean", "function", "(", "CSSPrimitiveValue", "arg0", ")", "{", "short", "loc0", "=", "0", ";", "loc0", "=", "(", "(", "CSSPrimitiveValue", ")", "arg0", ")", ".", "getPrimitiveType", "(", ")", ";", "return", "isAbsoluteUnit", "(", "loc0", ")", ";", "}"], "nl_tokens": ["returns", "true", "if", "the", "specified", "value", "was", "absolute", "even", "if", "we", "have", "a", "computed", "value", "for", "it", ",", "meaning", "that", "either", "the", "value", "can", "be", "used", "directly", "e", ".", "g", ".", "pixels", "or", "there", "is", "a", "fixed", "context", "-", "independent", "conversion", "for", "it", "e", ".", "g", ".", "inches", ".", "proportional", "types", "e", ".", "g", ".", "%", "return", "false", ".", "concode_field_sep", "List", "TYPE_DESCRIPTIONS", "concode_elem_sep", "Map", "sacTypesStrings", "concode_field_sep", "short", "guessType", "concode_elem_sep", "short", "sacPrimitiveTypeForString", "concode_elem_sep", "String", "stringForSACPrimitiveType", "concode_elem_sep", "boolean", "isNumber", "concode_elem_sep", "String", "getCssValueTypeDesc", "concode_elem_sep", "String", "cssType"]}
{"code": "void function ( SshDisconnectedEvent arg0 ) { System . out . println ( \"srini_string\" + arg0 . getHost ( ) + \"srini_string\" ) ; connected = false ; }", "nl": "captures sshdisconnectedevent concode_field_sep boolean connected concode_field_sep void connected concode_elem_sep void main concode_elem_sep void dataReceived", "code_tokens": ["void", "function", "(", "SshDisconnectedEvent", "arg0", ")", "{", "System", ".", "out", ".", "println", "(", "\"srini_string\"", "+", "arg0", ".", "getHost", "(", ")", "+", "\"srini_string\"", ")", ";", "connected", "=", "false", ";", "}"], "nl_tokens": ["captures", "sshdisconnectedevent", "concode_field_sep", "boolean", "connected", "concode_field_sep", "void", "connected", "concode_elem_sep", "void", "main", "concode_elem_sep", "void", "dataReceived"]}
{"code": "BigDecimal function ( ) { return this . successorId ; }", "nl": "gets the successor id . concode_field_sep long serialVersionUID concode_elem_sep String isSystemDerived concode_elem_sep String isActive concode_elem_sep BigDecimal predecessorId concode_elem_sep String srcFileName concode_elem_sep BigDecimal successorId concode_elem_sep BigDecimal feedId concode_elem_sep String checksum concode_elem_sep String transmissionDatasetId concode_elem_sep String comments concode_elem_sep String inactivationReasonType concode_elem_sep String isFormatValid concode_elem_sep long dataUnitId concode_elem_sep Timestamp receiptDate concode_elem_sep String srcUniqueFileName concode_elem_sep Timestamp createdDate concode_elem_sep Long dataSetId concode_elem_sep BigDecimal fileSize concode_elem_sep String destFileName concode_elem_sep String loadedInCats concode_elem_sep String checksumType concode_elem_sep Timestamp modifiedDate concode_elem_sep BigDecimal runId concode_elem_sep String isPrepopulated concode_elem_sep String isBulk concode_elem_sep String isUpdate concode_elem_sep String receiptDateType concode_elem_sep String status concode_field_sep void setIsSystemDerived concode_elem_sep void setIsPrepopulated concode_elem_sep String getStatus concode_elem_sep String getIsUpdate concode_elem_sep long getDataUnitId concode_elem_sep BigDecimal getFileSize concode_elem_sep void setInactivationReasonType concode_elem_sep void setDataUnitId concode_elem_sep String getComments concode_elem_sep Timestamp getCreatedDate concode_elem_sep void setFileSize concode_elem_sep BigDecimal getPredecessorId concode_elem_sep void setIsUpdate concode_elem_sep String getReceiptDateType concode_elem_sep BigDecimal getFeedId concode_elem_sep void setReceiptDate concode_elem_sep Timestamp getModifiedDate concode_elem_sep void setSuccessorId concode_elem_sep void setDestFileName concode_elem_sep void setIsBulk concode_elem_sep String getIsFormatValid concode_elem_sep void setDataSetId concode_elem_sep void setIsActive concode_elem_sep void setChecksumType concode_elem_sep void setFeedId concode_elem_sep String getInactivationReasonType concode_elem_sep String getSrcUniqueFileName concode_elem_sep Long getDataSetId concode_elem_sep void setReceiptDateType concode_elem_sep BigDecimal getRunId concode_elem_sep void setSrcFileName concode_elem_sep String getChecksumType concode_elem_sep String getSrcFileName concode_elem_sep String getChecksum concode_elem_sep String getDestFileName concode_elem_sep Timestamp getReceiptDate concode_elem_sep void setTransmissionDatasetId concode_elem_sep String getTransmissionDatasetId concode_elem_sep void setComments concode_elem_sep String getLoadedInCats concode_elem_sep void setLoadedInCats concode_elem_sep String getIsPrepopulated concode_elem_sep void setSrcUniqueFileName concode_elem_sep void setChecksum concode_elem_sep void setIsFormatValid concode_elem_sep String getIsBulk concode_elem_sep void setRunId concode_elem_sep void setStatus concode_elem_sep String getIsActive concode_elem_sep void setModifiedDate concode_elem_sep void setCreatedDate concode_elem_sep void setPredecessorId concode_elem_sep String getIsSystemDerived", "code_tokens": ["BigDecimal", "function", "(", ")", "{", "return", "this", ".", "successorId", ";", "}"], "nl_tokens": ["gets", "the", "successor", "id", ".", "concode_field_sep", "long", "serialVersionUID", "concode_elem_sep", "String", "isSystemDerived", "concode_elem_sep", "String", "isActive", "concode_elem_sep", "BigDecimal", "predecessorId", "concode_elem_sep", "String", "srcFileName", "concode_elem_sep", "BigDecimal", "successorId", "concode_elem_sep", "BigDecimal", "feedId", "concode_elem_sep", "String", "checksum", "concode_elem_sep", "String", "transmissionDatasetId", "concode_elem_sep", "String", "comments", "concode_elem_sep", "String", "inactivationReasonType", "concode_elem_sep", "String", "isFormatValid", "concode_elem_sep", "long", "dataUnitId", "concode_elem_sep", "Timestamp", "receiptDate", "concode_elem_sep", "String", "srcUniqueFileName", "concode_elem_sep", "Timestamp", "createdDate", "concode_elem_sep", "Long", "dataSetId", "concode_elem_sep", "BigDecimal", "fileSize", "concode_elem_sep", "String", "destFileName", "concode_elem_sep", "String", "loadedInCats", "concode_elem_sep", "String", "checksumType", "concode_elem_sep", "Timestamp", "modifiedDate", "concode_elem_sep", "BigDecimal", "runId", "concode_elem_sep", "String", "isPrepopulated", "concode_elem_sep", "String", "isBulk", "concode_elem_sep", "String", "isUpdate", "concode_elem_sep", "String", "receiptDateType", "concode_elem_sep", "String", "status", "concode_field_sep", "void", "setIsSystemDerived", "concode_elem_sep", "void", "setIsPrepopulated", "concode_elem_sep", "String", "getStatus", "concode_elem_sep", "String", "getIsUpdate", "concode_elem_sep", "long", "getDataUnitId", "concode_elem_sep", "BigDecimal", "getFileSize", "concode_elem_sep", "void", "setInactivationReasonType", "concode_elem_sep", "void", "setDataUnitId", "concode_elem_sep", "String", "getComments", "concode_elem_sep", "Timestamp", "getCreatedDate", "concode_elem_sep", "void", "setFileSize", "concode_elem_sep", "BigDecimal", "getPredecessorId", "concode_elem_sep", "void", "setIsUpdate", "concode_elem_sep", "String", "getReceiptDateType", "concode_elem_sep", "BigDecimal", "getFeedId", "concode_elem_sep", "void", "setReceiptDate", "concode_elem_sep", "Timestamp", "getModifiedDate", "concode_elem_sep", "void", "setSuccessorId", "concode_elem_sep", "void", "setDestFileName", "concode_elem_sep", "void", "setIsBulk", "concode_elem_sep", "String", "getIsFormatValid", "concode_elem_sep", "void", "setDataSetId", "concode_elem_sep", "void", "setIsActive", "concode_elem_sep", "void", "setChecksumType", "concode_elem_sep", "void", "setFeedId", "concode_elem_sep", "String", "getInactivationReasonType", "concode_elem_sep", "String", "getSrcUniqueFileName", "concode_elem_sep", "Long", "getDataSetId", "concode_elem_sep", "void", "setReceiptDateType", "concode_elem_sep", "BigDecimal", "getRunId", "concode_elem_sep", "void", "setSrcFileName", "concode_elem_sep", "String", "getChecksumType", "concode_elem_sep", "String", "getSrcFileName", "concode_elem_sep", "String", "getChecksum", "concode_elem_sep", "String", "getDestFileName", "concode_elem_sep", "Timestamp", "getReceiptDate", "concode_elem_sep", "void", "setTransmissionDatasetId", "concode_elem_sep", "String", "getTransmissionDatasetId", "concode_elem_sep", "void", "setComments", "concode_elem_sep", "String", "getLoadedInCats", "concode_elem_sep", "void", "setLoadedInCats", "concode_elem_sep", "String", "getIsPrepopulated", "concode_elem_sep", "void", "setSrcUniqueFileName", "concode_elem_sep", "void", "setChecksum", "concode_elem_sep", "void", "setIsFormatValid", "concode_elem_sep", "String", "getIsBulk", "concode_elem_sep", "void", "setRunId", "concode_elem_sep", "void", "setStatus", "concode_elem_sep", "String", "getIsActive", "concode_elem_sep", "void", "setModifiedDate", "concode_elem_sep", "void", "setCreatedDate", "concode_elem_sep", "void", "setPredecessorId", "concode_elem_sep", "String", "getIsSystemDerived"]}
{"code": "JaxbBuilder function ( final Marshaller arg0 ) { this . marshaller = arg0 ; return this ; }", "nl": "sets a non-default marshaller to use when creating the source . concode_field_sep Marshaller marshaller concode_elem_sep boolean userObjectFactory concode_elem_sep Object object concode_field_sep Source build concode_elem_sep Object getPreparedJaxbObject concode_elem_sep void createDefaultMarshaller concode_elem_sep JAXBElement<T> createInferredJAXBElement concode_elem_sep JAXBElement<T> createJAXBElement concode_elem_sep JAXBElement<T> createJaxbElementFromObjectFactory concode_elem_sep Class<?> getObjectFactoryClass concode_elem_sep String inferName concode_elem_sep JaxbBuilder useObjectFactory", "code_tokens": ["JaxbBuilder", "function", "(", "final", "Marshaller", "arg0", ")", "{", "this", ".", "marshaller", "=", "arg0", ";", "return", "this", ";", "}"], "nl_tokens": ["sets", "a", "non", "-", "default", "marshaller", "to", "use", "when", "creating", "the", "source", ".", "concode_field_sep", "Marshaller", "marshaller", "concode_elem_sep", "boolean", "userObjectFactory", "concode_elem_sep", "Object", "object", "concode_field_sep", "Source", "build", "concode_elem_sep", "Object", "getPreparedJaxbObject", "concode_elem_sep", "void", "createDefaultMarshaller", "concode_elem_sep", "JAXBElement", "<", "T", ">", "createInferredJAXBElement", "concode_elem_sep", "JAXBElement", "<", "T", ">", "createJAXBElement", "concode_elem_sep", "JAXBElement", "<", "T", ">", "createJaxbElementFromObjectFactory", "concode_elem_sep", "Class", "<", "?", ">", "getObjectFactoryClass", "concode_elem_sep", "String", "inferName", "concode_elem_sep", "JaxbBuilder", "useObjectFactory"]}
{"code": "String function ( File arg0 ) { BufferedReader loc0 = new BufferedReader ( new FileReader ( arg0 ) ) ; return readFile ( loc0 ) ; }", "nl": "retrieves the content from the specified file . concode_field_sep String TAB concode_elem_sep String NEW_LINE concode_field_sep String[][] retrieveMatrix concode_elem_sep String readFile concode_elem_sep String[][] parseMatrix concode_elem_sep String[][] prepareMatrix", "code_tokens": ["String", "function", "(", "File", "arg0", ")", "{", "BufferedReader", "loc0", "=", "new", "BufferedReader", "(", "new", "FileReader", "(", "arg0", ")", ")", ";", "return", "readFile", "(", "loc0", ")", ";", "}"], "nl_tokens": ["retrieves", "the", "content", "from", "the", "specified", "file", ".", "concode_field_sep", "String", "TAB", "concode_elem_sep", "String", "NEW_LINE", "concode_field_sep", "String", "[", "]", "[", "]", "retrieveMatrix", "concode_elem_sep", "String", "readFile", "concode_elem_sep", "String", "[", "]", "[", "]", "parseMatrix", "concode_elem_sep", "String", "[", "]", "[", "]", "prepareMatrix"]}
{"code": "int function ( ) { checkState ( isOpCode ( ) ) ; return Script . decodeFromOpN ( opcode ) ; }", "nl": "if this chunk is an op_n opcode returns the equivalent integer value . concode_field_sep byte[] data concode_elem_sep int startLocationInProgram concode_elem_sep int opcode concode_field_sep boolean equalsOpCode concode_elem_sep int getStartLocationInProgram concode_elem_sep boolean isPushData concode_elem_sep int hashCode concode_elem_sep boolean isShortestPossiblePushData concode_elem_sep boolean equals concode_elem_sep boolean isOpCode concode_elem_sep String toString concode_elem_sep void write", "code_tokens": ["int", "function", "(", ")", "{", "checkState", "(", "isOpCode", "(", ")", ")", ";", "return", "Script", ".", "decodeFromOpN", "(", "opcode", ")", ";", "}"], "nl_tokens": ["if", "this", "chunk", "is", "an", "op_n", "opcode", "returns", "the", "equivalent", "integer", "value", ".", "concode_field_sep", "byte", "[", "]", "data", "concode_elem_sep", "int", "startLocationInProgram", "concode_elem_sep", "int", "opcode", "concode_field_sep", "boolean", "equalsOpCode", "concode_elem_sep", "int", "getStartLocationInProgram", "concode_elem_sep", "boolean", "isPushData", "concode_elem_sep", "int", "hashCode", "concode_elem_sep", "boolean", "isShortestPossiblePushData", "concode_elem_sep", "boolean", "equals", "concode_elem_sep", "boolean", "isOpCode", "concode_elem_sep", "String", "toString", "concode_elem_sep", "void", "write"]}
{"code": "DiffBuilder function ( ) { normalizeWhitespace = true ; return this ; }", "nl": "normalize text-elements by removing all empty text nodes and normalizing the non-empty ones . `` normalized '' in this context means all whitespace characters are replaced by space characters and consecutive whitespace characters are collapsed . concode_field_sep DifferenceEvaluator differenceEvaluator concode_elem_sep ComparisonResult[] comparisonResultsToCheck concode_elem_sep ComparisonResult[] CHECK_FOR_IDENTICAL concode_elem_sep Source controlSource concode_elem_sep ComparisonResult[] CHECK_FOR_SIMILAR concode_elem_sep Map<String,String> namespaceContext concode_elem_sep Predicate<Node> nodeFilter concode_elem_sep List<ComparisonListener> differenceListeners concode_elem_sep Predicate<Attr> attributeFilter concode_elem_sep boolean ignoreWhitespace concode_elem_sep List<ComparisonListener> comparisonListeners concode_elem_sep boolean ignoreComments concode_elem_sep boolean normalizeWhitespace concode_elem_sep NodeMatcher nodeMatcher concode_elem_sep ComparisonController comparisonController concode_elem_sep Source testSource concode_elem_sep List<Difference> results concode_elem_sep EnumSet<ComparisonResult> comparisonResultsToCheck concode_field_sep DiffBuilder checkForIdentical concode_elem_sep DiffBuilder withNamespaceContext concode_elem_sep DiffBuilder compare concode_elem_sep DiffBuilder withNodeFilter concode_elem_sep void comparisonPerformed concode_elem_sep DiffBuilder withNodeMatcher concode_elem_sep List<Difference> getDifferences concode_elem_sep DiffBuilder withComparisonController concode_elem_sep DiffBuilder ignoreWhitespace concode_elem_sep DiffBuilder withDifferenceEvaluator concode_elem_sep DiffBuilder ignoreComments concode_elem_sep DiffBuilder withDifferenceListeners concode_elem_sep DiffBuilder checkForSimilar concode_elem_sep DiffBuilder withTest concode_elem_sep Diff build concode_elem_sep Source getSource concode_elem_sep DiffBuilder withComparisonListeners concode_elem_sep Source wrap concode_elem_sep DiffBuilder withAttributeFilter", "code_tokens": ["DiffBuilder", "function", "(", ")", "{", "normalizeWhitespace", "=", "true", ";", "return", "this", ";", "}"], "nl_tokens": ["normalize", "text", "-", "elements", "by", "removing", "all", "empty", "text", "nodes", "and", "normalizing", "the", "non", "-", "empty", "ones", ".", "`", "`", "normalized", "''", "in", "this", "context", "means", "all", "whitespace", "characters", "are", "replaced", "by", "space", "characters", "and", "consecutive", "whitespace", "characters", "are", "collapsed", ".", "concode_field_sep", "DifferenceEvaluator", "differenceEvaluator", "concode_elem_sep", "ComparisonResult", "[", "]", "comparisonResultsToCheck", "concode_elem_sep", "ComparisonResult", "[", "]", "CHECK_FOR_IDENTICAL", "concode_elem_sep", "Source", "controlSource", "concode_elem_sep", "ComparisonResult", "[", "]", "CHECK_FOR_SIMILAR", "concode_elem_sep", "Map", "<", "String", ",", "String", ">", "namespaceContext", "concode_elem_sep", "Predicate", "<", "Node", ">", "nodeFilter", "concode_elem_sep", "List", "<", "ComparisonListener", ">", "differenceListeners", "concode_elem_sep", "Predicate", "<", "Attr", ">", "attributeFilter", "concode_elem_sep", "boolean", "ignoreWhitespace", "concode_elem_sep", "List", "<", "ComparisonListener", ">", "comparisonListeners", "concode_elem_sep", "boolean", "ignoreComments", "concode_elem_sep", "boolean", "normalizeWhitespace", "concode_elem_sep", "NodeMatcher", "nodeMatcher", "concode_elem_sep", "ComparisonController", "comparisonController", "concode_elem_sep", "Source", "testSource", "concode_elem_sep", "List", "<", "Difference", ">", "results", "concode_elem_sep", "EnumSet", "<", "ComparisonResult", ">", "comparisonResultsToCheck", "concode_field_sep", "DiffBuilder", "checkForIdentical", "concode_elem_sep", "DiffBuilder", "withNamespaceContext", "concode_elem_sep", "DiffBuilder", "compare", "concode_elem_sep", "DiffBuilder", "withNodeFilter", "concode_elem_sep", "void", "comparisonPerformed", "concode_elem_sep", "DiffBuilder", "withNodeMatcher", "concode_elem_sep", "List", "<", "Difference", ">", "getDifferences", "concode_elem_sep", "DiffBuilder", "withComparisonController", "concode_elem_sep", "DiffBuilder", "ignoreWhitespace", "concode_elem_sep", "DiffBuilder", "withDifferenceEvaluator", "concode_elem_sep", "DiffBuilder", "ignoreComments", "concode_elem_sep", "DiffBuilder", "withDifferenceListeners", "concode_elem_sep", "DiffBuilder", "checkForSimilar", "concode_elem_sep", "DiffBuilder", "withTest", "concode_elem_sep", "Diff", "build", "concode_elem_sep", "Source", "getSource", "concode_elem_sep", "DiffBuilder", "withComparisonListeners", "concode_elem_sep", "Source", "wrap", "concode_elem_sep", "DiffBuilder", "withAttributeFilter"]}
{"code": "double function ( Metrics . OperationMetricKey arg0 , ASTMethodOrConstructorDeclaration arg1 , boolean arg2 ) { QualifiedName loc0 = arg1 . getQualifiedName ( ) ; ClassStats loc1 = getClassStats ( loc0 , false ) ; return loc1 == null ? Double . NaN : loc1 . compute ( arg0 , arg1 , loc0 . getOperation ( ) , arg2 ) ; }", "nl": "computes the value of a metric for an operation . concode_field_sep Map<String,ClassStats> classes concode_elem_sep Map<String,PackageStats> subPackages concode_field_sep ClassStats getClassStats concode_elem_sep PackageStats getSubPackage concode_elem_sep boolean hasMatchingSig concode_elem_sep boolean hasMatchingSig", "code_tokens": ["double", "function", "(", "Metrics", ".", "OperationMetricKey", "arg0", ",", "ASTMethodOrConstructorDeclaration", "arg1", ",", "boolean", "arg2", ")", "{", "QualifiedName", "loc0", "=", "arg1", ".", "getQualifiedName", "(", ")", ";", "ClassStats", "loc1", "=", "getClassStats", "(", "loc0", ",", "false", ")", ";", "return", "loc1", "==", "null", "?", "Double", ".", "NaN", ":", "loc1", ".", "compute", "(", "arg0", ",", "arg1", ",", "loc0", ".", "getOperation", "(", ")", ",", "arg2", ")", ";", "}"], "nl_tokens": ["computes", "the", "value", "of", "a", "metric", "for", "an", "operation", ".", "concode_field_sep", "Map", "<", "String", ",", "ClassStats", ">", "classes", "concode_elem_sep", "Map", "<", "String", ",", "PackageStats", ">", "subPackages", "concode_field_sep", "ClassStats", "getClassStats", "concode_elem_sep", "PackageStats", "getSubPackage", "concode_elem_sep", "boolean", "hasMatchingSig", "concode_elem_sep", "boolean", "hasMatchingSig"]}
{"code": "void function ( Double arg0 ) { mPendingQueue . add ( arg0 ) ; runIfIdle ( ) ; }", "nl": "add a single value to the pending animation queue . concode_field_sep Queue<Double> mAnimationQueue concode_elem_sep boolean mRunning concode_elem_sep ChoreographerCompat mChoreographer concode_elem_sep Queue<Double> mPendingQueue concode_elem_sep ArrayList<Double> mTempValues concode_elem_sep List<Callback> mCallbacks concode_elem_sep ChoreographerCompat.FrameCallback mChoreographerCallback concode_field_sep void clearValues concode_elem_sep void addAllValues concode_elem_sep void onFrame concode_elem_sep void onFrame concode_elem_sep void clearCallbacks concode_elem_sep void removeCallback concode_elem_sep void runIfIdle concode_elem_sep void addCallback", "code_tokens": ["void", "function", "(", "Double", "arg0", ")", "{", "mPendingQueue", ".", "add", "(", "arg0", ")", ";", "runIfIdle", "(", ")", ";", "}"], "nl_tokens": ["add", "a", "single", "value", "to", "the", "pending", "animation", "queue", ".", "concode_field_sep", "Queue", "<", "Double", ">", "mAnimationQueue", "concode_elem_sep", "boolean", "mRunning", "concode_elem_sep", "ChoreographerCompat", "mChoreographer", "concode_elem_sep", "Queue", "<", "Double", ">", "mPendingQueue", "concode_elem_sep", "ArrayList", "<", "Double", ">", "mTempValues", "concode_elem_sep", "List", "<", "Callback", ">", "mCallbacks", "concode_elem_sep", "ChoreographerCompat", ".", "FrameCallback", "mChoreographerCallback", "concode_field_sep", "void", "clearValues", "concode_elem_sep", "void", "addAllValues", "concode_elem_sep", "void", "onFrame", "concode_elem_sep", "void", "onFrame", "concode_elem_sep", "void", "clearCallbacks", "concode_elem_sep", "void", "removeCallback", "concode_elem_sep", "void", "runIfIdle", "concode_elem_sep", "void", "addCallback"]}
{"code": "void function ( ) { assertEquals ( cal . get ( Calendar . DAY_OF_MONTH ) , instance . getDay ( ) ) ; }", "nl": "test method for net.sf.marineapi.nmea.util.date #getday . concode_field_sep Date instance concode_elem_sep GregorianCalendar cal concode_field_sep void testConstructorWithString concode_elem_sep void testSetMonth concode_elem_sep void testSetYearThreeDigits concode_elem_sep void testConstructor concode_elem_sep void testToStringFourDigitYear concode_elem_sep void testEqualsAfterInit concode_elem_sep void testEqualsWrongType concode_elem_sep void testSetYearTwoDigit concode_elem_sep void testEqualsWhenChanged concode_elem_sep void testToISO8601WithTime concode_elem_sep void setUp concode_elem_sep void testGetMonth concode_elem_sep void testEqualsItself concode_elem_sep void testSetYearNegative concode_elem_sep void testConstructorWithValues concode_elem_sep void testSetDayOutOfBounds concode_elem_sep void testGetYear concode_elem_sep void testToISO8601WithTimeAndZeroZone concode_elem_sep void testToISO8601FourDigitYear concode_elem_sep void testSetDay concode_elem_sep void testSetYearFourDigit concode_elem_sep void testToStringTwoDigitYear concode_elem_sep void testToISO8601WithTimeAndPositiveOffset concode_elem_sep void testToISO8601TwoDigitYear concode_elem_sep void testSetYearFiveDigits concode_elem_sep void testToISO8601WithTimeAndNegativeOffset concode_elem_sep void testSetMonthOutOfBounds", "code_tokens": ["void", "function", "(", ")", "{", "assertEquals", "(", "cal", ".", "get", "(", "Calendar", ".", "DAY_OF_MONTH", ")", ",", "instance", ".", "getDay", "(", ")", ")", ";", "}"], "nl_tokens": ["test", "method", "for", "net", ".", "sf", ".", "marineapi", ".", "nmea", ".", "util", ".", "date", "#getday . concode_field_sep Date instance concode_elem_sep GregorianCalendar cal concode_field_sep void testConstructorWithString concode_elem_sep void testSetMonth concode_elem_sep void testSetYearThreeDigits concode_elem_sep void testConstructor concode_elem_sep void testToStringFourDigitYear concode_elem_sep void testEqualsAfterInit concode_elem_sep void testEqualsWrongType concode_elem_sep void testSetYearTwoDigit concode_elem_sep void testEqualsWhenChanged concode_elem_sep void testToISO8601WithTime concode_elem_sep void setUp concode_elem_sep void testGetMonth concode_elem_sep void testEqualsItself concode_elem_sep void testSetYearNegative concode_elem_sep void testConstructorWithValues concode_elem_sep void testSetDayOutOfBounds concode_elem_sep void testGetYear concode_elem_sep void testToISO8601WithTimeAndZeroZone concode_elem_sep void testToISO8601FourDigitYear concode_elem_sep void testSetDay concode_elem_sep void testSetYearFourDigit concode_elem_sep void testToStringTwoDigitYear concode_elem_sep void testToISO8601WithTimeAndPositiveOffset concode_elem_sep void testToISO8601TwoDigitYear concode_elem_sep void testSetYearFiveDigits concode_elem_sep void testToISO8601WithTimeAndNegativeOffset concode_elem_sep void testSetMonthOutOfBounds"]}
{"code": "String function ( ) { return moduleName ; }", "nl": "gets the value of the modulename property . concode_field_sep String fail concode_elem_sep String pass concode_elem_sep String moduleName concode_elem_sep String noRun concode_elem_sep int ID concode_elem_sep String value concode_elem_sep String totalTC concode_field_sep String getPass concode_elem_sep void setNoRun concode_elem_sep String getTotalTC concode_elem_sep int getID concode_elem_sep void setFail concode_elem_sep String getFail concode_elem_sep String getNoRun concode_elem_sep int compareTo concode_elem_sep String getValue concode_elem_sep void setValue concode_elem_sep void setID concode_elem_sep void setTotalTC concode_elem_sep void setModuleName concode_elem_sep void setPass", "code_tokens": ["String", "function", "(", ")", "{", "return", "moduleName", ";", "}"], "nl_tokens": ["gets", "the", "value", "of", "the", "modulename", "property", ".", "concode_field_sep", "String", "fail", "concode_elem_sep", "String", "pass", "concode_elem_sep", "String", "moduleName", "concode_elem_sep", "String", "noRun", "concode_elem_sep", "int", "ID", "concode_elem_sep", "String", "value", "concode_elem_sep", "String", "totalTC", "concode_field_sep", "String", "getPass", "concode_elem_sep", "void", "setNoRun", "concode_elem_sep", "String", "getTotalTC", "concode_elem_sep", "int", "getID", "concode_elem_sep", "void", "setFail", "concode_elem_sep", "String", "getFail", "concode_elem_sep", "String", "getNoRun", "concode_elem_sep", "int", "compareTo", "concode_elem_sep", "String", "getValue", "concode_elem_sep", "void", "setValue", "concode_elem_sep", "void", "setID", "concode_elem_sep", "void", "setTotalTC", "concode_elem_sep", "void", "setModuleName", "concode_elem_sep", "void", "setPass"]}
{"code": "Result function ( String arg0 ) { Result loc0 = new Result ( ) ; for ( ResultEntry loc1 : this . log ) { if ( loc1 . getSource ( ) . equals ( arg0 ) ) { loc0 . add ( loc1 ) ; } } return loc0 ; }", "nl": "complementary operation to filteronly concode_field_sep Result globalLog concode_elem_sep List<ResultEntry> log concode_elem_sep Map<ResultObserver,ResultObserverSettings> observers concode_field_sep Result getGlobalResult concode_elem_sep Result filterOut concode_elem_sep Result filterOut concode_elem_sep Result filterOut concode_elem_sep boolean removeObserver concode_elem_sep void addObserverLogSource concode_elem_sep void setSources concode_elem_sep boolean remove concode_elem_sep Iterator<ResultEntry> iterator concode_elem_sep boolean removeAll concode_elem_sep ResultEntry get concode_elem_sep Object[] toArray concode_elem_sep T[] toArray concode_elem_sep boolean registerObserver concode_elem_sep boolean add concode_elem_sep void removeObserverLogSource concode_elem_sep boolean containsAll concode_elem_sep void clear concode_elem_sep boolean isEmpty concode_elem_sep void setObserverLevel concode_elem_sep boolean contains concode_elem_sep int size concode_elem_sep boolean addAll concode_elem_sep List<String> getSoures concode_elem_sep String toString concode_elem_sep void notifyObserversClear concode_elem_sep void notifyObserversAdd concode_elem_sep boolean retainAll", "code_tokens": ["Result", "function", "(", "String", "arg0", ")", "{", "Result", "loc0", "=", "new", "Result", "(", ")", ";", "for", "(", "ResultEntry", "loc1", ":", "this", ".", "log", ")", "{", "if", "(", "loc1", ".", "getSource", "(", ")", ".", "equals", "(", "arg0", ")", ")", "{", "loc0", ".", "add", "(", "loc1", ")", ";", "}", "}", "return", "loc0", ";", "}"], "nl_tokens": ["complementary", "operation", "to", "filteronly", "concode_field_sep", "Result", "globalLog", "concode_elem_sep", "List", "<", "ResultEntry", ">", "log", "concode_elem_sep", "Map", "<", "ResultObserver", ",", "ResultObserverSettings", ">", "observers", "concode_field_sep", "Result", "getGlobalResult", "concode_elem_sep", "Result", "filterOut", "concode_elem_sep", "Result", "filterOut", "concode_elem_sep", "Result", "filterOut", "concode_elem_sep", "boolean", "removeObserver", "concode_elem_sep", "void", "addObserverLogSource", "concode_elem_sep", "void", "setSources", "concode_elem_sep", "boolean", "remove", "concode_elem_sep", "Iterator", "<", "ResultEntry", ">", "iterator", "concode_elem_sep", "boolean", "removeAll", "concode_elem_sep", "ResultEntry", "get", "concode_elem_sep", "Object", "[", "]", "toArray", "concode_elem_sep", "T", "[", "]", "toArray", "concode_elem_sep", "boolean", "registerObserver", "concode_elem_sep", "boolean", "add", "concode_elem_sep", "void", "removeObserverLogSource", "concode_elem_sep", "boolean", "containsAll", "concode_elem_sep", "void", "clear", "concode_elem_sep", "boolean", "isEmpty", "concode_elem_sep", "void", "setObserverLevel", "concode_elem_sep", "boolean", "contains", "concode_elem_sep", "int", "size", "concode_elem_sep", "boolean", "addAll", "concode_elem_sep", "List", "<", "String", ">", "getSoures", "concode_elem_sep", "String", "toString", "concode_elem_sep", "void", "notifyObserversClear", "concode_elem_sep", "void", "notifyObserversAdd", "concode_elem_sep", "boolean", "retainAll"]}
{"code": "ResultFunction function ( ) { return resultFunction ; }", "nl": "returns the description of what each action does . concode_field_sep Object initialState concode_elem_sep ResultFunction resultFunction concode_elem_sep ActionsFunction actionsFunction concode_elem_sep StepCostFunction stepCostFunction concode_elem_sep GoalTest goalTest concode_field_sep Object getInitialState concode_elem_sep StepCostFunction getStepCostFunction concode_elem_sep ActionsFunction getActionsFunction concode_elem_sep boolean isGoalState concode_elem_sep GoalTest getGoalTest", "code_tokens": ["ResultFunction", "function", "(", ")", "{", "return", "resultFunction", ";", "}"], "nl_tokens": ["returns", "the", "description", "of", "what", "each", "action", "does", ".", "concode_field_sep", "Object", "initialState", "concode_elem_sep", "ResultFunction", "resultFunction", "concode_elem_sep", "ActionsFunction", "actionsFunction", "concode_elem_sep", "StepCostFunction", "stepCostFunction", "concode_elem_sep", "GoalTest", "goalTest", "concode_field_sep", "Object", "getInitialState", "concode_elem_sep", "StepCostFunction", "getStepCostFunction", "concode_elem_sep", "ActionsFunction", "getActionsFunction", "concode_elem_sep", "boolean", "isGoalState", "concode_elem_sep", "GoalTest", "getGoalTest"]}
{"code": "Array < Asset > function ( ) { Array < Asset > loc0 = null ; return loc0 ; }", "nl": "specifies the particular sounds which must be loaded for this screen . it returns null by default . concode_field_sep int CAMERA_INITIAL_Y concode_elem_sep ShadowStruggles game concode_elem_sep Controller controller concode_elem_sep int screenWidth concode_elem_sep MyStage stage concode_elem_sep int screenHeight concode_elem_sep int width concode_elem_sep OrthographicCamera camera concode_elem_sep int BACKGROUND_Y concode_elem_sep int CAMERA_INITIAL_X concode_elem_sep BitmapFont font concode_elem_sep int height concode_field_sep Array<Asset> mapsToLoad concode_elem_sep String getName concode_elem_sep void show concode_elem_sep void loadLanguage concode_elem_sep int getWidth concode_elem_sep OrthographicCamera getCamera concode_elem_sep int getHeight concode_elem_sep void addGameObject concode_elem_sep ShadowStruggles getGame concode_elem_sep BaseScreen copy concode_elem_sep void render concode_elem_sep void resume concode_elem_sep MyStage getStage concode_elem_sep Array<Asset> texturesToLoad concode_elem_sep Controller getController concode_elem_sep void initComponents concode_elem_sep Array<Asset> textureRegionsToLoad concode_elem_sep void pause concode_elem_sep void hide concode_elem_sep SpriteBatch getBatch concode_elem_sep Skin getSkin concode_elem_sep void resize concode_elem_sep BitmapFont getFont concode_elem_sep void dispose concode_elem_sep void setController", "code_tokens": ["Array", "<", "Asset", ">", "function", "(", ")", "{", "Array", "<", "Asset", ">", "loc0", "=", "null", ";", "return", "loc0", ";", "}"], "nl_tokens": ["specifies", "the", "particular", "sounds", "which", "must", "be", "loaded", "for", "this", "screen", ".", "it", "returns", "null", "by", "default", ".", "concode_field_sep", "int", "CAMERA_INITIAL_Y", "concode_elem_sep", "ShadowStruggles", "game", "concode_elem_sep", "Controller", "controller", "concode_elem_sep", "int", "screenWidth", "concode_elem_sep", "MyStage", "stage", "concode_elem_sep", "int", "screenHeight", "concode_elem_sep", "int", "width", "concode_elem_sep", "OrthographicCamera", "camera", "concode_elem_sep", "int", "BACKGROUND_Y", "concode_elem_sep", "int", "CAMERA_INITIAL_X", "concode_elem_sep", "BitmapFont", "font", "concode_elem_sep", "int", "height", "concode_field_sep", "Array", "<", "Asset", ">", "mapsToLoad", "concode_elem_sep", "String", "getName", "concode_elem_sep", "void", "show", "concode_elem_sep", "void", "loadLanguage", "concode_elem_sep", "int", "getWidth", "concode_elem_sep", "OrthographicCamera", "getCamera", "concode_elem_sep", "int", "getHeight", "concode_elem_sep", "void", "addGameObject", "concode_elem_sep", "ShadowStruggles", "getGame", "concode_elem_sep", "BaseScreen", "copy", "concode_elem_sep", "void", "render", "concode_elem_sep", "void", "resume", "concode_elem_sep", "MyStage", "getStage", "concode_elem_sep", "Array", "<", "Asset", ">", "texturesToLoad", "concode_elem_sep", "Controller", "getController", "concode_elem_sep", "void", "initComponents", "concode_elem_sep", "Array", "<", "Asset", ">", "textureRegionsToLoad", "concode_elem_sep", "void", "pause", "concode_elem_sep", "void", "hide", "concode_elem_sep", "SpriteBatch", "getBatch", "concode_elem_sep", "Skin", "getSkin", "concode_elem_sep", "void", "resize", "concode_elem_sep", "BitmapFont", "getFont", "concode_elem_sep", "void", "dispose", "concode_elem_sep", "void", "setController"]}
{"code": "boolean function ( ) { return config . loadDefault ( ) ; }", "nl": "load the configuration from the default location . the configuration will be automatically loaded from the default location the first time a value is queried or modified , if it had not been previously loaded . only the first load request will be honored , so if the configuration is to be loaded from a non-default location , load name must be used prior to any other call . the configuration can be loaded only one time . implementations must ignore load requests once a load is already successful , and must return false for each of those ignored requests . concode_field_sep String URL_SAVED concode_elem_sep String FILE_SAVED concode_elem_sep String URL_LOADED concode_elem_sep ConfigurationHandler config concode_elem_sep String FILE_LOADED concode_field_sep boolean save concode_elem_sep boolean save concode_elem_sep void setInteger concode_elem_sep double getDouble concode_elem_sep double getDouble concode_elem_sep int getInteger concode_elem_sep int getInteger concode_elem_sep String getString concode_elem_sep String getString concode_elem_sep void removeListener concode_elem_sep void removeListener concode_elem_sep IConfigurationFactory getFactory concode_elem_sep void setDouble concode_elem_sep ConfigurationKey makeKey concode_elem_sep ConfigurationKey makeKey concode_elem_sep ConfigurationKey makeKey concode_elem_sep ConfigurationKey makeKey concode_elem_sep ConfigurationKey makeKey concode_elem_sep ConfigurationKey makeKey concode_elem_sep void setString concode_elem_sep void removeKey concode_elem_sep ConfigurationHandler getConfigurationHandler concode_elem_sep boolean getBoolean concode_elem_sep boolean getBoolean concode_elem_sep void setBoolean concode_elem_sep void addListener concode_elem_sep void addListener", "code_tokens": ["boolean", "function", "(", ")", "{", "return", "config", ".", "loadDefault", "(", ")", ";", "}"], "nl_tokens": ["load", "the", "configuration", "from", "the", "default", "location", ".", "the", "configuration", "will", "be", "automatically", "loaded", "from", "the", "default", "location", "the", "first", "time", "a", "value", "is", "queried", "or", "modified", ",", "if", "it", "had", "not", "been", "previously", "loaded", ".", "only", "the", "first", "load", "request", "will", "be", "honored", ",", "so", "if", "the", "configuration", "is", "to", "be", "loaded", "from", "a", "non", "-", "default", "location", ",", "load", "name", "must", "be", "used", "prior", "to", "any", "other", "call", ".", "the", "configuration", "can", "be", "loaded", "only", "one", "time", ".", "implementations", "must", "ignore", "load", "requests", "once", "a", "load", "is", "already", "successful", ",", "and", "must", "return", "false", "for", "each", "of", "those", "ignored", "requests", ".", "concode_field_sep", "String", "URL_SAVED", "concode_elem_sep", "String", "FILE_SAVED", "concode_elem_sep", "String", "URL_LOADED", "concode_elem_sep", "ConfigurationHandler", "config", "concode_elem_sep", "String", "FILE_LOADED", "concode_field_sep", "boolean", "save", "concode_elem_sep", "boolean", "save", "concode_elem_sep", "void", "setInteger", "concode_elem_sep", "double", "getDouble", "concode_elem_sep", "double", "getDouble", "concode_elem_sep", "int", "getInteger", "concode_elem_sep", "int", "getInteger", "concode_elem_sep", "String", "getString", "concode_elem_sep", "String", "getString", "concode_elem_sep", "void", "removeListener", "concode_elem_sep", "void", "removeListener", "concode_elem_sep", "IConfigurationFactory", "getFactory", "concode_elem_sep", "void", "setDouble", "concode_elem_sep", "ConfigurationKey", "makeKey", "concode_elem_sep", "ConfigurationKey", "makeKey", "concode_elem_sep", "ConfigurationKey", "makeKey", "concode_elem_sep", "ConfigurationKey", "makeKey", "concode_elem_sep", "ConfigurationKey", "makeKey", "concode_elem_sep", "ConfigurationKey", "makeKey", "concode_elem_sep", "void", "setString", "concode_elem_sep", "void", "removeKey", "concode_elem_sep", "ConfigurationHandler", "getConfigurationHandler", "concode_elem_sep", "boolean", "getBoolean", "concode_elem_sep", "boolean", "getBoolean", "concode_elem_sep", "void", "setBoolean", "concode_elem_sep", "void", "addListener", "concode_elem_sep", "void", "addListener"]}
{"code": "EndpointReferenceType function ( QName arg0 ) { EndpointReferenceType loc0 = null ; for ( EndpointResolver loc1 : resolvers ) { loc0 = loc1 . mint ( arg0 ) ; if ( loc0 != null ) { break ; } } return loc0 ; }", "nl": "walk the list of registered endpointresolvers , so as to mint a new abstract epr for a given service name . concode_field_sep Bus bus concode_elem_sep List<EndpointResolver> resolvers concode_field_sep EndpointReferenceType resolve concode_elem_sep void unregister concode_elem_sep List<EndpointResolver> getResolvers concode_elem_sep EndpointReferenceType renew concode_elem_sep void setBus concode_elem_sep void register", "code_tokens": ["EndpointReferenceType", "function", "(", "QName", "arg0", ")", "{", "EndpointReferenceType", "loc0", "=", "null", ";", "for", "(", "EndpointResolver", "loc1", ":", "resolvers", ")", "{", "loc0", "=", "loc1", ".", "mint", "(", "arg0", ")", ";", "if", "(", "loc0", "!=", "null", ")", "{", "break", ";", "}", "}", "return", "loc0", ";", "}"], "nl_tokens": ["walk", "the", "list", "of", "registered", "endpointresolvers", ",", "so", "as", "to", "mint", "a", "new", "abstract", "epr", "for", "a", "given", "service", "name", ".", "concode_field_sep", "Bus", "bus", "concode_elem_sep", "List", "<", "EndpointResolver", ">", "resolvers", "concode_field_sep", "EndpointReferenceType", "resolve", "concode_elem_sep", "void", "unregister", "concode_elem_sep", "List", "<", "EndpointResolver", ">", "getResolvers", "concode_elem_sep", "EndpointReferenceType", "renew", "concode_elem_sep", "void", "setBus", "concode_elem_sep", "void", "register"]}
{"code": "int function ( ) { return pattern . length ; }", "nl": "returns the length of the matched token . it is not required to be meaningful unless addchar has returned true and hasfreepart returned false or endchar returned true . concode_field_sep char match[] concode_elem_sep char pattern[] concode_field_sep boolean addChar concode_elem_sep boolean hasFreePart concode_elem_sep void reset concode_elem_sep boolean endChar concode_elem_sep int getPeekCount", "code_tokens": ["int", "function", "(", ")", "{", "return", "pattern", ".", "length", ";", "}"], "nl_tokens": ["returns", "the", "length", "of", "the", "matched", "token", ".", "it", "is", "not", "required", "to", "be", "meaningful", "unless", "addchar", "has", "returned", "true", "and", "hasfreepart", "returned", "false", "or", "endchar", "returned", "true", ".", "concode_field_sep", "char", "match", "[", "]", "concode_elem_sep", "char", "pattern", "[", "]", "concode_field_sep", "boolean", "addChar", "concode_elem_sep", "boolean", "hasFreePart", "concode_elem_sep", "void", "reset", "concode_elem_sep", "boolean", "endChar", "concode_elem_sep", "int", "getPeekCount"]}
{"code": "void function ( String arg0 , Exception arg1 ) { if ( sIsLogEnabled ) { Log . e ( sApplicationTag , getContent ( getCurrentStackTraceElement ( ) ) + \"srini_string\" + arg1 . getMessage ( ) + \"srini_string\" + arg1 . getStackTrace ( ) + \"srini_string\" + arg0 ) ; arg1 . printStackTrace ( ) ; } }", "nl": "send an error log message . concode_field_sep String TAG_CONTENT_PRINT concode_elem_sep boolean sIsLogEnabled concode_elem_sep String sApplicationTag concode_field_sep StackTraceElement getCurrentStackTraceElement concode_elem_sep String getTagContentPrint concode_elem_sep void d concode_elem_sep void d concode_elem_sep void d concode_elem_sep String getContent concode_elem_sep void i concode_elem_sep void i concode_elem_sep String getsApplicationTag concode_elem_sep void setsIsLogEnabled concode_elem_sep boolean issIsLogEnabled concode_elem_sep void trace concode_elem_sep void v concode_elem_sep void w concode_elem_sep void w concode_elem_sep String getContents concode_elem_sep void traceStack concode_elem_sep void traceStack concode_elem_sep void setsApplicationTag", "code_tokens": ["void", "function", "(", "String", "arg0", ",", "Exception", "arg1", ")", "{", "if", "(", "sIsLogEnabled", ")", "{", "Log", ".", "e", "(", "sApplicationTag", ",", "getContent", "(", "getCurrentStackTraceElement", "(", ")", ")", "+", "\"srini_string\"", "+", "arg1", ".", "getMessage", "(", ")", "+", "\"srini_string\"", "+", "arg1", ".", "getStackTrace", "(", ")", "+", "\"srini_string\"", "+", "arg0", ")", ";", "arg1", ".", "printStackTrace", "(", ")", ";", "}", "}"], "nl_tokens": ["send", "an", "error", "log", "message", ".", "concode_field_sep", "String", "TAG_CONTENT_PRINT", "concode_elem_sep", "boolean", "sIsLogEnabled", "concode_elem_sep", "String", "sApplicationTag", "concode_field_sep", "StackTraceElement", "getCurrentStackTraceElement", "concode_elem_sep", "String", "getTagContentPrint", "concode_elem_sep", "void", "d", "concode_elem_sep", "void", "d", "concode_elem_sep", "void", "d", "concode_elem_sep", "String", "getContent", "concode_elem_sep", "void", "i", "concode_elem_sep", "void", "i", "concode_elem_sep", "String", "getsApplicationTag", "concode_elem_sep", "void", "setsIsLogEnabled", "concode_elem_sep", "boolean", "issIsLogEnabled", "concode_elem_sep", "void", "trace", "concode_elem_sep", "void", "v", "concode_elem_sep", "void", "w", "concode_elem_sep", "void", "w", "concode_elem_sep", "String", "getContents", "concode_elem_sep", "void", "traceStack", "concode_elem_sep", "void", "traceStack", "concode_elem_sep", "void", "setsApplicationTag"]}
{"code": "void function ( double arg0 ) { if ( arg0 < 0 || arg0 >= 60 ) { throw new IllegalArgumentException ( \"srini_string\" ) ; } this . seconds = arg0 ; }", "nl": "set seconds of minute . concode_field_sep int offsetHours concode_elem_sep int offsetMinutes concode_elem_sep double seconds concode_elem_sep int minutes concode_elem_sep int hour concode_elem_sep String TIME_PATTERN concode_field_sep int getOffsetHours concode_elem_sep Date toDate concode_elem_sep String toISO8601 concode_elem_sep void setMinutes concode_elem_sep void setHour concode_elem_sep long getMilliseconds concode_elem_sep void setOffsetMinutes concode_elem_sep int getMinutes concode_elem_sep double getSeconds concode_elem_sep int hashCode concode_elem_sep boolean equals concode_elem_sep int getOffsetMinutes concode_elem_sep int getHour concode_elem_sep String toString concode_elem_sep void setOffsetHours concode_elem_sep void setTime", "code_tokens": ["void", "function", "(", "double", "arg0", ")", "{", "if", "(", "arg0", "<", "0", "|", "|", "arg0", ">=", "60", ")", "{", "throw", "new", "IllegalArgumentException", "(", "\"srini_string\"", ")", ";", "}", "this", ".", "seconds", "=", "arg0", ";", "}"], "nl_tokens": ["set", "seconds", "of", "minute", ".", "concode_field_sep", "int", "offsetHours", "concode_elem_sep", "int", "offsetMinutes", "concode_elem_sep", "double", "seconds", "concode_elem_sep", "int", "minutes", "concode_elem_sep", "int", "hour", "concode_elem_sep", "String", "TIME_PATTERN", "concode_field_sep", "int", "getOffsetHours", "concode_elem_sep", "Date", "toDate", "concode_elem_sep", "String", "toISO8601", "concode_elem_sep", "void", "setMinutes", "concode_elem_sep", "void", "setHour", "concode_elem_sep", "long", "getMilliseconds", "concode_elem_sep", "void", "setOffsetMinutes", "concode_elem_sep", "int", "getMinutes", "concode_elem_sep", "double", "getSeconds", "concode_elem_sep", "int", "hashCode", "concode_elem_sep", "boolean", "equals", "concode_elem_sep", "int", "getOffsetMinutes", "concode_elem_sep", "int", "getHour", "concode_elem_sep", "String", "toString", "concode_elem_sep", "void", "setOffsetHours", "concode_elem_sep", "void", "setTime"]}
{"code": "List < T > function ( T arg0 , T arg1 , T arg2 ) { List < T > loc0 = new ArrayList < > ( 3 ) ; loc0 . add ( arg0 ) ; loc0 . add ( arg1 ) ; loc0 . add ( arg2 ) ; return loc0 ; }", "nl": "return a list containing o1 , ... , o3 . concode_field_sep PlaceHolder placeHolder concode_field_sep List<T> add concode_elem_sep T firstOrElse concode_elem_sep boolean equals concode_elem_sep List<T> nonNullList concode_elem_sep List<U> map concode_elem_sep Iterator<Pair<T,T>> pairs", "code_tokens": ["List", "<", "T", ">", "function", "(", "T", "arg0", ",", "T", "arg1", ",", "T", "arg2", ")", "{", "List", "<", "T", ">", "loc0", "=", "new", "ArrayList", "<", ">", "(", "3", ")", ";", "loc0", ".", "add", "(", "arg0", ")", ";", "loc0", ".", "add", "(", "arg1", ")", ";", "loc0", ".", "add", "(", "arg2", ")", ";", "return", "loc0", ";", "}"], "nl_tokens": ["return", "a", "list", "containing", "o1", ",", "...", ",", "o3", ".", "concode_field_sep", "PlaceHolder", "placeHolder", "concode_field_sep", "List", "<", "T", ">", "add", "concode_elem_sep", "T", "firstOrElse", "concode_elem_sep", "boolean", "equals", "concode_elem_sep", "List", "<", "T", ">", "nonNullList", "concode_elem_sep", "List", "<", "U", ">", "map", "concode_elem_sep", "Iterator", "<", "Pair", "<", "T", ",", "T", ">>", "pairs"]}
{"code": "void function ( String arg0 ) { this . userName = arg0 ; }", "nl": "sets the username of the user concode_field_sep long serialVersionUID concode_elem_sep String userStoreDomain concode_elem_sep String userName concode_elem_sep String tenantDomain concode_field_sep String getTenantDomain concode_elem_sep String getUserStoreDomain concode_elem_sep void setUserStoreDomain concode_elem_sep User build concode_elem_sep String getUserName concode_elem_sep String toString concode_elem_sep void setTenantDomain", "code_tokens": ["void", "function", "(", "String", "arg0", ")", "{", "this", ".", "userName", "=", "arg0", ";", "}"], "nl_tokens": ["sets", "the", "username", "of", "the", "user", "concode_field_sep", "long", "serialVersionUID", "concode_elem_sep", "String", "userStoreDomain", "concode_elem_sep", "String", "userName", "concode_elem_sep", "String", "tenantDomain", "concode_field_sep", "String", "getTenantDomain", "concode_elem_sep", "String", "getUserStoreDomain", "concode_elem_sep", "void", "setUserStoreDomain", "concode_elem_sep", "User", "build", "concode_elem_sep", "String", "getUserName", "concode_elem_sep", "String", "toString", "concode_elem_sep", "void", "setTenantDomain"]}
{"code": "Rect function ( ) { return rectValue ; }", "nl": "not supported . this method is used to get the rect value . concode_field_sep String _cssText concode_elem_sep RGBColor rgbColorValue concode_elem_sep float floatValue concode_elem_sep Rect rectValue concode_elem_sep Counter counter concode_elem_sep short primitiveType concode_field_sep void setStringValue concode_elem_sep short getCssValueType concode_elem_sep String getStringValue concode_elem_sep FSCssValue getNewIdentValue concode_elem_sep String getCssText concode_elem_sep void setFloatValue concode_elem_sep float getFloatValue concode_elem_sep short getPrimitiveType concode_elem_sep RGBColor getRGBColorValue concode_elem_sep String toString concode_elem_sep Counter getCounterValue concode_elem_sep void setCssText", "code_tokens": ["Rect", "function", "(", ")", "{", "return", "rectValue", ";", "}"], "nl_tokens": ["not", "supported", ".", "this", "method", "is", "used", "to", "get", "the", "rect", "value", ".", "concode_field_sep", "String", "_cssText", "concode_elem_sep", "RGBColor", "rgbColorValue", "concode_elem_sep", "float", "floatValue", "concode_elem_sep", "Rect", "rectValue", "concode_elem_sep", "Counter", "counter", "concode_elem_sep", "short", "primitiveType", "concode_field_sep", "void", "setStringValue", "concode_elem_sep", "short", "getCssValueType", "concode_elem_sep", "String", "getStringValue", "concode_elem_sep", "FSCssValue", "getNewIdentValue", "concode_elem_sep", "String", "getCssText", "concode_elem_sep", "void", "setFloatValue", "concode_elem_sep", "float", "getFloatValue", "concode_elem_sep", "short", "getPrimitiveType", "concode_elem_sep", "RGBColor", "getRGBColorValue", "concode_elem_sep", "String", "toString", "concode_elem_sep", "Counter", "getCounterValue", "concode_elem_sep", "void", "setCssText"]}
{"code": "double function ( DenseMatrix64F arg0 , DenseMatrix64F arg1 ) { double loc0 = VectorVectorMult . innerProd ( arg1 , arg1 ) ; double loc1 = VectorVectorMult . innerProdA ( arg1 , arg0 , arg1 ) ; return loc1 / loc0 ; }", "nl": "given matrix a and an eigen vector of a , compute the corresponding eigen value . this is the rayleigh quotient . xtax / xtx concode_field_sep PlaceHolder placeHolder concode_field_sep Eigenpair computeEigenVector concode_elem_sep DenseMatrix64F createMatrixV concode_elem_sep Eigenpair dominantEigenpair concode_elem_sep double[] boundLargestEigenValue concode_elem_sep DenseMatrix64F createMatrixD", "code_tokens": ["double", "function", "(", "DenseMatrix64F", "arg0", ",", "DenseMatrix64F", "arg1", ")", "{", "double", "loc0", "=", "VectorVectorMult", ".", "innerProd", "(", "arg1", ",", "arg1", ")", ";", "double", "loc1", "=", "VectorVectorMult", ".", "innerProdA", "(", "arg1", ",", "arg0", ",", "arg1", ")", ";", "return", "loc1", "/", "loc0", ";", "}"], "nl_tokens": ["given", "matrix", "a", "and", "an", "eigen", "vector", "of", "a", ",", "compute", "the", "corresponding", "eigen", "value", ".", "this", "is", "the", "rayleigh", "quotient", ".", "xtax", "/", "xtx", "concode_field_sep", "PlaceHolder", "placeHolder", "concode_field_sep", "Eigenpair", "computeEigenVector", "concode_elem_sep", "DenseMatrix64F", "createMatrixV", "concode_elem_sep", "Eigenpair", "dominantEigenpair", "concode_elem_sep", "double", "[", "]", "boundLargestEigenValue", "concode_elem_sep", "DenseMatrix64F", "createMatrixD"]}
{"code": "int function ( byte [ ] arg0 ) { int loc0 = INDEX_HASHER . hashBytes ( arg0 ) . asInt ( ) % mNumBuckets ; return ( loc0 >= 0 ) ? loc0 : - loc0 ; }", "nl": "hashes a key in byte array to a bucket index in non-negative integer value . concode_field_sep int mKeyCount concode_elem_sep int BUCKET_SIZE_BYTES concode_elem_sep ByteBuffer mBuf concode_elem_sep int INDEX_HASHER_SEED concode_elem_sep int FINGERPRINT_HASHER_SEED concode_elem_sep HashFunction FINGERPRINT_HASHER concode_elem_sep HashFunction INDEX_HASHER concode_elem_sep ByteBuffer mHashTableBuf concode_elem_sep int MAX_PROBES concode_elem_sep int mNumBuckets concode_field_sep int keyCount concode_elem_sep Iterator<ByteBuffer> keyIterator concode_elem_sep int bucketOffset concode_elem_sep LinearProbingIndex createEmptyIndex concode_elem_sep LinearProbingIndex loadFromByteArray concode_elem_sep int byteCount concode_elem_sep ByteBuffer get concode_elem_sep byte fingerprintHash concode_elem_sep byte fingerprintHash concode_elem_sep ByteBuffer nextKey concode_elem_sep boolean put concode_elem_sep byte[] getBytes", "code_tokens": ["int", "function", "(", "byte", "[", "]", "arg0", ")", "{", "int", "loc0", "=", "INDEX_HASHER", ".", "hashBytes", "(", "arg0", ")", ".", "asInt", "(", ")", "%", "mNumBuckets", ";", "return", "(", "loc0", ">=", "0", ")", "?", "loc0", ":", "-", "loc0", ";", "}"], "nl_tokens": ["hashes", "a", "key", "in", "byte", "array", "to", "a", "bucket", "index", "in", "non", "-", "negative", "integer", "value", ".", "concode_field_sep", "int", "mKeyCount", "concode_elem_sep", "int", "BUCKET_SIZE_BYTES", "concode_elem_sep", "ByteBuffer", "mBuf", "concode_elem_sep", "int", "INDEX_HASHER_SEED", "concode_elem_sep", "int", "FINGERPRINT_HASHER_SEED", "concode_elem_sep", "HashFunction", "FINGERPRINT_HASHER", "concode_elem_sep", "HashFunction", "INDEX_HASHER", "concode_elem_sep", "ByteBuffer", "mHashTableBuf", "concode_elem_sep", "int", "MAX_PROBES", "concode_elem_sep", "int", "mNumBuckets", "concode_field_sep", "int", "keyCount", "concode_elem_sep", "Iterator", "<", "ByteBuffer", ">", "keyIterator", "concode_elem_sep", "int", "bucketOffset", "concode_elem_sep", "LinearProbingIndex", "createEmptyIndex", "concode_elem_sep", "LinearProbingIndex", "loadFromByteArray", "concode_elem_sep", "int", "byteCount", "concode_elem_sep", "ByteBuffer", "get", "concode_elem_sep", "byte", "fingerprintHash", "concode_elem_sep", "byte", "fingerprintHash", "concode_elem_sep", "ByteBuffer", "nextKey", "concode_elem_sep", "boolean", "put", "concode_elem_sep", "byte", "[", "]", "getBytes"]}
{"code": "void function ( ) { if ( this . sounds != null ) { for ( Asset loc0 : this . sounds ) { game . getAssets ( ) . unload ( FileMap . resourcesToDirectory . get ( loc0 . assetType ) + loc0 . assetName ) ; } this . sounds = null ; } }", "nl": "unloads the sounds from memory . concode_field_sep ShadowStruggles game concode_elem_sep Array<Asset> textures concode_elem_sep Array<Asset> sounds concode_elem_sep Array<Asset> rpgMaps concode_elem_sep String assetName concode_elem_sep Array<Asset> textureRegions concode_elem_sep String LOG concode_elem_sep String assetType concode_field_sep void loadMaps concode_elem_sep TextureRegion getTextureRegion concode_elem_sep TiledMap getTiledMap concode_elem_sep void disposeTextures concode_elem_sep void disposeMaps concode_elem_sep Texture getTexture concode_elem_sep void unloadSounds concode_elem_sep void loadSounds concode_elem_sep boolean equals concode_elem_sep void setAssetsToLoad concode_elem_sep void loadAssets concode_elem_sep void dispose concode_elem_sep void loadTextureAtlas concode_elem_sep void createTextureAtlas concode_elem_sep void disposeAtlas concode_elem_sep void loadTextures", "code_tokens": ["void", "function", "(", ")", "{", "if", "(", "this", ".", "sounds", "!=", "null", ")", "{", "for", "(", "Asset", "loc0", ":", "this", ".", "sounds", ")", "{", "game", ".", "getAssets", "(", ")", ".", "unload", "(", "FileMap", ".", "resourcesToDirectory", ".", "get", "(", "loc0", ".", "assetType", ")", "+", "loc0", ".", "assetName", ")", ";", "}", "this", ".", "sounds", "=", "null", ";", "}", "}"], "nl_tokens": ["unloads", "the", "sounds", "from", "memory", ".", "concode_field_sep", "ShadowStruggles", "game", "concode_elem_sep", "Array", "<", "Asset", ">", "textures", "concode_elem_sep", "Array", "<", "Asset", ">", "sounds", "concode_elem_sep", "Array", "<", "Asset", ">", "rpgMaps", "concode_elem_sep", "String", "assetName", "concode_elem_sep", "Array", "<", "Asset", ">", "textureRegions", "concode_elem_sep", "String", "LOG", "concode_elem_sep", "String", "assetType", "concode_field_sep", "void", "loadMaps", "concode_elem_sep", "TextureRegion", "getTextureRegion", "concode_elem_sep", "TiledMap", "getTiledMap", "concode_elem_sep", "void", "disposeTextures", "concode_elem_sep", "void", "disposeMaps", "concode_elem_sep", "Texture", "getTexture", "concode_elem_sep", "void", "unloadSounds", "concode_elem_sep", "void", "loadSounds", "concode_elem_sep", "boolean", "equals", "concode_elem_sep", "void", "setAssetsToLoad", "concode_elem_sep", "void", "loadAssets", "concode_elem_sep", "void", "dispose", "concode_elem_sep", "void", "loadTextureAtlas", "concode_elem_sep", "void", "createTextureAtlas", "concode_elem_sep", "void", "disposeAtlas", "concode_elem_sep", "void", "loadTextures"]}
{"code": "String function ( ) { return mTierAlias ; }", "nl": "gets the storage tier alias of the location . concode_field_sep int mDirIndex concode_elem_sep String ANY_TIER concode_elem_sep String mTierAlias concode_elem_sep int ANY_DIR concode_field_sep int hashCode concode_elem_sep boolean equals concode_elem_sep BlockStoreLocation anyDirInTier concode_elem_sep String toString concode_elem_sep BlockStoreLocation anyTier concode_elem_sep int dir concode_elem_sep boolean belongsTo", "code_tokens": ["String", "function", "(", ")", "{", "return", "mTierAlias", ";", "}"], "nl_tokens": ["gets", "the", "storage", "tier", "alias", "of", "the", "location", ".", "concode_field_sep", "int", "mDirIndex", "concode_elem_sep", "String", "ANY_TIER", "concode_elem_sep", "String", "mTierAlias", "concode_elem_sep", "int", "ANY_DIR", "concode_field_sep", "int", "hashCode", "concode_elem_sep", "boolean", "equals", "concode_elem_sep", "BlockStoreLocation", "anyDirInTier", "concode_elem_sep", "String", "toString", "concode_elem_sep", "BlockStoreLocation", "anyTier", "concode_elem_sep", "int", "dir", "concode_elem_sep", "boolean", "belongsTo"]}
{"code": "String function ( ) { return this . createdBy ; }", "nl": "gets the created by . concode_field_sep Timestamp lastModifiedTimeStamp concode_elem_sep Timestamp fetcherStartTimestamp concode_elem_sep Timestamp createTimeStamp concode_elem_sep long serialVersionUID concode_elem_sep BigDecimal batchId concode_elem_sep String errorMsg concode_elem_sep OutcomeType outcomeType concode_elem_sep String createdBy concode_elem_sep BigDecimal feedId concode_elem_sep long testId concode_elem_sep BigDecimal runId concode_elem_sep Timestamp fetcherEndTimeStamp concode_elem_sep List<RegPCLTestResultDetailsEntity> regPclTestResultDetails concode_elem_sep RunStatusType runStatus concode_field_sep void setLastModifiedTimeStamp concode_elem_sep void setFeedId concode_elem_sep void setFetcherStartTimestamp concode_elem_sep OutcomeType getOutcomeType concode_elem_sep void updateLastModifiedTimeStamp concode_elem_sep void updateCreateTimeStamp concode_elem_sep BigDecimal getRunId concode_elem_sep void setBatchId concode_elem_sep List<RegPCLTestResultDetailsEntity> getRegPclTestResultDetails concode_elem_sep void setTestId concode_elem_sep long getTestId concode_elem_sep RegPCLTestResultDetailsEntity removeRegPclTestResultDetail concode_elem_sep void setRegPclTestResultDetails concode_elem_sep void setErrorMsg concode_elem_sep RunStatusType getRunStatus concode_elem_sep RegPCLTestResultDetailsEntity addRegPclTestResultDetail concode_elem_sep String getErrorMsg concode_elem_sep void setRunStatus concode_elem_sep Timestamp getFetcherEndTimeStamp concode_elem_sep Timestamp getLastModifiedTimeStamp concode_elem_sep BigDecimal getFeedId concode_elem_sep void setRunId concode_elem_sep Timestamp getFetcherStartTimestamp concode_elem_sep void setFetcherEndTimeStamp concode_elem_sep void setCreateTimeStamp concode_elem_sep void setCreatedBy concode_elem_sep Timestamp getCreateTimeStamp concode_elem_sep BigDecimal getBatchId concode_elem_sep void setOutcomeType", "code_tokens": ["String", "function", "(", ")", "{", "return", "this", ".", "createdBy", ";", "}"], "nl_tokens": ["gets", "the", "created", "by", ".", "concode_field_sep", "Timestamp", "lastModifiedTimeStamp", "concode_elem_sep", "Timestamp", "fetcherStartTimestamp", "concode_elem_sep", "Timestamp", "createTimeStamp", "concode_elem_sep", "long", "serialVersionUID", "concode_elem_sep", "BigDecimal", "batchId", "concode_elem_sep", "String", "errorMsg", "concode_elem_sep", "OutcomeType", "outcomeType", "concode_elem_sep", "String", "createdBy", "concode_elem_sep", "BigDecimal", "feedId", "concode_elem_sep", "long", "testId", "concode_elem_sep", "BigDecimal", "runId", "concode_elem_sep", "Timestamp", "fetcherEndTimeStamp", "concode_elem_sep", "List", "<", "RegPCLTestResultDetailsEntity", ">", "regPclTestResultDetails", "concode_elem_sep", "RunStatusType", "runStatus", "concode_field_sep", "void", "setLastModifiedTimeStamp", "concode_elem_sep", "void", "setFeedId", "concode_elem_sep", "void", "setFetcherStartTimestamp", "concode_elem_sep", "OutcomeType", "getOutcomeType", "concode_elem_sep", "void", "updateLastModifiedTimeStamp", "concode_elem_sep", "void", "updateCreateTimeStamp", "concode_elem_sep", "BigDecimal", "getRunId", "concode_elem_sep", "void", "setBatchId", "concode_elem_sep", "List", "<", "RegPCLTestResultDetailsEntity", ">", "getRegPclTestResultDetails", "concode_elem_sep", "void", "setTestId", "concode_elem_sep", "long", "getTestId", "concode_elem_sep", "RegPCLTestResultDetailsEntity", "removeRegPclTestResultDetail", "concode_elem_sep", "void", "setRegPclTestResultDetails", "concode_elem_sep", "void", "setErrorMsg", "concode_elem_sep", "RunStatusType", "getRunStatus", "concode_elem_sep", "RegPCLTestResultDetailsEntity", "addRegPclTestResultDetail", "concode_elem_sep", "String", "getErrorMsg", "concode_elem_sep", "void", "setRunStatus", "concode_elem_sep", "Timestamp", "getFetcherEndTimeStamp", "concode_elem_sep", "Timestamp", "getLastModifiedTimeStamp", "concode_elem_sep", "BigDecimal", "getFeedId", "concode_elem_sep", "void", "setRunId", "concode_elem_sep", "Timestamp", "getFetcherStartTimestamp", "concode_elem_sep", "void", "setFetcherEndTimeStamp", "concode_elem_sep", "void", "setCreateTimeStamp", "concode_elem_sep", "void", "setCreatedBy", "concode_elem_sep", "Timestamp", "getCreateTimeStamp", "concode_elem_sep", "BigDecimal", "getBatchId", "concode_elem_sep", "void", "setOutcomeType"]}
{"code": "Crypto function ( ) { return signatureCrypto ; }", "nl": "get the signature crypto object concode_field_sep Object encryptionCryptoProperties concode_elem_sep Bus bus concode_elem_sep Crypto signatureCrypto concode_elem_sep SignatureProperties signatureProperties concode_elem_sep Logger LOG concode_elem_sep String issuer concode_elem_sep EncryptionProperties encryptionProperties concode_elem_sep CallbackHandler callbackHandler concode_elem_sep List<Relationship> relationships concode_elem_sep boolean validateUseKey concode_elem_sep RelationshipResolver relationshipResolver concode_elem_sep String callbackHandlerClass concode_elem_sep String signatureUsername concode_elem_sep Crypto encryptionCrypto concode_elem_sep SAMLRealmCodec samlRealmCodec concode_elem_sep String encryptionUsername concode_elem_sep Object signatureCryptoProperties concode_elem_sep IdentityMapper identityMapper concode_elem_sep RealmParser realmParser concode_field_sep RelationshipResolver getRelationshipResolver concode_elem_sep Bus getBus concode_elem_sep void setSamlRealmCodec concode_elem_sep ResourceManager getResourceManager concode_elem_sep void setSignaturePropertiesFile concode_elem_sep void setCallbackHandler concode_elem_sep void setEncryptionProperties concode_elem_sep EncryptionProperties getEncryptionProperties concode_elem_sep boolean isValidateUseKey concode_elem_sep void setSignatureUsername concode_elem_sep List<Relationship> getRelationships concode_elem_sep SAMLRealmCodec getSamlRealmCodec concode_elem_sep String getEncryptionUsername concode_elem_sep void setIdentityMapper concode_elem_sep void setEncryptionPropertiesFile concode_elem_sep void setEncryptionUsername concode_elem_sep void setCallbackHandlerClass concode_elem_sep Crypto getEncryptionCrypto concode_elem_sep void setRelationships concode_elem_sep SignatureProperties getSignatureProperties concode_elem_sep void setSignatureProperties concode_elem_sep void setRealmParser concode_elem_sep String getIssuer concode_elem_sep void setSignatureCryptoProperties concode_elem_sep void setSignatureCrypto concode_elem_sep IdentityMapper getIdentityMapper concode_elem_sep void setValidateUseKey concode_elem_sep void configureProperties concode_elem_sep void setEncryptionCrypto concode_elem_sep RealmParser getRealmParser concode_elem_sep String getSignatureUsername concode_elem_sep void setIssuer concode_elem_sep CallbackHandler getCallbackHandler concode_elem_sep void setEncryptionCryptoProperties concode_elem_sep void setBus", "code_tokens": ["Crypto", "function", "(", ")", "{", "return", "signatureCrypto", ";", "}"], "nl_tokens": ["get", "the", "signature", "crypto", "object", "concode_field_sep", "Object", "encryptionCryptoProperties", "concode_elem_sep", "Bus", "bus", "concode_elem_sep", "Crypto", "signatureCrypto", "concode_elem_sep", "SignatureProperties", "signatureProperties", "concode_elem_sep", "Logger", "LOG", "concode_elem_sep", "String", "issuer", "concode_elem_sep", "EncryptionProperties", "encryptionProperties", "concode_elem_sep", "CallbackHandler", "callbackHandler", "concode_elem_sep", "List", "<", "Relationship", ">", "relationships", "concode_elem_sep", "boolean", "validateUseKey", "concode_elem_sep", "RelationshipResolver", "relationshipResolver", "concode_elem_sep", "String", "callbackHandlerClass", "concode_elem_sep", "String", "signatureUsername", "concode_elem_sep", "Crypto", "encryptionCrypto", "concode_elem_sep", "SAMLRealmCodec", "samlRealmCodec", "concode_elem_sep", "String", "encryptionUsername", "concode_elem_sep", "Object", "signatureCryptoProperties", "concode_elem_sep", "IdentityMapper", "identityMapper", "concode_elem_sep", "RealmParser", "realmParser", "concode_field_sep", "RelationshipResolver", "getRelationshipResolver", "concode_elem_sep", "Bus", "getBus", "concode_elem_sep", "void", "setSamlRealmCodec", "concode_elem_sep", "ResourceManager", "getResourceManager", "concode_elem_sep", "void", "setSignaturePropertiesFile", "concode_elem_sep", "void", "setCallbackHandler", "concode_elem_sep", "void", "setEncryptionProperties", "concode_elem_sep", "EncryptionProperties", "getEncryptionProperties", "concode_elem_sep", "boolean", "isValidateUseKey", "concode_elem_sep", "void", "setSignatureUsername", "concode_elem_sep", "List", "<", "Relationship", ">", "getRelationships", "concode_elem_sep", "SAMLRealmCodec", "getSamlRealmCodec", "concode_elem_sep", "String", "getEncryptionUsername", "concode_elem_sep", "void", "setIdentityMapper", "concode_elem_sep", "void", "setEncryptionPropertiesFile", "concode_elem_sep", "void", "setEncryptionUsername", "concode_elem_sep", "void", "setCallbackHandlerClass", "concode_elem_sep", "Crypto", "getEncryptionCrypto", "concode_elem_sep", "void", "setRelationships", "concode_elem_sep", "SignatureProperties", "getSignatureProperties", "concode_elem_sep", "void", "setSignatureProperties", "concode_elem_sep", "void", "setRealmParser", "concode_elem_sep", "String", "getIssuer", "concode_elem_sep", "void", "setSignatureCryptoProperties", "concode_elem_sep", "void", "setSignatureCrypto", "concode_elem_sep", "IdentityMapper", "getIdentityMapper", "concode_elem_sep", "void", "setValidateUseKey", "concode_elem_sep", "void", "configureProperties", "concode_elem_sep", "void", "setEncryptionCrypto", "concode_elem_sep", "RealmParser", "getRealmParser", "concode_elem_sep", "String", "getSignatureUsername", "concode_elem_sep", "void", "setIssuer", "concode_elem_sep", "CallbackHandler", "getCallbackHandler", "concode_elem_sep", "void", "setEncryptionCryptoProperties", "concode_elem_sep", "void", "setBus"]}
{"code": "void function ( ) { RPCBlockReadRequest loc0 = new RPCBlockReadRequest ( BLOCK_ID , OFFSET , LENGTH , LOCK_ID , SESSION_ID ) ; int loc1 = loc0 . getEncodedLength ( ) ; loc0 . encode ( mBuffer ) ; Assert . assertEquals ( loc1 , mBuffer . readableBytes ( ) ) ; }", "nl": "tests the rpcblockreadrequest #getencodedlength method . concode_field_sep long OFFSET concode_elem_sep long LOCK_ID concode_elem_sep long SESSION_ID concode_elem_sep long BLOCK_ID concode_elem_sep ByteBuf mBuffer concode_elem_sep long LENGTH concode_field_sep void invalidLength concode_elem_sep void assertInvalid concode_elem_sep void encodeDecode concode_elem_sep void before concode_elem_sep void validLength concode_elem_sep void assertValid concode_elem_sep void assertValid concode_elem_sep void negativeOffset concode_elem_sep void validate", "code_tokens": ["void", "function", "(", ")", "{", "RPCBlockReadRequest", "loc0", "=", "new", "RPCBlockReadRequest", "(", "BLOCK_ID", ",", "OFFSET", ",", "LENGTH", ",", "LOCK_ID", ",", "SESSION_ID", ")", ";", "int", "loc1", "=", "loc0", ".", "getEncodedLength", "(", ")", ";", "loc0", ".", "encode", "(", "mBuffer", ")", ";", "Assert", ".", "assertEquals", "(", "loc1", ",", "mBuffer", ".", "readableBytes", "(", ")", ")", ";", "}"], "nl_tokens": ["tests", "the", "rpcblockreadrequest", "#getencodedlength method . concode_field_sep long OFFSET concode_elem_sep long LOCK_ID concode_elem_sep long SESSION_ID concode_elem_sep long BLOCK_ID concode_elem_sep ByteBuf mBuffer concode_elem_sep long LENGTH concode_field_sep void invalidLength concode_elem_sep void assertInvalid concode_elem_sep void encodeDecode concode_elem_sep void before concode_elem_sep void validLength concode_elem_sep void assertValid concode_elem_sep void assertValid concode_elem_sep void negativeOffset concode_elem_sep void validate"]}
{"code": "void function ( Node arg0 ) { closed . removeValue ( arg0 , false ) ; }", "nl": "remove a node from the closed list concode_field_sep Node parent concode_elem_sep float cost concode_elem_sep Array closed concode_elem_sep SortedList open concode_elem_sep float heuristic concode_elem_sep int maxSearchDistance concode_elem_sep Node[][] nodes concode_elem_sep boolean allowDiagMovement concode_elem_sep int depth concode_elem_sep int x concode_elem_sep Array list concode_elem_sep int y concode_elem_sep TileBasedMap map concode_field_sep void add concode_elem_sep Node getFirstInOpen concode_elem_sep boolean inOpenList concode_elem_sep void clear concode_elem_sep boolean inClosedList concode_elem_sep int compareTo concode_elem_sep void addToClosed concode_elem_sep void addToOpen concode_elem_sep void remove concode_elem_sep boolean contains concode_elem_sep boolean isValidLocation concode_elem_sep float getMovementCost concode_elem_sep int size concode_elem_sep float getHeuristicCost concode_elem_sep int setParent concode_elem_sep Path findPath concode_elem_sep void removeFromOpen concode_elem_sep Object first", "code_tokens": ["void", "function", "(", "Node", "arg0", ")", "{", "closed", ".", "removeValue", "(", "arg0", ",", "false", ")", ";", "}"], "nl_tokens": ["remove", "a", "node", "from", "the", "closed", "list", "concode_field_sep", "Node", "parent", "concode_elem_sep", "float", "cost", "concode_elem_sep", "Array", "closed", "concode_elem_sep", "SortedList", "open", "concode_elem_sep", "float", "heuristic", "concode_elem_sep", "int", "maxSearchDistance", "concode_elem_sep", "Node", "[", "]", "[", "]", "nodes", "concode_elem_sep", "boolean", "allowDiagMovement", "concode_elem_sep", "int", "depth", "concode_elem_sep", "int", "x", "concode_elem_sep", "Array", "list", "concode_elem_sep", "int", "y", "concode_elem_sep", "TileBasedMap", "map", "concode_field_sep", "void", "add", "concode_elem_sep", "Node", "getFirstInOpen", "concode_elem_sep", "boolean", "inOpenList", "concode_elem_sep", "void", "clear", "concode_elem_sep", "boolean", "inClosedList", "concode_elem_sep", "int", "compareTo", "concode_elem_sep", "void", "addToClosed", "concode_elem_sep", "void", "addToOpen", "concode_elem_sep", "void", "remove", "concode_elem_sep", "boolean", "contains", "concode_elem_sep", "boolean", "isValidLocation", "concode_elem_sep", "float", "getMovementCost", "concode_elem_sep", "int", "size", "concode_elem_sep", "float", "getHeuristicCost", "concode_elem_sep", "int", "setParent", "concode_elem_sep", "Path", "findPath", "concode_elem_sep", "void", "removeFromOpen", "concode_elem_sep", "Object", "first"]}
{"code": "boolean function ( ) { return ( this . properties . getProxy ( ) != null && this . properties . getProxy ( ) . getAuth ( ) != null && this . properties . getProxy ( ) . getAuth ( ) . getUsername ( ) != null && this . properties . getProxy ( ) . getAuth ( ) . getPassword ( ) != null ) ; }", "nl": "check if the proxy setting has username/password set . concode_field_sep List<RemoteRepository> remoteRepositories concode_elem_sep Log log concode_elem_sep String DEFAULT_CONTENT_TYPE concode_elem_sep RepositorySystem repositorySystem concode_elem_sep MavenProperties properties concode_elem_sep Authentication authentication concode_field_sep FileSystemResource toResource concode_elem_sep Artifact toArtifact concode_elem_sep Resource resolve concode_elem_sep RepositorySystem newRepositorySystem concode_elem_sep DefaultRepositorySystemSession newRepositorySystemSession concode_elem_sep void validateCoordinates concode_elem_sep boolean isProxyEnabled", "code_tokens": ["boolean", "function", "(", ")", "{", "return", "(", "this", ".", "properties", ".", "getProxy", "(", ")", "!=", "null", "&", "&", "this", ".", "properties", ".", "getProxy", "(", ")", ".", "getAuth", "(", ")", "!=", "null", "&", "&", "this", ".", "properties", ".", "getProxy", "(", ")", ".", "getAuth", "(", ")", ".", "getUsername", "(", ")", "!=", "null", "&", "&", "this", ".", "properties", ".", "getProxy", "(", ")", ".", "getAuth", "(", ")", ".", "getPassword", "(", ")", "!=", "null", ")", ";", "}"], "nl_tokens": ["check", "if", "the", "proxy", "setting", "has", "username", "/", "password", "set", ".", "concode_field_sep", "List", "<", "RemoteRepository", ">", "remoteRepositories", "concode_elem_sep", "Log", "log", "concode_elem_sep", "String", "DEFAULT_CONTENT_TYPE", "concode_elem_sep", "RepositorySystem", "repositorySystem", "concode_elem_sep", "MavenProperties", "properties", "concode_elem_sep", "Authentication", "authentication", "concode_field_sep", "FileSystemResource", "toResource", "concode_elem_sep", "Artifact", "toArtifact", "concode_elem_sep", "Resource", "resolve", "concode_elem_sep", "RepositorySystem", "newRepositorySystem", "concode_elem_sep", "DefaultRepositorySystemSession", "newRepositorySystemSession", "concode_elem_sep", "void", "validateCoordinates", "concode_elem_sep", "boolean", "isProxyEnabled"]}
{"code": "int function ( Object arg0 ) { int loc0 = _mask ; int loc1 = System . identityHashCode ( arg0 ) % loc0 & loc0 ; Object [ ] loc2 = _keys ; while ( true ) { Object loc3 = loc2 [ loc1 ] ; if ( loc3 == null ) return NULL ; else if ( loc3 == arg0 ) return _values [ loc1 ] ; loc1 = ( loc1 + 1 ) % loc0 ; } }", "nl": "puts a new value in the property table with the appropriate flags concode_field_sep Object DELETED concode_elem_sep int _size concode_elem_sep int[] _values concode_elem_sep int _mask concode_elem_sep int NULL concode_elem_sep Object[] _keys concode_field_sep int size concode_elem_sep void clear concode_elem_sep void resize concode_elem_sep String toString concode_elem_sep int put concode_elem_sep int remove", "code_tokens": ["int", "function", "(", "Object", "arg0", ")", "{", "int", "loc0", "=", "_mask", ";", "int", "loc1", "=", "System", ".", "identityHashCode", "(", "arg0", ")", "%", "loc0", "&", "loc0", ";", "Object", "[", "]", "loc2", "=", "_keys", ";", "while", "(", "true", ")", "{", "Object", "loc3", "=", "loc2", "[", "loc1", "]", ";", "if", "(", "loc3", "==", "null", ")", "return", "NULL", ";", "else", "if", "(", "loc3", "==", "arg0", ")", "return", "_values", "[", "loc1", "]", ";", "loc1", "=", "(", "loc1", "+", "1", ")", "%", "loc0", ";", "}", "}"], "nl_tokens": ["puts", "a", "new", "value", "in", "the", "property", "table", "with", "the", "appropriate", "flags", "concode_field_sep", "Object", "DELETED", "concode_elem_sep", "int", "_size", "concode_elem_sep", "int", "[", "]", "_values", "concode_elem_sep", "int", "_mask", "concode_elem_sep", "int", "NULL", "concode_elem_sep", "Object", "[", "]", "_keys", "concode_field_sep", "int", "size", "concode_elem_sep", "void", "clear", "concode_elem_sep", "void", "resize", "concode_elem_sep", "String", "toString", "concode_elem_sep", "int", "put", "concode_elem_sep", "int", "remove"]}
{"code": "void function ( Bundle arg0 ) { }", "nl": "called to ask the presenter to save its current dynamic state , so itcan later be reconstructed in a new instance of its process is restarted . concode_field_sep T mVista concode_field_sep void onDestroy concode_elem_sep void onStart concode_elem_sep void restoreState concode_elem_sep void stop concode_elem_sep void start concode_elem_sep T getVista concode_elem_sep void onStop", "code_tokens": ["void", "function", "(", "Bundle", "arg0", ")", "{", "}"], "nl_tokens": ["called", "to", "ask", "the", "presenter", "to", "save", "its", "current", "dynamic", "state", ",", "so", "itcan", "later", "be", "reconstructed", "in", "a", "new", "instance", "of", "its", "process", "is", "restarted", ".", "concode_field_sep", "T", "mVista", "concode_field_sep", "void", "onDestroy", "concode_elem_sep", "void", "onStart", "concode_elem_sep", "void", "restoreState", "concode_elem_sep", "void", "stop", "concode_elem_sep", "void", "start", "concode_elem_sep", "T", "getVista", "concode_elem_sep", "void", "onStop"]}
{"code": "void function ( DenseMatrix64F arg0 ) { this . seed = arg0 ; }", "nl": "sets the value of the vector to use in the start of the iterations . concode_field_sep DenseMatrix64F q1 concode_elem_sep int maxIterations concode_elem_sep DenseMatrix64F q2 concode_elem_sep double tol concode_elem_sep DenseMatrix64F B concode_elem_sep DenseMatrix64F seed concode_elem_sep DenseMatrix64F q0 concode_field_sep DenseMatrix64F getEigenVector concode_elem_sep boolean computeShiftDirect concode_elem_sep void setOptions concode_elem_sep void initPower concode_elem_sep boolean computeShiftInvert concode_elem_sep boolean computeDirect concode_elem_sep boolean checkConverged", "code_tokens": ["void", "function", "(", "DenseMatrix64F", "arg0", ")", "{", "this", ".", "seed", "=", "arg0", ";", "}"], "nl_tokens": ["sets", "the", "value", "of", "the", "vector", "to", "use", "in", "the", "start", "of", "the", "iterations", ".", "concode_field_sep", "DenseMatrix64F", "q1", "concode_elem_sep", "int", "maxIterations", "concode_elem_sep", "DenseMatrix64F", "q2", "concode_elem_sep", "double", "tol", "concode_elem_sep", "DenseMatrix64F", "B", "concode_elem_sep", "DenseMatrix64F", "seed", "concode_elem_sep", "DenseMatrix64F", "q0", "concode_field_sep", "DenseMatrix64F", "getEigenVector", "concode_elem_sep", "boolean", "computeShiftDirect", "concode_elem_sep", "void", "setOptions", "concode_elem_sep", "void", "initPower", "concode_elem_sep", "boolean", "computeShiftInvert", "concode_elem_sep", "boolean", "computeDirect", "concode_elem_sep", "boolean", "checkConverged"]}
{"code": "void function ( String arg0 ) { this . filepath = arg0 ; }", "nl": "sets the value of the filepath property . concode_field_sep String testData concode_elem_sep String method concode_elem_sep String filepath concode_elem_sep String step concode_elem_sep String stepResult concode_elem_sep String time concode_field_sep void setMethod concode_elem_sep void setStepResult concode_elem_sep String getTime concode_elem_sep String getStep concode_elem_sep String getFilepath concode_elem_sep String getTestData concode_elem_sep String getMethod concode_elem_sep String getStepResult concode_elem_sep void setStep concode_elem_sep void setTestData concode_elem_sep void setTime", "code_tokens": ["void", "function", "(", "String", "arg0", ")", "{", "this", ".", "filepath", "=", "arg0", ";", "}"], "nl_tokens": ["sets", "the", "value", "of", "the", "filepath", "property", ".", "concode_field_sep", "String", "testData", "concode_elem_sep", "String", "method", "concode_elem_sep", "String", "filepath", "concode_elem_sep", "String", "step", "concode_elem_sep", "String", "stepResult", "concode_elem_sep", "String", "time", "concode_field_sep", "void", "setMethod", "concode_elem_sep", "void", "setStepResult", "concode_elem_sep", "String", "getTime", "concode_elem_sep", "String", "getStep", "concode_elem_sep", "String", "getFilepath", "concode_elem_sep", "String", "getTestData", "concode_elem_sep", "String", "getMethod", "concode_elem_sep", "String", "getStepResult", "concode_elem_sep", "void", "setStep", "concode_elem_sep", "void", "setTestData", "concode_elem_sep", "void", "setTime"]}
{"code": "String function ( ) { return feedId ; }", "nl": "gets the feed id . concode_field_sep String feedId concode_elem_sep String destFileName concode_elem_sep String testId concode_field_sep void setDestFileName concode_elem_sep void setFeedId concode_elem_sep String toString concode_elem_sep void setTestId concode_elem_sep String getTestId concode_elem_sep String getDestFileName", "code_tokens": ["String", "function", "(", ")", "{", "return", "feedId", ";", "}"], "nl_tokens": ["gets", "the", "feed", "id", ".", "concode_field_sep", "String", "feedId", "concode_elem_sep", "String", "destFileName", "concode_elem_sep", "String", "testId", "concode_field_sep", "void", "setDestFileName", "concode_elem_sep", "void", "setFeedId", "concode_elem_sep", "String", "toString", "concode_elem_sep", "void", "setTestId", "concode_elem_sep", "String", "getTestId", "concode_elem_sep", "String", "getDestFileName"]}
{"code": "List < RSSItem > function ( ) { return this . _items ; }", "nl": "all get methods concode_field_sep String _language concode_elem_sep String _link concode_elem_sep String _rss_link concode_elem_sep String _title concode_elem_sep String _image concode_elem_sep List<RSSItem> _items concode_elem_sep String _description concode_field_sep void set_image concode_elem_sep String getLink concode_elem_sep String getLanguage concode_elem_sep String getTitle concode_elem_sep void setItems concode_elem_sep String get_image concode_elem_sep String getDescription concode_elem_sep String getRSSLink", "code_tokens": ["List", "<", "RSSItem", ">", "function", "(", ")", "{", "return", "this", ".", "_items", ";", "}"], "nl_tokens": ["all", "get", "methods", "concode_field_sep", "String", "_language", "concode_elem_sep", "String", "_link", "concode_elem_sep", "String", "_rss_link", "concode_elem_sep", "String", "_title", "concode_elem_sep", "String", "_image", "concode_elem_sep", "List", "<", "RSSItem", ">", "_items", "concode_elem_sep", "String", "_description", "concode_field_sep", "void", "set_image", "concode_elem_sep", "String", "getLink", "concode_elem_sep", "String", "getLanguage", "concode_elem_sep", "String", "getTitle", "concode_elem_sep", "void", "setItems", "concode_elem_sep", "String", "get_image", "concode_elem_sep", "String", "getDescription", "concode_elem_sep", "String", "getRSSLink"]}
{"code": "PolicyPublisher function ( ) { return policyPublisher ; }", "nl": "this method returns policy publisher concode_field_sep PolicyPublisher policyPublisher concode_elem_sep PolicyDataStore policyDataStore concode_elem_sep Log log concode_elem_sep EntitlementDataFinder entitlementDataFinder concode_elem_sep PolicyStoreManager policyStoreManager concode_elem_sep ConcurrentHashMap<String,EntitlementAdminEngine> entitlementAdminEngines concode_elem_sep PolicyVersionManager versionManager concode_elem_sep PAPPolicyStoreManager papPolicyStoreManager concode_elem_sep Set<PAPStatusDataHandler> papStatusDataHandlers concode_elem_sep Object lock concode_field_sep PolicyVersionManager getVersionManager concode_elem_sep PolicyStoreManager getPolicyStoreManager concode_elem_sep EntitlementDataFinder getEntitlementDataFinder concode_elem_sep Set<PAPStatusDataHandler> getPapStatusDataHandlers concode_elem_sep PAPPolicyStoreManager getPapPolicyStoreManager concode_elem_sep PolicyDataStore getPolicyDataStore concode_elem_sep EntitlementAdminEngine getInstance", "code_tokens": ["PolicyPublisher", "function", "(", ")", "{", "return", "policyPublisher", ";", "}"], "nl_tokens": ["this", "method", "returns", "policy", "publisher", "concode_field_sep", "PolicyPublisher", "policyPublisher", "concode_elem_sep", "PolicyDataStore", "policyDataStore", "concode_elem_sep", "Log", "log", "concode_elem_sep", "EntitlementDataFinder", "entitlementDataFinder", "concode_elem_sep", "PolicyStoreManager", "policyStoreManager", "concode_elem_sep", "ConcurrentHashMap", "<", "String", ",", "EntitlementAdminEngine", ">", "entitlementAdminEngines", "concode_elem_sep", "PolicyVersionManager", "versionManager", "concode_elem_sep", "PAPPolicyStoreManager", "papPolicyStoreManager", "concode_elem_sep", "Set", "<", "PAPStatusDataHandler", ">", "papStatusDataHandlers", "concode_elem_sep", "Object", "lock", "concode_field_sep", "PolicyVersionManager", "getVersionManager", "concode_elem_sep", "PolicyStoreManager", "getPolicyStoreManager", "concode_elem_sep", "EntitlementDataFinder", "getEntitlementDataFinder", "concode_elem_sep", "Set", "<", "PAPStatusDataHandler", ">", "getPapStatusDataHandlers", "concode_elem_sep", "PAPPolicyStoreManager", "getPapPolicyStoreManager", "concode_elem_sep", "PolicyDataStore", "getPolicyDataStore", "concode_elem_sep", "EntitlementAdminEngine", "getInstance"]}
{"code": "double function ( ) { BlockPos loc0 = getNextBlock ( 1 ) ; if ( loc0 == null ) { return 9999 ; } else { return Math . sqrt ( mob . getDistanceSqToCenter ( loc0 ) ) ; } }", "nl": "returns distance to closest block . if none is found , returns 9999 . concode_field_sep EntityMobWithInventory mob concode_elem_sep World world concode_elem_sep int itemQuantity concode_elem_sep Item itemDropped concode_elem_sep int range concode_elem_sep BlockPos nextBlock concode_field_sep boolean reachedBlock concode_elem_sep void storeItemDroppedDetails concode_elem_sep boolean isCorrectBlock concode_elem_sep void obtainItems concode_elem_sep void moveToBlock concode_elem_sep void setCurrentItem concode_elem_sep void nextStep concode_elem_sep BlockPos getNextBlock", "code_tokens": ["double", "function", "(", ")", "{", "BlockPos", "loc0", "=", "getNextBlock", "(", "1", ")", ";", "if", "(", "loc0", "==", "null", ")", "{", "return", "9999", ";", "}", "else", "{", "return", "Math", ".", "sqrt", "(", "mob", ".", "getDistanceSqToCenter", "(", "loc0", ")", ")", ";", "}", "}"], "nl_tokens": ["returns", "distance", "to", "closest", "block", ".", "if", "none", "is", "found", ",", "returns", "9999", ".", "concode_field_sep", "EntityMobWithInventory", "mob", "concode_elem_sep", "World", "world", "concode_elem_sep", "int", "itemQuantity", "concode_elem_sep", "Item", "itemDropped", "concode_elem_sep", "int", "range", "concode_elem_sep", "BlockPos", "nextBlock", "concode_field_sep", "boolean", "reachedBlock", "concode_elem_sep", "void", "storeItemDroppedDetails", "concode_elem_sep", "boolean", "isCorrectBlock", "concode_elem_sep", "void", "obtainItems", "concode_elem_sep", "void", "moveToBlock", "concode_elem_sep", "void", "setCurrentItem", "concode_elem_sep", "void", "nextStep", "concode_elem_sep", "BlockPos", "getNextBlock"]}
{"code": "File function ( File arg0 ) { try { return arg0 . getCanonicalFile ( ) ; } catch ( IOException loc0 ) { return arg0 . getAbsoluteFile ( ) ; } }", "nl": "returns the exact path for a file . this path will be the canonical path unless an exception is thrown in which case it will be the absolute path . concode_field_sep int KB concode_elem_sep int MB concode_elem_sep int GB concode_field_sep File resolveParameter concode_elem_sep int convertSizeToInt concode_elem_sep long convertSizeToLong concode_elem_sep byte[] readContent concode_elem_sep String readContent concode_elem_sep void writeContent concode_elem_sep long folderSize concode_elem_sep void copy concode_elem_sep boolean delete concode_elem_sep String getRelativePath", "code_tokens": ["File", "function", "(", "File", "arg0", ")", "{", "try", "{", "return", "arg0", ".", "getCanonicalFile", "(", ")", ";", "}", "catch", "(", "IOException", "loc0", ")", "{", "return", "arg0", ".", "getAbsoluteFile", "(", ")", ";", "}", "}"], "nl_tokens": ["returns", "the", "exact", "path", "for", "a", "file", ".", "this", "path", "will", "be", "the", "canonical", "path", "unless", "an", "exception", "is", "thrown", "in", "which", "case", "it", "will", "be", "the", "absolute", "path", ".", "concode_field_sep", "int", "KB", "concode_elem_sep", "int", "MB", "concode_elem_sep", "int", "GB", "concode_field_sep", "File", "resolveParameter", "concode_elem_sep", "int", "convertSizeToInt", "concode_elem_sep", "long", "convertSizeToLong", "concode_elem_sep", "byte", "[", "]", "readContent", "concode_elem_sep", "String", "readContent", "concode_elem_sep", "void", "writeContent", "concode_elem_sep", "long", "folderSize", "concode_elem_sep", "void", "copy", "concode_elem_sep", "boolean", "delete", "concode_elem_sep", "String", "getRelativePath"]}
{"code": "void function ( ) { bufferSize = 0 ; }", "nl": "clear the buffer . concode_field_sep byte[] buffer concode_elem_sep int INITIAL_BUFFER_CAPACITY concode_elem_sep int bufferSize concode_field_sep void add concode_elem_sep byte[] toArray concode_elem_sep boolean isEmpty concode_elem_sep String toString", "code_tokens": ["void", "function", "(", ")", "{", "bufferSize", "=", "0", ";", "}"], "nl_tokens": ["clear", "the", "buffer", ".", "concode_field_sep", "byte", "[", "]", "buffer", "concode_elem_sep", "int", "INITIAL_BUFFER_CAPACITY", "concode_elem_sep", "int", "bufferSize", "concode_field_sep", "void", "add", "concode_elem_sep", "byte", "[", "]", "toArray", "concode_elem_sep", "boolean", "isEmpty", "concode_elem_sep", "String", "toString"]}
{"code": "void function ( View arg0 , AccessibilityEvent arg1 ) { IMPL . onInitializeAccessibilityEvent ( DEFAULT_DELEGATE , arg0 , arg1 ) ; }", "nl": "initializes an accessibilityevent with information about thethe host view which is the event source . the default implementation behaves as viewcompat #oninitializeaccessibilityevent view v , accessibilityevent event viewcompat #oninitalizeaccessibilityevent view v , accessibilityevent event forthe case of no accessibility delegate been set . concode_field_sep AccessibilityDelegateImpl IMPL concode_elem_sep Object DEFAULT_DELEGATE concode_elem_sep Object mBridge concode_field_sep Object newAccessiblityDelegateDefaultImpl concode_elem_sep Object newAccessiblityDelegateDefaultImpl concode_elem_sep boolean dispatchPopulateAccessibilityEvent concode_elem_sep boolean dispatchPopulateAccessibilityEvent concode_elem_sep boolean dispatchPopulateAccessibilityEvent concode_elem_sep Object getBridge concode_elem_sep void sendAccessibilityEventUnchecked concode_elem_sep void sendAccessibilityEventUnchecked concode_elem_sep void sendAccessibilityEventUnchecked concode_elem_sep void onPopulateAccessibilityEvent concode_elem_sep void onPopulateAccessibilityEvent concode_elem_sep void onPopulateAccessibilityEvent concode_elem_sep boolean onRequestSendAccessibilityEvent concode_elem_sep boolean onRequestSendAccessibilityEvent concode_elem_sep boolean onRequestSendAccessibilityEvent concode_elem_sep void onInitializeAccessibilityNodeInfo concode_elem_sep void onInitializeAccessibilityNodeInfo concode_elem_sep void onInitializeAccessibilityNodeInfo concode_elem_sep void sendAccessibilityEvent concode_elem_sep void sendAccessibilityEvent concode_elem_sep void sendAccessibilityEvent concode_elem_sep Object newAccessiblityDelegateBridge concode_elem_sep Object newAccessiblityDelegateBridge", "code_tokens": ["void", "function", "(", "View", "arg0", ",", "AccessibilityEvent", "arg1", ")", "{", "IMPL", ".", "onInitializeAccessibilityEvent", "(", "DEFAULT_DELEGATE", ",", "arg0", ",", "arg1", ")", ";", "}"], "nl_tokens": ["initializes", "an", "accessibilityevent", "with", "information", "about", "thethe", "host", "view", "which", "is", "the", "event", "source", ".", "the", "default", "implementation", "behaves", "as", "viewcompat", "#oninitializeaccessibilityevent view v , accessibilityevent event viewcompat #oninitalizeaccessibilityevent view v , accessibilityevent event forthe case of no accessibility delegate been set . concode_field_sep AccessibilityDelegateImpl IMPL concode_elem_sep Object DEFAULT_DELEGATE concode_elem_sep Object mBridge concode_field_sep Object newAccessiblityDelegateDefaultImpl concode_elem_sep Object newAccessiblityDelegateDefaultImpl concode_elem_sep boolean dispatchPopulateAccessibilityEvent concode_elem_sep boolean dispatchPopulateAccessibilityEvent concode_elem_sep boolean dispatchPopulateAccessibilityEvent concode_elem_sep Object getBridge concode_elem_sep void sendAccessibilityEventUnchecked concode_elem_sep void sendAccessibilityEventUnchecked concode_elem_sep void sendAccessibilityEventUnchecked concode_elem_sep void onPopulateAccessibilityEvent concode_elem_sep void onPopulateAccessibilityEvent concode_elem_sep void onPopulateAccessibilityEvent concode_elem_sep boolean onRequestSendAccessibilityEvent concode_elem_sep boolean onRequestSendAccessibilityEvent concode_elem_sep boolean onRequestSendAccessibilityEvent concode_elem_sep void onInitializeAccessibilityNodeInfo concode_elem_sep void onInitializeAccessibilityNodeInfo concode_elem_sep void onInitializeAccessibilityNodeInfo concode_elem_sep void sendAccessibilityEvent concode_elem_sep void sendAccessibilityEvent concode_elem_sep void sendAccessibilityEvent concode_elem_sep Object newAccessiblityDelegateBridge concode_elem_sep Object newAccessiblityDelegateBridge"]}
{"code": "boolean function ( Authentication arg0 , Serializable arg1 , String arg2 , Object arg3 ) { throw new UnsupportedOperationException ( ) ; }", "nl": "implementation of permissionevaluator . we do not support this method call . concode_field_sep Log log concode_field_sep Set<String> getGrantedAuthorities", "code_tokens": ["boolean", "function", "(", "Authentication", "arg0", ",", "Serializable", "arg1", ",", "String", "arg2", ",", "Object", "arg3", ")", "{", "throw", "new", "UnsupportedOperationException", "(", ")", ";", "}"], "nl_tokens": ["implementation", "of", "permissionevaluator", ".", "we", "do", "not", "support", "this", "method", "call", ".", "concode_field_sep", "Log", "log", "concode_field_sep", "Set", "<", "String", ">", "getGrantedAuthorities"]}
{"code": "String function ( ) { return mSubjectSecondary ; }", "nl": "get the secondary subject of this certificate either cn or ou if primary subject is o , empty otherwise concode_field_sep X509Certificate mCert concode_elem_sep String mAlias concode_elem_sep String mSubjectSecondary concode_elem_sep String mSubjectPrimary concode_elem_sep String mString concode_field_sep String getSubjectPrimary concode_elem_sep X509Certificate getCertificate concode_elem_sep List<String> getSubjectAltNames concode_elem_sep String toString concode_elem_sep int compareTo concode_elem_sep String getAlias", "code_tokens": ["String", "function", "(", ")", "{", "return", "mSubjectSecondary", ";", "}"], "nl_tokens": ["get", "the", "secondary", "subject", "of", "this", "certificate", "either", "cn", "or", "ou", "if", "primary", "subject", "is", "o", ",", "empty", "otherwise", "concode_field_sep", "X509Certificate", "mCert", "concode_elem_sep", "String", "mAlias", "concode_elem_sep", "String", "mSubjectSecondary", "concode_elem_sep", "String", "mSubjectPrimary", "concode_elem_sep", "String", "mString", "concode_field_sep", "String", "getSubjectPrimary", "concode_elem_sep", "X509Certificate", "getCertificate", "concode_elem_sep", "List", "<", "String", ">", "getSubjectAltNames", "concode_elem_sep", "String", "toString", "concode_elem_sep", "int", "compareTo", "concode_elem_sep", "String", "getAlias"]}
{"code": "Matrix function ( Matrix arg0 ) { return ( transpose ( cofactor ( arg0 ) ) . multiplyByConstant ( 1.0 / determinant ( arg0 ) ) ) ; }", "nl": "inverse of a matrix - a-1 a = i where i is the identity matrix a matrix that have inverse is called non-singular or invertible . if the matrix does not have inverse it is called singular . for a singular matrix the values of the inverted matrix are either nan or infinity only square matrices have inverse and the following method will throw exception if the matrix is not square . concode_field_sep PlaceHolder placeHolder concode_field_sep int changeSign concode_elem_sep Matrix add concode_elem_sep Matrix cofactor concode_elem_sep Matrix subtract concode_elem_sep Matrix transpose concode_elem_sep Matrix multiply concode_elem_sep Matrix createSubMatrix concode_elem_sep double determinant", "code_tokens": ["Matrix", "function", "(", "Matrix", "arg0", ")", "{", "return", "(", "transpose", "(", "cofactor", "(", "arg0", ")", ")", ".", "multiplyByConstant", "(", "1.0", "/", "determinant", "(", "arg0", ")", ")", ")", ";", "}"], "nl_tokens": ["inverse", "of", "a", "matrix", "-", "a", "-", "1", "a", "=", "i", "where", "i", "is", "the", "identity", "matrix", "a", "matrix", "that", "have", "inverse", "is", "called", "non", "-", "singular", "or", "invertible", ".", "if", "the", "matrix", "does", "not", "have", "inverse", "it", "is", "called", "singular", ".", "for", "a", "singular", "matrix", "the", "values", "of", "the", "inverted", "matrix", "are", "either", "nan", "or", "infinity", "only", "square", "matrices", "have", "inverse", "and", "the", "following", "method", "will", "throw", "exception", "if", "the", "matrix", "is", "not", "square", ".", "concode_field_sep", "PlaceHolder", "placeHolder", "concode_field_sep", "int", "changeSign", "concode_elem_sep", "Matrix", "add", "concode_elem_sep", "Matrix", "cofactor", "concode_elem_sep", "Matrix", "subtract", "concode_elem_sep", "Matrix", "transpose", "concode_elem_sep", "Matrix", "multiply", "concode_elem_sep", "Matrix", "createSubMatrix", "concode_elem_sep", "double", "determinant"]}
{"code": "List < Object > function ( int arg0 ) { Object loc0 = values . get ( arg0 ) ; if ( loc0 instanceof List ) { return ( List ) loc0 ; } else { throw new IllegalStateException ( ) ; } }", "nl": "returns result value as array . concode_field_sep String NAME concode_elem_sep String FAULT concode_elem_sep String MEMBER concode_elem_sep TimeZone tz concode_elem_sep ArrayList<Object> values concode_elem_sep String VALUE concode_field_sep String getStringValue concode_elem_sep ArrayList<Object> parseArray concode_elem_sep List getValues concode_elem_sep Map<String,Object> getStructValue concode_elem_sep Double getDoubleValue concode_elem_sep int getValueCount concode_elem_sep void parse concode_elem_sep Integer getIntegerValue concode_elem_sep Boolean getBooleanValue concode_elem_sep HashMap<String,Object> parseStruct concode_elem_sep Object parseValue concode_elem_sep byte[] getBinaryValue concode_elem_sep Date getDateValue", "code_tokens": ["List", "<", "Object", ">", "function", "(", "int", "arg0", ")", "{", "Object", "loc0", "=", "values", ".", "get", "(", "arg0", ")", ";", "if", "(", "loc0", "instanceof", "List", ")", "{", "return", "(", "List", ")", "loc0", ";", "}", "else", "{", "throw", "new", "IllegalStateException", "(", ")", ";", "}", "}"], "nl_tokens": ["returns", "result", "value", "as", "array", ".", "concode_field_sep", "String", "NAME", "concode_elem_sep", "String", "FAULT", "concode_elem_sep", "String", "MEMBER", "concode_elem_sep", "TimeZone", "tz", "concode_elem_sep", "ArrayList", "<", "Object", ">", "values", "concode_elem_sep", "String", "VALUE", "concode_field_sep", "String", "getStringValue", "concode_elem_sep", "ArrayList", "<", "Object", ">", "parseArray", "concode_elem_sep", "List", "getValues", "concode_elem_sep", "Map", "<", "String", ",", "Object", ">", "getStructValue", "concode_elem_sep", "Double", "getDoubleValue", "concode_elem_sep", "int", "getValueCount", "concode_elem_sep", "void", "parse", "concode_elem_sep", "Integer", "getIntegerValue", "concode_elem_sep", "Boolean", "getBooleanValue", "concode_elem_sep", "HashMap", "<", "String", ",", "Object", ">", "parseStruct", "concode_elem_sep", "Object", "parseValue", "concode_elem_sep", "byte", "[", "]", "getBinaryValue", "concode_elem_sep", "Date", "getDateValue"]}
{"code": "ListIterator < BasicLogRecord > function ( ) { flush ( ) ; return new LogIterator ( currentblk ) ; }", "nl": "returns an iterator for the log records , which will be returned in reverse order starting with the most recent . concode_field_sep int LAST_POS concode_elem_sep int FIRST_POS concode_elem_sep Page mypage concode_elem_sep String logfile concode_elem_sep int currentpos concode_elem_sep Block currentblk concode_field_sep int getFirstRecordPosition concode_elem_sep void setFirstRecordPosition concode_elem_sep void flush concode_elem_sep void flush concode_elem_sep int size concode_elem_sep void appendVal concode_elem_sep void appendNewBlock concode_elem_sep int currentLSN concode_elem_sep void finalizeRecord concode_elem_sep void setLastRecordPosition concode_elem_sep int getLastRecordPosition concode_elem_sep int append", "code_tokens": ["ListIterator", "<", "BasicLogRecord", ">", "function", "(", ")", "{", "flush", "(", ")", ";", "return", "new", "LogIterator", "(", "currentblk", ")", ";", "}"], "nl_tokens": ["returns", "an", "iterator", "for", "the", "log", "records", ",", "which", "will", "be", "returned", "in", "reverse", "order", "starting", "with", "the", "most", "recent", ".", "concode_field_sep", "int", "LAST_POS", "concode_elem_sep", "int", "FIRST_POS", "concode_elem_sep", "Page", "mypage", "concode_elem_sep", "String", "logfile", "concode_elem_sep", "int", "currentpos", "concode_elem_sep", "Block", "currentblk", "concode_field_sep", "int", "getFirstRecordPosition", "concode_elem_sep", "void", "setFirstRecordPosition", "concode_elem_sep", "void", "flush", "concode_elem_sep", "void", "flush", "concode_elem_sep", "int", "size", "concode_elem_sep", "void", "appendVal", "concode_elem_sep", "void", "appendNewBlock", "concode_elem_sep", "int", "currentLSN", "concode_elem_sep", "void", "finalizeRecord", "concode_elem_sep", "void", "setLastRecordPosition", "concode_elem_sep", "int", "getLastRecordPosition", "concode_elem_sep", "int", "append"]}
{"code": "void function ( Collection arg0 , String arg1 ) { if ( CollectionUtils . isEmpty ( arg0 ) ) { throw new IllegalArgumentException ( arg1 ) ; } }", "nl": "assert that a collection has elements ; that is , it must not be null and must have at least one element.assert.notempty collection , `` collection must have elements '' ; concode_field_sep PlaceHolder placeHolder concode_field_sep void isTrue concode_elem_sep void isTrue concode_elem_sep void isAssignable concode_elem_sep void isAssignable concode_elem_sep void notNull concode_elem_sep void notNull concode_elem_sep void isNull concode_elem_sep void isNull concode_elem_sep void noNullElements concode_elem_sep void noNullElements concode_elem_sep void isInstanceOf concode_elem_sep void isInstanceOf concode_elem_sep void state concode_elem_sep void state", "code_tokens": ["void", "function", "(", "Collection", "arg0", ",", "String", "arg1", ")", "{", "if", "(", "CollectionUtils", ".", "isEmpty", "(", "arg0", ")", ")", "{", "throw", "new", "IllegalArgumentException", "(", "arg1", ")", ";", "}", "}"], "nl_tokens": ["assert", "that", "a", "collection", "has", "elements", ";", "that", "is", ",", "it", "must", "not", "be", "null", "and", "must", "have", "at", "least", "one", "element", ".", "assert", ".", "notempty", "collection", ",", "`", "`", "collection", "must", "have", "elements", "''", ";", "concode_field_sep", "PlaceHolder", "placeHolder", "concode_field_sep", "void", "isTrue", "concode_elem_sep", "void", "isTrue", "concode_elem_sep", "void", "isAssignable", "concode_elem_sep", "void", "isAssignable", "concode_elem_sep", "void", "notNull", "concode_elem_sep", "void", "notNull", "concode_elem_sep", "void", "isNull", "concode_elem_sep", "void", "isNull", "concode_elem_sep", "void", "noNullElements", "concode_elem_sep", "void", "noNullElements", "concode_elem_sep", "void", "isInstanceOf", "concode_elem_sep", "void", "isInstanceOf", "concode_elem_sep", "void", "state", "concode_elem_sep", "void", "state"]}
{"code": "ExtensionInfo function ( ) { return extensionInfo ; }", "nl": "get information about the language extension being compiled . concode_field_sep ExtensionInfo extensionInfo concode_elem_sep ClassFileLoader loader concode_elem_sep ErrorQueue eq concode_elem_sep Collection<JavaFileObject> outputFiles concode_elem_sep List<ExtensionInfo> allExtensions concode_elem_sep List<Job> jobs concode_field_sep Collection<JavaFileObject> outputFiles concode_elem_sep int outputWidth concode_elem_sep ClassFileLoader loader concode_elem_sep CodeWriter createCodeWriter concode_elem_sep CodeWriter createCodeWriter concode_elem_sep CodeWriter createCodeWriter concode_elem_sep CodeWriter createCodeWriter concode_elem_sep List<Job> jobs concode_elem_sep ErrorQueue errorQueue concode_elem_sep boolean useFullyQualifiedNames concode_elem_sep boolean compile concode_elem_sep Goal getGoal concode_elem_sep boolean compileFiles concode_elem_sep void addExtension concode_elem_sep boolean serializeClassInfo concode_elem_sep boolean runToGoal concode_elem_sep boolean validate concode_elem_sep List<ExtensionInfo> allExtensions", "code_tokens": ["ExtensionInfo", "function", "(", ")", "{", "return", "extensionInfo", ";", "}"], "nl_tokens": ["get", "information", "about", "the", "language", "extension", "being", "compiled", ".", "concode_field_sep", "ExtensionInfo", "extensionInfo", "concode_elem_sep", "ClassFileLoader", "loader", "concode_elem_sep", "ErrorQueue", "eq", "concode_elem_sep", "Collection", "<", "JavaFileObject", ">", "outputFiles", "concode_elem_sep", "List", "<", "ExtensionInfo", ">", "allExtensions", "concode_elem_sep", "List", "<", "Job", ">", "jobs", "concode_field_sep", "Collection", "<", "JavaFileObject", ">", "outputFiles", "concode_elem_sep", "int", "outputWidth", "concode_elem_sep", "ClassFileLoader", "loader", "concode_elem_sep", "CodeWriter", "createCodeWriter", "concode_elem_sep", "CodeWriter", "createCodeWriter", "concode_elem_sep", "CodeWriter", "createCodeWriter", "concode_elem_sep", "CodeWriter", "createCodeWriter", "concode_elem_sep", "List", "<", "Job", ">", "jobs", "concode_elem_sep", "ErrorQueue", "errorQueue", "concode_elem_sep", "boolean", "useFullyQualifiedNames", "concode_elem_sep", "boolean", "compile", "concode_elem_sep", "Goal", "getGoal", "concode_elem_sep", "boolean", "compileFiles", "concode_elem_sep", "void", "addExtension", "concode_elem_sep", "boolean", "serializeClassInfo", "concode_elem_sep", "boolean", "runToGoal", "concode_elem_sep", "boolean", "validate", "concode_elem_sep", "List", "<", "ExtensionInfo", ">", "allExtensions"]}
{"code": "ComplexNode function ( ) { return new ComplexNode ( ) ; }", "nl": "create an instance of complexnode concode_field_sep QName _ComplexNode_QNAME concode_field_sep RootNode createRootNode", "code_tokens": ["ComplexNode", "function", "(", ")", "{", "return", "new", "ComplexNode", "(", ")", ";", "}"], "nl_tokens": ["create", "an", "instance", "of", "complexnode", "concode_field_sep", "QName", "_ComplexNode_QNAME", "concode_field_sep", "RootNode", "createRootNode"]}
{"code": "T function ( ) { return mPayload ; }", "nl": "gets the payload of the node . concode_field_sep List<DirectedAcyclicGraphNode<T>> mParents concode_elem_sep List<DirectedAcyclicGraphNode<T>> mChildren concode_elem_sep T mPayload concode_field_sep List<DirectedAcyclicGraphNode<T>> getParents concode_elem_sep List<DirectedAcyclicGraphNode<T>> getChildren concode_elem_sep void removeChild concode_elem_sep void addParent concode_elem_sep void addChild", "code_tokens": ["T", "function", "(", ")", "{", "return", "mPayload", ";", "}"], "nl_tokens": ["gets", "the", "payload", "of", "the", "node", ".", "concode_field_sep", "List", "<", "DirectedAcyclicGraphNode", "<", "T", ">>", "mParents", "concode_elem_sep", "List", "<", "DirectedAcyclicGraphNode", "<", "T", ">>", "mChildren", "concode_elem_sep", "T", "mPayload", "concode_field_sep", "List", "<", "DirectedAcyclicGraphNode", "<", "T", ">>", "getParents", "concode_elem_sep", "List", "<", "DirectedAcyclicGraphNode", "<", "T", ">>", "getChildren", "concode_elem_sep", "void", "removeChild", "concode_elem_sep", "void", "addParent", "concode_elem_sep", "void", "addChild"]}
{"code": "String function ( String arg0 ) { return selectile ( arg0 , new ArrayList < > ( ) , \"srini_string\" ) ; }", "nl": "select a folder open a folder chooser gui concode_field_sep PlaceHolder placeHolder concode_field_sep void enableComponents concode_elem_sep void selectTab concode_elem_sep String selectFolder", "code_tokens": ["String", "function", "(", "String", "arg0", ")", "{", "return", "selectile", "(", "arg0", ",", "new", "ArrayList", "<", ">", "(", ")", ",", "\"srini_string\"", ")", ";", "}"], "nl_tokens": ["select", "a", "folder", "open", "a", "folder", "chooser", "gui", "concode_field_sep", "PlaceHolder", "placeHolder", "concode_field_sep", "void", "enableComponents", "concode_elem_sep", "void", "selectTab", "concode_elem_sep", "String", "selectFolder"]}
{"code": "LocalAlluxioClusterResource function ( PropertyKey arg0 , Object arg1 ) { mConfiguration . put ( arg0 , arg1 . toString ( ) ) ; return this ; }", "nl": "adds a property to the cluster resource . concode_field_sep int DEFAULT_USER_BLOCK_SIZE concode_elem_sep int mNumWorkers concode_elem_sep long DEFAULT_WORKER_CAPACITY_BYTES concode_elem_sep int mUserBlockSize concode_elem_sep Map<PropertyKey,String> mConfiguration concode_elem_sep boolean mStartCluster concode_elem_sep LocalAlluxioCluster mLocalAlluxioCluster concode_elem_sep Map<PropertyKey,String> mConfiguration concode_elem_sep long mWorkerCapacityBytes concode_field_sep Statement apply concode_elem_sep LocalAlluxioClusterResource build concode_elem_sep LocalAlluxioCluster get concode_elem_sep void start concode_elem_sep Builder setStartCluster concode_elem_sep Builder setNumWorkers", "code_tokens": ["LocalAlluxioClusterResource", "function", "(", "PropertyKey", "arg0", ",", "Object", "arg1", ")", "{", "mConfiguration", ".", "put", "(", "arg0", ",", "arg1", ".", "toString", "(", ")", ")", ";", "return", "this", ";", "}"], "nl_tokens": ["adds", "a", "property", "to", "the", "cluster", "resource", ".", "concode_field_sep", "int", "DEFAULT_USER_BLOCK_SIZE", "concode_elem_sep", "int", "mNumWorkers", "concode_elem_sep", "long", "DEFAULT_WORKER_CAPACITY_BYTES", "concode_elem_sep", "int", "mUserBlockSize", "concode_elem_sep", "Map", "<", "PropertyKey", ",", "String", ">", "mConfiguration", "concode_elem_sep", "boolean", "mStartCluster", "concode_elem_sep", "LocalAlluxioCluster", "mLocalAlluxioCluster", "concode_elem_sep", "Map", "<", "PropertyKey", ",", "String", ">", "mConfiguration", "concode_elem_sep", "long", "mWorkerCapacityBytes", "concode_field_sep", "Statement", "apply", "concode_elem_sep", "LocalAlluxioClusterResource", "build", "concode_elem_sep", "LocalAlluxioCluster", "get", "concode_elem_sep", "void", "start", "concode_elem_sep", "Builder", "setStartCluster", "concode_elem_sep", "Builder", "setNumWorkers"]}
{"code": "void function ( String arg0 ) { this . referencedRevisionA = arg0 ; }", "nl": "set the referenced revision in a. concode_field_sep String referencedRevisionA concode_elem_sep String referencedRevisionLabelA concode_elem_sep String referencedRevisionLabelB concode_elem_sep String referencedRevisionB concode_elem_sep Triple triple concode_elem_sep SDDTripleStateEnum tripleResolutionState concode_elem_sep ResolutionStateEnum resolutionState concode_field_sep String getReferencedRevisionLabelB concode_elem_sep void setResolutionState concode_elem_sep String getReferencedRevisionLabelA concode_elem_sep void setReferencedRevisionLabelA concode_elem_sep SDDTripleStateEnum getTripleResolutionState concode_elem_sep void setReferencedRevisionLabelB concode_elem_sep Triple getTriple concode_elem_sep String getReferencedRevisionB concode_elem_sep void setTripleResolutionState concode_elem_sep void setTriple concode_elem_sep String getReferencedRevisionA concode_elem_sep ResolutionStateEnum getResolutionState concode_elem_sep void setReferencedRevisionB", "code_tokens": ["void", "function", "(", "String", "arg0", ")", "{", "this", ".", "referencedRevisionA", "=", "arg0", ";", "}"], "nl_tokens": ["set", "the", "referenced", "revision", "in", "a", ".", "concode_field_sep", "String", "referencedRevisionA", "concode_elem_sep", "String", "referencedRevisionLabelA", "concode_elem_sep", "String", "referencedRevisionLabelB", "concode_elem_sep", "String", "referencedRevisionB", "concode_elem_sep", "Triple", "triple", "concode_elem_sep", "SDDTripleStateEnum", "tripleResolutionState", "concode_elem_sep", "ResolutionStateEnum", "resolutionState", "concode_field_sep", "String", "getReferencedRevisionLabelB", "concode_elem_sep", "void", "setResolutionState", "concode_elem_sep", "String", "getReferencedRevisionLabelA", "concode_elem_sep", "void", "setReferencedRevisionLabelA", "concode_elem_sep", "SDDTripleStateEnum", "getTripleResolutionState", "concode_elem_sep", "void", "setReferencedRevisionLabelB", "concode_elem_sep", "Triple", "getTriple", "concode_elem_sep", "String", "getReferencedRevisionB", "concode_elem_sep", "void", "setTripleResolutionState", "concode_elem_sep", "void", "setTriple", "concode_elem_sep", "String", "getReferencedRevisionA", "concode_elem_sep", "ResolutionStateEnum", "getResolutionState", "concode_elem_sep", "void", "setReferencedRevisionB"]}
{"code": "boolean function ( final File arg0 , final String arg1 ) { Pattern loc0 = Pattern . compile ( arg1 ) ; Matcher loc1 = loc0 . loc1 ( \"srini_string\" ) ; FileIterable loc2 = new FileIterable ( arg0 ) ; for ( String loc3 : loc2 ) { loc1 . reset ( loc3 ) ; if ( loc1 . find ( ) ) { return true ; } } return false ; }", "nl": "handy method to find a certain pattern into a file . while this method lives in the fileutils , it was designed with with unit test in mind to check result redirected into a file concode_field_sep PlaceHolder placeHolder concode_field_sep String getFileNameWithoutExtension concode_elem_sep String readFilelist concode_elem_sep String normalizeFilename concode_elem_sep List<DataSource> collectFiles concode_elem_sep List<DataSource> collect", "code_tokens": ["boolean", "function", "(", "final", "File", "arg0", ",", "final", "String", "arg1", ")", "{", "Pattern", "loc0", "=", "Pattern", ".", "compile", "(", "arg1", ")", ";", "Matcher", "loc1", "=", "loc0", ".", "loc1", "(", "\"srini_string\"", ")", ";", "FileIterable", "loc2", "=", "new", "FileIterable", "(", "arg0", ")", ";", "for", "(", "String", "loc3", ":", "loc2", ")", "{", "loc1", ".", "reset", "(", "loc3", ")", ";", "if", "(", "loc1", ".", "find", "(", ")", ")", "{", "return", "true", ";", "}", "}", "return", "false", ";", "}"], "nl_tokens": ["handy", "method", "to", "find", "a", "certain", "pattern", "into", "a", "file", ".", "while", "this", "method", "lives", "in", "the", "fileutils", ",", "it", "was", "designed", "with", "with", "unit", "test", "in", "mind", "to", "check", "result", "redirected", "into", "a", "file", "concode_field_sep", "PlaceHolder", "placeHolder", "concode_field_sep", "String", "getFileNameWithoutExtension", "concode_elem_sep", "String", "readFilelist", "concode_elem_sep", "String", "normalizeFilename", "concode_elem_sep", "List", "<", "DataSource", ">", "collectFiles", "concode_elem_sep", "List", "<", "DataSource", ">", "collect"]}
{"code": "void function ( String arg0 ) { this . cytoband = arg0 ; }", "nl": "sets the cytoband of a gistic concode_field_sep boolean AMPLIFIED concode_elem_sep boolean DELETED concode_elem_sep int gisticID concode_elem_sep int peakStart concode_elem_sep ArrayList<CanonicalGene> genes_in_ROI concode_elem_sep String cytoband concode_elem_sep boolean amp concode_elem_sep int NO_SUCH_GISTIC concode_elem_sep int cancerStudyId concode_elem_sep int chromosome concode_elem_sep int peakEnd concode_elem_sep double qValue concode_field_sep void setPeakEnd concode_elem_sep void setAmp concode_elem_sep String getCytoband concode_elem_sep void setPeakStart concode_elem_sep int getPeakStart concode_elem_sep void setqValue concode_elem_sep boolean getAmp concode_elem_sep int getInternalId concode_elem_sep void setGenes_in_ROI concode_elem_sep int peakSize concode_elem_sep int getCancerStudyId concode_elem_sep int getChromosome concode_elem_sep int getPeakEnd concode_elem_sep void addGene concode_elem_sep void setInternalId concode_elem_sep void setCancerStudyId concode_elem_sep double getqValue concode_elem_sep String toString concode_elem_sep ArrayList<CanonicalGene> getGenes_in_ROI concode_elem_sep void setChromosome", "code_tokens": ["void", "function", "(", "String", "arg0", ")", "{", "this", ".", "cytoband", "=", "arg0", ";", "}"], "nl_tokens": ["sets", "the", "cytoband", "of", "a", "gistic", "concode_field_sep", "boolean", "AMPLIFIED", "concode_elem_sep", "boolean", "DELETED", "concode_elem_sep", "int", "gisticID", "concode_elem_sep", "int", "peakStart", "concode_elem_sep", "ArrayList", "<", "CanonicalGene", ">", "genes_in_ROI", "concode_elem_sep", "String", "cytoband", "concode_elem_sep", "boolean", "amp", "concode_elem_sep", "int", "NO_SUCH_GISTIC", "concode_elem_sep", "int", "cancerStudyId", "concode_elem_sep", "int", "chromosome", "concode_elem_sep", "int", "peakEnd", "concode_elem_sep", "double", "qValue", "concode_field_sep", "void", "setPeakEnd", "concode_elem_sep", "void", "setAmp", "concode_elem_sep", "String", "getCytoband", "concode_elem_sep", "void", "setPeakStart", "concode_elem_sep", "int", "getPeakStart", "concode_elem_sep", "void", "setqValue", "concode_elem_sep", "boolean", "getAmp", "concode_elem_sep", "int", "getInternalId", "concode_elem_sep", "void", "setGenes_in_ROI", "concode_elem_sep", "int", "peakSize", "concode_elem_sep", "int", "getCancerStudyId", "concode_elem_sep", "int", "getChromosome", "concode_elem_sep", "int", "getPeakEnd", "concode_elem_sep", "void", "addGene", "concode_elem_sep", "void", "setInternalId", "concode_elem_sep", "void", "setCancerStudyId", "concode_elem_sep", "double", "getqValue", "concode_elem_sep", "String", "toString", "concode_elem_sep", "ArrayList", "<", "CanonicalGene", ">", "getGenes_in_ROI", "concode_elem_sep", "void", "setChromosome"]}
{"code": "ListStatusOptions function ( LoadMetadataType arg0 ) { mLoadMetadataType = arg0 ; return this ; }", "nl": "sets the liststatusoptions #mloadmetadatatype . concode_field_sep LoadMetadataType mLoadMetadataType concode_field_sep ListStatusOptions defaults concode_elem_sep int hashCode concode_elem_sep boolean equals concode_elem_sep String toString concode_elem_sep LoadMetadataType getLoadMetadataType", "code_tokens": ["ListStatusOptions", "function", "(", "LoadMetadataType", "arg0", ")", "{", "mLoadMetadataType", "=", "arg0", ";", "return", "this", ";", "}"], "nl_tokens": ["sets", "the", "liststatusoptions", "#mloadmetadatatype . concode_field_sep LoadMetadataType mLoadMetadataType concode_field_sep ListStatusOptions defaults concode_elem_sep int hashCode concode_elem_sep boolean equals concode_elem_sep String toString concode_elem_sep LoadMetadataType getLoadMetadataType"]}
{"code": "EncryptedKeyElement function ( ) { return m_EncryptedKeyElement ; }", "nl": "get the encryptedkeyelement object of the keyinfoelement object concode_field_sep EncryptedKeyElement m_EncryptedKeyElement concode_elem_sep Element m_KeyInfoEl concode_elem_sep Logger LOG concode_field_sep Element getKeyInfoElement", "code_tokens": ["EncryptedKeyElement", "function", "(", ")", "{", "return", "m_EncryptedKeyElement", ";", "}"], "nl_tokens": ["get", "the", "encryptedkeyelement", "object", "of", "the", "keyinfoelement", "object", "concode_field_sep", "EncryptedKeyElement", "m_EncryptedKeyElement", "concode_elem_sep", "Element", "m_KeyInfoEl", "concode_elem_sep", "Logger", "LOG", "concode_field_sep", "Element", "getKeyInfoElement"]}
{"code": "MapMaker function ( ) { return setKeyStrength ( Strength . WEAK ) ; }", "nl": "specifies that each key not value stored in the map should be wrapped in a weakreference by default , strong references are used . warning : when this method is used , the resulting map will use identity == comparison to determine equality of keys , which is a technical violation of the map specification , and may not be what you expect . concode_field_sep int concurrencyLevel concode_elem_sep boolean useCustomMap concode_elem_sep Strength valueStrength concode_elem_sep int initialCapacity concode_elem_sep Strength keyStrength concode_elem_sep int DEFAULT_INITIAL_CAPACITY concode_elem_sep Equivalence<Object> keyEquivalence concode_elem_sep int UNSET_INT concode_elem_sep int DEFAULT_CONCURRENCY_LEVEL concode_field_sep MapMaker weakValues concode_elem_sep MapMaker setValueStrength concode_elem_sep Equivalence<Object> getKeyEquivalence concode_elem_sep MapMaker initialCapacity concode_elem_sep ConcurrentMap<K,V> makeMap concode_elem_sep int getInitialCapacity concode_elem_sep MapMaker concurrencyLevel concode_elem_sep Strength getKeyStrength concode_elem_sep MapMakerInternalMap<K,V,?,?> makeCustomMap concode_elem_sep MapMaker keyEquivalence concode_elem_sep MapMaker setKeyStrength concode_elem_sep String toString concode_elem_sep int getConcurrencyLevel concode_elem_sep Strength getValueStrength", "code_tokens": ["MapMaker", "function", "(", ")", "{", "return", "setKeyStrength", "(", "Strength", ".", "WEAK", ")", ";", "}"], "nl_tokens": ["specifies", "that", "each", "key", "not", "value", "stored", "in", "the", "map", "should", "be", "wrapped", "in", "a", "weakreference", "by", "default", ",", "strong", "references", "are", "used", ".", "warning", ":", "when", "this", "method", "is", "used", ",", "the", "resulting", "map", "will", "use", "identity", "==", "comparison", "to", "determine", "equality", "of", "keys", ",", "which", "is", "a", "technical", "violation", "of", "the", "map", "specification", ",", "and", "may", "not", "be", "what", "you", "expect", ".", "concode_field_sep", "int", "concurrencyLevel", "concode_elem_sep", "boolean", "useCustomMap", "concode_elem_sep", "Strength", "valueStrength", "concode_elem_sep", "int", "initialCapacity", "concode_elem_sep", "Strength", "keyStrength", "concode_elem_sep", "int", "DEFAULT_INITIAL_CAPACITY", "concode_elem_sep", "Equivalence", "<", "Object", ">", "keyEquivalence", "concode_elem_sep", "int", "UNSET_INT", "concode_elem_sep", "int", "DEFAULT_CONCURRENCY_LEVEL", "concode_field_sep", "MapMaker", "weakValues", "concode_elem_sep", "MapMaker", "setValueStrength", "concode_elem_sep", "Equivalence", "<", "Object", ">", "getKeyEquivalence", "concode_elem_sep", "MapMaker", "initialCapacity", "concode_elem_sep", "ConcurrentMap", "<", "K", ",", "V", ">", "makeMap", "concode_elem_sep", "int", "getInitialCapacity", "concode_elem_sep", "MapMaker", "concurrencyLevel", "concode_elem_sep", "Strength", "getKeyStrength", "concode_elem_sep", "MapMakerInternalMap", "<", "K", ",", "V", ",", "?", ",", "?", ">", "makeCustomMap", "concode_elem_sep", "MapMaker", "keyEquivalence", "concode_elem_sep", "MapMaker", "setKeyStrength", "concode_elem_sep", "String", "toString", "concode_elem_sep", "int", "getConcurrencyLevel", "concode_elem_sep", "Strength", "getValueStrength"]}
{"code": "int function ( StoredBlock arg0 ) { return getInterval ( ) - 1 ; }", "nl": "the number of previous blocks to look at when calculating the next block 's difficulty uses a storedblock cursor as input rather than just returning a constant value concode_field_sep int addressHeader concode_elem_sep int INTERVAL concode_elem_sep byte[] alertSigningKey concode_elem_sep int[] acceptableAddressCodes concode_elem_sep long packetMagic concode_elem_sep int p2shHeader concode_elem_sep List<NetworkParameters> paramSet concode_elem_sep int PROTOCOL_VERSION concode_elem_sep Block genesisBlock concode_elem_sep BigInteger proofOfWorkLimit concode_elem_sep int subsidyDecreaseBlockCount concode_elem_sep int port concode_elem_sep BigInteger MAX_MONEY concode_elem_sep int TARGET_SPACING concode_elem_sep String[] dnsSeeds concode_elem_sep Map<Integer,Sha256Hash> checkpoints concode_elem_sep byte[] SATOSHI_KEY concode_elem_sep int interval concode_elem_sep String id concode_elem_sep int spendableCoinbaseDepth concode_elem_sep int dumpedPrivateKeyHeader concode_elem_sep int targetTimespan concode_elem_sep int TARGET_TIMESPAN concode_elem_sep int BIP16_ENFORCE_TIME concode_field_sep NetworkParameters regTests concode_elem_sep boolean allowEmptyPeerChain concode_elem_sep int getDumpedPrivateKeyHeader concode_elem_sep NetworkParameters testNet2 concode_elem_sep NetworkParameters testNet3 concode_elem_sep NetworkParameters unitTests concode_elem_sep String getId concode_elem_sep int getAddressHeader concode_elem_sep int[] getAcceptableAddressCodes concode_elem_sep NetworkParameters prodNet concode_elem_sep NetworkParameters fromID concode_elem_sep int getTargetTimespan concode_elem_sep String[] getDnsSeeds concode_elem_sep int hashCode concode_elem_sep int getSpendableCoinbaseDepth concode_elem_sep NetworkParameters testNet concode_elem_sep Sha256Hash calculateBlockPoWHash concode_elem_sep BigInteger getMaxMoney concode_elem_sep NetworkParameters getParamsFromAddressByte concode_elem_sep void registerParams concode_elem_sep boolean isCheckpoint concode_elem_sep int getP2SHHeader concode_elem_sep int getInterval concode_elem_sep Block getGenesisBlock concode_elem_sep int getSubsidyDecreaseBlockCount concode_elem_sep Block createGenesis concode_elem_sep long getPacketMagic concode_elem_sep int getPort concode_elem_sep byte[] getAlertSigningKey concode_elem_sep boolean equals concode_elem_sep boolean passesCheckpoint concode_elem_sep boolean isAcceptableAddressVersion concode_elem_sep String getURIScheme concode_elem_sep BigInteger getProofOfWorkLimit", "code_tokens": ["int", "function", "(", "StoredBlock", "arg0", ")", "{", "return", "getInterval", "(", ")", "-", "1", ";", "}"], "nl_tokens": ["the", "number", "of", "previous", "blocks", "to", "look", "at", "when", "calculating", "the", "next", "block", "'", "s", "difficulty", "uses", "a", "storedblock", "cursor", "as", "input", "rather", "than", "just", "returning", "a", "constant", "value", "concode_field_sep", "int", "addressHeader", "concode_elem_sep", "int", "INTERVAL", "concode_elem_sep", "byte", "[", "]", "alertSigningKey", "concode_elem_sep", "int", "[", "]", "acceptableAddressCodes", "concode_elem_sep", "long", "packetMagic", "concode_elem_sep", "int", "p2shHeader", "concode_elem_sep", "List", "<", "NetworkParameters", ">", "paramSet", "concode_elem_sep", "int", "PROTOCOL_VERSION", "concode_elem_sep", "Block", "genesisBlock", "concode_elem_sep", "BigInteger", "proofOfWorkLimit", "concode_elem_sep", "int", "subsidyDecreaseBlockCount", "concode_elem_sep", "int", "port", "concode_elem_sep", "BigInteger", "MAX_MONEY", "concode_elem_sep", "int", "TARGET_SPACING", "concode_elem_sep", "String", "[", "]", "dnsSeeds", "concode_elem_sep", "Map", "<", "Integer", ",", "Sha256Hash", ">", "checkpoints", "concode_elem_sep", "byte", "[", "]", "SATOSHI_KEY", "concode_elem_sep", "int", "interval", "concode_elem_sep", "String", "id", "concode_elem_sep", "int", "spendableCoinbaseDepth", "concode_elem_sep", "int", "dumpedPrivateKeyHeader", "concode_elem_sep", "int", "targetTimespan", "concode_elem_sep", "int", "TARGET_TIMESPAN", "concode_elem_sep", "int", "BIP16_ENFORCE_TIME", "concode_field_sep", "NetworkParameters", "regTests", "concode_elem_sep", "boolean", "allowEmptyPeerChain", "concode_elem_sep", "int", "getDumpedPrivateKeyHeader", "concode_elem_sep", "NetworkParameters", "testNet2", "concode_elem_sep", "NetworkParameters", "testNet3", "concode_elem_sep", "NetworkParameters", "unitTests", "concode_elem_sep", "String", "getId", "concode_elem_sep", "int", "getAddressHeader", "concode_elem_sep", "int", "[", "]", "getAcceptableAddressCodes", "concode_elem_sep", "NetworkParameters", "prodNet", "concode_elem_sep", "NetworkParameters", "fromID", "concode_elem_sep", "int", "getTargetTimespan", "concode_elem_sep", "String", "[", "]", "getDnsSeeds", "concode_elem_sep", "int", "hashCode", "concode_elem_sep", "int", "getSpendableCoinbaseDepth", "concode_elem_sep", "NetworkParameters", "testNet", "concode_elem_sep", "Sha256Hash", "calculateBlockPoWHash", "concode_elem_sep", "BigInteger", "getMaxMoney", "concode_elem_sep", "NetworkParameters", "getParamsFromAddressByte", "concode_elem_sep", "void", "registerParams", "concode_elem_sep", "boolean", "isCheckpoint", "concode_elem_sep", "int", "getP2SHHeader", "concode_elem_sep", "int", "getInterval", "concode_elem_sep", "Block", "getGenesisBlock", "concode_elem_sep", "int", "getSubsidyDecreaseBlockCount", "concode_elem_sep", "Block", "createGenesis", "concode_elem_sep", "long", "getPacketMagic", "concode_elem_sep", "int", "getPort", "concode_elem_sep", "byte", "[", "]", "getAlertSigningKey", "concode_elem_sep", "boolean", "equals", "concode_elem_sep", "boolean", "passesCheckpoint", "concode_elem_sep", "boolean", "isAcceptableAddressVersion", "concode_elem_sep", "String", "getURIScheme", "concode_elem_sep", "BigInteger", "getProofOfWorkLimit"]}
{"code": "boolean function ( double arg0 , double arg1 , double arg2 ) { return arg0 == arg1 ? true : Math . abs ( arg0 - arg1 ) < arg2 ; }", "nl": "returns true if two doubles are considered equal . tests if the absolute difference between the two doubles has a difference less then a given double epsilon . determining the given epsilon is highly dependant on the precision of the doubles that are being compared . concode_field_sep double EPSILON concode_field_sep placeholderType placeHolder", "code_tokens": ["boolean", "function", "(", "double", "arg0", ",", "double", "arg1", ",", "double", "arg2", ")", "{", "return", "arg0", "==", "arg1", "?", "true", ":", "Math", ".", "abs", "(", "arg0", "-", "arg1", ")", "<", "arg2", ";", "}"], "nl_tokens": ["returns", "true", "if", "two", "doubles", "are", "considered", "equal", ".", "tests", "if", "the", "absolute", "difference", "between", "the", "two", "doubles", "has", "a", "difference", "less", "then", "a", "given", "double", "epsilon", ".", "determining", "the", "given", "epsilon", "is", "highly", "dependant", "on", "the", "precision", "of", "the", "doubles", "that", "are", "being", "compared", ".", "concode_field_sep", "double", "EPSILON", "concode_field_sep", "placeholderType", "placeHolder"]}
{"code": "void function ( ConfigurationKey arg0 , boolean arg1 ) { config . setBoolean ( arg0 , arg1 ) ; }", "nl": "sets the boolean value of a configuration property . concode_field_sep String URL_SAVED concode_elem_sep String FILE_SAVED concode_elem_sep String URL_LOADED concode_elem_sep ConfigurationHandler config concode_elem_sep String FILE_LOADED concode_field_sep boolean save concode_elem_sep boolean save concode_elem_sep void setInteger concode_elem_sep double getDouble concode_elem_sep double getDouble concode_elem_sep int getInteger concode_elem_sep int getInteger concode_elem_sep String getString concode_elem_sep String getString concode_elem_sep void removeListener concode_elem_sep void removeListener concode_elem_sep IConfigurationFactory getFactory concode_elem_sep void setDouble concode_elem_sep ConfigurationKey makeKey concode_elem_sep ConfigurationKey makeKey concode_elem_sep ConfigurationKey makeKey concode_elem_sep ConfigurationKey makeKey concode_elem_sep ConfigurationKey makeKey concode_elem_sep ConfigurationKey makeKey concode_elem_sep void setString concode_elem_sep boolean load concode_elem_sep boolean load concode_elem_sep boolean load concode_elem_sep void removeKey concode_elem_sep ConfigurationHandler getConfigurationHandler concode_elem_sep boolean getBoolean concode_elem_sep boolean getBoolean concode_elem_sep void addListener concode_elem_sep void addListener", "code_tokens": ["void", "function", "(", "ConfigurationKey", "arg0", ",", "boolean", "arg1", ")", "{", "config", ".", "setBoolean", "(", "arg0", ",", "arg1", ")", ";", "}"], "nl_tokens": ["sets", "the", "boolean", "value", "of", "a", "configuration", "property", ".", "concode_field_sep", "String", "URL_SAVED", "concode_elem_sep", "String", "FILE_SAVED", "concode_elem_sep", "String", "URL_LOADED", "concode_elem_sep", "ConfigurationHandler", "config", "concode_elem_sep", "String", "FILE_LOADED", "concode_field_sep", "boolean", "save", "concode_elem_sep", "boolean", "save", "concode_elem_sep", "void", "setInteger", "concode_elem_sep", "double", "getDouble", "concode_elem_sep", "double", "getDouble", "concode_elem_sep", "int", "getInteger", "concode_elem_sep", "int", "getInteger", "concode_elem_sep", "String", "getString", "concode_elem_sep", "String", "getString", "concode_elem_sep", "void", "removeListener", "concode_elem_sep", "void", "removeListener", "concode_elem_sep", "IConfigurationFactory", "getFactory", "concode_elem_sep", "void", "setDouble", "concode_elem_sep", "ConfigurationKey", "makeKey", "concode_elem_sep", "ConfigurationKey", "makeKey", "concode_elem_sep", "ConfigurationKey", "makeKey", "concode_elem_sep", "ConfigurationKey", "makeKey", "concode_elem_sep", "ConfigurationKey", "makeKey", "concode_elem_sep", "ConfigurationKey", "makeKey", "concode_elem_sep", "void", "setString", "concode_elem_sep", "boolean", "load", "concode_elem_sep", "boolean", "load", "concode_elem_sep", "boolean", "load", "concode_elem_sep", "void", "removeKey", "concode_elem_sep", "ConfigurationHandler", "getConfigurationHandler", "concode_elem_sep", "boolean", "getBoolean", "concode_elem_sep", "boolean", "getBoolean", "concode_elem_sep", "void", "addListener", "concode_elem_sep", "void", "addListener"]}
{"code": "void function ( ) { }", "nl": "test method for com.alibaba.dubbo.registry.support.injvm.injvmregistry #register java.util.map . concode_field_sep String service concode_elem_sep URL serviceUrl concode_elem_sep URL consumerUrl concode_elem_sep URL registryUrl concode_field_sep void testSubscribe concode_elem_sep void setUpBeforeClass concode_elem_sep void setUp", "code_tokens": ["void", "function", "(", ")", "{", "}"], "nl_tokens": ["test", "method", "for", "com", ".", "alibaba", ".", "dubbo", ".", "registry", ".", "support", ".", "injvm", ".", "injvmregistry", "#register java.util.map . concode_field_sep String service concode_elem_sep URL serviceUrl concode_elem_sep URL consumerUrl concode_elem_sep URL registryUrl concode_field_sep void testSubscribe concode_elem_sep void setUpBeforeClass concode_elem_sep void setUp"]}
{"code": "Named function ( String arg0 ) { try { return head . find ( arg0 ) ; } catch ( NoClassException loc0 ) { return tail . find ( arg0 ) ; } }", "nl": "find a type object by name . concode_field_sep TopLevelResolver head concode_elem_sep TopLevelResolver tail concode_field_sep String toString concode_elem_sep boolean packageExists", "code_tokens": ["Named", "function", "(", "String", "arg0", ")", "{", "try", "{", "return", "head", ".", "find", "(", "arg0", ")", ";", "}", "catch", "(", "NoClassException", "loc0", ")", "{", "return", "tail", ".", "find", "(", "arg0", ")", ";", "}", "}"], "nl_tokens": ["find", "a", "type", "object", "by", "name", ".", "concode_field_sep", "TopLevelResolver", "head", "concode_elem_sep", "TopLevelResolver", "tail", "concode_field_sep", "String", "toString", "concode_elem_sep", "boolean", "packageExists"]}
{"code": "Rectangle function ( ) { if ( panel . getPreferredSize ( ) != null ) { return new Rectangle ( 0 , 0 , ( int ) panel . getPreferredSize ( ) . getWidth ( ) , ( int ) panel . getPreferredSize ( ) . getHeight ( ) ) ; } else { return new Rectangle ( 0 , 0 , panel . getWidth ( ) , panel . getHeight ( ) ) ; } }", "nl": "returns the size image needed to render the document without anything going off the side . could be different than the dimensions passed into layout because of text that could n't break or a table that 's set to be too big . concode_field_sep Dimension dim concode_elem_sep XHTMLPanel panel concode_field_sep void layout concode_elem_sep BufferedImage renderToImageAutoSize concode_elem_sep BufferedImage renderToImageAutoSize concode_elem_sep void setDocument concode_elem_sep void setDocument concode_elem_sep void setSharedContext concode_elem_sep XHTMLPanel getPanel concode_elem_sep SharedContext getSharedContext concode_elem_sep void render concode_elem_sep BufferedImage renderToImage concode_elem_sep BufferedImage renderToImage", "code_tokens": ["Rectangle", "function", "(", ")", "{", "if", "(", "panel", ".", "getPreferredSize", "(", ")", "!=", "null", ")", "{", "return", "new", "Rectangle", "(", "0", ",", "0", ",", "(", "int", ")", "panel", ".", "getPreferredSize", "(", ")", ".", "getWidth", "(", ")", ",", "(", "int", ")", "panel", ".", "getPreferredSize", "(", ")", ".", "getHeight", "(", ")", ")", ";", "}", "else", "{", "return", "new", "Rectangle", "(", "0", ",", "0", ",", "panel", ".", "getWidth", "(", ")", ",", "panel", ".", "getHeight", "(", ")", ")", ";", "}", "}"], "nl_tokens": ["returns", "the", "size", "image", "needed", "to", "render", "the", "document", "without", "anything", "going", "off", "the", "side", ".", "could", "be", "different", "than", "the", "dimensions", "passed", "into", "layout", "because", "of", "text", "that", "could", "n", "'t break or a table that '", "s", "set", "to", "be", "too", "big", ".", "concode_field_sep", "Dimension", "dim", "concode_elem_sep", "XHTMLPanel", "panel", "concode_field_sep", "void", "layout", "concode_elem_sep", "BufferedImage", "renderToImageAutoSize", "concode_elem_sep", "BufferedImage", "renderToImageAutoSize", "concode_elem_sep", "void", "setDocument", "concode_elem_sep", "void", "setDocument", "concode_elem_sep", "void", "setSharedContext", "concode_elem_sep", "XHTMLPanel", "getPanel", "concode_elem_sep", "SharedContext", "getSharedContext", "concode_elem_sep", "void", "render", "concode_elem_sep", "BufferedImage", "renderToImage", "concode_elem_sep", "BufferedImage", "renderToImage"]}
{"code": "String function ( BufferedReader arg0 ) { String loc0 = arg0 . readLine ( ) ; while ( loc0 != null && loc0 . trim ( ) . startsWith ( \"srini_string\" ) ) { loc0 = arg0 . readLine ( ) ; } return loc0 ; }", "nl": "skips any comment lines and retrieves a data line from the unmapped file created by liftover . concode_field_sep PlaceHolder placeHolder concode_field_sep boolean sizeMismatch concode_elem_sep void main concode_elem_sep void updatePositions concode_elem_sep boolean isUnmapped concode_elem_sep Integer getNextModRow", "code_tokens": ["String", "function", "(", "BufferedReader", "arg0", ")", "{", "String", "loc0", "=", "arg0", ".", "readLine", "(", ")", ";", "while", "(", "loc0", "!=", "null", "&", "&", "loc0", ".", "trim", "(", ")", ".", "startsWith", "(", "\"srini_string\"", ")", ")", "{", "loc0", "=", "arg0", ".", "readLine", "(", ")", ";", "}", "return", "loc0", ";", "}"], "nl_tokens": ["skips", "any", "comment", "lines", "and", "retrieves", "a", "data", "line", "from", "the", "unmapped", "file", "created", "by", "liftover", ".", "concode_field_sep", "PlaceHolder", "placeHolder", "concode_field_sep", "boolean", "sizeMismatch", "concode_elem_sep", "void", "main", "concode_elem_sep", "void", "updatePositions", "concode_elem_sep", "boolean", "isUnmapped", "concode_elem_sep", "Integer", "getNextModRow"]}
{"code": "boolean function ( ) { return getExpiration ( ) == null ? false : System . currentTimeMillis ( ) > getExpiration ( ) . getTime ( ) ; }", "nl": "has this token expired ? concode_field_sep String QUERY_BY_TOKEN_VALUE concode_elem_sep String QUERY_EXPIRED_BY_DATE concode_elem_sep String QUERY_BY_CLIENT concode_elem_sep String PARAM_CLIENT concode_elem_sep String QUERY_ALL concode_elem_sep String PARAM_TOKEN_VALUE concode_elem_sep JWT jwt concode_elem_sep String PARAM_DATE concode_elem_sep AuthenticationHolderEntity authenticationHolder concode_elem_sep ClientDetailsEntity client concode_elem_sep Date expiration concode_elem_sep Long id concode_field_sep String getValue concode_elem_sep void setClient concode_elem_sep AuthenticationHolderEntity getAuthenticationHolder concode_elem_sep Date getExpiration concode_elem_sep void setJwt concode_elem_sep void setId concode_elem_sep JWT getJwt concode_elem_sep Long getId concode_elem_sep void setAuthenticationHolder concode_elem_sep void setExpiration concode_elem_sep ClientDetailsEntity getClient", "code_tokens": ["boolean", "function", "(", ")", "{", "return", "getExpiration", "(", ")", "==", "null", "?", "false", ":", "System", ".", "currentTimeMillis", "(", ")", ">", "getExpiration", "(", ")", ".", "getTime", "(", ")", ";", "}"], "nl_tokens": ["has", "this", "token", "expired", "?", "concode_field_sep", "String", "QUERY_BY_TOKEN_VALUE", "concode_elem_sep", "String", "QUERY_EXPIRED_BY_DATE", "concode_elem_sep", "String", "QUERY_BY_CLIENT", "concode_elem_sep", "String", "PARAM_CLIENT", "concode_elem_sep", "String", "QUERY_ALL", "concode_elem_sep", "String", "PARAM_TOKEN_VALUE", "concode_elem_sep", "JWT", "jwt", "concode_elem_sep", "String", "PARAM_DATE", "concode_elem_sep", "AuthenticationHolderEntity", "authenticationHolder", "concode_elem_sep", "ClientDetailsEntity", "client", "concode_elem_sep", "Date", "expiration", "concode_elem_sep", "Long", "id", "concode_field_sep", "String", "getValue", "concode_elem_sep", "void", "setClient", "concode_elem_sep", "AuthenticationHolderEntity", "getAuthenticationHolder", "concode_elem_sep", "Date", "getExpiration", "concode_elem_sep", "void", "setJwt", "concode_elem_sep", "void", "setId", "concode_elem_sep", "JWT", "getJwt", "concode_elem_sep", "Long", "getId", "concode_elem_sep", "void", "setAuthenticationHolder", "concode_elem_sep", "void", "setExpiration", "concode_elem_sep", "ClientDetailsEntity", "getClient"]}
{"code": "BufferedByteWriter function ( short arg0 ) { return put64 ( arg0 & 0xFFFFL ) ; }", "nl": "write the given long value 64-bit in big-endian order to the buffer concode_field_sep ByteBuffer mWriter concode_elem_sep byte[] mBuffer concode_field_sep BufferedByteWriter put24 concode_elem_sep BufferedByteWriter put24 concode_elem_sep BufferedByteWriter put24 concode_elem_sep BufferedByteWriter putLen8 concode_elem_sep BufferedByteWriter put16 concode_elem_sep BufferedByteWriter put16 concode_elem_sep BufferedByteWriter putLen16 concode_elem_sep byte[] toByteArray concode_elem_sep void ensureCapacity concode_elem_sep BufferedByteWriter put concode_elem_sep BufferedByteWriter put concode_elem_sep BufferedByteWriter put32 concode_elem_sep BufferedByteWriter put32 concode_elem_sep BufferedByteWriter put32", "code_tokens": ["BufferedByteWriter", "function", "(", "short", "arg0", ")", "{", "return", "put64", "(", "arg0", "&", "0xFFFF", "L", ")", ";", "}"], "nl_tokens": ["write", "the", "given", "long", "value", "64", "-", "bit", "in", "big", "-", "endian", "order", "to", "the", "buffer", "concode_field_sep", "ByteBuffer", "mWriter", "concode_elem_sep", "byte", "[", "]", "mBuffer", "concode_field_sep", "BufferedByteWriter", "put24", "concode_elem_sep", "BufferedByteWriter", "put24", "concode_elem_sep", "BufferedByteWriter", "put24", "concode_elem_sep", "BufferedByteWriter", "putLen8", "concode_elem_sep", "BufferedByteWriter", "put16", "concode_elem_sep", "BufferedByteWriter", "put16", "concode_elem_sep", "BufferedByteWriter", "putLen16", "concode_elem_sep", "byte", "[", "]", "toByteArray", "concode_elem_sep", "void", "ensureCapacity", "concode_elem_sep", "BufferedByteWriter", "put", "concode_elem_sep", "BufferedByteWriter", "put", "concode_elem_sep", "BufferedByteWriter", "put32", "concode_elem_sep", "BufferedByteWriter", "put32", "concode_elem_sep", "BufferedByteWriter", "put32"]}
{"code": "boolean function ( ) { return parseLazy ; }", "nl": "whether the serializer will produce lazy parse mode messages concode_field_sep Map<Class<? extends Message>,String> names concode_elem_sep int size concode_elem_sep Logger log concode_elem_sep boolean parseLazy concode_elem_sep int HEADER_LENGTH concode_elem_sep byte[] checksum concode_elem_sep byte[] header concode_elem_sep NetworkParameters params concode_elem_sep int COMMAND_LEN concode_elem_sep String command concode_elem_sep boolean parseRetain concode_field_sep void seekPastMagicBytes concode_elem_sep void serialize concode_elem_sep void serialize concode_elem_sep Message makeMessage concode_elem_sep Message deserializePayload concode_elem_sep boolean isParseRetainMode concode_elem_sep BitcoinPacketHeader deserializeHeader concode_elem_sep Message deserialize", "code_tokens": ["boolean", "function", "(", ")", "{", "return", "parseLazy", ";", "}"], "nl_tokens": ["whether", "the", "serializer", "will", "produce", "lazy", "parse", "mode", "messages", "concode_field_sep", "Map", "<", "Class", "<", "?", "extends", "Message", ">", ",", "String", ">", "names", "concode_elem_sep", "int", "size", "concode_elem_sep", "Logger", "log", "concode_elem_sep", "boolean", "parseLazy", "concode_elem_sep", "int", "HEADER_LENGTH", "concode_elem_sep", "byte", "[", "]", "checksum", "concode_elem_sep", "byte", "[", "]", "header", "concode_elem_sep", "NetworkParameters", "params", "concode_elem_sep", "int", "COMMAND_LEN", "concode_elem_sep", "String", "command", "concode_elem_sep", "boolean", "parseRetain", "concode_field_sep", "void", "seekPastMagicBytes", "concode_elem_sep", "void", "serialize", "concode_elem_sep", "void", "serialize", "concode_elem_sep", "Message", "makeMessage", "concode_elem_sep", "Message", "deserializePayload", "concode_elem_sep", "boolean", "isParseRetainMode", "concode_elem_sep", "BitcoinPacketHeader", "deserializeHeader", "concode_elem_sep", "Message", "deserialize"]}
{"code": "void function ( ) { dataSetFieldColumnMapping = fetcherRegDataUnitVerifier . buildFieldAndColumnMapping ( new PCLDataSetEntity ( ) ) ; }", "nl": "inits the . concode_field_sep Map<String,Field> dataSetFieldColumnMapping concode_elem_sep Logger LOGGER concode_elem_sep IFetcherContext fetcherContext concode_elem_sep IFetcherTesterDataUnitVerifier fetcherRegDataUnitVerifier concode_field_sep String getDataSetCompareKey concode_elem_sep List<RegPCLTestResultDetailsEntity> verifyDataSet", "code_tokens": ["void", "function", "(", ")", "{", "dataSetFieldColumnMapping", "=", "fetcherRegDataUnitVerifier", ".", "buildFieldAndColumnMapping", "(", "new", "PCLDataSetEntity", "(", ")", ")", ";", "}"], "nl_tokens": ["inits", "the", ".", "concode_field_sep", "Map", "<", "String", ",", "Field", ">", "dataSetFieldColumnMapping", "concode_elem_sep", "Logger", "LOGGER", "concode_elem_sep", "IFetcherContext", "fetcherContext", "concode_elem_sep", "IFetcherTesterDataUnitVerifier", "fetcherRegDataUnitVerifier", "concode_field_sep", "String", "getDataSetCompareKey", "concode_elem_sep", "List", "<", "RegPCLTestResultDetailsEntity", ">", "verifyDataSet"]}
{"code": "void function ( char arg0 [ ] , int arg1 , int arg2 ) { try { writer . writeCharacters ( arg0 , arg1 , arg2 ) ; } catch ( XMLStreamException loc0 ) { throw new SAXException ( loc0 ) ; } }", "nl": "method ignorablewhitespace . concode_field_sep Map<String,String> mapping concode_elem_sep XMLStreamWriter writer concode_elem_sep boolean inCDATA concode_field_sep String getPrefix concode_elem_sep void endPrefixMapping concode_elem_sep void startElement concode_elem_sep void startEntity concode_elem_sep void endCDATA concode_elem_sep void endDocument concode_elem_sep void startDocument concode_elem_sep void endEntity concode_elem_sep void startDTD concode_elem_sep void endDTD concode_elem_sep void characters concode_elem_sep void startCDATA concode_elem_sep void startPrefixMapping concode_elem_sep void endElement concode_elem_sep void skippedEntity concode_elem_sep void comment concode_elem_sep void setDocumentLocator concode_elem_sep void processingInstruction", "code_tokens": ["void", "function", "(", "char", "arg0", "[", "]", ",", "int", "arg1", ",", "int", "arg2", ")", "{", "try", "{", "writer", ".", "writeCharacters", "(", "arg0", ",", "arg1", ",", "arg2", ")", ";", "}", "catch", "(", "XMLStreamException", "loc0", ")", "{", "throw", "new", "SAXException", "(", "loc0", ")", ";", "}", "}"], "nl_tokens": ["method", "ignorablewhitespace", ".", "concode_field_sep", "Map", "<", "String", ",", "String", ">", "mapping", "concode_elem_sep", "XMLStreamWriter", "writer", "concode_elem_sep", "boolean", "inCDATA", "concode_field_sep", "String", "getPrefix", "concode_elem_sep", "void", "endPrefixMapping", "concode_elem_sep", "void", "startElement", "concode_elem_sep", "void", "startEntity", "concode_elem_sep", "void", "endCDATA", "concode_elem_sep", "void", "endDocument", "concode_elem_sep", "void", "startDocument", "concode_elem_sep", "void", "endEntity", "concode_elem_sep", "void", "startDTD", "concode_elem_sep", "void", "endDTD", "concode_elem_sep", "void", "characters", "concode_elem_sep", "void", "startCDATA", "concode_elem_sep", "void", "startPrefixMapping", "concode_elem_sep", "void", "endElement", "concode_elem_sep", "void", "skippedEntity", "concode_elem_sep", "void", "comment", "concode_elem_sep", "void", "setDocumentLocator", "concode_elem_sep", "void", "processingInstruction"]}
{"code": "void function ( ) { final double loc0 = 180.000001 ; try { hdg . setDeviation ( loc0 ) ; fail ( \"srini_string\" ) ; } catch ( IllegalArgumentException loc1 ) { } catch ( Exception loc1 ) { fail ( loc1 . getMessage ( ) ) ; } }", "nl": "test method for net.sf.marineapi.nmea.parser.hdgparser #setdeviation double . concode_field_sep HDGSentence hdg concode_elem_sep String EXAMPLE concode_field_sep void testSetHeadingTooHigh concode_elem_sep void testIsTrue concode_elem_sep void testSetHeading concode_elem_sep void testHDGParserTalkerId concode_elem_sep void testSetVariationWest concode_elem_sep void testConstructor concode_elem_sep void testSetVariationTooLow concode_elem_sep void testGetVariation concode_elem_sep void testSetVariationTooHigh concode_elem_sep void testSetVariationEast concode_elem_sep void testGetDeviation concode_elem_sep void testSetDeviationTooLow concode_elem_sep void setUp concode_elem_sep void testGetHeading concode_elem_sep void testSetDeviationEast concode_elem_sep void testHDGParserString concode_elem_sep void testSetDeviationWest concode_elem_sep void testSetHeadingTooLow", "code_tokens": ["void", "function", "(", ")", "{", "final", "double", "loc0", "=", "180.000001", ";", "try", "{", "hdg", ".", "setDeviation", "(", "loc0", ")", ";", "fail", "(", "\"srini_string\"", ")", ";", "}", "catch", "(", "IllegalArgumentException", "loc1", ")", "{", "}", "catch", "(", "Exception", "loc1", ")", "{", "fail", "(", "loc1", ".", "getMessage", "(", ")", ")", ";", "}", "}"], "nl_tokens": ["test", "method", "for", "net", ".", "sf", ".", "marineapi", ".", "nmea", ".", "parser", ".", "hdgparser", "#setdeviation double . concode_field_sep HDGSentence hdg concode_elem_sep String EXAMPLE concode_field_sep void testSetHeadingTooHigh concode_elem_sep void testIsTrue concode_elem_sep void testSetHeading concode_elem_sep void testHDGParserTalkerId concode_elem_sep void testSetVariationWest concode_elem_sep void testConstructor concode_elem_sep void testSetVariationTooLow concode_elem_sep void testGetVariation concode_elem_sep void testSetVariationTooHigh concode_elem_sep void testSetVariationEast concode_elem_sep void testGetDeviation concode_elem_sep void testSetDeviationTooLow concode_elem_sep void setUp concode_elem_sep void testGetHeading concode_elem_sep void testSetDeviationEast concode_elem_sep void testHDGParserString concode_elem_sep void testSetDeviationWest concode_elem_sep void testSetHeadingTooLow"]}
{"code": "boolean function ( DenseMatrix64F arg0 ) { blockA . reshape ( arg0 . numRows , arg0 . numCols , false ) ; BlockMatrixOps . convert ( arg0 , blockA ) ; return alg . setA ( blockA ) ; }", "nl": "converts ` a ' into a block matrix and call seta on the block matrix solver . concode_field_sep LinearSolver<BlockMatrix64F> alg concode_elem_sep BlockMatrix64F blockA concode_elem_sep BlockMatrix64F blockB concode_elem_sep BlockMatrix64F blockX concode_field_sep void invert concode_elem_sep void solve concode_elem_sep boolean modifiesA concode_elem_sep boolean modifiesB concode_elem_sep double quality", "code_tokens": ["boolean", "function", "(", "DenseMatrix64F", "arg0", ")", "{", "blockA", ".", "reshape", "(", "arg0", ".", "numRows", ",", "arg0", ".", "numCols", ",", "false", ")", ";", "BlockMatrixOps", ".", "convert", "(", "arg0", ",", "blockA", ")", ";", "return", "alg", ".", "setA", "(", "blockA", ")", ";", "}"], "nl_tokens": ["converts", "`", "a", "'", "into", "a", "block", "matrix", "and", "call", "seta", "on", "the", "block", "matrix", "solver", ".", "concode_field_sep", "LinearSolver", "<", "BlockMatrix64F", ">", "alg", "concode_elem_sep", "BlockMatrix64F", "blockA", "concode_elem_sep", "BlockMatrix64F", "blockB", "concode_elem_sep", "BlockMatrix64F", "blockX", "concode_field_sep", "void", "invert", "concode_elem_sep", "void", "solve", "concode_elem_sep", "boolean", "modifiesA", "concode_elem_sep", "boolean", "modifiesB", "concode_elem_sep", "double", "quality"]}
{"code": "byte function ( byte [ ] arg0 ) { int loc0 = FINGERPRINT_HASHER . hashBytes ( arg0 ) . asInt ( ) ; loc0 = ( loc0 >> 24 ) & 0xff ; return ( byte ) ( ( loc0 == 0 ) ? 1 : loc0 ) ; }", "nl": "hashes a key in byte array into a non-zero , one byte fingerprint . concode_field_sep int mKeyCount concode_elem_sep int BUCKET_SIZE_BYTES concode_elem_sep ByteBuffer mBuf concode_elem_sep int INDEX_HASHER_SEED concode_elem_sep int FINGERPRINT_HASHER_SEED concode_elem_sep HashFunction FINGERPRINT_HASHER concode_elem_sep HashFunction INDEX_HASHER concode_elem_sep ByteBuffer mHashTableBuf concode_elem_sep int MAX_PROBES concode_elem_sep int mNumBuckets concode_field_sep int keyCount concode_elem_sep Iterator<ByteBuffer> keyIterator concode_elem_sep int bucketOffset concode_elem_sep LinearProbingIndex createEmptyIndex concode_elem_sep LinearProbingIndex loadFromByteArray concode_elem_sep int byteCount concode_elem_sep ByteBuffer get concode_elem_sep int indexHash concode_elem_sep int indexHash concode_elem_sep ByteBuffer nextKey concode_elem_sep boolean put concode_elem_sep byte[] getBytes", "code_tokens": ["byte", "function", "(", "byte", "[", "]", "arg0", ")", "{", "int", "loc0", "=", "FINGERPRINT_HASHER", ".", "hashBytes", "(", "arg0", ")", ".", "asInt", "(", ")", ";", "loc0", "=", "(", "loc0", ">>", "24", ")", "&", "0xff", ";", "return", "(", "byte", ")", "(", "(", "loc0", "==", "0", ")", "?", "1", ":", "loc0", ")", ";", "}"], "nl_tokens": ["hashes", "a", "key", "in", "byte", "array", "into", "a", "non", "-", "zero", ",", "one", "byte", "fingerprint", ".", "concode_field_sep", "int", "mKeyCount", "concode_elem_sep", "int", "BUCKET_SIZE_BYTES", "concode_elem_sep", "ByteBuffer", "mBuf", "concode_elem_sep", "int", "INDEX_HASHER_SEED", "concode_elem_sep", "int", "FINGERPRINT_HASHER_SEED", "concode_elem_sep", "HashFunction", "FINGERPRINT_HASHER", "concode_elem_sep", "HashFunction", "INDEX_HASHER", "concode_elem_sep", "ByteBuffer", "mHashTableBuf", "concode_elem_sep", "int", "MAX_PROBES", "concode_elem_sep", "int", "mNumBuckets", "concode_field_sep", "int", "keyCount", "concode_elem_sep", "Iterator", "<", "ByteBuffer", ">", "keyIterator", "concode_elem_sep", "int", "bucketOffset", "concode_elem_sep", "LinearProbingIndex", "createEmptyIndex", "concode_elem_sep", "LinearProbingIndex", "loadFromByteArray", "concode_elem_sep", "int", "byteCount", "concode_elem_sep", "ByteBuffer", "get", "concode_elem_sep", "int", "indexHash", "concode_elem_sep", "int", "indexHash", "concode_elem_sep", "ByteBuffer", "nextKey", "concode_elem_sep", "boolean", "put", "concode_elem_sep", "byte", "[", "]", "getBytes"]}
{"code": "boolean function ( Language arg0 ) { for ( RuleSet loc0 : ruleSets ) { if ( loc0 . usesTypeResolution ( arg0 ) ) { return true ; } } return false ; }", "nl": "does any rule for the given language use type resolution ? concode_field_sep List<RuleSet> ruleSets concode_elem_sep RuleChain ruleChain concode_field_sep void apply concode_elem_sep void start concode_elem_sep boolean usesDFA concode_elem_sep Rule getRuleByName concode_elem_sep RuleSet[] getAllRuleSets concode_elem_sep boolean usesMetrics concode_elem_sep long getChecksum concode_elem_sep void addRuleSet concode_elem_sep int ruleCount concode_elem_sep boolean applies concode_elem_sep Iterator<RuleSet> getRuleSetsIterator concode_elem_sep void end concode_elem_sep void removeDysfunctionalRules concode_elem_sep Set<Rule> getAllRules", "code_tokens": ["boolean", "function", "(", "Language", "arg0", ")", "{", "for", "(", "RuleSet", "loc0", ":", "ruleSets", ")", "{", "if", "(", "loc0", ".", "usesTypeResolution", "(", "arg0", ")", ")", "{", "return", "true", ";", "}", "}", "return", "false", ";", "}"], "nl_tokens": ["does", "any", "rule", "for", "the", "given", "language", "use", "type", "resolution", "?", "concode_field_sep", "List", "<", "RuleSet", ">", "ruleSets", "concode_elem_sep", "RuleChain", "ruleChain", "concode_field_sep", "void", "apply", "concode_elem_sep", "void", "start", "concode_elem_sep", "boolean", "usesDFA", "concode_elem_sep", "Rule", "getRuleByName", "concode_elem_sep", "RuleSet", "[", "]", "getAllRuleSets", "concode_elem_sep", "boolean", "usesMetrics", "concode_elem_sep", "long", "getChecksum", "concode_elem_sep", "void", "addRuleSet", "concode_elem_sep", "int", "ruleCount", "concode_elem_sep", "boolean", "applies", "concode_elem_sep", "Iterator", "<", "RuleSet", ">", "getRuleSetsIterator", "concode_elem_sep", "void", "end", "concode_elem_sep", "void", "removeDysfunctionalRules", "concode_elem_sep", "Set", "<", "Rule", ">", "getAllRules"]}
{"code": "String function ( ) { al = new ArrayList < String > ( ) ; traverse ( root , \"srini_string\" ) ; return \"srini_string\" + al ; }", "nl": "function to print tree concode_field_sep TSTNode middle concode_elem_sep char data concode_elem_sep TSTNode left concode_elem_sep TSTNode root concode_elem_sep TSTNode right concode_elem_sep ArrayList<String> al concode_elem_sep boolean is_End_Of_String concode_field_sep void traverse concode_elem_sep boolean search concode_elem_sep boolean search concode_elem_sep void makeEmpty concode_elem_sep boolean isEmpty concode_elem_sep void insert concode_elem_sep TSTNode insert concode_elem_sep void main concode_elem_sep void delete concode_elem_sep void delete", "code_tokens": ["String", "function", "(", ")", "{", "al", "=", "new", "ArrayList", "<", "String", ">", "(", ")", ";", "traverse", "(", "root", ",", "\"srini_string\"", ")", ";", "return", "\"srini_string\"", "+", "al", ";", "}"], "nl_tokens": ["function", "to", "print", "tree", "concode_field_sep", "TSTNode", "middle", "concode_elem_sep", "char", "data", "concode_elem_sep", "TSTNode", "left", "concode_elem_sep", "TSTNode", "root", "concode_elem_sep", "TSTNode", "right", "concode_elem_sep", "ArrayList", "<", "String", ">", "al", "concode_elem_sep", "boolean", "is_End_Of_String", "concode_field_sep", "void", "traverse", "concode_elem_sep", "boolean", "search", "concode_elem_sep", "boolean", "search", "concode_elem_sep", "void", "makeEmpty", "concode_elem_sep", "boolean", "isEmpty", "concode_elem_sep", "void", "insert", "concode_elem_sep", "TSTNode", "insert", "concode_elem_sep", "void", "main", "concode_elem_sep", "void", "delete", "concode_elem_sep", "void", "delete"]}
{"code": "void function ( ) { Assert . assertEquals ( TieredBlockStoreTestUtils . TIER_PATH [ TEST_TIER_LEVEL ] . length , mTestTierView . getDirViews ( ) . size ( ) ) ; }", "nl": "tests the storagetierview #getdirviews method . concode_field_sep StorageTier mTestTier concode_elem_sep int TEST_TIER_LEVEL concode_elem_sep ExpectedException mThrown concode_elem_sep TemporaryFolder mTestFolder concode_elem_sep StorageTierView mTestTierView concode_field_sep void getDirView concode_elem_sep void before concode_elem_sep void getDirViewBadIndex concode_elem_sep void getTierViewAlias concode_elem_sep void getTierViewOrdinal", "code_tokens": ["void", "function", "(", ")", "{", "Assert", ".", "assertEquals", "(", "TieredBlockStoreTestUtils", ".", "TIER_PATH", "[", "TEST_TIER_LEVEL", "]", ".", "length", ",", "mTestTierView", ".", "getDirViews", "(", ")", ".", "size", "(", ")", ")", ";", "}"], "nl_tokens": ["tests", "the", "storagetierview", "#getdirviews method . concode_field_sep StorageTier mTestTier concode_elem_sep int TEST_TIER_LEVEL concode_elem_sep ExpectedException mThrown concode_elem_sep TemporaryFolder mTestFolder concode_elem_sep StorageTierView mTestTierView concode_field_sep void getDirView concode_elem_sep void before concode_elem_sep void getDirViewBadIndex concode_elem_sep void getTierViewAlias concode_elem_sep void getTierViewOrdinal"]}
{"code": "BlockWorkerClient function ( WorkerNetAddress arg0 ) { Preconditions . checkNotNull ( arg0 , ExceptionMessage . NO_WORKER_AVAILABLE . getMessage ( ) ) ; long loc0 = IdUtils . getRandomNonNegativeLong ( ) ; return new RetryHandlingBlockWorkerClient ( arg0 , loc0 ) ; }", "nl": "obtains a client for a worker with the given address . concode_field_sep ConcurrentHashMapV8<InetSocketAddress,BlockWorkerThriftClientPool> BLOCK_WORKER_THRIFT_CLIENT_HEARTBEAT_POOL concode_elem_sep BlockMasterClientPool mBlockMasterClientPool concode_elem_sep Boolean mHasLocalWorker concode_elem_sep ConcurrentHashMapV8<InetSocketAddress,BlockWorkerThriftClientPool> BLOCK_WORKER_THRIFT_CLIENT_POOL concode_elem_sep ConcurrentHashMapV8<InetSocketAddress,NettyChannelPool> NETTY_CHANNEL_POOL_MAP concode_elem_sep Map<InetSocketAddress,BlockStoreContext> CACHED_CONTEXTS concode_field_sep void releaseBlockWorkerThriftClient concode_elem_sep void initializeGauges concode_elem_sep boolean hasLocalWorker concode_elem_sep void releaseBlockWorkerThriftClientHeartbeat concode_elem_sep void releaseWorkerClient concode_elem_sep BlockStoreContext get concode_elem_sep BlockStoreContext get concode_elem_sep CloseableResource<BlockMasterClient> acquireMasterClientResource concode_elem_sep void releaseNettyChannel concode_elem_sep BlockWorkerClientService.Client acquireBlockWorkerThriftClient concode_elem_sep List<WorkerNetAddress> getWorkerAddresses concode_elem_sep Channel acquireNettyChannel concode_elem_sep BlockWorkerClientService.Client acquireBlockWorkerThriftClientHeartbeat", "code_tokens": ["BlockWorkerClient", "function", "(", "WorkerNetAddress", "arg0", ")", "{", "Preconditions", ".", "checkNotNull", "(", "arg0", ",", "ExceptionMessage", ".", "NO_WORKER_AVAILABLE", ".", "getMessage", "(", ")", ")", ";", "long", "loc0", "=", "IdUtils", ".", "getRandomNonNegativeLong", "(", ")", ";", "return", "new", "RetryHandlingBlockWorkerClient", "(", "arg0", ",", "loc0", ")", ";", "}"], "nl_tokens": ["obtains", "a", "client", "for", "a", "worker", "with", "the", "given", "address", ".", "concode_field_sep", "ConcurrentHashMapV8", "<", "InetSocketAddress", ",", "BlockWorkerThriftClientPool", ">", "BLOCK_WORKER_THRIFT_CLIENT_HEARTBEAT_POOL", "concode_elem_sep", "BlockMasterClientPool", "mBlockMasterClientPool", "concode_elem_sep", "Boolean", "mHasLocalWorker", "concode_elem_sep", "ConcurrentHashMapV8", "<", "InetSocketAddress", ",", "BlockWorkerThriftClientPool", ">", "BLOCK_WORKER_THRIFT_CLIENT_POOL", "concode_elem_sep", "ConcurrentHashMapV8", "<", "InetSocketAddress", ",", "NettyChannelPool", ">", "NETTY_CHANNEL_POOL_MAP", "concode_elem_sep", "Map", "<", "InetSocketAddress", ",", "BlockStoreContext", ">", "CACHED_CONTEXTS", "concode_field_sep", "void", "releaseBlockWorkerThriftClient", "concode_elem_sep", "void", "initializeGauges", "concode_elem_sep", "boolean", "hasLocalWorker", "concode_elem_sep", "void", "releaseBlockWorkerThriftClientHeartbeat", "concode_elem_sep", "void", "releaseWorkerClient", "concode_elem_sep", "BlockStoreContext", "get", "concode_elem_sep", "BlockStoreContext", "get", "concode_elem_sep", "CloseableResource", "<", "BlockMasterClient", ">", "acquireMasterClientResource", "concode_elem_sep", "void", "releaseNettyChannel", "concode_elem_sep", "BlockWorkerClientService", ".", "Client", "acquireBlockWorkerThriftClient", "concode_elem_sep", "List", "<", "WorkerNetAddress", ">", "getWorkerAddresses", "concode_elem_sep", "Channel", "acquireNettyChannel", "concode_elem_sep", "BlockWorkerClientService", ".", "Client", "acquireBlockWorkerThriftClientHeartbeat"]}
{"code": "void function ( ) { URLConnection loc0 = null ; url = new URL ( composeURL ( \"srini_string\" ) ) ; loc0 = url . openConnection ( ) ; loc0 . connect ( ) ; DataInputStream loc1 = new DataInputStream ( new BufferedInputStream ( loc0 . getInputStream ( ) ) ) ; }", "nl": "starts the video stream concode_field_sep int framerate concode_elem_sep String cameraIPAddress concode_elem_sep String channel concode_elem_sep int cameraPort concode_elem_sep int compression concode_elem_sep String resolution concode_elem_sep URL url concode_field_sep URL getURL concode_elem_sep void halt concode_elem_sep void movePanTilt concode_elem_sep String composeURL concode_elem_sep void runUrl concode_elem_sep void setIPAddress concode_elem_sep void moveZoom", "code_tokens": ["void", "function", "(", ")", "{", "URLConnection", "loc0", "=", "null", ";", "url", "=", "new", "URL", "(", "composeURL", "(", "\"srini_string\"", ")", ")", ";", "loc0", "=", "url", ".", "openConnection", "(", ")", ";", "loc0", ".", "connect", "(", ")", ";", "DataInputStream", "loc1", "=", "new", "DataInputStream", "(", "new", "BufferedInputStream", "(", "loc0", ".", "getInputStream", "(", ")", ")", ")", ";", "}"], "nl_tokens": ["starts", "the", "video", "stream", "concode_field_sep", "int", "framerate", "concode_elem_sep", "String", "cameraIPAddress", "concode_elem_sep", "String", "channel", "concode_elem_sep", "int", "cameraPort", "concode_elem_sep", "int", "compression", "concode_elem_sep", "String", "resolution", "concode_elem_sep", "URL", "url", "concode_field_sep", "URL", "getURL", "concode_elem_sep", "void", "halt", "concode_elem_sep", "void", "movePanTilt", "concode_elem_sep", "String", "composeURL", "concode_elem_sep", "void", "runUrl", "concode_elem_sep", "void", "setIPAddress", "concode_elem_sep", "void", "moveZoom"]}
{"code": "String function ( ) { StringBuilder loc0 = new StringBuilder ( ) ; for ( String loc1 : log ) { loc0 . append ( loc1 ) . append ( ( \"srini_string\" ) ) ; } return loc0 . toString ( ) . trim ( ) ; }", "nl": "returns the list as a string representation . concode_field_sep List<String> log concode_field_sep List<String> get concode_elem_sep void clean concode_elem_sep void append", "code_tokens": ["String", "function", "(", ")", "{", "StringBuilder", "loc0", "=", "new", "StringBuilder", "(", ")", ";", "for", "(", "String", "loc1", ":", "log", ")", "{", "loc0", ".", "append", "(", "loc1", ")", ".", "append", "(", "(", "\"srini_string\"", ")", ")", ";", "}", "return", "loc0", ".", "toString", "(", ")", ".", "trim", "(", ")", ";", "}"], "nl_tokens": ["returns", "the", "list", "as", "a", "string", "representation", ".", "concode_field_sep", "List", "<", "String", ">", "log", "concode_field_sep", "List", "<", "String", ">", "get", "concode_elem_sep", "void", "clean", "concode_elem_sep", "void", "append"]}
{"code": "int function ( String arg0 , OutputStream arg1 ) { return encoder . decode ( arg0 , arg1 ) ; }", "nl": "decode the hex encoded string data writing it to the given output stream , whitespace characters will be ignored . concode_field_sep Encoder encoder concode_field_sep byte[] encode concode_elem_sep byte[] encode concode_elem_sep int encode concode_elem_sep int encode", "code_tokens": ["int", "function", "(", "String", "arg0", ",", "OutputStream", "arg1", ")", "{", "return", "encoder", ".", "decode", "(", "arg0", ",", "arg1", ")", ";", "}"], "nl_tokens": ["decode", "the", "hex", "encoded", "string", "data", "writing", "it", "to", "the", "given", "output", "stream", ",", "whitespace", "characters", "will", "be", "ignored", ".", "concode_field_sep", "Encoder", "encoder", "concode_field_sep", "byte", "[", "]", "encode", "concode_elem_sep", "byte", "[", "]", "encode", "concode_elem_sep", "int", "encode", "concode_elem_sep", "int", "encode"]}
{"code": "String function ( ) { return transformedTokenIdentifier ; }", "nl": "get the identifier corresponding to a transformed version of this token concode_field_sep Date expires concode_elem_sep byte[] data concode_elem_sep String transformedTokenIdentifier concode_elem_sep Date created concode_elem_sep Element unattachedReference concode_elem_sep byte[] secret concode_elem_sep SecurityContext securityContext concode_elem_sep int tokenHash concode_elem_sep Element token concode_elem_sep Crypto crypto concode_elem_sep Principal principal concode_elem_sep long serialVersionUID concode_elem_sep String wsuId concode_elem_sep String issuerAddress concode_elem_sep String encrKeySha1Value concode_elem_sep String id concode_elem_sep X509Certificate x509cert concode_elem_sep String BOOTSTRAP_TOKEN_ID concode_elem_sep String tokenType concode_elem_sep Element attachedReference concode_elem_sep Map<String,Object> properties concode_elem_sep Key key concode_field_sep void setAttachedReference concode_elem_sep String getTokenType concode_elem_sep void setProperties concode_elem_sep void setExpires concode_elem_sep String getIssuerAddress concode_elem_sep void setSHA1 concode_elem_sep String getId concode_elem_sep void setX509Certificate concode_elem_sep void setTokenHash concode_elem_sep void setPrincipal concode_elem_sep Principal getPrincipal concode_elem_sep String getIdFromSTR concode_elem_sep void setId concode_elem_sep void setIssuerAddress concode_elem_sep byte[] getData concode_elem_sep void setKey concode_elem_sep void setTokenType concode_elem_sep Key getKey concode_elem_sep void setData concode_elem_sep Map<String,Object> getProperties concode_elem_sep void setTransformedTokenIdentifier concode_elem_sep int getTokenHash concode_elem_sep Date getCreated concode_elem_sep Element getUnattachedReference concode_elem_sep void processLifeTime concode_elem_sep void setUnattachedReference concode_elem_sep void setSecurityContext concode_elem_sep Crypto getCrypto concode_elem_sep byte[] getSecret concode_elem_sep void setToken concode_elem_sep void setSecret concode_elem_sep X509Certificate getX509Certificate concode_elem_sep Element getToken concode_elem_sep boolean isAboutToExpire concode_elem_sep boolean isExpired concode_elem_sep void setWsuId concode_elem_sep Date getExpires concode_elem_sep String getWsuId concode_elem_sep Element cloneElement concode_elem_sep Element getAttachedReference concode_elem_sep String getSHA1 concode_elem_sep SecurityContext getSecurityContext", "code_tokens": ["String", "function", "(", ")", "{", "return", "transformedTokenIdentifier", ";", "}"], "nl_tokens": ["get", "the", "identifier", "corresponding", "to", "a", "transformed", "version", "of", "this", "token", "concode_field_sep", "Date", "expires", "concode_elem_sep", "byte", "[", "]", "data", "concode_elem_sep", "String", "transformedTokenIdentifier", "concode_elem_sep", "Date", "created", "concode_elem_sep", "Element", "unattachedReference", "concode_elem_sep", "byte", "[", "]", "secret", "concode_elem_sep", "SecurityContext", "securityContext", "concode_elem_sep", "int", "tokenHash", "concode_elem_sep", "Element", "token", "concode_elem_sep", "Crypto", "crypto", "concode_elem_sep", "Principal", "principal", "concode_elem_sep", "long", "serialVersionUID", "concode_elem_sep", "String", "wsuId", "concode_elem_sep", "String", "issuerAddress", "concode_elem_sep", "String", "encrKeySha1Value", "concode_elem_sep", "String", "id", "concode_elem_sep", "X509Certificate", "x509cert", "concode_elem_sep", "String", "BOOTSTRAP_TOKEN_ID", "concode_elem_sep", "String", "tokenType", "concode_elem_sep", "Element", "attachedReference", "concode_elem_sep", "Map", "<", "String", ",", "Object", ">", "properties", "concode_elem_sep", "Key", "key", "concode_field_sep", "void", "setAttachedReference", "concode_elem_sep", "String", "getTokenType", "concode_elem_sep", "void", "setProperties", "concode_elem_sep", "void", "setExpires", "concode_elem_sep", "String", "getIssuerAddress", "concode_elem_sep", "void", "setSHA1", "concode_elem_sep", "String", "getId", "concode_elem_sep", "void", "setX509Certificate", "concode_elem_sep", "void", "setTokenHash", "concode_elem_sep", "void", "setPrincipal", "concode_elem_sep", "Principal", "getPrincipal", "concode_elem_sep", "String", "getIdFromSTR", "concode_elem_sep", "void", "setId", "concode_elem_sep", "void", "setIssuerAddress", "concode_elem_sep", "byte", "[", "]", "getData", "concode_elem_sep", "void", "setKey", "concode_elem_sep", "void", "setTokenType", "concode_elem_sep", "Key", "getKey", "concode_elem_sep", "void", "setData", "concode_elem_sep", "Map", "<", "String", ",", "Object", ">", "getProperties", "concode_elem_sep", "void", "setTransformedTokenIdentifier", "concode_elem_sep", "int", "getTokenHash", "concode_elem_sep", "Date", "getCreated", "concode_elem_sep", "Element", "getUnattachedReference", "concode_elem_sep", "void", "processLifeTime", "concode_elem_sep", "void", "setUnattachedReference", "concode_elem_sep", "void", "setSecurityContext", "concode_elem_sep", "Crypto", "getCrypto", "concode_elem_sep", "byte", "[", "]", "getSecret", "concode_elem_sep", "void", "setToken", "concode_elem_sep", "void", "setSecret", "concode_elem_sep", "X509Certificate", "getX509Certificate", "concode_elem_sep", "Element", "getToken", "concode_elem_sep", "boolean", "isAboutToExpire", "concode_elem_sep", "boolean", "isExpired", "concode_elem_sep", "void", "setWsuId", "concode_elem_sep", "Date", "getExpires", "concode_elem_sep", "String", "getWsuId", "concode_elem_sep", "Element", "cloneElement", "concode_elem_sep", "Element", "getAttachedReference", "concode_elem_sep", "String", "getSHA1", "concode_elem_sep", "SecurityContext", "getSecurityContext"]}
{"code": "void function ( int arg0 ) { int loc0 = arg0 - basePort - 1 ; if ( ! allocated [ loc0 ] ) { throw new IllegalStateException ( \"srini_string\" ) ; } allocated [ loc0 ] = false ; }", "nl": "release the given port . concode_field_sep int basePort concode_elem_sep PortAllocator INSTANCE concode_elem_sep List<PortRange> ranges concode_elem_sep boolean[] allocated concode_elem_sep int BASE_PORT_INCREMENT concode_elem_sep ServerSocket serverSocket concode_elem_sep int BASE_PORT concode_field_sep boolean hasPort concode_elem_sep int allocatePort concode_elem_sep int allocatePort concode_elem_sep void release concode_elem_sep void setUp concode_elem_sep void tearDown", "code_tokens": ["void", "function", "(", "int", "arg0", ")", "{", "int", "loc0", "=", "arg0", "-", "basePort", "-", "1", ";", "if", "(", "!", "allocated", "[", "loc0", "]", ")", "{", "throw", "new", "IllegalStateException", "(", "\"srini_string\"", ")", ";", "}", "allocated", "[", "loc0", "]", "=", "false", ";", "}"], "nl_tokens": ["release", "the", "given", "port", ".", "concode_field_sep", "int", "basePort", "concode_elem_sep", "PortAllocator", "INSTANCE", "concode_elem_sep", "List", "<", "PortRange", ">", "ranges", "concode_elem_sep", "boolean", "[", "]", "allocated", "concode_elem_sep", "int", "BASE_PORT_INCREMENT", "concode_elem_sep", "ServerSocket", "serverSocket", "concode_elem_sep", "int", "BASE_PORT", "concode_field_sep", "boolean", "hasPort", "concode_elem_sep", "int", "allocatePort", "concode_elem_sep", "int", "allocatePort", "concode_elem_sep", "void", "release", "concode_elem_sep", "void", "setUp", "concode_elem_sep", "void", "tearDown"]}
{"code": "ActivityGraphsHelper function ( ) { return impl ; }", "nl": "the component we are decorating . concode_field_sep ActivityGraphsHelper impl concode_field_sep void setParameters concode_elem_sep void addInState concode_elem_sep void setSynch concode_elem_sep Object findStateByName concode_elem_sep boolean isAddingActivityGraphAllowed concode_elem_sep void setInStates concode_elem_sep Object findClassifierByName concode_elem_sep void addContent concode_elem_sep void removeContent concode_elem_sep void setContents concode_elem_sep void addParameter concode_elem_sep void removeParameter", "code_tokens": ["ActivityGraphsHelper", "function", "(", ")", "{", "return", "impl", ";", "}"], "nl_tokens": ["the", "component", "we", "are", "decorating", ".", "concode_field_sep", "ActivityGraphsHelper", "impl", "concode_field_sep", "void", "setParameters", "concode_elem_sep", "void", "addInState", "concode_elem_sep", "void", "setSynch", "concode_elem_sep", "Object", "findStateByName", "concode_elem_sep", "boolean", "isAddingActivityGraphAllowed", "concode_elem_sep", "void", "setInStates", "concode_elem_sep", "Object", "findClassifierByName", "concode_elem_sep", "void", "addContent", "concode_elem_sep", "void", "removeContent", "concode_elem_sep", "void", "setContents", "concode_elem_sep", "void", "addParameter", "concode_elem_sep", "void", "removeParameter"]}
{"code": "void function ( ) { mHostname = NetworkAddressUtils . getLocalHostName ( 100 ) ; }", "nl": "sets hostname . concode_field_sep UnderFileSystemCluster mUfsCluster concode_elem_sep int mNumWorkers concode_elem_sep String mWorkDirectory concode_elem_sep List<AlluxioWorkerService> mWorkers concode_elem_sep long DEFAULT_WORKER_MEMORY_BYTES concode_elem_sep Logger LOG concode_elem_sep int DEFAULT_BLOCK_SIZE_BYTES concode_elem_sep Random RANDOM_GENERATOR concode_elem_sep String mHostname concode_field_sep void setAlluxioWorkDirectory concode_elem_sep void start concode_elem_sep FileSystem getClient concode_elem_sep void setupTest concode_elem_sep void stopUFS concode_elem_sep void initConfiguration concode_elem_sep void stop concode_elem_sep void startWorkers concode_elem_sep void runWorkers concode_elem_sep void startMaster concode_elem_sep void reset concode_elem_sep void stopFS concode_elem_sep LocalAlluxioMaster getMaster", "code_tokens": ["void", "function", "(", ")", "{", "mHostname", "=", "NetworkAddressUtils", ".", "getLocalHostName", "(", "100", ")", ";", "}"], "nl_tokens": ["sets", "hostname", ".", "concode_field_sep", "UnderFileSystemCluster", "mUfsCluster", "concode_elem_sep", "int", "mNumWorkers", "concode_elem_sep", "String", "mWorkDirectory", "concode_elem_sep", "List", "<", "AlluxioWorkerService", ">", "mWorkers", "concode_elem_sep", "long", "DEFAULT_WORKER_MEMORY_BYTES", "concode_elem_sep", "Logger", "LOG", "concode_elem_sep", "int", "DEFAULT_BLOCK_SIZE_BYTES", "concode_elem_sep", "Random", "RANDOM_GENERATOR", "concode_elem_sep", "String", "mHostname", "concode_field_sep", "void", "setAlluxioWorkDirectory", "concode_elem_sep", "void", "start", "concode_elem_sep", "FileSystem", "getClient", "concode_elem_sep", "void", "setupTest", "concode_elem_sep", "void", "stopUFS", "concode_elem_sep", "void", "initConfiguration", "concode_elem_sep", "void", "stop", "concode_elem_sep", "void", "startWorkers", "concode_elem_sep", "void", "runWorkers", "concode_elem_sep", "void", "startMaster", "concode_elem_sep", "void", "reset", "concode_elem_sep", "void", "stopFS", "concode_elem_sep", "LocalAlluxioMaster", "getMaster"]}
{"code": "void function ( ) { SpaceXGUI . getInstance ( ) . appendToConsole ( TAG , \"srini_string\" ) ; cmd . goRight ( 5 ) . doFor ( 1000 ) ; cmd . hover ( ) . doFor ( hoverTime ) ; }", "nl": "right move the drone a little to the right concode_field_sep GeneralMotorCon ourInstance concode_elem_sep int spin90Time concode_elem_sep String TAG concode_elem_sep int batLvl concode_elem_sep long threadTimer concode_elem_sep int spinSpeed concode_elem_sep CommandManager cmd concode_elem_sep int hoverTime concode_elem_sep int speed concode_elem_sep int spin90Speed concode_elem_sep ARDrone drone concode_elem_sep int spinTime concode_field_sep void spin90Left concode_elem_sep void spinRight concode_elem_sep void takeoff concode_elem_sep void forward concode_elem_sep void spinLeft concode_elem_sep void lowerAltitude concode_elem_sep void spin90Right concode_elem_sep void landing concode_elem_sep void setDrone concode_elem_sep void left concode_elem_sep void backward concode_elem_sep GeneralMotorCon getInstance concode_elem_sep void setBatLvl concode_elem_sep void waitFor concode_elem_sep int getBatLvl concode_elem_sep void onStop concode_elem_sep void raiseAltitude", "code_tokens": ["void", "function", "(", ")", "{", "SpaceXGUI", ".", "getInstance", "(", ")", ".", "appendToConsole", "(", "TAG", ",", "\"srini_string\"", ")", ";", "cmd", ".", "goRight", "(", "5", ")", ".", "doFor", "(", "1000", ")", ";", "cmd", ".", "hover", "(", ")", ".", "doFor", "(", "hoverTime", ")", ";", "}"], "nl_tokens": ["right", "move", "the", "drone", "a", "little", "to", "the", "right", "concode_field_sep", "GeneralMotorCon", "ourInstance", "concode_elem_sep", "int", "spin90Time", "concode_elem_sep", "String", "TAG", "concode_elem_sep", "int", "batLvl", "concode_elem_sep", "long", "threadTimer", "concode_elem_sep", "int", "spinSpeed", "concode_elem_sep", "CommandManager", "cmd", "concode_elem_sep", "int", "hoverTime", "concode_elem_sep", "int", "speed", "concode_elem_sep", "int", "spin90Speed", "concode_elem_sep", "ARDrone", "drone", "concode_elem_sep", "int", "spinTime", "concode_field_sep", "void", "spin90Left", "concode_elem_sep", "void", "spinRight", "concode_elem_sep", "void", "takeoff", "concode_elem_sep", "void", "forward", "concode_elem_sep", "void", "spinLeft", "concode_elem_sep", "void", "lowerAltitude", "concode_elem_sep", "void", "spin90Right", "concode_elem_sep", "void", "landing", "concode_elem_sep", "void", "setDrone", "concode_elem_sep", "void", "left", "concode_elem_sep", "void", "backward", "concode_elem_sep", "GeneralMotorCon", "getInstance", "concode_elem_sep", "void", "setBatLvl", "concode_elem_sep", "void", "waitFor", "concode_elem_sep", "int", "getBatLvl", "concode_elem_sep", "void", "onStop", "concode_elem_sep", "void", "raiseAltitude"]}
{"code": "JsonElement function ( Set < String > arg0 ) { return getAsArray ( arg0 , false ) ; }", "nl": "translate a set of strings to a json array , empty array returned as null concode_field_sep Gson gson concode_elem_sep Logger logger concode_field_sep Map readMap concode_elem_sep Date getAsDate concode_elem_sep List<EncryptionMethod> getAsEncryptionMethodList concode_elem_sep Set readSet concode_elem_sep String getAsString concode_elem_sep EncryptionMethod getAsJweEncryptionMethod concode_elem_sep Set<String> getAsStringSet concode_elem_sep List<JWEAlgorithm> getAsJweAlgorithmList concode_elem_sep void writeNullSafeArray concode_elem_sep Long getAsLong concode_elem_sep Boolean getAsBoolean concode_elem_sep JWSAlgorithm getAsJwsAlgorithm concode_elem_sep JWEAlgorithm getAsJweAlgorithm concode_elem_sep List<JWSAlgorithm> getAsJwsAlgorithmList concode_elem_sep List<String> getAsStringList", "code_tokens": ["JsonElement", "function", "(", "Set", "<", "String", ">", "arg0", ")", "{", "return", "getAsArray", "(", "arg0", ",", "false", ")", ";", "}"], "nl_tokens": ["translate", "a", "set", "of", "strings", "to", "a", "json", "array", ",", "empty", "array", "returned", "as", "null", "concode_field_sep", "Gson", "gson", "concode_elem_sep", "Logger", "logger", "concode_field_sep", "Map", "readMap", "concode_elem_sep", "Date", "getAsDate", "concode_elem_sep", "List", "<", "EncryptionMethod", ">", "getAsEncryptionMethodList", "concode_elem_sep", "Set", "readSet", "concode_elem_sep", "String", "getAsString", "concode_elem_sep", "EncryptionMethod", "getAsJweEncryptionMethod", "concode_elem_sep", "Set", "<", "String", ">", "getAsStringSet", "concode_elem_sep", "List", "<", "JWEAlgorithm", ">", "getAsJweAlgorithmList", "concode_elem_sep", "void", "writeNullSafeArray", "concode_elem_sep", "Long", "getAsLong", "concode_elem_sep", "Boolean", "getAsBoolean", "concode_elem_sep", "JWSAlgorithm", "getAsJwsAlgorithm", "concode_elem_sep", "JWEAlgorithm", "getAsJweAlgorithm", "concode_elem_sep", "List", "<", "JWSAlgorithm", ">", "getAsJwsAlgorithmList", "concode_elem_sep", "List", "<", "String", ">", "getAsStringList"]}
{"code": "void function ( ) { Mockito . when ( mClient . listObjects ( Matchers . any ( ListObjectsRequest . class ) ) ) . thenThrow ( ServiceException . class ) ; boolean loc0 = mOSSUnderFileSystem . delete ( PATH , true ) ; Assert . assertFalse ( loc0 ) ; }", "nl": "test case for ossunderfilesystem #delete string , boolean . concode_field_sep String BUCKET_PREFIX concode_elem_sep OSSClient mClient concode_elem_sep String DST concode_elem_sep String SRC concode_elem_sep OSSUnderFileSystem mOSSUnderFileSystem concode_elem_sep String PATH concode_elem_sep String BUCKET_NAME concode_field_sep void before concode_elem_sep void deleteNonRecursiveOnServiceException concode_elem_sep void renameOnServiceException", "code_tokens": ["void", "function", "(", ")", "{", "Mockito", ".", "when", "(", "mClient", ".", "listObjects", "(", "Matchers", ".", "any", "(", "ListObjectsRequest", ".", "class", ")", ")", ")", ".", "thenThrow", "(", "ServiceException", ".", "class", ")", ";", "boolean", "loc0", "=", "mOSSUnderFileSystem", ".", "delete", "(", "PATH", ",", "true", ")", ";", "Assert", ".", "assertFalse", "(", "loc0", ")", ";", "}"], "nl_tokens": ["test", "case", "for", "ossunderfilesystem", "#delete string , boolean . concode_field_sep String BUCKET_PREFIX concode_elem_sep OSSClient mClient concode_elem_sep String DST concode_elem_sep String SRC concode_elem_sep OSSUnderFileSystem mOSSUnderFileSystem concode_elem_sep String PATH concode_elem_sep String BUCKET_NAME concode_field_sep void before concode_elem_sep void deleteNonRecursiveOnServiceException concode_elem_sep void renameOnServiceException"]}
{"code": "StoredPaymentChannelClientStates function ( Wallet arg0 ) { return ( StoredPaymentChannelClientStates ) arg0 . getExtensions ( ) . get ( EXTENSION_ID ) ; }", "nl": "returns this extension from the given wallet , or null if no such extension was added . concode_field_sep Logger log concode_elem_sep TransactionBroadcaster announcePeerGroup concode_elem_sep Transaction contract concode_elem_sep ECKey myKey concode_elem_sep Timer channelTimeoutHandler concode_elem_sep boolean active concode_elem_sep String EXTENSION_ID concode_elem_sep Wallet containingWallet concode_elem_sep ReentrantLock lock concode_elem_sep BigInteger valueToMe concode_elem_sep BigInteger refundFees concode_elem_sep Sha256Hash id concode_elem_sep Transaction close concode_elem_sep HashMultimap<Sha256Hash,StoredClientChannel> mapChannels concode_elem_sep Transaction refund concode_field_sep long getSecondsUntilExpiry concode_elem_sep void putChannel concode_elem_sep void putChannel concode_elem_sep void removeChannel concode_elem_sep StoredClientChannel getChannel concode_elem_sep boolean isWalletExtensionMandatory concode_elem_sep BigInteger getBalanceForServer concode_elem_sep void deserializeWalletExtension concode_elem_sep String getWalletExtensionID concode_elem_sep StoredClientChannel getUsableChannelForServerID concode_elem_sep byte[] serializeWalletExtension concode_elem_sep String toString concode_elem_sep String toString concode_elem_sep long expiryTimeSeconds", "code_tokens": ["StoredPaymentChannelClientStates", "function", "(", "Wallet", "arg0", ")", "{", "return", "(", "StoredPaymentChannelClientStates", ")", "arg0", ".", "getExtensions", "(", ")", ".", "get", "(", "EXTENSION_ID", ")", ";", "}"], "nl_tokens": ["returns", "this", "extension", "from", "the", "given", "wallet", ",", "or", "null", "if", "no", "such", "extension", "was", "added", ".", "concode_field_sep", "Logger", "log", "concode_elem_sep", "TransactionBroadcaster", "announcePeerGroup", "concode_elem_sep", "Transaction", "contract", "concode_elem_sep", "ECKey", "myKey", "concode_elem_sep", "Timer", "channelTimeoutHandler", "concode_elem_sep", "boolean", "active", "concode_elem_sep", "String", "EXTENSION_ID", "concode_elem_sep", "Wallet", "containingWallet", "concode_elem_sep", "ReentrantLock", "lock", "concode_elem_sep", "BigInteger", "valueToMe", "concode_elem_sep", "BigInteger", "refundFees", "concode_elem_sep", "Sha256Hash", "id", "concode_elem_sep", "Transaction", "close", "concode_elem_sep", "HashMultimap", "<", "Sha256Hash", ",", "StoredClientChannel", ">", "mapChannels", "concode_elem_sep", "Transaction", "refund", "concode_field_sep", "long", "getSecondsUntilExpiry", "concode_elem_sep", "void", "putChannel", "concode_elem_sep", "void", "putChannel", "concode_elem_sep", "void", "removeChannel", "concode_elem_sep", "StoredClientChannel", "getChannel", "concode_elem_sep", "boolean", "isWalletExtensionMandatory", "concode_elem_sep", "BigInteger", "getBalanceForServer", "concode_elem_sep", "void", "deserializeWalletExtension", "concode_elem_sep", "String", "getWalletExtensionID", "concode_elem_sep", "StoredClientChannel", "getUsableChannelForServerID", "concode_elem_sep", "byte", "[", "]", "serializeWalletExtension", "concode_elem_sep", "String", "toString", "concode_elem_sep", "String", "toString", "concode_elem_sep", "long", "expiryTimeSeconds"]}
{"code": "void function ( BigDecimal arg0 ) { this . fileCount = arg0 ; }", "nl": "sets the file count . concode_field_sep Timestamp endDate concode_elem_sep BigDecimal feedConfigId concode_elem_sep String resultCode concode_elem_sep long serialVersionUID concode_elem_sep String resultMessage concode_elem_sep BigDecimal fileCount concode_elem_sep Timestamp maxReceiptDate concode_elem_sep BigDecimal downloadSize concode_elem_sep BigDecimal feedId concode_elem_sep String configInfo concode_elem_sep long runId concode_elem_sep byte[] errors concode_elem_sep String runStatus concode_elem_sep Timestamp startDate concode_field_sep BigDecimal getFeedConfigId concode_elem_sep Timestamp getStartDate concode_elem_sep void setFeedId concode_elem_sep String getResultCode concode_elem_sep void setFeedConfigId concode_elem_sep void setMaxReceiptDate concode_elem_sep long getRunId concode_elem_sep Timestamp getEndDate concode_elem_sep void setErrors concode_elem_sep String getConfigInfo concode_elem_sep void setEndDate concode_elem_sep byte[] getErrors concode_elem_sep BigDecimal getDownloadSize concode_elem_sep String getResultMessage concode_elem_sep void setResultMessage concode_elem_sep BigDecimal getFileCount concode_elem_sep String getRunStatus concode_elem_sep void setRunStatus concode_elem_sep void setStartDate concode_elem_sep BigDecimal getFeedId concode_elem_sep void setResultCode concode_elem_sep void setRunId concode_elem_sep Timestamp getMaxReceiptDate concode_elem_sep void setConfigInfo concode_elem_sep void setDownloadSize", "code_tokens": ["void", "function", "(", "BigDecimal", "arg0", ")", "{", "this", ".", "fileCount", "=", "arg0", ";", "}"], "nl_tokens": ["sets", "the", "file", "count", ".", "concode_field_sep", "Timestamp", "endDate", "concode_elem_sep", "BigDecimal", "feedConfigId", "concode_elem_sep", "String", "resultCode", "concode_elem_sep", "long", "serialVersionUID", "concode_elem_sep", "String", "resultMessage", "concode_elem_sep", "BigDecimal", "fileCount", "concode_elem_sep", "Timestamp", "maxReceiptDate", "concode_elem_sep", "BigDecimal", "downloadSize", "concode_elem_sep", "BigDecimal", "feedId", "concode_elem_sep", "String", "configInfo", "concode_elem_sep", "long", "runId", "concode_elem_sep", "byte", "[", "]", "errors", "concode_elem_sep", "String", "runStatus", "concode_elem_sep", "Timestamp", "startDate", "concode_field_sep", "BigDecimal", "getFeedConfigId", "concode_elem_sep", "Timestamp", "getStartDate", "concode_elem_sep", "void", "setFeedId", "concode_elem_sep", "String", "getResultCode", "concode_elem_sep", "void", "setFeedConfigId", "concode_elem_sep", "void", "setMaxReceiptDate", "concode_elem_sep", "long", "getRunId", "concode_elem_sep", "Timestamp", "getEndDate", "concode_elem_sep", "void", "setErrors", "concode_elem_sep", "String", "getConfigInfo", "concode_elem_sep", "void", "setEndDate", "concode_elem_sep", "byte", "[", "]", "getErrors", "concode_elem_sep", "BigDecimal", "getDownloadSize", "concode_elem_sep", "String", "getResultMessage", "concode_elem_sep", "void", "setResultMessage", "concode_elem_sep", "BigDecimal", "getFileCount", "concode_elem_sep", "String", "getRunStatus", "concode_elem_sep", "void", "setRunStatus", "concode_elem_sep", "void", "setStartDate", "concode_elem_sep", "BigDecimal", "getFeedId", "concode_elem_sep", "void", "setResultCode", "concode_elem_sep", "void", "setRunId", "concode_elem_sep", "Timestamp", "getMaxReceiptDate", "concode_elem_sep", "void", "setConfigInfo", "concode_elem_sep", "void", "setDownloadSize"]}
{"code": "long function ( ) { return value ; }", "nl": "returns the number of satoshis of this monetary value . concode_field_sep Coin MICROCOIN concode_elem_sep int SMALLEST_UNIT_EXPONENT concode_elem_sep long COIN_VALUE concode_elem_sep Coin SATOSHI concode_elem_sep MonetaryFormat FRIENDLY_FORMAT concode_elem_sep Coin COIN concode_elem_sep Coin CENT concode_elem_sep Coin FIFTY_COINS concode_elem_sep Coin NEGATIVE_SATOSHI concode_elem_sep Coin MILLICOIN concode_elem_sep long MAX_SATOSHIS concode_elem_sep Coin ZERO concode_elem_sep long value concode_elem_sep MonetaryFormat PLAIN_FORMAT concode_field_sep Coin add concode_elem_sep int signum concode_elem_sep boolean isNegative concode_elem_sep boolean isLessThan concode_elem_sep Coin valueOf concode_elem_sep Coin valueOf concode_elem_sep Coin subtract concode_elem_sep boolean isGreaterThan concode_elem_sep boolean isPositive concode_elem_sep String toPlainString concode_elem_sep int smallestUnitExponent concode_elem_sep int compareTo concode_elem_sep long longValue concode_elem_sep Coin parseCoin concode_elem_sep String toFriendlyString concode_elem_sep Coin shiftLeft concode_elem_sep Coin shiftRight concode_elem_sep Coin[] divideAndRemainder concode_elem_sep int hashCode concode_elem_sep Coin negate concode_elem_sep boolean equals concode_elem_sep boolean isZero concode_elem_sep Coin divide concode_elem_sep long divide concode_elem_sep String toString concode_elem_sep Coin multiply", "code_tokens": ["long", "function", "(", ")", "{", "return", "value", ";", "}"], "nl_tokens": ["returns", "the", "number", "of", "satoshis", "of", "this", "monetary", "value", ".", "concode_field_sep", "Coin", "MICROCOIN", "concode_elem_sep", "int", "SMALLEST_UNIT_EXPONENT", "concode_elem_sep", "long", "COIN_VALUE", "concode_elem_sep", "Coin", "SATOSHI", "concode_elem_sep", "MonetaryFormat", "FRIENDLY_FORMAT", "concode_elem_sep", "Coin", "COIN", "concode_elem_sep", "Coin", "CENT", "concode_elem_sep", "Coin", "FIFTY_COINS", "concode_elem_sep", "Coin", "NEGATIVE_SATOSHI", "concode_elem_sep", "Coin", "MILLICOIN", "concode_elem_sep", "long", "MAX_SATOSHIS", "concode_elem_sep", "Coin", "ZERO", "concode_elem_sep", "long", "value", "concode_elem_sep", "MonetaryFormat", "PLAIN_FORMAT", "concode_field_sep", "Coin", "add", "concode_elem_sep", "int", "signum", "concode_elem_sep", "boolean", "isNegative", "concode_elem_sep", "boolean", "isLessThan", "concode_elem_sep", "Coin", "valueOf", "concode_elem_sep", "Coin", "valueOf", "concode_elem_sep", "Coin", "subtract", "concode_elem_sep", "boolean", "isGreaterThan", "concode_elem_sep", "boolean", "isPositive", "concode_elem_sep", "String", "toPlainString", "concode_elem_sep", "int", "smallestUnitExponent", "concode_elem_sep", "int", "compareTo", "concode_elem_sep", "long", "longValue", "concode_elem_sep", "Coin", "parseCoin", "concode_elem_sep", "String", "toFriendlyString", "concode_elem_sep", "Coin", "shiftLeft", "concode_elem_sep", "Coin", "shiftRight", "concode_elem_sep", "Coin", "[", "]", "divideAndRemainder", "concode_elem_sep", "int", "hashCode", "concode_elem_sep", "Coin", "negate", "concode_elem_sep", "boolean", "equals", "concode_elem_sep", "boolean", "isZero", "concode_elem_sep", "Coin", "divide", "concode_elem_sep", "long", "divide", "concode_elem_sep", "String", "toString", "concode_elem_sep", "Coin", "multiply"]}
{"code": "LanguageVersion function ( File arg0 ) { return getDefaultLanguageVersionForFile ( arg0 . getName ( ) ) ; }", "nl": "get the default languageversion for the first language of a given source file . concode_field_sep Map<Language,LanguageVersion> languageToLanguageVersion concode_field_sep LanguageVersion getDefaultLanguageVersion concode_elem_sep String getExtension concode_elem_sep LanguageVersion setDefaultLanguageVersion concode_elem_sep List<Language> getLanguagesForFile concode_elem_sep List<Language> getLanguagesForFile", "code_tokens": ["LanguageVersion", "function", "(", "File", "arg0", ")", "{", "return", "getDefaultLanguageVersionForFile", "(", "arg0", ".", "getName", "(", ")", ")", ";", "}"], "nl_tokens": ["get", "the", "default", "languageversion", "for", "the", "first", "language", "of", "a", "given", "source", "file", ".", "concode_field_sep", "Map", "<", "Language", ",", "LanguageVersion", ">", "languageToLanguageVersion", "concode_field_sep", "LanguageVersion", "getDefaultLanguageVersion", "concode_elem_sep", "String", "getExtension", "concode_elem_sep", "LanguageVersion", "setDefaultLanguageVersion", "concode_elem_sep", "List", "<", "Language", ">", "getLanguagesForFile", "concode_elem_sep", "List", "<", "Language", ">", "getLanguagesForFile"]}
{"code": "Set < String > function ( ) { return Collections . unmodifiableSet ( instances . keySet ( ) ) ; }", "nl": "gets the ids of the registered object instances . concode_field_sep SortedMap<String,List<SoapRef>> unresolvedRefs concode_elem_sep SortedMap<String,Object> instances concode_field_sep void addInstance concode_elem_sep SortedMap<String,List<SoapRef>> getUnresolvedRefs concode_elem_sep SoapRefRegistry get concode_elem_sep void addRef", "code_tokens": ["Set", "<", "String", ">", "function", "(", ")", "{", "return", "Collections", ".", "unmodifiableSet", "(", "instances", ".", "keySet", "(", ")", ")", ";", "}"], "nl_tokens": ["gets", "the", "ids", "of", "the", "registered", "object", "instances", ".", "concode_field_sep", "SortedMap", "<", "String", ",", "List", "<", "SoapRef", ">>", "unresolvedRefs", "concode_elem_sep", "SortedMap", "<", "String", ",", "Object", ">", "instances", "concode_field_sep", "void", "addInstance", "concode_elem_sep", "SortedMap", "<", "String", ",", "List", "<", "SoapRef", ">>", "getUnresolvedRefs", "concode_elem_sep", "SoapRefRegistry", "get", "concode_elem_sep", "void", "addRef"]}
{"code": "void function ( ) { if ( ! snake . isAlive ) this . gui . setTitle ( \"srini_string\" ) ; if ( ! border . isAlive ) this . gui . setTitle ( \"srini_string\" ) ; if ( gameElements . size ( ) == 2 ) { snake . isAlive = false ; gui . setTitle ( \"srini_string\" ) ; } }", "nl": "checkgameover prueft ob die bedingung erfuellt wurde die fuer ein game over erforderlich sind . concode_field_sep Border border concode_elem_sep Snake snake concode_elem_sep Vector<GameElement> gameElements concode_elem_sep GUI gui concode_elem_sep int STEP concode_field_sep void setDiamonds concode_elem_sep void checkState concode_elem_sep void main concode_elem_sep void draw concode_elem_sep void checkGameElement", "code_tokens": ["void", "function", "(", ")", "{", "if", "(", "!", "snake", ".", "isAlive", ")", "this", ".", "gui", ".", "setTitle", "(", "\"srini_string\"", ")", ";", "if", "(", "!", "border", ".", "isAlive", ")", "this", ".", "gui", ".", "setTitle", "(", "\"srini_string\"", ")", ";", "if", "(", "gameElements", ".", "size", "(", ")", "==", "2", ")", "{", "snake", ".", "isAlive", "=", "false", ";", "gui", ".", "setTitle", "(", "\"srini_string\"", ")", ";", "}", "}"], "nl_tokens": ["checkgameover", "prueft", "ob", "die", "bedingung", "erfuellt", "wurde", "die", "fuer", "ein", "game", "over", "erforderlich", "sind", ".", "concode_field_sep", "Border", "border", "concode_elem_sep", "Snake", "snake", "concode_elem_sep", "Vector", "<", "GameElement", ">", "gameElements", "concode_elem_sep", "GUI", "gui", "concode_elem_sep", "int", "STEP", "concode_field_sep", "void", "setDiamonds", "concode_elem_sep", "void", "checkState", "concode_elem_sep", "void", "main", "concode_elem_sep", "void", "draw", "concode_elem_sep", "void", "checkGameElement"]}
{"code": "String function ( String arg0 ) { String loc0 = arg0 ; if ( loc0 . endsWith ( \"srini_string\" ) ) { loc0 = loc0 . substring ( 0 , loc0 . length ( ) - 1 ) ; } return getContextURL ( ) + loc0 ; }", "nl": "return the full url including protocol , host , port , context path , servlet path for a servlet path . concode_field_sep Server server concode_elem_sep String host concode_elem_sep String contextPath concode_elem_sep Context context concode_elem_sep int port concode_field_sep int getPort concode_elem_sep String getContextURL concode_elem_sep void stop concode_elem_sep void start concode_elem_sep void addServletEndpoint concode_elem_sep String getHost", "code_tokens": ["String", "function", "(", "String", "arg0", ")", "{", "String", "loc0", "=", "arg0", ";", "if", "(", "loc0", ".", "endsWith", "(", "\"srini_string\"", ")", ")", "{", "loc0", "=", "loc0", ".", "substring", "(", "0", ",", "loc0", ".", "length", "(", ")", "-", "1", ")", ";", "}", "return", "getContextURL", "(", ")", "+", "loc0", ";", "}"], "nl_tokens": ["return", "the", "full", "url", "including", "protocol", ",", "host", ",", "port", ",", "context", "path", ",", "servlet", "path", "for", "a", "servlet", "path", ".", "concode_field_sep", "Server", "server", "concode_elem_sep", "String", "host", "concode_elem_sep", "String", "contextPath", "concode_elem_sep", "Context", "context", "concode_elem_sep", "int", "port", "concode_field_sep", "int", "getPort", "concode_elem_sep", "String", "getContextURL", "concode_elem_sep", "void", "stop", "concode_elem_sep", "void", "start", "concode_elem_sep", "void", "addServletEndpoint", "concode_elem_sep", "String", "getHost"]}
{"code": "SourceFile function ( String arg0 , List < ? > arg1 ) { return ( SourceFile ) parse ( FILE , arg0 , arg1 . toArray ( ) ) ; }", "nl": "parse a string into a sourcefile ast node , applying substitutions . concode_field_sep ExtensionInfo ext concode_elem_sep int EXPR concode_elem_sep int DECL concode_elem_sep Position pos concode_elem_sep int MEMB concode_elem_sep int STMT concode_elem_sep int TYPE concode_elem_sep int FILE concode_field_sep TypeNode parseType concode_elem_sep TypeNode parseType concode_elem_sep ClassMember parseMember concode_elem_sep ClassMember parseMember concode_elem_sep QQParser parser concode_elem_sep Stmt parseStmt concode_elem_sep Stmt parseStmt concode_elem_sep ClassDecl parseDecl concode_elem_sep ClassDecl parseDecl concode_elem_sep Position type_position concode_elem_sep Node parse concode_elem_sep Lexer lexer concode_elem_sep Expr parseExpr concode_elem_sep Expr parseExpr", "code_tokens": ["SourceFile", "function", "(", "String", "arg0", ",", "List", "<", "?", ">", "arg1", ")", "{", "return", "(", "SourceFile", ")", "parse", "(", "FILE", ",", "arg0", ",", "arg1", ".", "toArray", "(", ")", ")", ";", "}"], "nl_tokens": ["parse", "a", "string", "into", "a", "sourcefile", "ast", "node", ",", "applying", "substitutions", ".", "concode_field_sep", "ExtensionInfo", "ext", "concode_elem_sep", "int", "EXPR", "concode_elem_sep", "int", "DECL", "concode_elem_sep", "Position", "pos", "concode_elem_sep", "int", "MEMB", "concode_elem_sep", "int", "STMT", "concode_elem_sep", "int", "TYPE", "concode_elem_sep", "int", "FILE", "concode_field_sep", "TypeNode", "parseType", "concode_elem_sep", "TypeNode", "parseType", "concode_elem_sep", "ClassMember", "parseMember", "concode_elem_sep", "ClassMember", "parseMember", "concode_elem_sep", "QQParser", "parser", "concode_elem_sep", "Stmt", "parseStmt", "concode_elem_sep", "Stmt", "parseStmt", "concode_elem_sep", "ClassDecl", "parseDecl", "concode_elem_sep", "ClassDecl", "parseDecl", "concode_elem_sep", "Position", "type_position", "concode_elem_sep", "Node", "parse", "concode_elem_sep", "Lexer", "lexer", "concode_elem_sep", "Expr", "parseExpr", "concode_elem_sep", "Expr", "parseExpr"]}
{"code": "void function ( ) { acitivityController . registerUserSession ( null , mockServerMessage ) ; }", "nl": "test method for activitycontroller #registerusersession serversession , servermessage . verifies that method throws nullpointerexception when serversession is null . concode_field_sep ServerMessage mockServerMessage concode_elem_sep ServerSession mockServerSession concode_elem_sep HashMap<String,Object> testEventProperties concode_elem_sep String MOCK_SESSION_ID concode_elem_sep ActivityController acitivityController concode_field_sep void testHandleEventThrowsIllegalArgumentExceptionOnEmptyUser concode_elem_sep void testHandleEventThrowsIllegalArgumentExceptionOnEmptyApplication concode_elem_sep void testDeregisterUserSessionWithNullServerSessonThrowsException concode_elem_sep void testDeregisterUserSessionWithNullServerSessionIdThrowsException concode_elem_sep void testGetServerSessionByUserId concode_elem_sep void tearDown concode_elem_sep void testDeregisterUserSessionRemovesUserFromKnownClients concode_elem_sep void testHandleEventThrowsIllegalArgumentExceptionOnEmptyMessage concode_elem_sep void testHandleEventThrowsIllegalArgumentExceptionOnNullApplication concode_elem_sep void testHandleEventThrowsIllegalArgumentExceptionOnNullUser concode_elem_sep void testRegisterUserSession concode_elem_sep void setUp concode_elem_sep void testHandleEventThrowsIllegalArgumentExceptionOnNullTimestamp concode_elem_sep void testRegisterUserSessionWithNullServerSessionIdThrowsException concode_elem_sep void testHandleEventThrowsIllegalArgumentExceptionOnNullMessage", "code_tokens": ["void", "function", "(", ")", "{", "acitivityController", ".", "registerUserSession", "(", "null", ",", "mockServerMessage", ")", ";", "}"], "nl_tokens": ["test", "method", "for", "activitycontroller", "#registerusersession serversession , servermessage . verifies that method throws nullpointerexception when serversession is null . concode_field_sep ServerMessage mockServerMessage concode_elem_sep ServerSession mockServerSession concode_elem_sep HashMap<String,Object> testEventProperties concode_elem_sep String MOCK_SESSION_ID concode_elem_sep ActivityController acitivityController concode_field_sep void testHandleEventThrowsIllegalArgumentExceptionOnEmptyUser concode_elem_sep void testHandleEventThrowsIllegalArgumentExceptionOnEmptyApplication concode_elem_sep void testDeregisterUserSessionWithNullServerSessonThrowsException concode_elem_sep void testDeregisterUserSessionWithNullServerSessionIdThrowsException concode_elem_sep void testGetServerSessionByUserId concode_elem_sep void tearDown concode_elem_sep void testDeregisterUserSessionRemovesUserFromKnownClients concode_elem_sep void testHandleEventThrowsIllegalArgumentExceptionOnEmptyMessage concode_elem_sep void testHandleEventThrowsIllegalArgumentExceptionOnNullApplication concode_elem_sep void testHandleEventThrowsIllegalArgumentExceptionOnNullUser concode_elem_sep void testRegisterUserSession concode_elem_sep void setUp concode_elem_sep void testHandleEventThrowsIllegalArgumentExceptionOnNullTimestamp concode_elem_sep void testRegisterUserSessionWithNullServerSessionIdThrowsException concode_elem_sep void testHandleEventThrowsIllegalArgumentExceptionOnNullMessage"]}
{"code": "void function ( ) { if ( bulletTime - System . nanoTime ( ) >= BULLET_INTERVAL && bullets . size ( ) < MAX_BULLETS ) { bullets . add ( new Bullet ( xPos , yPos , zPos , heading ) ) ; } }", "nl": "fire a bullet . concode_field_sep float xStartPos concode_elem_sep FloatBuffer lModelAmbient concode_elem_sep float zPos concode_elem_sep float yPos concode_elem_sep float MOVE_FORWARD_SPEED concode_elem_sep float yStartPos concode_elem_sep float walkbiasangle concode_elem_sep float walkbias concode_elem_sep int BULLET_INTERVAL concode_elem_sep long bulletTime concode_elem_sep int MAX_BULLETS concode_elem_sep float ROTATE_SPEED concode_elem_sep Monster[] monsters concode_elem_sep float xPos concode_elem_sep float MOVE_BACKWARD_SPEED concode_elem_sep int MAX_MONSTERS concode_elem_sep FloatBuffer lightPosition concode_elem_sep FloatBuffer whiteLight concode_elem_sep boolean[] monstersLiving concode_elem_sep float heading concode_elem_sep float STRAFE_SPEED concode_elem_sep float zStartPos concode_elem_sep ArrayList<Bullet> bullets concode_field_sep void turnRight concode_elem_sep void restart concode_elem_sep void start concode_elem_sep void update concode_elem_sep boolean isFinished concode_elem_sep void walkForwards concode_elem_sep void renderFloor concode_elem_sep void walkBackwards concode_elem_sep void strafeLeft concode_elem_sep Level LoadFromFile concode_elem_sep void strafeRight concode_elem_sep void renderWalls concode_elem_sep void turnLeft concode_elem_sep Level ReadFromXML concode_elem_sep void render", "code_tokens": ["void", "function", "(", ")", "{", "if", "(", "bulletTime", "-", "System", ".", "nanoTime", "(", ")", ">=", "BULLET_INTERVAL", "&", "&", "bullets", ".", "size", "(", ")", "<", "MAX_BULLETS", ")", "{", "bullets", ".", "add", "(", "new", "Bullet", "(", "xPos", ",", "yPos", ",", "zPos", ",", "heading", ")", ")", ";", "}", "}"], "nl_tokens": ["fire", "a", "bullet", ".", "concode_field_sep", "float", "xStartPos", "concode_elem_sep", "FloatBuffer", "lModelAmbient", "concode_elem_sep", "float", "zPos", "concode_elem_sep", "float", "yPos", "concode_elem_sep", "float", "MOVE_FORWARD_SPEED", "concode_elem_sep", "float", "yStartPos", "concode_elem_sep", "float", "walkbiasangle", "concode_elem_sep", "float", "walkbias", "concode_elem_sep", "int", "BULLET_INTERVAL", "concode_elem_sep", "long", "bulletTime", "concode_elem_sep", "int", "MAX_BULLETS", "concode_elem_sep", "float", "ROTATE_SPEED", "concode_elem_sep", "Monster", "[", "]", "monsters", "concode_elem_sep", "float", "xPos", "concode_elem_sep", "float", "MOVE_BACKWARD_SPEED", "concode_elem_sep", "int", "MAX_MONSTERS", "concode_elem_sep", "FloatBuffer", "lightPosition", "concode_elem_sep", "FloatBuffer", "whiteLight", "concode_elem_sep", "boolean", "[", "]", "monstersLiving", "concode_elem_sep", "float", "heading", "concode_elem_sep", "float", "STRAFE_SPEED", "concode_elem_sep", "float", "zStartPos", "concode_elem_sep", "ArrayList", "<", "Bullet", ">", "bullets", "concode_field_sep", "void", "turnRight", "concode_elem_sep", "void", "restart", "concode_elem_sep", "void", "start", "concode_elem_sep", "void", "update", "concode_elem_sep", "boolean", "isFinished", "concode_elem_sep", "void", "walkForwards", "concode_elem_sep", "void", "renderFloor", "concode_elem_sep", "void", "walkBackwards", "concode_elem_sep", "void", "strafeLeft", "concode_elem_sep", "Level", "LoadFromFile", "concode_elem_sep", "void", "strafeRight", "concode_elem_sep", "void", "renderWalls", "concode_elem_sep", "void", "turnLeft", "concode_elem_sep", "Level", "ReadFromXML", "concode_elem_sep", "void", "render"]}
{"code": "void function ( File arg0 ) { try { traverseDir ( arg0 , new FileAction ( ) { public void act ( File arg1 ) { arg1 . delete ( ) ; } } ) ; } catch ( IOException loc0 ) { LOG . error ( \"srini_string\" , loc0 ) ; } }", "nl": "deletes a directory and all of its contents . concode_field_sep Logger LOG concode_field_sep void act concode_elem_sep void traverseDir concode_elem_sep Collection<SourceUnit> readAllFiles concode_elem_sep File createTempDir concode_elem_sep Collection<String> readFileNames", "code_tokens": ["void", "function", "(", "File", "arg0", ")", "{", "try", "{", "traverseDir", "(", "arg0", ",", "new", "FileAction", "(", ")", "{", "public", "void", "act", "(", "File", "arg1", ")", "{", "arg1", ".", "delete", "(", ")", ";", "}", "}", ")", ";", "}", "catch", "(", "IOException", "loc0", ")", "{", "LOG", ".", "error", "(", "\"srini_string\"", ",", "loc0", ")", ";", "}", "}"], "nl_tokens": ["deletes", "a", "directory", "and", "all", "of", "its", "contents", ".", "concode_field_sep", "Logger", "LOG", "concode_field_sep", "void", "act", "concode_elem_sep", "void", "traverseDir", "concode_elem_sep", "Collection", "<", "SourceUnit", ">", "readAllFiles", "concode_elem_sep", "File", "createTempDir", "concode_elem_sep", "Collection", "<", "String", ">", "readFileNames"]}
{"code": "void function ( ) { System . out . println ( \"srini_string\" ) ; Device loc0 = null ; int loc1 = 0 ; int loc2 = loc0 . getAddress ( ) ; assertEquals ( loc1 , loc2 ) ; fail ( \"srini_string\" ) ; }", "nl": "test of getaddress method , of class device . concode_field_sep Device dev concode_field_sep void testGetType concode_elem_sep void setUpClass concode_elem_sep void testGetDeviceName_0args concode_elem_sep void testAddToPane concode_elem_sep void tearDownClass concode_elem_sep void tearDown concode_elem_sep void testGetDeviceNames concode_elem_sep void testGetDeviceBlock concode_elem_sep void testAddCapabilities concode_elem_sep void testToString concode_elem_sep void testGetImgName concode_elem_sep void testAddCapability concode_elem_sep void testGetDeviceName_Locale concode_elem_sep void setUp concode_elem_sep void testGetImage concode_elem_sep void testGetDeviceID concode_elem_sep void testGetCapabilityBlock concode_elem_sep void testGetCapabilities concode_elem_sep void testRemoveCapability", "code_tokens": ["void", "function", "(", ")", "{", "System", ".", "out", ".", "println", "(", "\"srini_string\"", ")", ";", "Device", "loc0", "=", "null", ";", "int", "loc1", "=", "0", ";", "int", "loc2", "=", "loc0", ".", "getAddress", "(", ")", ";", "assertEquals", "(", "loc1", ",", "loc2", ")", ";", "fail", "(", "\"srini_string\"", ")", ";", "}"], "nl_tokens": ["test", "of", "getaddress", "method", ",", "of", "class", "device", ".", "concode_field_sep", "Device", "dev", "concode_field_sep", "void", "testGetType", "concode_elem_sep", "void", "setUpClass", "concode_elem_sep", "void", "testGetDeviceName_0args", "concode_elem_sep", "void", "testAddToPane", "concode_elem_sep", "void", "tearDownClass", "concode_elem_sep", "void", "tearDown", "concode_elem_sep", "void", "testGetDeviceNames", "concode_elem_sep", "void", "testGetDeviceBlock", "concode_elem_sep", "void", "testAddCapabilities", "concode_elem_sep", "void", "testToString", "concode_elem_sep", "void", "testGetImgName", "concode_elem_sep", "void", "testAddCapability", "concode_elem_sep", "void", "testGetDeviceName_Locale", "concode_elem_sep", "void", "setUp", "concode_elem_sep", "void", "testGetImage", "concode_elem_sep", "void", "testGetDeviceID", "concode_elem_sep", "void", "testGetCapabilityBlock", "concode_elem_sep", "void", "testGetCapabilities", "concode_elem_sep", "void", "testRemoveCapability"]}
{"code": "String [ ] function ( ) { return new String [ ] { \"srini_string\" , \"srini_string\" , \"srini_string\" , \"srini_string\" , \"srini_string\" , \"srini_string\" , \"srini_string\" , \"srini_string\" } ; }", "nl": "returns the names of all search strategies , which are supported by this factory . the indices correspond to the parameter values of method #createsearch int , int , heuristicfunction . concode_field_sep int GBF_SEARCH concode_elem_sep int ASTAR_SEARCH concode_elem_sep SearchFactory instance concode_elem_sep int UC_SEARCH concode_elem_sep int GRAPH_SEARCH concode_elem_sep int HILL_SEARCH concode_elem_sep int BF_SEARCH concode_elem_sep int ID_SEARCH concode_elem_sep int TREE_SEARCH concode_elem_sep int RBF_SEARCH concode_elem_sep int DF_SEARCH concode_field_sep String[] getSearchModeNames concode_elem_sep SearchFactory getInstance concode_elem_sep Search createSearch", "code_tokens": ["String", "[", "]", "function", "(", ")", "{", "return", "new", "String", "[", "]", "{", "\"srini_string\"", ",", "\"srini_string\"", ",", "\"srini_string\"", ",", "\"srini_string\"", ",", "\"srini_string\"", ",", "\"srini_string\"", ",", "\"srini_string\"", ",", "\"srini_string\"", "}", ";", "}"], "nl_tokens": ["returns", "the", "names", "of", "all", "search", "strategies", ",", "which", "are", "supported", "by", "this", "factory", ".", "the", "indices", "correspond", "to", "the", "parameter", "values", "of", "method", "#createsearch int , int , heuristicfunction . concode_field_sep int GBF_SEARCH concode_elem_sep int ASTAR_SEARCH concode_elem_sep SearchFactory instance concode_elem_sep int UC_SEARCH concode_elem_sep int GRAPH_SEARCH concode_elem_sep int HILL_SEARCH concode_elem_sep int BF_SEARCH concode_elem_sep int ID_SEARCH concode_elem_sep int TREE_SEARCH concode_elem_sep int RBF_SEARCH concode_elem_sep int DF_SEARCH concode_field_sep String[] getSearchModeNames concode_elem_sep SearchFactory getInstance concode_elem_sep Search createSearch"]}
{"code": "void function ( ) { double loc0 = NormOps . conditionP2 ( unzeroMatrix ) ; assertEquals ( 2.1655 , loc0 , 1e-3 ) ; checkUncountable ( NormOps . conditionP2 ( zeroMatrix ) ) ; }", "nl": "tests against the condition number from octave . concode_field_sep DenseMatrix64F unzeroVector concode_elem_sep Random rand concode_elem_sep DenseMatrix64F zeroMatrix concode_elem_sep DenseMatrix64F unzeroMatrix concode_elem_sep DenseMatrix64F squareMatrix concode_field_sep void inducedP2 concode_elem_sep void checkUncountable concode_elem_sep void inducedP1 concode_elem_sep void normalizeF concode_elem_sep void normF concode_elem_sep void fastNormP2 concode_elem_sep void fastNormP concode_elem_sep void normPInf concode_elem_sep void conditionP concode_elem_sep void elementP concode_elem_sep void inducedPInf concode_elem_sep void normP concode_elem_sep void normP2 concode_elem_sep void fastElementP concode_elem_sep void fastNormF concode_elem_sep void normP1", "code_tokens": ["void", "function", "(", ")", "{", "double", "loc0", "=", "NormOps", ".", "conditionP2", "(", "unzeroMatrix", ")", ";", "assertEquals", "(", "2.1655", ",", "loc0", ",", "1e-3", ")", ";", "checkUncountable", "(", "NormOps", ".", "conditionP2", "(", "zeroMatrix", ")", ")", ";", "}"], "nl_tokens": ["tests", "against", "the", "condition", "number", "from", "octave", ".", "concode_field_sep", "DenseMatrix64F", "unzeroVector", "concode_elem_sep", "Random", "rand", "concode_elem_sep", "DenseMatrix64F", "zeroMatrix", "concode_elem_sep", "DenseMatrix64F", "unzeroMatrix", "concode_elem_sep", "DenseMatrix64F", "squareMatrix", "concode_field_sep", "void", "inducedP2", "concode_elem_sep", "void", "checkUncountable", "concode_elem_sep", "void", "inducedP1", "concode_elem_sep", "void", "normalizeF", "concode_elem_sep", "void", "normF", "concode_elem_sep", "void", "fastNormP2", "concode_elem_sep", "void", "fastNormP", "concode_elem_sep", "void", "normPInf", "concode_elem_sep", "void", "conditionP", "concode_elem_sep", "void", "elementP", "concode_elem_sep", "void", "inducedPInf", "concode_elem_sep", "void", "normP", "concode_elem_sep", "void", "normP2", "concode_elem_sep", "void", "fastElementP", "concode_elem_sep", "void", "fastNormF", "concode_elem_sep", "void", "normP1"]}
{"code": "void function ( String arg0 ) { this . name = arg0 ; }", "nl": "set name of emoji icon concode_field_sep int bigIcon concode_elem_sep String emojiText concode_elem_sep int icon concode_elem_sep String name concode_elem_sep Type type concode_elem_sep String iconPath concode_elem_sep String identityCode concode_elem_sep String bigIconPath concode_field_sep String getName concode_elem_sep String getIconPath concode_elem_sep int getBigIcon concode_elem_sep void setBigIcon concode_elem_sep void setType concode_elem_sep void setIdentityCode concode_elem_sep int getIcon concode_elem_sep String getEmojiText concode_elem_sep String getBigIconPath concode_elem_sep void setIcon concode_elem_sep void setBigIconPath concode_elem_sep void setEmojiText concode_elem_sep void setIconPath concode_elem_sep Type getType concode_elem_sep String getIdentityCode concode_elem_sep String newEmojiText", "code_tokens": ["void", "function", "(", "String", "arg0", ")", "{", "this", ".", "name", "=", "arg0", ";", "}"], "nl_tokens": ["set", "name", "of", "emoji", "icon", "concode_field_sep", "int", "bigIcon", "concode_elem_sep", "String", "emojiText", "concode_elem_sep", "int", "icon", "concode_elem_sep", "String", "name", "concode_elem_sep", "Type", "type", "concode_elem_sep", "String", "iconPath", "concode_elem_sep", "String", "identityCode", "concode_elem_sep", "String", "bigIconPath", "concode_field_sep", "String", "getName", "concode_elem_sep", "String", "getIconPath", "concode_elem_sep", "int", "getBigIcon", "concode_elem_sep", "void", "setBigIcon", "concode_elem_sep", "void", "setType", "concode_elem_sep", "void", "setIdentityCode", "concode_elem_sep", "int", "getIcon", "concode_elem_sep", "String", "getEmojiText", "concode_elem_sep", "String", "getBigIconPath", "concode_elem_sep", "void", "setIcon", "concode_elem_sep", "void", "setBigIconPath", "concode_elem_sep", "void", "setEmojiText", "concode_elem_sep", "void", "setIconPath", "concode_elem_sep", "Type", "getType", "concode_elem_sep", "String", "getIdentityCode", "concode_elem_sep", "String", "newEmojiText"]}
{"code": "void function ( File arg0 ) { Scanner loc0 = new Scanner ( arg0 ) ; loc0 . useDelimiter ( \"srini_string\" ) ; while ( loc0 . hasNext ( ) ) { _ignoreWords . add ( loc0 . next ( ) ) ; } loc0 . close ( ) ; }", "nl": "reads file of words to ignore . ignore words are added to a set . the ioexception is passed to caller because we certinaly do n't know what the user interface issue is . concode_field_sep Comparator<Map.Entry<String,Int>> SORT_ALPHABETICALLY concode_elem_sep int _totalWords concode_elem_sep Set<String> _ignoreWords concode_elem_sep Comparator<Map.Entry<String,Int>> SORT_BY_FREQUENCY concode_elem_sep Map<String,Int> _wordFrequency concode_field_sep void countWords concode_elem_sep void countWords concode_elem_sep int getWordCount concode_elem_sep void getWordFrequency concode_elem_sep int[] getFrequencies concode_elem_sep int getEntryCount concode_elem_sep String[] getWords", "code_tokens": ["void", "function", "(", "File", "arg0", ")", "{", "Scanner", "loc0", "=", "new", "Scanner", "(", "arg0", ")", ";", "loc0", ".", "useDelimiter", "(", "\"srini_string\"", ")", ";", "while", "(", "loc0", ".", "hasNext", "(", ")", ")", "{", "_ignoreWords", ".", "add", "(", "loc0", ".", "next", "(", ")", ")", ";", "}", "loc0", ".", "close", "(", ")", ";", "}"], "nl_tokens": ["reads", "file", "of", "words", "to", "ignore", ".", "ignore", "words", "are", "added", "to", "a", "set", ".", "the", "ioexception", "is", "passed", "to", "caller", "because", "we", "certinaly", "do", "n", "'", "t", "know", "what", "the", "user", "interface", "issue", "is", ".", "concode_field_sep", "Comparator", "<", "Map", ".", "Entry", "<", "String", ",", "Int", ">>", "SORT_ALPHABETICALLY", "concode_elem_sep", "int", "_totalWords", "concode_elem_sep", "Set", "<", "String", ">", "_ignoreWords", "concode_elem_sep", "Comparator", "<", "Map", ".", "Entry", "<", "String", ",", "Int", ">>", "SORT_BY_FREQUENCY", "concode_elem_sep", "Map", "<", "String", ",", "Int", ">", "_wordFrequency", "concode_field_sep", "void", "countWords", "concode_elem_sep", "void", "countWords", "concode_elem_sep", "int", "getWordCount", "concode_elem_sep", "void", "getWordFrequency", "concode_elem_sep", "int", "[", "]", "getFrequencies", "concode_elem_sep", "int", "getEntryCount", "concode_elem_sep", "String", "[", "]", "getWords"]}
{"code": "void function ( T arg0 , String arg1 , BitmapDisplayConfig arg2 , long arg3 , long arg4 ) { }", "nl": "call back when loading . concode_field_sep BitmapSetter<T> bitmapSetter concode_field_sep void onPreLoad concode_elem_sep void onLoadCompleted concode_elem_sep Drawable getDrawable concode_elem_sep void onLoadFailed concode_elem_sep void setBitmap concode_elem_sep void onLoadStarted concode_elem_sep void setBitmapSetter concode_elem_sep void setDrawable", "code_tokens": ["void", "function", "(", "T", "arg0", ",", "String", "arg1", ",", "BitmapDisplayConfig", "arg2", ",", "long", "arg3", ",", "long", "arg4", ")", "{", "}"], "nl_tokens": ["call", "back", "when", "loading", ".", "concode_field_sep", "BitmapSetter", "<", "T", ">", "bitmapSetter", "concode_field_sep", "void", "onPreLoad", "concode_elem_sep", "void", "onLoadCompleted", "concode_elem_sep", "Drawable", "getDrawable", "concode_elem_sep", "void", "onLoadFailed", "concode_elem_sep", "void", "setBitmap", "concode_elem_sep", "void", "onLoadStarted", "concode_elem_sep", "void", "setBitmapSetter", "concode_elem_sep", "void", "setDrawable"]}
{"code": "FiltersType function ( ) { return cipherSuiteFilters ; }", "nl": "returns the cipher suites filter concode_field_sep String certAlias concode_elem_sep SecureRandom secureRandom concode_elem_sep String protocol concode_elem_sep String provider concode_elem_sep CertificateConstraintsType certConstraints concode_elem_sep List<String> ciphersuites concode_elem_sep KeyManager[] keyManagers concode_elem_sep FiltersType cipherSuiteFilters concode_elem_sep TrustManager[] trustManagers concode_field_sep void setCertConstraints concode_elem_sep void setCipherSuites concode_elem_sep void setSecureSocketProtocol concode_elem_sep void setCertAlias concode_elem_sep CertificateConstraintsType getCertConstraints concode_elem_sep SecureRandom getSecureRandom concode_elem_sep void setJsseProvider concode_elem_sep String getCertAlias concode_elem_sep void setKeyManagers concode_elem_sep String getSecureSocketProtocol concode_elem_sep void setTrustManagers concode_elem_sep void setSecureRandom concode_elem_sep String getJsseProvider concode_elem_sep TrustManager[] getTrustManagers concode_elem_sep KeyManager[] getKeyManagers concode_elem_sep void setCipherSuitesFilter concode_elem_sep List<String> getCipherSuites", "code_tokens": ["FiltersType", "function", "(", ")", "{", "return", "cipherSuiteFilters", ";", "}"], "nl_tokens": ["returns", "the", "cipher", "suites", "filter", "concode_field_sep", "String", "certAlias", "concode_elem_sep", "SecureRandom", "secureRandom", "concode_elem_sep", "String", "protocol", "concode_elem_sep", "String", "provider", "concode_elem_sep", "CertificateConstraintsType", "certConstraints", "concode_elem_sep", "List", "<", "String", ">", "ciphersuites", "concode_elem_sep", "KeyManager", "[", "]", "keyManagers", "concode_elem_sep", "FiltersType", "cipherSuiteFilters", "concode_elem_sep", "TrustManager", "[", "]", "trustManagers", "concode_field_sep", "void", "setCertConstraints", "concode_elem_sep", "void", "setCipherSuites", "concode_elem_sep", "void", "setSecureSocketProtocol", "concode_elem_sep", "void", "setCertAlias", "concode_elem_sep", "CertificateConstraintsType", "getCertConstraints", "concode_elem_sep", "SecureRandom", "getSecureRandom", "concode_elem_sep", "void", "setJsseProvider", "concode_elem_sep", "String", "getCertAlias", "concode_elem_sep", "void", "setKeyManagers", "concode_elem_sep", "String", "getSecureSocketProtocol", "concode_elem_sep", "void", "setTrustManagers", "concode_elem_sep", "void", "setSecureRandom", "concode_elem_sep", "String", "getJsseProvider", "concode_elem_sep", "TrustManager", "[", "]", "getTrustManagers", "concode_elem_sep", "KeyManager", "[", "]", "getKeyManagers", "concode_elem_sep", "void", "setCipherSuitesFilter", "concode_elem_sep", "List", "<", "String", ">", "getCipherSuites"]}
{"code": "AddressingProperties function ( Message arg0 , boolean arg1 , boolean arg2 ) { return org . apache . cxf . ws . addressing . ContextUtils . retrieveMAPs ( arg0 , arg1 , arg2 ) ; }", "nl": "retrieves the addressing properties from the current message . concode_field_sep PlaceHolder placeHolder concode_field_sep RMProperties retrieveRMProperties concode_elem_sep void storeRMProperties concode_elem_sep boolean isServerSide concode_elem_sep ProtocolVariation getProtocolVariation concode_elem_sep void setProtocolVariation concode_elem_sep String getRMPropertiesKey concode_elem_sep boolean isRMProtocolMessage concode_elem_sep void storeMAPs concode_elem_sep String generateUUID", "code_tokens": ["AddressingProperties", "function", "(", "Message", "arg0", ",", "boolean", "arg1", ",", "boolean", "arg2", ")", "{", "return", "org", ".", "apache", ".", "cxf", ".", "ws", ".", "addressing", ".", "ContextUtils", ".", "retrieveMAPs", "(", "arg0", ",", "arg1", ",", "arg2", ")", ";", "}"], "nl_tokens": ["retrieves", "the", "addressing", "properties", "from", "the", "current", "message", ".", "concode_field_sep", "PlaceHolder", "placeHolder", "concode_field_sep", "RMProperties", "retrieveRMProperties", "concode_elem_sep", "void", "storeRMProperties", "concode_elem_sep", "boolean", "isServerSide", "concode_elem_sep", "ProtocolVariation", "getProtocolVariation", "concode_elem_sep", "void", "setProtocolVariation", "concode_elem_sep", "String", "getRMPropertiesKey", "concode_elem_sep", "boolean", "isRMProtocolMessage", "concode_elem_sep", "void", "storeMAPs", "concode_elem_sep", "String", "generateUUID"]}
{"code": "boolean function ( Pattern arg0 , String arg1 ) { if ( arg1 != null && ! \"srini_string\" . equals ( arg1 ) ) { Matcher loc0 = arg0 . loc0 ( arg1 ) ; if ( loc0 . find ( ) ) { return true ; } } return false ; }", "nl": "simple commodity method also designed to increase readability of source code , and to decrease import in the calling class . provide a pattern and a subject , it 'll do the proper matching . concode_field_sep PlaceHolder placeHolder concode_field_sep List<Pattern> compilePatternsFromList", "code_tokens": ["boolean", "function", "(", "Pattern", "arg0", ",", "String", "arg1", ")", "{", "if", "(", "arg1", "!=", "null", "&", "&", "!", "\"srini_string\"", ".", "equals", "(", "arg1", ")", ")", "{", "Matcher", "loc0", "=", "arg0", ".", "loc0", "(", "arg1", ")", ";", "if", "(", "loc0", ".", "find", "(", ")", ")", "{", "return", "true", ";", "}", "}", "return", "false", ";", "}"], "nl_tokens": ["simple", "commodity", "method", "also", "designed", "to", "increase", "readability", "of", "source", "code", ",", "and", "to", "decrease", "import", "in", "the", "calling", "class", ".", "provide", "a", "pattern", "and", "a", "subject", ",", "it", "'", "ll", "do", "the", "proper", "matching", ".", "concode_field_sep", "PlaceHolder", "placeHolder", "concode_field_sep", "List", "<", "Pattern", ">", "compilePatternsFromList"]}
{"code": "void function ( ) { if ( connectedHandler != null ) connectedHandler . close ( ) ; }", "nl": "if a handler is connected , call its org.bitcoinj.protocols.channels.paymentchannelserver #close method thus disconnecting the tcp connection . concode_field_sep Coin bestValueToMe concode_elem_sep long refundTransactionUnlockTimeSecs concode_elem_sep PaymentChannelServer connectedHandler concode_elem_sep Transaction contract concode_elem_sep TransactionOutput clientOutput concode_elem_sep ECKey myKey concode_elem_sep byte[] bestValueSignature concode_elem_sep PaymentChannelServerState state concode_field_sep PaymentChannelServer setConnectedHandler concode_elem_sep String toString concode_elem_sep void updateValueToMe concode_elem_sep void clearConnectedHandler concode_elem_sep PaymentChannelServerState getOrCreateState", "code_tokens": ["void", "function", "(", ")", "{", "if", "(", "connectedHandler", "!=", "null", ")", "connectedHandler", ".", "close", "(", ")", ";", "}"], "nl_tokens": ["if", "a", "handler", "is", "connected", ",", "call", "its", "org", ".", "bitcoinj", ".", "protocols", ".", "channels", ".", "paymentchannelserver", "#close method thus disconnecting the tcp connection . concode_field_sep Coin bestValueToMe concode_elem_sep long refundTransactionUnlockTimeSecs concode_elem_sep PaymentChannelServer connectedHandler concode_elem_sep Transaction contract concode_elem_sep TransactionOutput clientOutput concode_elem_sep ECKey myKey concode_elem_sep byte[] bestValueSignature concode_elem_sep PaymentChannelServerState state concode_field_sep PaymentChannelServer setConnectedHandler concode_elem_sep String toString concode_elem_sep void updateValueToMe concode_elem_sep void clearConnectedHandler concode_elem_sep PaymentChannelServerState getOrCreateState"]}
{"code": "Page < Book > function ( Pageable arg0 ) { log . debug ( \"srini_string\" ) ; Page < Book > loc0 = bookRepository . findAll ( arg0 ) ; return loc0 ; }", "nl": "get all the books . concode_field_sep Logger log concode_elem_sep BookRepository bookRepository concode_field_sep Book save concode_elem_sep Book findOne concode_elem_sep void delete", "code_tokens": ["Page", "<", "Book", ">", "function", "(", "Pageable", "arg0", ")", "{", "log", ".", "debug", "(", "\"srini_string\"", ")", ";", "Page", "<", "Book", ">", "loc0", "=", "bookRepository", ".", "findAll", "(", "arg0", ")", ";", "return", "loc0", ";", "}"], "nl_tokens": ["get", "all", "the", "books", ".", "concode_field_sep", "Logger", "log", "concode_elem_sep", "BookRepository", "bookRepository", "concode_field_sep", "Book", "save", "concode_elem_sep", "Book", "findOne", "concode_elem_sep", "void", "delete"]}
{"code": "void function ( ) { ByteBuffer . setUseDirectBuffers ( false ) ; ByteBuffer . setAllocator ( new SimpleByteBufferAllocator ( ) ) ; }", "nl": "mina does some funky things if we do n't do this first . concode_field_sep Logger m_log concode_field_sep SipMessage createRegisterOk concode_elem_sep void ultimateSipDecodingTest concode_elem_sep Invite createInvite concode_elem_sep Invite createInvite concode_elem_sep Invite createInvite concode_elem_sep void testPartialMessageSipDecoding concode_elem_sep Register createRegister concode_elem_sep Invite createNoBodyInvite concode_elem_sep Invite createNoBodyInvite concode_elem_sep void testBasicSipDecoding concode_elem_sep SipResponse createInviteOkNoBody concode_elem_sep SipResponse createInviteOk concode_elem_sep ByteBuffer combine", "code_tokens": ["void", "function", "(", ")", "{", "ByteBuffer", ".", "setUseDirectBuffers", "(", "false", ")", ";", "ByteBuffer", ".", "setAllocator", "(", "new", "SimpleByteBufferAllocator", "(", ")", ")", ";", "}"], "nl_tokens": ["mina", "does", "some", "funky", "things", "if", "we", "do", "n", "'", "t", "do", "this", "first", ".", "concode_field_sep", "Logger", "m_log", "concode_field_sep", "SipMessage", "createRegisterOk", "concode_elem_sep", "void", "ultimateSipDecodingTest", "concode_elem_sep", "Invite", "createInvite", "concode_elem_sep", "Invite", "createInvite", "concode_elem_sep", "Invite", "createInvite", "concode_elem_sep", "void", "testPartialMessageSipDecoding", "concode_elem_sep", "Register", "createRegister", "concode_elem_sep", "Invite", "createNoBodyInvite", "concode_elem_sep", "Invite", "createNoBodyInvite", "concode_elem_sep", "void", "testBasicSipDecoding", "concode_elem_sep", "SipResponse", "createInviteOkNoBody", "concode_elem_sep", "SipResponse", "createInviteOk", "concode_elem_sep", "ByteBuffer", "combine"]}
{"code": "User function ( ) { if ( ! SecurityUtils . isAuthenticationEnabled ( ) ) { throw new IOException ( ExceptionMessage . AUTHENTICATION_IS_NOT_ENABLED . getMessage ( ) ) ; } return sUserThreadLocal . get ( ) ; }", "nl": "gets the user from the threadlocal variable . concode_field_sep ThreadLocal<User> sUserThreadLocal concode_field_sep void set concode_elem_sep void remove", "code_tokens": ["User", "function", "(", ")", "{", "if", "(", "!", "SecurityUtils", ".", "isAuthenticationEnabled", "(", ")", ")", "{", "throw", "new", "IOException", "(", "ExceptionMessage", ".", "AUTHENTICATION_IS_NOT_ENABLED", ".", "getMessage", "(", ")", ")", ";", "}", "return", "sUserThreadLocal", ".", "get", "(", ")", ";", "}"], "nl_tokens": ["gets", "the", "user", "from", "the", "threadlocal", "variable", ".", "concode_field_sep", "ThreadLocal", "<", "User", ">", "sUserThreadLocal", "concode_field_sep", "void", "set", "concode_elem_sep", "void", "remove"]}
{"code": "Checklist function ( Object arg0 ) { Checklist loc0 ; java . lang . Class loc1 = arg0 . getClass ( ) ; while ( loc1 != null ) { loc0 = lookupChecklist ( loc1 ) ; if ( loc0 != null ) { return loc0 ; } loc1 = loc1 . getSuperclass ( ) ; } return null ; }", "nl": "gets the checklist for an element . concode_field_sep Hashtable lists concode_elem_sep Hashtable statuses concode_field_sep ChecklistStatus getStatusFor concode_elem_sep Checklist lookupChecklist concode_elem_sep void register", "code_tokens": ["Checklist", "function", "(", "Object", "arg0", ")", "{", "Checklist", "loc0", ";", "java", ".", "lang", ".", "Class", "loc1", "=", "arg0", ".", "getClass", "(", ")", ";", "while", "(", "loc1", "!=", "null", ")", "{", "loc0", "=", "lookupChecklist", "(", "loc1", ")", ";", "if", "(", "loc0", "!=", "null", ")", "{", "return", "loc0", ";", "}", "loc1", "=", "loc1", ".", "getSuperclass", "(", ")", ";", "}", "return", "null", ";", "}"], "nl_tokens": ["gets", "the", "checklist", "for", "an", "element", ".", "concode_field_sep", "Hashtable", "lists", "concode_elem_sep", "Hashtable", "statuses", "concode_field_sep", "ChecklistStatus", "getStatusFor", "concode_elem_sep", "Checklist", "lookupChecklist", "concode_elem_sep", "void", "register"]}
{"code": "int function ( ) { return _size ; }", "nl": "returns the current number of entries in the map . concode_field_sep Object DELETED concode_elem_sep int _size concode_elem_sep int[] _values concode_elem_sep int _mask concode_elem_sep int NULL concode_elem_sep Object[] _keys concode_field_sep int get concode_elem_sep void clear concode_elem_sep void resize concode_elem_sep String toString concode_elem_sep int put concode_elem_sep int remove", "code_tokens": ["int", "function", "(", ")", "{", "return", "_size", ";", "}"], "nl_tokens": ["returns", "the", "current", "number", "of", "entries", "in", "the", "map", ".", "concode_field_sep", "Object", "DELETED", "concode_elem_sep", "int", "_size", "concode_elem_sep", "int", "[", "]", "_values", "concode_elem_sep", "int", "_mask", "concode_elem_sep", "int", "NULL", "concode_elem_sep", "Object", "[", "]", "_keys", "concode_field_sep", "int", "get", "concode_elem_sep", "void", "clear", "concode_elem_sep", "void", "resize", "concode_elem_sep", "String", "toString", "concode_elem_sep", "int", "put", "concode_elem_sep", "int", "remove"]}
{"code": "OpenIDClaimMapper function ( ) { if ( instance == null ) { instance = new OpenIDClaimMapper ( ) ; } return instance ; }", "nl": "creates and maintains a singleton instance of openidclaimmapper concode_field_sep String OPENID_CLAIM_MAPPER_FILE_PATH concode_elem_sep String LN_AXSCHEMA concode_elem_sep OpenIDClaimMapper instance concode_elem_sep String LN_SREG concode_elem_sep String LN_OPENID_SCHEMA concode_elem_sep HashMap<String,String> sregMapping concode_elem_sep HashMap<String,String> axMapping concode_elem_sep String LN_CLAIM_MAPPER concode_elem_sep String LN_CLAIM concode_field_sep void process concode_elem_sep void process concode_elem_sep HashMap<String,String> getSregMapping concode_elem_sep HashMap<String,String> getAxMapping", "code_tokens": ["OpenIDClaimMapper", "function", "(", ")", "{", "if", "(", "instance", "==", "null", ")", "{", "instance", "=", "new", "OpenIDClaimMapper", "(", ")", ";", "}", "return", "instance", ";", "}"], "nl_tokens": ["creates", "and", "maintains", "a", "singleton", "instance", "of", "openidclaimmapper", "concode_field_sep", "String", "OPENID_CLAIM_MAPPER_FILE_PATH", "concode_elem_sep", "String", "LN_AXSCHEMA", "concode_elem_sep", "OpenIDClaimMapper", "instance", "concode_elem_sep", "String", "LN_SREG", "concode_elem_sep", "String", "LN_OPENID_SCHEMA", "concode_elem_sep", "HashMap", "<", "String", ",", "String", ">", "sregMapping", "concode_elem_sep", "HashMap", "<", "String", ",", "String", ">", "axMapping", "concode_elem_sep", "String", "LN_CLAIM_MAPPER", "concode_elem_sep", "String", "LN_CLAIM", "concode_field_sep", "void", "process", "concode_elem_sep", "void", "process", "concode_elem_sep", "HashMap", "<", "String", ",", "String", ">", "getSregMapping", "concode_elem_sep", "HashMap", "<", "String", ",", "String", ">", "getAxMapping"]}
{"code": "String function ( ) { return contentType ; }", "nl": "get content type of the message concode_field_sep Map<String,Object> headers concode_elem_sep byte body[] concode_elem_sep long deliveryTag concode_elem_sep String replyTo concode_elem_sep String contentEncoding concode_elem_sep String messageId concode_elem_sep String correlationId concode_elem_sep String soapAction concode_elem_sep String contentType concode_field_sep String getCorrelationId concode_elem_sep String getContentEncoding concode_elem_sep void setHeaders concode_elem_sep Map<String,Object> getHeaders concode_elem_sep byte[] getBody concode_elem_sep String getReplyTo concode_elem_sep void setCorrelationId concode_elem_sep void setContentEncoding concode_elem_sep long getDeliveryTag concode_elem_sep void setMessageId concode_elem_sep void setSoapAction concode_elem_sep void setBody concode_elem_sep String getMessageId concode_elem_sep void setReplyTo concode_elem_sep void setDeliveryTag concode_elem_sep void setContentType concode_elem_sep String getSoapAction", "code_tokens": ["String", "function", "(", ")", "{", "return", "contentType", ";", "}"], "nl_tokens": ["get", "content", "type", "of", "the", "message", "concode_field_sep", "Map", "<", "String", ",", "Object", ">", "headers", "concode_elem_sep", "byte", "body", "[", "]", "concode_elem_sep", "long", "deliveryTag", "concode_elem_sep", "String", "replyTo", "concode_elem_sep", "String", "contentEncoding", "concode_elem_sep", "String", "messageId", "concode_elem_sep", "String", "correlationId", "concode_elem_sep", "String", "soapAction", "concode_elem_sep", "String", "contentType", "concode_field_sep", "String", "getCorrelationId", "concode_elem_sep", "String", "getContentEncoding", "concode_elem_sep", "void", "setHeaders", "concode_elem_sep", "Map", "<", "String", ",", "Object", ">", "getHeaders", "concode_elem_sep", "byte", "[", "]", "getBody", "concode_elem_sep", "String", "getReplyTo", "concode_elem_sep", "void", "setCorrelationId", "concode_elem_sep", "void", "setContentEncoding", "concode_elem_sep", "long", "getDeliveryTag", "concode_elem_sep", "void", "setMessageId", "concode_elem_sep", "void", "setSoapAction", "concode_elem_sep", "void", "setBody", "concode_elem_sep", "String", "getMessageId", "concode_elem_sep", "void", "setReplyTo", "concode_elem_sep", "void", "setDeliveryTag", "concode_elem_sep", "void", "setContentType", "concode_elem_sep", "String", "getSoapAction"]}
{"code": "int function ( ) { return tag ; }", "nl": "get the tag of the constant . concode_field_sep byte INTEGER concode_elem_sep byte FIELD_REF concode_elem_sep byte DOUBLE concode_elem_sep byte UTF8 concode_elem_sep byte STRING concode_elem_sep byte FLOAT concode_elem_sep byte METHOD_REF concode_elem_sep byte NAME_AND_TYPE concode_elem_sep byte METHOD_TYPE concode_elem_sep byte LONG concode_elem_sep int tag concode_elem_sep byte METHOD_HANDLE concode_elem_sep Object value concode_elem_sep byte INTERFACE_METHOD_REF concode_elem_sep byte CLASS concode_elem_sep byte INVOKE_DYNAMIC concode_field_sep int hashCode concode_elem_sep boolean equals concode_elem_sep Object value", "code_tokens": ["int", "function", "(", ")", "{", "return", "tag", ";", "}"], "nl_tokens": ["get", "the", "tag", "of", "the", "constant", ".", "concode_field_sep", "byte", "INTEGER", "concode_elem_sep", "byte", "FIELD_REF", "concode_elem_sep", "byte", "DOUBLE", "concode_elem_sep", "byte", "UTF8", "concode_elem_sep", "byte", "STRING", "concode_elem_sep", "byte", "FLOAT", "concode_elem_sep", "byte", "METHOD_REF", "concode_elem_sep", "byte", "NAME_AND_TYPE", "concode_elem_sep", "byte", "METHOD_TYPE", "concode_elem_sep", "byte", "LONG", "concode_elem_sep", "int", "tag", "concode_elem_sep", "byte", "METHOD_HANDLE", "concode_elem_sep", "Object", "value", "concode_elem_sep", "byte", "INTERFACE_METHOD_REF", "concode_elem_sep", "byte", "CLASS", "concode_elem_sep", "byte", "INVOKE_DYNAMIC", "concode_field_sep", "int", "hashCode", "concode_elem_sep", "boolean", "equals", "concode_elem_sep", "Object", "value"]}
{"code": "GetOfferDetailsResponse . Return . DetailOfferData . FulfillmentPartner function ( ) { return new GetOfferDetailsResponse . Return . DetailOfferData . FulfillmentPartner ( ) ; }", "nl": "create an instance of getofferdetailsresponse.return.detailofferdata.fulfillmentpartner concode_field_sep PlaceHolder placeHolder concode_field_sep GetOfferDetailsResponse.Return.DetailOfferData.SourceGeos createGetOfferDetailsResponseReturnDetailOfferDataSourceGeos concode_elem_sep GetOfferDetailsResponse.Return.DetailOfferData.Seo createGetOfferDetailsResponseReturnDetailOfferDataSeo concode_elem_sep GetOfferDetailsResponse.Return.DetailOfferData.Merchant.Addresses createGetOfferDetailsResponseReturnDetailOfferDataMerchantAddresses concode_elem_sep GetOfferDetailsResponse.Return.DetailOfferData.TargetGeos.Geo.Country createGetOfferDetailsResponseReturnDetailOfferDataTargetGeosGeoCountry concode_elem_sep GetOfferDetailsResponse.Return.DetailOfferData.OfferMedia.OfferImage.Entry createGetOfferDetailsResponseReturnDetailOfferDataOfferMediaOfferImageEntry concode_elem_sep GetOfferDetailsResponse.Return.DetailOfferData.TargetGeos.Geo createGetOfferDetailsResponseReturnDetailOfferDataTargetGeosGeo concode_elem_sep GetOfferDetailsResponse.Return.DetailOfferData.OfferMedia createGetOfferDetailsResponseReturnDetailOfferDataOfferMedia concode_elem_sep GetOfferDetailsResponse.Return.DetailOfferData.OfferMedia.OfferImage.Entry.Value createGetOfferDetailsResponseReturnDetailOfferDataOfferMediaOfferImageEntryValue concode_elem_sep GetOfferDetailsResponse.Return.DetailOfferData.Products.Product createGetOfferDetailsResponseReturnDetailOfferDataProductsProduct concode_elem_sep GetOfferDetailsResponse.Return.DetailOfferData.RedemptionAddresses.RedemptionAddress createGetOfferDetailsResponseReturnDetailOfferDataRedemptionAddressesRedemptionAddress concode_elem_sep GetOfferDetailsResponse.Return.DetailOfferData.SourceGeos.Geo.Region createGetOfferDetailsResponseReturnDetailOfferDataSourceGeosGeoRegion concode_elem_sep GetOfferDetailsResponse.Return.DetailOfferData.TargetGeos.Geo.City createGetOfferDetailsResponseReturnDetailOfferDataTargetGeosGeoCity concode_elem_sep GetOfferDetailsResponse.Return.DetailOfferData createGetOfferDetailsResponseReturnDetailOfferData concode_elem_sep GetOfferDetailsResponse createGetOfferDetailsResponse concode_elem_sep GetOfferDetailsResponse.Return.DetailOfferData.SourceGeos.Geo.City createGetOfferDetailsResponseReturnDetailOfferDataSourceGeosGeoCity concode_elem_sep GetOfferDetailsResponse.Return.DetailOfferData.OfferMedia.OfferImage.Entry.Value.Item createGetOfferDetailsResponseReturnDetailOfferDataOfferMediaOfferImageEntryValueItem concode_elem_sep GetOfferDetailsResponse.Return.DetailOfferData.Products createGetOfferDetailsResponseReturnDetailOfferDataProducts concode_elem_sep GetOfferDetailsResponse.Return.DetailOfferData.OfferMedia.OfferImage createGetOfferDetailsResponseReturnDetailOfferDataOfferMediaOfferImage concode_elem_sep GetOfferDetailsResponse.Return.DetailOfferData.RedemptionAddresses createGetOfferDetailsResponseReturnDetailOfferDataRedemptionAddresses concode_elem_sep GetOfferDetailsResponse.Return createGetOfferDetailsResponseReturn concode_elem_sep GetOfferDetailsResponse.Return.DetailOfferData.SourceGeos.Geo.Country createGetOfferDetailsResponseReturnDetailOfferDataSourceGeosGeoCountry concode_elem_sep GetOfferDetailsResponse.Return.DetailOfferData.TargetGeos createGetOfferDetailsResponseReturnDetailOfferDataTargetGeos concode_elem_sep GetOfferDetailsResponse.Return.DetailOfferData.TargetGeos.Geo.Region createGetOfferDetailsResponseReturnDetailOfferDataTargetGeosGeoRegion concode_elem_sep GetOfferDetailsResponse.Return.DetailOfferData.Merchant createGetOfferDetailsResponseReturnDetailOfferDataMerchant concode_elem_sep GetOfferDetailsResponse.Return.DetailOfferData.SourceGeos.Geo createGetOfferDetailsResponseReturnDetailOfferDataSourceGeosGeo concode_elem_sep GetOfferDetailsResponse.Return.DetailOfferData.OfferDisplay createGetOfferDetailsResponseReturnDetailOfferDataOfferDisplay", "code_tokens": ["GetOfferDetailsResponse", ".", "Return", ".", "DetailOfferData", ".", "FulfillmentPartner", "function", "(", ")", "{", "return", "new", "GetOfferDetailsResponse", ".", "Return", ".", "DetailOfferData", ".", "FulfillmentPartner", "(", ")", ";", "}"], "nl_tokens": ["create", "an", "instance", "of", "getofferdetailsresponse", ".", "return", ".", "detailofferdata", ".", "fulfillmentpartner", "concode_field_sep", "PlaceHolder", "placeHolder", "concode_field_sep", "GetOfferDetailsResponse", ".", "Return", ".", "DetailOfferData", ".", "SourceGeos", "createGetOfferDetailsResponseReturnDetailOfferDataSourceGeos", "concode_elem_sep", "GetOfferDetailsResponse", ".", "Return", ".", "DetailOfferData", ".", "Seo", "createGetOfferDetailsResponseReturnDetailOfferDataSeo", "concode_elem_sep", "GetOfferDetailsResponse", ".", "Return", ".", "DetailOfferData", ".", "Merchant", ".", "Addresses", "createGetOfferDetailsResponseReturnDetailOfferDataMerchantAddresses", "concode_elem_sep", "GetOfferDetailsResponse", ".", "Return", ".", "DetailOfferData", ".", "TargetGeos", ".", "Geo", ".", "Country", "createGetOfferDetailsResponseReturnDetailOfferDataTargetGeosGeoCountry", "concode_elem_sep", "GetOfferDetailsResponse", ".", "Return", ".", "DetailOfferData", ".", "OfferMedia", ".", "OfferImage", ".", "Entry", "createGetOfferDetailsResponseReturnDetailOfferDataOfferMediaOfferImageEntry", "concode_elem_sep", "GetOfferDetailsResponse", ".", "Return", ".", "DetailOfferData", ".", "TargetGeos", ".", "Geo", "createGetOfferDetailsResponseReturnDetailOfferDataTargetGeosGeo", "concode_elem_sep", "GetOfferDetailsResponse", ".", "Return", ".", "DetailOfferData", ".", "OfferMedia", "createGetOfferDetailsResponseReturnDetailOfferDataOfferMedia", "concode_elem_sep", "GetOfferDetailsResponse", ".", "Return", ".", "DetailOfferData", ".", "OfferMedia", ".", "OfferImage", ".", "Entry", ".", "Value", "createGetOfferDetailsResponseReturnDetailOfferDataOfferMediaOfferImageEntryValue", "concode_elem_sep", "GetOfferDetailsResponse", ".", "Return", ".", "DetailOfferData", ".", "Products", ".", "Product", "createGetOfferDetailsResponseReturnDetailOfferDataProductsProduct", "concode_elem_sep", "GetOfferDetailsResponse", ".", "Return", ".", "DetailOfferData", ".", "RedemptionAddresses", ".", "RedemptionAddress", "createGetOfferDetailsResponseReturnDetailOfferDataRedemptionAddressesRedemptionAddress", "concode_elem_sep", "GetOfferDetailsResponse", ".", "Return", ".", "DetailOfferData", ".", "SourceGeos", ".", "Geo", ".", "Region", "createGetOfferDetailsResponseReturnDetailOfferDataSourceGeosGeoRegion", "concode_elem_sep", "GetOfferDetailsResponse", ".", "Return", ".", "DetailOfferData", ".", "TargetGeos", ".", "Geo", ".", "City", "createGetOfferDetailsResponseReturnDetailOfferDataTargetGeosGeoCity", "concode_elem_sep", "GetOfferDetailsResponse", ".", "Return", ".", "DetailOfferData", "createGetOfferDetailsResponseReturnDetailOfferData", "concode_elem_sep", "GetOfferDetailsResponse", "createGetOfferDetailsResponse", "concode_elem_sep", "GetOfferDetailsResponse", ".", "Return", ".", "DetailOfferData", ".", "SourceGeos", ".", "Geo", ".", "City", "createGetOfferDetailsResponseReturnDetailOfferDataSourceGeosGeoCity", "concode_elem_sep", "GetOfferDetailsResponse", ".", "Return", ".", "DetailOfferData", ".", "OfferMedia", ".", "OfferImage", ".", "Entry", ".", "Value", ".", "Item", "createGetOfferDetailsResponseReturnDetailOfferDataOfferMediaOfferImageEntryValueItem", "concode_elem_sep", "GetOfferDetailsResponse", ".", "Return", ".", "DetailOfferData", ".", "Products", "createGetOfferDetailsResponseReturnDetailOfferDataProducts", "concode_elem_sep", "GetOfferDetailsResponse", ".", "Return", ".", "DetailOfferData", ".", "OfferMedia", ".", "OfferImage", "createGetOfferDetailsResponseReturnDetailOfferDataOfferMediaOfferImage", "concode_elem_sep", "GetOfferDetailsResponse", ".", "Return", ".", "DetailOfferData", ".", "RedemptionAddresses", "createGetOfferDetailsResponseReturnDetailOfferDataRedemptionAddresses", "concode_elem_sep", "GetOfferDetailsResponse", ".", "Return", "createGetOfferDetailsResponseReturn", "concode_elem_sep", "GetOfferDetailsResponse", ".", "Return", ".", "DetailOfferData", ".", "SourceGeos", ".", "Geo", ".", "Country", "createGetOfferDetailsResponseReturnDetailOfferDataSourceGeosGeoCountry", "concode_elem_sep", "GetOfferDetailsResponse", ".", "Return", ".", "DetailOfferData", ".", "TargetGeos", "createGetOfferDetailsResponseReturnDetailOfferDataTargetGeos", "concode_elem_sep", "GetOfferDetailsResponse", ".", "Return", ".", "DetailOfferData", ".", "TargetGeos", ".", "Geo", ".", "Region", "createGetOfferDetailsResponseReturnDetailOfferDataTargetGeosGeoRegion", "concode_elem_sep", "GetOfferDetailsResponse", ".", "Return", ".", "DetailOfferData", ".", "Merchant", "createGetOfferDetailsResponseReturnDetailOfferDataMerchant", "concode_elem_sep", "GetOfferDetailsResponse", ".", "Return", ".", "DetailOfferData", ".", "SourceGeos", ".", "Geo", "createGetOfferDetailsResponseReturnDetailOfferDataSourceGeosGeo", "concode_elem_sep", "GetOfferDetailsResponse", ".", "Return", ".", "DetailOfferData", ".", "OfferDisplay", "createGetOfferDetailsResponseReturnDetailOfferDataOfferDisplay"]}
{"code": "void function ( final PropertyChangeListener arg0 ) { m_PropertyChangeSupport . addPropertyChangeListener ( arg0 ) ; }", "nl": "add propertychangelistener . concode_field_sep Element m_SignedPart concode_elem_sep int m_SignMode concode_elem_sep String PROP_SIGNEDELEMENT concode_elem_sep Element m_WrappingPayloadElemnt concode_elem_sep String PROP_REFERRINGELEMENT concode_elem_sep WrappingAttackMode m_CurrWrappingMode concode_elem_sep String PROP_WRAPPINGELMENT concode_elem_sep PropertyChangeSupport m_PropertyChangeSupport concode_elem_sep int m_CurrWrappingPayloadIdx concode_elem_sep Element m_AttackPayloadElemnt concode_elem_sep boolean m_IsAdditionalWrap concode_elem_sep String PROP_ATTACKELEMENT concode_field_sep void setAttackPayloadElement concode_elem_sep void setCurrWrappingPayloadIdx concode_elem_sep void setWrappingPayloadElement concode_elem_sep boolean isSigned concode_elem_sep boolean isAdditionalWrap concode_elem_sep Element getWrappingPayloadElement concode_elem_sep void setCurrWrappingMode concode_elem_sep void setIsAdditionalWrap concode_elem_sep Element getAttackPayloadElement concode_elem_sep void setSignedPart concode_elem_sep int getCurrWrappingPayloadIdx concode_elem_sep void removePropertyChangeListener concode_elem_sep void removePropertyChangeListener concode_elem_sep WrappingAttackMode getCurrWrappingMode concode_elem_sep Element getSignedPart concode_elem_sep int getSignMode concode_elem_sep void setSignMode", "code_tokens": ["void", "function", "(", "final", "PropertyChangeListener", "arg0", ")", "{", "m_PropertyChangeSupport", ".", "addPropertyChangeListener", "(", "arg0", ")", ";", "}"], "nl_tokens": ["add", "propertychangelistener", ".", "concode_field_sep", "Element", "m_SignedPart", "concode_elem_sep", "int", "m_SignMode", "concode_elem_sep", "String", "PROP_SIGNEDELEMENT", "concode_elem_sep", "Element", "m_WrappingPayloadElemnt", "concode_elem_sep", "String", "PROP_REFERRINGELEMENT", "concode_elem_sep", "WrappingAttackMode", "m_CurrWrappingMode", "concode_elem_sep", "String", "PROP_WRAPPINGELMENT", "concode_elem_sep", "PropertyChangeSupport", "m_PropertyChangeSupport", "concode_elem_sep", "int", "m_CurrWrappingPayloadIdx", "concode_elem_sep", "Element", "m_AttackPayloadElemnt", "concode_elem_sep", "boolean", "m_IsAdditionalWrap", "concode_elem_sep", "String", "PROP_ATTACKELEMENT", "concode_field_sep", "void", "setAttackPayloadElement", "concode_elem_sep", "void", "setCurrWrappingPayloadIdx", "concode_elem_sep", "void", "setWrappingPayloadElement", "concode_elem_sep", "boolean", "isSigned", "concode_elem_sep", "boolean", "isAdditionalWrap", "concode_elem_sep", "Element", "getWrappingPayloadElement", "concode_elem_sep", "void", "setCurrWrappingMode", "concode_elem_sep", "void", "setIsAdditionalWrap", "concode_elem_sep", "Element", "getAttackPayloadElement", "concode_elem_sep", "void", "setSignedPart", "concode_elem_sep", "int", "getCurrWrappingPayloadIdx", "concode_elem_sep", "void", "removePropertyChangeListener", "concode_elem_sep", "void", "removePropertyChangeListener", "concode_elem_sep", "WrappingAttackMode", "getCurrWrappingMode", "concode_elem_sep", "Element", "getSignedPart", "concode_elem_sep", "int", "getSignMode", "concode_elem_sep", "void", "setSignMode"]}
{"code": "Map < T , String > function ( Set < T > arg0 ) { Map < T , String > loc0 = new HashMap < T , String > ( ) ; for ( T loc1 : arg0 ) { Color loc2 = tintColor ( getRandomColor ( ) , FIXED_TINT_FACTOR ) ; loc0 . put ( loc1 , getColorString ( loc2 ) ) ; } return loc0 ; }", "nl": "builds a map of the supplied keys to random colors . each color is selected randomly and tinted with a fixed tint . concode_field_sep double MAX_TINT_FACTOR concode_elem_sep double MIN_TINT_FACTOR concode_elem_sep double FIXED_TINT_FACTOR concode_field_sep Map<T,String> getGraduatedColorMap concode_elem_sep Color tintColor concode_elem_sep Color getRandomColor concode_elem_sep int applyTint concode_elem_sep String getColorString", "code_tokens": ["Map", "<", "T", ",", "String", ">", "function", "(", "Set", "<", "T", ">", "arg0", ")", "{", "Map", "<", "T", ",", "String", ">", "loc0", "=", "new", "HashMap", "<", "T", ",", "String", ">", "(", ")", ";", "for", "(", "T", "loc1", ":", "arg0", ")", "{", "Color", "loc2", "=", "tintColor", "(", "getRandomColor", "(", ")", ",", "FIXED_TINT_FACTOR", ")", ";", "loc0", ".", "put", "(", "loc1", ",", "getColorString", "(", "loc2", ")", ")", ";", "}", "return", "loc0", ";", "}"], "nl_tokens": ["builds", "a", "map", "of", "the", "supplied", "keys", "to", "random", "colors", ".", "each", "color", "is", "selected", "randomly", "and", "tinted", "with", "a", "fixed", "tint", ".", "concode_field_sep", "double", "MAX_TINT_FACTOR", "concode_elem_sep", "double", "MIN_TINT_FACTOR", "concode_elem_sep", "double", "FIXED_TINT_FACTOR", "concode_field_sep", "Map", "<", "T", ",", "String", ">", "getGraduatedColorMap", "concode_elem_sep", "Color", "tintColor", "concode_elem_sep", "Color", "getRandomColor", "concode_elem_sep", "int", "applyTint", "concode_elem_sep", "String", "getColorString"]}
{"code": "void function ( byte [ ] arg0 , int arg1 , int arg2 ) { if ( arg1 + arg2 > arg0 . length ) { throw new ArrayIndexOutOfBoundsException ( ) ; } }", "nl": "ensures that the given buffer contains at least the given number of bytes after the given offset . concode_field_sep PlaceHolder placeHolder concode_field_sep void writeInt concode_elem_sep void writeInt concode_elem_sep void writeInt concode_elem_sep void writeByte concode_elem_sep void writeByte concode_elem_sep void writeByte concode_elem_sep void writeLong concode_elem_sep void writeLong concode_elem_sep long readLong concode_elem_sep short readShort concode_elem_sep void writeShort concode_elem_sep void writeShort concode_elem_sep byte readByte concode_elem_sep byte readByte concode_elem_sep int readInt concode_elem_sep int readInt", "code_tokens": ["void", "function", "(", "byte", "[", "]", "arg0", ",", "int", "arg1", ",", "int", "arg2", ")", "{", "if", "(", "arg1", "+", "arg2", ">", "arg0", ".", "length", ")", "{", "throw", "new", "ArrayIndexOutOfBoundsException", "(", ")", ";", "}", "}"], "nl_tokens": ["ensures", "that", "the", "given", "buffer", "contains", "at", "least", "the", "given", "number", "of", "bytes", "after", "the", "given", "offset", ".", "concode_field_sep", "PlaceHolder", "placeHolder", "concode_field_sep", "void", "writeInt", "concode_elem_sep", "void", "writeInt", "concode_elem_sep", "void", "writeInt", "concode_elem_sep", "void", "writeByte", "concode_elem_sep", "void", "writeByte", "concode_elem_sep", "void", "writeByte", "concode_elem_sep", "void", "writeLong", "concode_elem_sep", "void", "writeLong", "concode_elem_sep", "long", "readLong", "concode_elem_sep", "short", "readShort", "concode_elem_sep", "void", "writeShort", "concode_elem_sep", "void", "writeShort", "concode_elem_sep", "byte", "readByte", "concode_elem_sep", "byte", "readByte", "concode_elem_sep", "int", "readInt", "concode_elem_sep", "int", "readInt"]}
{"code": "void function ( long arg0 , long arg1 ) { if ( mBlocksToMoveIn . add ( arg0 ) ) { mBlocksToMoveInSize += arg1 ; } }", "nl": "marks a block to move into this dir view , which is used by the evictor . concode_field_sep BlockMetadataManagerView mManagerView concode_elem_sep StorageDir mDir concode_elem_sep long mBlocksToMoveOutSize concode_elem_sep long mBlocksToMoveInSize concode_elem_sep StorageTierView mTierView concode_elem_sep Set<Long> mBlocksToMoveIn concode_elem_sep Set<Long> mBlocksToMoveOut concode_field_sep long getEvitableBytes concode_elem_sep StorageTierView getParentTierView concode_elem_sep boolean isMarkedToMoveOut concode_elem_sep TempBlockMeta createTempBlockMeta concode_elem_sep void clearBlockMarks concode_elem_sep int getDirViewIndex concode_elem_sep long getCommittedBytes concode_elem_sep List<BlockMeta> getEvictableBlocks concode_elem_sep long getCapacityBytes concode_elem_sep long getAvailableBytes concode_elem_sep BlockStoreLocation toBlockStoreLocation concode_elem_sep void markBlockMoveOut", "code_tokens": ["void", "function", "(", "long", "arg0", ",", "long", "arg1", ")", "{", "if", "(", "mBlocksToMoveIn", ".", "add", "(", "arg0", ")", ")", "{", "mBlocksToMoveInSize", "+=", "arg1", ";", "}", "}"], "nl_tokens": ["marks", "a", "block", "to", "move", "into", "this", "dir", "view", ",", "which", "is", "used", "by", "the", "evictor", ".", "concode_field_sep", "BlockMetadataManagerView", "mManagerView", "concode_elem_sep", "StorageDir", "mDir", "concode_elem_sep", "long", "mBlocksToMoveOutSize", "concode_elem_sep", "long", "mBlocksToMoveInSize", "concode_elem_sep", "StorageTierView", "mTierView", "concode_elem_sep", "Set", "<", "Long", ">", "mBlocksToMoveIn", "concode_elem_sep", "Set", "<", "Long", ">", "mBlocksToMoveOut", "concode_field_sep", "long", "getEvitableBytes", "concode_elem_sep", "StorageTierView", "getParentTierView", "concode_elem_sep", "boolean", "isMarkedToMoveOut", "concode_elem_sep", "TempBlockMeta", "createTempBlockMeta", "concode_elem_sep", "void", "clearBlockMarks", "concode_elem_sep", "int", "getDirViewIndex", "concode_elem_sep", "long", "getCommittedBytes", "concode_elem_sep", "List", "<", "BlockMeta", ">", "getEvictableBlocks", "concode_elem_sep", "long", "getCapacityBytes", "concode_elem_sep", "long", "getAvailableBytes", "concode_elem_sep", "BlockStoreLocation", "toBlockStoreLocation", "concode_elem_sep", "void", "markBlockMoveOut"]}
{"code": "void function ( Context arg0 , View arg1 ) { if ( arg1 == null ) return ; InputMethodManager loc0 = ( InputMethodManager ) arg0 . getSystemService ( Context . INPUT_METHOD_SERVICE ) ; loc0 . showSoftInput ( arg1 , 0 ) ; }", "nl": "show keyboard concode_field_sep PlaceHolder placeHolder concode_field_sep void hideSoftInput", "code_tokens": ["void", "function", "(", "Context", "arg0", ",", "View", "arg1", ")", "{", "if", "(", "arg1", "==", "null", ")", "return", ";", "InputMethodManager", "loc0", "=", "(", "InputMethodManager", ")", "arg0", ".", "getSystemService", "(", "Context", ".", "INPUT_METHOD_SERVICE", ")", ";", "loc0", ".", "showSoftInput", "(", "arg1", ",", "0", ")", ";", "}"], "nl_tokens": ["show", "keyboard", "concode_field_sep", "PlaceHolder", "placeHolder", "concode_field_sep", "void", "hideSoftInput"]}
{"code": "Message function ( String arg0 ) { Object loc0 ; try { loc0 = JSONValue . parseWithException ( arg0 ) ; } catch ( ParseException loc1 ) { throw new ParserException ( \"srini_string\" + loc1 . toString ( ) + \"srini_string\" + arg0 + \"srini_string\" ) ; } return parseJSONValueToMessage ( loc0 ) ; }", "nl": "parses an entire json object in the format described by json communication structure concode_field_sep Collection<Command> NULL_PLAYERID_COMMANDS concode_elem_sep Collection<Command> NO_PLAYERID_COMMANDS concode_field_sep Message parseJSONValueToMessage concode_elem_sep void validateObjectField concode_elem_sep void validateType concode_elem_sep boolean validateType concode_elem_sep Message parseOuterJSONObjectToMessage concode_elem_sep void validatePayloadType concode_elem_sep Payload parsePayload concode_elem_sep Payload singleIntegerPayload concode_elem_sep Message parseOuterMesage concode_elem_sep String stringifyMessage", "code_tokens": ["Message", "function", "(", "String", "arg0", ")", "{", "Object", "loc0", ";", "try", "{", "loc0", "=", "JSONValue", ".", "parseWithException", "(", "arg0", ")", ";", "}", "catch", "(", "ParseException", "loc1", ")", "{", "throw", "new", "ParserException", "(", "\"srini_string\"", "+", "loc1", ".", "toString", "(", ")", "+", "\"srini_string\"", "+", "arg0", "+", "\"srini_string\"", ")", ";", "}", "return", "parseJSONValueToMessage", "(", "loc0", ")", ";", "}"], "nl_tokens": ["parses", "an", "entire", "json", "object", "in", "the", "format", "described", "by", "json", "communication", "structure", "concode_field_sep", "Collection", "<", "Command", ">", "NULL_PLAYERID_COMMANDS", "concode_elem_sep", "Collection", "<", "Command", ">", "NO_PLAYERID_COMMANDS", "concode_field_sep", "Message", "parseJSONValueToMessage", "concode_elem_sep", "void", "validateObjectField", "concode_elem_sep", "void", "validateType", "concode_elem_sep", "boolean", "validateType", "concode_elem_sep", "Message", "parseOuterJSONObjectToMessage", "concode_elem_sep", "void", "validatePayloadType", "concode_elem_sep", "Payload", "parsePayload", "concode_elem_sep", "Payload", "singleIntegerPayload", "concode_elem_sep", "Message", "parseOuterMesage", "concode_elem_sep", "String", "stringifyMessage"]}
{"code": "String function ( String arg0 ) { int loc0 = Integer . parseInt ( arg0 , 16 ) ; int loc1 = ( loc0 & 0xFF0000 ) >> 16 ; int loc2 = ( loc0 & 0xFF00 ) >> 8 ; int loc3 = ( loc0 & 0xFF ) ; return getClosestNamedColor ( loc1 , loc2 , loc3 ) ; }", "nl": "get the color name of the color that is closest to the given hex color value as a 6-digit hex string . concode_field_sep int r concode_elem_sep int b concode_elem_sep Map<RGB,String> namedColors concode_elem_sep int g concode_field_sep int hashCode concode_elem_sep boolean equals concode_elem_sep Color getColor concode_elem_sep Optional<String> getNamedColor concode_elem_sep Optional<String> getNamedColor concode_elem_sep double calculateColorDistSq", "code_tokens": ["String", "function", "(", "String", "arg0", ")", "{", "int", "loc0", "=", "Integer", ".", "parseInt", "(", "arg0", ",", "16", ")", ";", "int", "loc1", "=", "(", "loc0", "&", "0xFF0000", ")", ">>", "16", ";", "int", "loc2", "=", "(", "loc0", "&", "0xFF00", ")", ">>", "8", ";", "int", "loc3", "=", "(", "loc0", "&", "0xFF", ")", ";", "return", "getClosestNamedColor", "(", "loc1", ",", "loc2", ",", "loc3", ")", ";", "}"], "nl_tokens": ["get", "the", "color", "name", "of", "the", "color", "that", "is", "closest", "to", "the", "given", "hex", "color", "value", "as", "a", "6", "-", "digit", "hex", "string", ".", "concode_field_sep", "int", "r", "concode_elem_sep", "int", "b", "concode_elem_sep", "Map", "<", "RGB", ",", "String", ">", "namedColors", "concode_elem_sep", "int", "g", "concode_field_sep", "int", "hashCode", "concode_elem_sep", "boolean", "equals", "concode_elem_sep", "Color", "getColor", "concode_elem_sep", "Optional", "<", "String", ">", "getNamedColor", "concode_elem_sep", "Optional", "<", "String", ">", "getNamedColor", "concode_elem_sep", "double", "calculateColorDistSq"]}
{"code": "int function ( ByteBuffer arg0 ) { byte [ ] loc0 = BufferUtils . newByteArrayFromByteBuffer ( arg0 ) ; return indexHash ( loc0 ) ; }", "nl": "hashes a key in bytebuffer to a bucket index in non-negative integer value . concode_field_sep int mKeyCount concode_elem_sep int BUCKET_SIZE_BYTES concode_elem_sep ByteBuffer mBuf concode_elem_sep int INDEX_HASHER_SEED concode_elem_sep int FINGERPRINT_HASHER_SEED concode_elem_sep HashFunction FINGERPRINT_HASHER concode_elem_sep HashFunction INDEX_HASHER concode_elem_sep ByteBuffer mHashTableBuf concode_elem_sep int MAX_PROBES concode_elem_sep int mNumBuckets concode_field_sep int keyCount concode_elem_sep Iterator<ByteBuffer> keyIterator concode_elem_sep int bucketOffset concode_elem_sep LinearProbingIndex createEmptyIndex concode_elem_sep LinearProbingIndex loadFromByteArray concode_elem_sep int byteCount concode_elem_sep ByteBuffer get concode_elem_sep byte fingerprintHash concode_elem_sep byte fingerprintHash concode_elem_sep ByteBuffer nextKey concode_elem_sep boolean put concode_elem_sep byte[] getBytes", "code_tokens": ["int", "function", "(", "ByteBuffer", "arg0", ")", "{", "byte", "[", "]", "loc0", "=", "BufferUtils", ".", "newByteArrayFromByteBuffer", "(", "arg0", ")", ";", "return", "indexHash", "(", "loc0", ")", ";", "}"], "nl_tokens": ["hashes", "a", "key", "in", "bytebuffer", "to", "a", "bucket", "index", "in", "non", "-", "negative", "integer", "value", ".", "concode_field_sep", "int", "mKeyCount", "concode_elem_sep", "int", "BUCKET_SIZE_BYTES", "concode_elem_sep", "ByteBuffer", "mBuf", "concode_elem_sep", "int", "INDEX_HASHER_SEED", "concode_elem_sep", "int", "FINGERPRINT_HASHER_SEED", "concode_elem_sep", "HashFunction", "FINGERPRINT_HASHER", "concode_elem_sep", "HashFunction", "INDEX_HASHER", "concode_elem_sep", "ByteBuffer", "mHashTableBuf", "concode_elem_sep", "int", "MAX_PROBES", "concode_elem_sep", "int", "mNumBuckets", "concode_field_sep", "int", "keyCount", "concode_elem_sep", "Iterator", "<", "ByteBuffer", ">", "keyIterator", "concode_elem_sep", "int", "bucketOffset", "concode_elem_sep", "LinearProbingIndex", "createEmptyIndex", "concode_elem_sep", "LinearProbingIndex", "loadFromByteArray", "concode_elem_sep", "int", "byteCount", "concode_elem_sep", "ByteBuffer", "get", "concode_elem_sep", "byte", "fingerprintHash", "concode_elem_sep", "byte", "fingerprintHash", "concode_elem_sep", "ByteBuffer", "nextKey", "concode_elem_sep", "boolean", "put", "concode_elem_sep", "byte", "[", "]", "getBytes"]}
{"code": "int function ( ) { return mId ; }", "nl": "returns the int identifier of the type . note : this is only used for getting the int representation of the type for alluxio.worker.dataservermessage , since that class needs to manually encode all messages . alluxio.worker.dataservermessage and this method should no longer be neededwhen the client is converted to use netty . concode_field_sep int mId concode_field_sep void encode concode_elem_sep ByteToMessageDecoder createFrameDecoder concode_elem_sep Type getType concode_elem_sep DataBuffer getPayloadDataBuffer concode_elem_sep RPCMessage decodeMessage concode_elem_sep boolean hasPayload concode_elem_sep Type decode concode_elem_sep int getEncodedLength concode_elem_sep void validate", "code_tokens": ["int", "function", "(", ")", "{", "return", "mId", ";", "}"], "nl_tokens": ["returns", "the", "int", "identifier", "of", "the", "type", ".", "note", ":", "this", "is", "only", "used", "for", "getting", "the", "int", "representation", "of", "the", "type", "for", "alluxio", ".", "worker", ".", "dataservermessage", ",", "since", "that", "class", "needs", "to", "manually", "encode", "all", "messages", ".", "alluxio", ".", "worker", ".", "dataservermessage", "and", "this", "method", "should", "no", "longer", "be", "neededwhen", "the", "client", "is", "converted", "to", "use", "netty", ".", "concode_field_sep", "int", "mId", "concode_field_sep", "void", "encode", "concode_elem_sep", "ByteToMessageDecoder", "createFrameDecoder", "concode_elem_sep", "Type", "getType", "concode_elem_sep", "DataBuffer", "getPayloadDataBuffer", "concode_elem_sep", "RPCMessage", "decodeMessage", "concode_elem_sep", "boolean", "hasPayload", "concode_elem_sep", "Type", "decode", "concode_elem_sep", "int", "getEncodedLength", "concode_elem_sep", "void", "validate"]}
{"code": "String function ( ) { if ( keyAlias == null ) { ServerConfiguration loc0 = ServerConfiguration . getInstance ( ) ; return loc0 . getFirstProperty ( \"srini_string\" ) ; } return keyAlias ; }", "nl": "get the private key alias if the key alias is defined in the security configuration take it from there otherwise key alias is taken from the server configuration concode_field_sep boolean isServerPrincipalPasswordEncrypted concode_elem_sep String serverPrincipalPassword concode_elem_sep String trustStores concode_elem_sep String allowedRoles concode_elem_sep String keyAlias concode_elem_sep String privateStore concode_field_sep String getTrustStores concode_elem_sep void setTrustStores concode_elem_sep String getServerPrincipalPassword concode_elem_sep void setKeyAlias concode_elem_sep void setServerPrincipalPassword concode_elem_sep String getPrivateStore concode_elem_sep String getAllowedRoles concode_elem_sep void setPrivateStore concode_elem_sep void setAllowedRoles concode_elem_sep void setServerPrincipalPasswordEncrypted concode_elem_sep boolean isServerPrincipalPasswordEncrypted", "code_tokens": ["String", "function", "(", ")", "{", "if", "(", "keyAlias", "==", "null", ")", "{", "ServerConfiguration", "loc0", "=", "ServerConfiguration", ".", "getInstance", "(", ")", ";", "return", "loc0", ".", "getFirstProperty", "(", "\"srini_string\"", ")", ";", "}", "return", "keyAlias", ";", "}"], "nl_tokens": ["get", "the", "private", "key", "alias", "if", "the", "key", "alias", "is", "defined", "in", "the", "security", "configuration", "take", "it", "from", "there", "otherwise", "key", "alias", "is", "taken", "from", "the", "server", "configuration", "concode_field_sep", "boolean", "isServerPrincipalPasswordEncrypted", "concode_elem_sep", "String", "serverPrincipalPassword", "concode_elem_sep", "String", "trustStores", "concode_elem_sep", "String", "allowedRoles", "concode_elem_sep", "String", "keyAlias", "concode_elem_sep", "String", "privateStore", "concode_field_sep", "String", "getTrustStores", "concode_elem_sep", "void", "setTrustStores", "concode_elem_sep", "String", "getServerPrincipalPassword", "concode_elem_sep", "void", "setKeyAlias", "concode_elem_sep", "void", "setServerPrincipalPassword", "concode_elem_sep", "String", "getPrivateStore", "concode_elem_sep", "String", "getAllowedRoles", "concode_elem_sep", "void", "setPrivateStore", "concode_elem_sep", "void", "setAllowedRoles", "concode_elem_sep", "void", "setServerPrincipalPasswordEncrypted", "concode_elem_sep", "boolean", "isServerPrincipalPasswordEncrypted"]}
{"code": "String function ( ) { return errorMsg ; }", "nl": "gets the error msg . concode_field_sep Long expectedDataUnitId concode_elem_sep Long seqNo concode_elem_sep Long dataSetId concode_elem_sep Long dataUnitId concode_elem_sep String expectedValue concode_elem_sep String actualValue concode_elem_sep Long expectedDataSetId concode_elem_sep String errorCode concode_elem_sep Long testId concode_elem_sep String failedAttributeName concode_elem_sep String srcFileName concode_elem_sep String errorMsg concode_field_sep void setExpectedValue concode_elem_sep String getExpectedValue concode_elem_sep Long getExpectedDataSetId concode_elem_sep void setExpectedDataSetId concode_elem_sep void setActualValue concode_elem_sep Long getDataSetId concode_elem_sep void setSrcFileName concode_elem_sep Long getExpectedDataUnitId concode_elem_sep void setExpectedDataUnitId concode_elem_sep String getSrcFileName concode_elem_sep Long getSeqNo concode_elem_sep String getFailedAttributeName concode_elem_sep void setTestId concode_elem_sep void setFailedAttributeName concode_elem_sep Long getTestId concode_elem_sep void setErrorCode concode_elem_sep String getActualValue concode_elem_sep Long getDataUnitId concode_elem_sep void setSeqNo concode_elem_sep void setErrorMsg concode_elem_sep String getErrorCode concode_elem_sep void setDataUnitId concode_elem_sep void setDataSetId concode_elem_sep String toString", "code_tokens": ["String", "function", "(", ")", "{", "return", "errorMsg", ";", "}"], "nl_tokens": ["gets", "the", "error", "msg", ".", "concode_field_sep", "Long", "expectedDataUnitId", "concode_elem_sep", "Long", "seqNo", "concode_elem_sep", "Long", "dataSetId", "concode_elem_sep", "Long", "dataUnitId", "concode_elem_sep", "String", "expectedValue", "concode_elem_sep", "String", "actualValue", "concode_elem_sep", "Long", "expectedDataSetId", "concode_elem_sep", "String", "errorCode", "concode_elem_sep", "Long", "testId", "concode_elem_sep", "String", "failedAttributeName", "concode_elem_sep", "String", "srcFileName", "concode_elem_sep", "String", "errorMsg", "concode_field_sep", "void", "setExpectedValue", "concode_elem_sep", "String", "getExpectedValue", "concode_elem_sep", "Long", "getExpectedDataSetId", "concode_elem_sep", "void", "setExpectedDataSetId", "concode_elem_sep", "void", "setActualValue", "concode_elem_sep", "Long", "getDataSetId", "concode_elem_sep", "void", "setSrcFileName", "concode_elem_sep", "Long", "getExpectedDataUnitId", "concode_elem_sep", "void", "setExpectedDataUnitId", "concode_elem_sep", "String", "getSrcFileName", "concode_elem_sep", "Long", "getSeqNo", "concode_elem_sep", "String", "getFailedAttributeName", "concode_elem_sep", "void", "setTestId", "concode_elem_sep", "void", "setFailedAttributeName", "concode_elem_sep", "Long", "getTestId", "concode_elem_sep", "void", "setErrorCode", "concode_elem_sep", "String", "getActualValue", "concode_elem_sep", "Long", "getDataUnitId", "concode_elem_sep", "void", "setSeqNo", "concode_elem_sep", "void", "setErrorMsg", "concode_elem_sep", "String", "getErrorCode", "concode_elem_sep", "void", "setDataUnitId", "concode_elem_sep", "void", "setDataSetId", "concode_elem_sep", "String", "toString"]}
{"code": "String function ( Date arg0 , DateFormatType arg1 ) { String loc0 = null ; SimpleDateFormat loc1 = new SimpleDateFormat ( arg1 . valueOf ( ) ) ; loc0 = loc1 . format ( arg0 ) ; return loc0 ; }", "nl": "format date . concode_field_sep PlaceHolder placeHolder concode_field_sep FetcherTesterExecCallable getExecutorCallable concode_elem_sep FetcherTesterWaitCallable getWaiterCallable", "code_tokens": ["String", "function", "(", "Date", "arg0", ",", "DateFormatType", "arg1", ")", "{", "String", "loc0", "=", "null", ";", "SimpleDateFormat", "loc1", "=", "new", "SimpleDateFormat", "(", "arg1", ".", "valueOf", "(", ")", ")", ";", "loc0", "=", "loc1", ".", "format", "(", "arg0", ")", ";", "return", "loc0", ";", "}"], "nl_tokens": ["format", "date", ".", "concode_field_sep", "PlaceHolder", "placeHolder", "concode_field_sep", "FetcherTesterExecCallable", "getExecutorCallable", "concode_elem_sep", "FetcherTesterWaitCallable", "getWaiterCallable"]}
{"code": "void function ( PropertyDTO [ ] arg0 , String arg1 ) { UserStoreMgtDataKeeper . userStoreManagers . put ( arg1 , convertArrayToMap ( arg0 ) ) ; }", "nl": "add a new user store manager to in-memory map , at the given domain name concode_field_sep Map<String,Map<String,String>> userStoreManagers concode_field_sep Set<String> getAvailableDomainNames concode_elem_sep void clearUserStoreManager concode_elem_sep Map<String,String> convertArrayToMap concode_elem_sep Map<String,String> getUserStoreManager", "code_tokens": ["void", "function", "(", "PropertyDTO", "[", "]", "arg0", ",", "String", "arg1", ")", "{", "UserStoreMgtDataKeeper", ".", "userStoreManagers", ".", "put", "(", "arg1", ",", "convertArrayToMap", "(", "arg0", ")", ")", ";", "}"], "nl_tokens": ["add", "a", "new", "user", "store", "manager", "to", "in", "-", "memory", "map", ",", "at", "the", "given", "domain", "name", "concode_field_sep", "Map", "<", "String", ",", "Map", "<", "String", ",", "String", ">>", "userStoreManagers", "concode_field_sep", "Set", "<", "String", ">", "getAvailableDomainNames", "concode_elem_sep", "void", "clearUserStoreManager", "concode_elem_sep", "Map", "<", "String", ",", "String", ">", "convertArrayToMap", "concode_elem_sep", "Map", "<", "String", ",", "String", ">", "getUserStoreManager"]}
{"code": "String function ( ) { return sender ; }", "nl": "retuen the phone number of the sender concode_field_sep Map<String,Object> properties concode_elem_sep int OUT_MESSAGE concode_elem_sep String receiver concode_elem_sep String sender concode_elem_sep int IN_MESSAGE concode_elem_sep String content concode_elem_sep int direction concode_field_sep String getReceiver concode_elem_sep int getDirection concode_elem_sep String getContent concode_elem_sep Map<String,Object> getProperties concode_elem_sep void addProperty", "code_tokens": ["String", "function", "(", ")", "{", "return", "sender", ";", "}"], "nl_tokens": ["retuen", "the", "phone", "number", "of", "the", "sender", "concode_field_sep", "Map", "<", "String", ",", "Object", ">", "properties", "concode_elem_sep", "int", "OUT_MESSAGE", "concode_elem_sep", "String", "receiver", "concode_elem_sep", "String", "sender", "concode_elem_sep", "int", "IN_MESSAGE", "concode_elem_sep", "String", "content", "concode_elem_sep", "int", "direction", "concode_field_sep", "String", "getReceiver", "concode_elem_sep", "int", "getDirection", "concode_elem_sep", "String", "getContent", "concode_elem_sep", "Map", "<", "String", ",", "Object", ">", "getProperties", "concode_elem_sep", "void", "addProperty"]}
{"code": "Script function ( byte [ ] arg0 ) { checkArgument ( arg0 . length == 20 ) ; return new ScriptBuilder ( ) . op ( OP_HASH160 ) . data ( arg0 ) . op ( OP_EQUAL ) . build ( ) ; }", "nl": "creates a scriptpubkey that sends to the given script hash . read bip 16 to learn more about this kind of script . concode_field_sep List<ScriptChunk> chunks concode_field_sep ScriptBuilder op concode_elem_sep ScriptBuilder op concode_elem_sep Script updateScriptWithSignature concode_elem_sep Script createOpReturnScript concode_elem_sep ScriptBuilder data concode_elem_sep ScriptBuilder data concode_elem_sep Script createMultiSigInputScriptBytes concode_elem_sep Script createMultiSigInputScriptBytes concode_elem_sep ScriptBuilder smallNum concode_elem_sep ScriptBuilder smallNum concode_elem_sep Script createRedeemScript concode_elem_sep ScriptBuilder addChunk concode_elem_sep ScriptBuilder addChunk concode_elem_sep Script createInputScript concode_elem_sep Script createInputScript concode_elem_sep Script createOutputScript concode_elem_sep Script createOutputScript concode_elem_sep Script createMultiSigInputScript concode_elem_sep Script createMultiSigInputScript concode_elem_sep Script createMultiSigOutputScript concode_elem_sep Script build concode_elem_sep Script createP2SHMultiSigInputScript", "code_tokens": ["Script", "function", "(", "byte", "[", "]", "arg0", ")", "{", "checkArgument", "(", "arg0", ".", "length", "==", "20", ")", ";", "return", "new", "ScriptBuilder", "(", ")", ".", "op", "(", "OP_HASH160", ")", ".", "data", "(", "arg0", ")", ".", "op", "(", "OP_EQUAL", ")", ".", "build", "(", ")", ";", "}"], "nl_tokens": ["creates", "a", "scriptpubkey", "that", "sends", "to", "the", "given", "script", "hash", ".", "read", "bip", "16", "to", "learn", "more", "about", "this", "kind", "of", "script", ".", "concode_field_sep", "List", "<", "ScriptChunk", ">", "chunks", "concode_field_sep", "ScriptBuilder", "op", "concode_elem_sep", "ScriptBuilder", "op", "concode_elem_sep", "Script", "updateScriptWithSignature", "concode_elem_sep", "Script", "createOpReturnScript", "concode_elem_sep", "ScriptBuilder", "data", "concode_elem_sep", "ScriptBuilder", "data", "concode_elem_sep", "Script", "createMultiSigInputScriptBytes", "concode_elem_sep", "Script", "createMultiSigInputScriptBytes", "concode_elem_sep", "ScriptBuilder", "smallNum", "concode_elem_sep", "ScriptBuilder", "smallNum", "concode_elem_sep", "Script", "createRedeemScript", "concode_elem_sep", "ScriptBuilder", "addChunk", "concode_elem_sep", "ScriptBuilder", "addChunk", "concode_elem_sep", "Script", "createInputScript", "concode_elem_sep", "Script", "createInputScript", "concode_elem_sep", "Script", "createOutputScript", "concode_elem_sep", "Script", "createOutputScript", "concode_elem_sep", "Script", "createMultiSigInputScript", "concode_elem_sep", "Script", "createMultiSigInputScript", "concode_elem_sep", "Script", "createMultiSigOutputScript", "concode_elem_sep", "Script", "build", "concode_elem_sep", "Script", "createP2SHMultiSigInputScript"]}
{"code": "GetOfferDetailsResponse . Return . DetailOfferData . OfferDisplay function ( ) { return new GetOfferDetailsResponse . Return . DetailOfferData . OfferDisplay ( ) ; }", "nl": "create an instance of getofferdetailsresponse.return.detailofferdata.offerdisplay concode_field_sep PlaceHolder placeHolder concode_field_sep GetOfferDetailsResponse.Return.DetailOfferData.SourceGeos createGetOfferDetailsResponseReturnDetailOfferDataSourceGeos concode_elem_sep GetOfferDetailsResponse.Return.DetailOfferData.Seo createGetOfferDetailsResponseReturnDetailOfferDataSeo concode_elem_sep GetOfferDetailsResponse.Return.DetailOfferData.Merchant.Addresses createGetOfferDetailsResponseReturnDetailOfferDataMerchantAddresses concode_elem_sep GetOfferDetailsResponse.Return.DetailOfferData.TargetGeos.Geo.Country createGetOfferDetailsResponseReturnDetailOfferDataTargetGeosGeoCountry concode_elem_sep GetOfferDetailsResponse.Return.DetailOfferData.OfferMedia.OfferImage.Entry createGetOfferDetailsResponseReturnDetailOfferDataOfferMediaOfferImageEntry concode_elem_sep GetOfferDetailsResponse.Return.DetailOfferData.TargetGeos.Geo createGetOfferDetailsResponseReturnDetailOfferDataTargetGeosGeo concode_elem_sep GetOfferDetailsResponse.Return.DetailOfferData.OfferMedia createGetOfferDetailsResponseReturnDetailOfferDataOfferMedia concode_elem_sep GetOfferDetailsResponse.Return.DetailOfferData.FulfillmentPartner createGetOfferDetailsResponseReturnDetailOfferDataFulfillmentPartner concode_elem_sep GetOfferDetailsResponse.Return.DetailOfferData.OfferMedia.OfferImage.Entry.Value createGetOfferDetailsResponseReturnDetailOfferDataOfferMediaOfferImageEntryValue concode_elem_sep GetOfferDetailsResponse.Return.DetailOfferData.Products.Product createGetOfferDetailsResponseReturnDetailOfferDataProductsProduct concode_elem_sep GetOfferDetailsResponse.Return.DetailOfferData.RedemptionAddresses.RedemptionAddress createGetOfferDetailsResponseReturnDetailOfferDataRedemptionAddressesRedemptionAddress concode_elem_sep GetOfferDetailsResponse.Return.DetailOfferData.SourceGeos.Geo.Region createGetOfferDetailsResponseReturnDetailOfferDataSourceGeosGeoRegion concode_elem_sep GetOfferDetailsResponse.Return.DetailOfferData.TargetGeos.Geo.City createGetOfferDetailsResponseReturnDetailOfferDataTargetGeosGeoCity concode_elem_sep GetOfferDetailsResponse.Return.DetailOfferData createGetOfferDetailsResponseReturnDetailOfferData concode_elem_sep GetOfferDetailsResponse createGetOfferDetailsResponse concode_elem_sep GetOfferDetailsResponse.Return.DetailOfferData.SourceGeos.Geo.City createGetOfferDetailsResponseReturnDetailOfferDataSourceGeosGeoCity concode_elem_sep GetOfferDetailsResponse.Return.DetailOfferData.OfferMedia.OfferImage.Entry.Value.Item createGetOfferDetailsResponseReturnDetailOfferDataOfferMediaOfferImageEntryValueItem concode_elem_sep GetOfferDetailsResponse.Return.DetailOfferData.Products createGetOfferDetailsResponseReturnDetailOfferDataProducts concode_elem_sep GetOfferDetailsResponse.Return.DetailOfferData.OfferMedia.OfferImage createGetOfferDetailsResponseReturnDetailOfferDataOfferMediaOfferImage concode_elem_sep GetOfferDetailsResponse.Return.DetailOfferData.RedemptionAddresses createGetOfferDetailsResponseReturnDetailOfferDataRedemptionAddresses concode_elem_sep GetOfferDetailsResponse.Return createGetOfferDetailsResponseReturn concode_elem_sep GetOfferDetailsResponse.Return.DetailOfferData.SourceGeos.Geo.Country createGetOfferDetailsResponseReturnDetailOfferDataSourceGeosGeoCountry concode_elem_sep GetOfferDetailsResponse.Return.DetailOfferData.TargetGeos createGetOfferDetailsResponseReturnDetailOfferDataTargetGeos concode_elem_sep GetOfferDetailsResponse.Return.DetailOfferData.TargetGeos.Geo.Region createGetOfferDetailsResponseReturnDetailOfferDataTargetGeosGeoRegion concode_elem_sep GetOfferDetailsResponse.Return.DetailOfferData.Merchant createGetOfferDetailsResponseReturnDetailOfferDataMerchant concode_elem_sep GetOfferDetailsResponse.Return.DetailOfferData.SourceGeos.Geo createGetOfferDetailsResponseReturnDetailOfferDataSourceGeosGeo", "code_tokens": ["GetOfferDetailsResponse", ".", "Return", ".", "DetailOfferData", ".", "OfferDisplay", "function", "(", ")", "{", "return", "new", "GetOfferDetailsResponse", ".", "Return", ".", "DetailOfferData", ".", "OfferDisplay", "(", ")", ";", "}"], "nl_tokens": ["create", "an", "instance", "of", "getofferdetailsresponse", ".", "return", ".", "detailofferdata", ".", "offerdisplay", "concode_field_sep", "PlaceHolder", "placeHolder", "concode_field_sep", "GetOfferDetailsResponse", ".", "Return", ".", "DetailOfferData", ".", "SourceGeos", "createGetOfferDetailsResponseReturnDetailOfferDataSourceGeos", "concode_elem_sep", "GetOfferDetailsResponse", ".", "Return", ".", "DetailOfferData", ".", "Seo", "createGetOfferDetailsResponseReturnDetailOfferDataSeo", "concode_elem_sep", "GetOfferDetailsResponse", ".", "Return", ".", "DetailOfferData", ".", "Merchant", ".", "Addresses", "createGetOfferDetailsResponseReturnDetailOfferDataMerchantAddresses", "concode_elem_sep", "GetOfferDetailsResponse", ".", "Return", ".", "DetailOfferData", ".", "TargetGeos", ".", "Geo", ".", "Country", "createGetOfferDetailsResponseReturnDetailOfferDataTargetGeosGeoCountry", "concode_elem_sep", "GetOfferDetailsResponse", ".", "Return", ".", "DetailOfferData", ".", "OfferMedia", ".", "OfferImage", ".", "Entry", "createGetOfferDetailsResponseReturnDetailOfferDataOfferMediaOfferImageEntry", "concode_elem_sep", "GetOfferDetailsResponse", ".", "Return", ".", "DetailOfferData", ".", "TargetGeos", ".", "Geo", "createGetOfferDetailsResponseReturnDetailOfferDataTargetGeosGeo", "concode_elem_sep", "GetOfferDetailsResponse", ".", "Return", ".", "DetailOfferData", ".", "OfferMedia", "createGetOfferDetailsResponseReturnDetailOfferDataOfferMedia", "concode_elem_sep", "GetOfferDetailsResponse", ".", "Return", ".", "DetailOfferData", ".", "FulfillmentPartner", "createGetOfferDetailsResponseReturnDetailOfferDataFulfillmentPartner", "concode_elem_sep", "GetOfferDetailsResponse", ".", "Return", ".", "DetailOfferData", ".", "OfferMedia", ".", "OfferImage", ".", "Entry", ".", "Value", "createGetOfferDetailsResponseReturnDetailOfferDataOfferMediaOfferImageEntryValue", "concode_elem_sep", "GetOfferDetailsResponse", ".", "Return", ".", "DetailOfferData", ".", "Products", ".", "Product", "createGetOfferDetailsResponseReturnDetailOfferDataProductsProduct", "concode_elem_sep", "GetOfferDetailsResponse", ".", "Return", ".", "DetailOfferData", ".", "RedemptionAddresses", ".", "RedemptionAddress", "createGetOfferDetailsResponseReturnDetailOfferDataRedemptionAddressesRedemptionAddress", "concode_elem_sep", "GetOfferDetailsResponse", ".", "Return", ".", "DetailOfferData", ".", "SourceGeos", ".", "Geo", ".", "Region", "createGetOfferDetailsResponseReturnDetailOfferDataSourceGeosGeoRegion", "concode_elem_sep", "GetOfferDetailsResponse", ".", "Return", ".", "DetailOfferData", ".", "TargetGeos", ".", "Geo", ".", "City", "createGetOfferDetailsResponseReturnDetailOfferDataTargetGeosGeoCity", "concode_elem_sep", "GetOfferDetailsResponse", ".", "Return", ".", "DetailOfferData", "createGetOfferDetailsResponseReturnDetailOfferData", "concode_elem_sep", "GetOfferDetailsResponse", "createGetOfferDetailsResponse", "concode_elem_sep", "GetOfferDetailsResponse", ".", "Return", ".", "DetailOfferData", ".", "SourceGeos", ".", "Geo", ".", "City", "createGetOfferDetailsResponseReturnDetailOfferDataSourceGeosGeoCity", "concode_elem_sep", "GetOfferDetailsResponse", ".", "Return", ".", "DetailOfferData", ".", "OfferMedia", ".", "OfferImage", ".", "Entry", ".", "Value", ".", "Item", "createGetOfferDetailsResponseReturnDetailOfferDataOfferMediaOfferImageEntryValueItem", "concode_elem_sep", "GetOfferDetailsResponse", ".", "Return", ".", "DetailOfferData", ".", "Products", "createGetOfferDetailsResponseReturnDetailOfferDataProducts", "concode_elem_sep", "GetOfferDetailsResponse", ".", "Return", ".", "DetailOfferData", ".", "OfferMedia", ".", "OfferImage", "createGetOfferDetailsResponseReturnDetailOfferDataOfferMediaOfferImage", "concode_elem_sep", "GetOfferDetailsResponse", ".", "Return", ".", "DetailOfferData", ".", "RedemptionAddresses", "createGetOfferDetailsResponseReturnDetailOfferDataRedemptionAddresses", "concode_elem_sep", "GetOfferDetailsResponse", ".", "Return", "createGetOfferDetailsResponseReturn", "concode_elem_sep", "GetOfferDetailsResponse", ".", "Return", ".", "DetailOfferData", ".", "SourceGeos", ".", "Geo", ".", "Country", "createGetOfferDetailsResponseReturnDetailOfferDataSourceGeosGeoCountry", "concode_elem_sep", "GetOfferDetailsResponse", ".", "Return", ".", "DetailOfferData", ".", "TargetGeos", "createGetOfferDetailsResponseReturnDetailOfferDataTargetGeos", "concode_elem_sep", "GetOfferDetailsResponse", ".", "Return", ".", "DetailOfferData", ".", "TargetGeos", ".", "Geo", ".", "Region", "createGetOfferDetailsResponseReturnDetailOfferDataTargetGeosGeoRegion", "concode_elem_sep", "GetOfferDetailsResponse", ".", "Return", ".", "DetailOfferData", ".", "Merchant", "createGetOfferDetailsResponseReturnDetailOfferDataMerchant", "concode_elem_sep", "GetOfferDetailsResponse", ".", "Return", ".", "DetailOfferData", ".", "SourceGeos", ".", "Geo", "createGetOfferDetailsResponseReturnDetailOfferDataSourceGeosGeo"]}
{"code": "BasicNameManager function ( ServiceInfo arg0 ) { BasicNameManager loc0 = new BasicNameManager ( ) ; loc0 . initialize ( arg0 , null ) ; return loc0 ; }", "nl": "factory that just takes a service . used in tools and unit tests . concode_field_sep Map<String,String> nsPrefixMap concode_field_sep String getJavascriptName concode_elem_sep String getJavascriptName concode_elem_sep String transformURI concode_elem_sep String defineFallbackPrefix concode_elem_sep void initialize concode_elem_sep JavascriptOptionsFeature getOptions", "code_tokens": ["BasicNameManager", "function", "(", "ServiceInfo", "arg0", ")", "{", "BasicNameManager", "loc0", "=", "new", "BasicNameManager", "(", ")", ";", "loc0", ".", "initialize", "(", "arg0", ",", "null", ")", ";", "return", "loc0", ";", "}"], "nl_tokens": ["factory", "that", "just", "takes", "a", "service", ".", "used", "in", "tools", "and", "unit", "tests", ".", "concode_field_sep", "Map", "<", "String", ",", "String", ">", "nsPrefixMap", "concode_field_sep", "String", "getJavascriptName", "concode_elem_sep", "String", "getJavascriptName", "concode_elem_sep", "String", "transformURI", "concode_elem_sep", "String", "defineFallbackPrefix", "concode_elem_sep", "void", "initialize", "concode_elem_sep", "JavascriptOptionsFeature", "getOptions"]}
{"code": "Long function ( ) { return dataSetId ; }", "nl": "gets the data set id . concode_field_sep long serialVersionUID concode_elem_sep String isSystemDerived concode_elem_sep String isActive concode_elem_sep BigDecimal predecessorId concode_elem_sep String srcFileName concode_elem_sep BigDecimal successorId concode_elem_sep BigDecimal feedId concode_elem_sep String checksum concode_elem_sep String transmissionDatasetId concode_elem_sep String comments concode_elem_sep String inactivationReasonType concode_elem_sep String isFormatValid concode_elem_sep long dataUnitId concode_elem_sep Timestamp receiptDate concode_elem_sep String srcUniqueFileName concode_elem_sep Timestamp createdDate concode_elem_sep Long dataSetId concode_elem_sep BigDecimal fileSize concode_elem_sep String destFileName concode_elem_sep String loadedInCats concode_elem_sep String checksumType concode_elem_sep Timestamp modifiedDate concode_elem_sep BigDecimal runId concode_elem_sep String isPrepopulated concode_elem_sep String isBulk concode_elem_sep String isUpdate concode_elem_sep String receiptDateType concode_elem_sep String status concode_field_sep void setIsSystemDerived concode_elem_sep void setIsPrepopulated concode_elem_sep String getStatus concode_elem_sep String getIsUpdate concode_elem_sep long getDataUnitId concode_elem_sep BigDecimal getFileSize concode_elem_sep void setInactivationReasonType concode_elem_sep void setDataUnitId concode_elem_sep String getComments concode_elem_sep Timestamp getCreatedDate concode_elem_sep void setFileSize concode_elem_sep BigDecimal getPredecessorId concode_elem_sep void setIsUpdate concode_elem_sep String getReceiptDateType concode_elem_sep BigDecimal getFeedId concode_elem_sep void setReceiptDate concode_elem_sep Timestamp getModifiedDate concode_elem_sep void setSuccessorId concode_elem_sep void setDestFileName concode_elem_sep void setIsBulk concode_elem_sep String getIsFormatValid concode_elem_sep void setDataSetId concode_elem_sep void setIsActive concode_elem_sep void setChecksumType concode_elem_sep void setFeedId concode_elem_sep String getInactivationReasonType concode_elem_sep String getSrcUniqueFileName concode_elem_sep void setReceiptDateType concode_elem_sep BigDecimal getRunId concode_elem_sep void setSrcFileName concode_elem_sep String getChecksumType concode_elem_sep String getSrcFileName concode_elem_sep String getChecksum concode_elem_sep String getDestFileName concode_elem_sep Timestamp getReceiptDate concode_elem_sep void setTransmissionDatasetId concode_elem_sep String getTransmissionDatasetId concode_elem_sep void setComments concode_elem_sep String getLoadedInCats concode_elem_sep BigDecimal getSuccessorId concode_elem_sep void setLoadedInCats concode_elem_sep String getIsPrepopulated concode_elem_sep void setSrcUniqueFileName concode_elem_sep void setChecksum concode_elem_sep void setIsFormatValid concode_elem_sep String getIsBulk concode_elem_sep void setRunId concode_elem_sep void setStatus concode_elem_sep String getIsActive concode_elem_sep void setModifiedDate concode_elem_sep void setCreatedDate concode_elem_sep void setPredecessorId concode_elem_sep String getIsSystemDerived", "code_tokens": ["Long", "function", "(", ")", "{", "return", "dataSetId", ";", "}"], "nl_tokens": ["gets", "the", "data", "set", "id", ".", "concode_field_sep", "long", "serialVersionUID", "concode_elem_sep", "String", "isSystemDerived", "concode_elem_sep", "String", "isActive", "concode_elem_sep", "BigDecimal", "predecessorId", "concode_elem_sep", "String", "srcFileName", "concode_elem_sep", "BigDecimal", "successorId", "concode_elem_sep", "BigDecimal", "feedId", "concode_elem_sep", "String", "checksum", "concode_elem_sep", "String", "transmissionDatasetId", "concode_elem_sep", "String", "comments", "concode_elem_sep", "String", "inactivationReasonType", "concode_elem_sep", "String", "isFormatValid", "concode_elem_sep", "long", "dataUnitId", "concode_elem_sep", "Timestamp", "receiptDate", "concode_elem_sep", "String", "srcUniqueFileName", "concode_elem_sep", "Timestamp", "createdDate", "concode_elem_sep", "Long", "dataSetId", "concode_elem_sep", "BigDecimal", "fileSize", "concode_elem_sep", "String", "destFileName", "concode_elem_sep", "String", "loadedInCats", "concode_elem_sep", "String", "checksumType", "concode_elem_sep", "Timestamp", "modifiedDate", "concode_elem_sep", "BigDecimal", "runId", "concode_elem_sep", "String", "isPrepopulated", "concode_elem_sep", "String", "isBulk", "concode_elem_sep", "String", "isUpdate", "concode_elem_sep", "String", "receiptDateType", "concode_elem_sep", "String", "status", "concode_field_sep", "void", "setIsSystemDerived", "concode_elem_sep", "void", "setIsPrepopulated", "concode_elem_sep", "String", "getStatus", "concode_elem_sep", "String", "getIsUpdate", "concode_elem_sep", "long", "getDataUnitId", "concode_elem_sep", "BigDecimal", "getFileSize", "concode_elem_sep", "void", "setInactivationReasonType", "concode_elem_sep", "void", "setDataUnitId", "concode_elem_sep", "String", "getComments", "concode_elem_sep", "Timestamp", "getCreatedDate", "concode_elem_sep", "void", "setFileSize", "concode_elem_sep", "BigDecimal", "getPredecessorId", "concode_elem_sep", "void", "setIsUpdate", "concode_elem_sep", "String", "getReceiptDateType", "concode_elem_sep", "BigDecimal", "getFeedId", "concode_elem_sep", "void", "setReceiptDate", "concode_elem_sep", "Timestamp", "getModifiedDate", "concode_elem_sep", "void", "setSuccessorId", "concode_elem_sep", "void", "setDestFileName", "concode_elem_sep", "void", "setIsBulk", "concode_elem_sep", "String", "getIsFormatValid", "concode_elem_sep", "void", "setDataSetId", "concode_elem_sep", "void", "setIsActive", "concode_elem_sep", "void", "setChecksumType", "concode_elem_sep", "void", "setFeedId", "concode_elem_sep", "String", "getInactivationReasonType", "concode_elem_sep", "String", "getSrcUniqueFileName", "concode_elem_sep", "void", "setReceiptDateType", "concode_elem_sep", "BigDecimal", "getRunId", "concode_elem_sep", "void", "setSrcFileName", "concode_elem_sep", "String", "getChecksumType", "concode_elem_sep", "String", "getSrcFileName", "concode_elem_sep", "String", "getChecksum", "concode_elem_sep", "String", "getDestFileName", "concode_elem_sep", "Timestamp", "getReceiptDate", "concode_elem_sep", "void", "setTransmissionDatasetId", "concode_elem_sep", "String", "getTransmissionDatasetId", "concode_elem_sep", "void", "setComments", "concode_elem_sep", "String", "getLoadedInCats", "concode_elem_sep", "BigDecimal", "getSuccessorId", "concode_elem_sep", "void", "setLoadedInCats", "concode_elem_sep", "String", "getIsPrepopulated", "concode_elem_sep", "void", "setSrcUniqueFileName", "concode_elem_sep", "void", "setChecksum", "concode_elem_sep", "void", "setIsFormatValid", "concode_elem_sep", "String", "getIsBulk", "concode_elem_sep", "void", "setRunId", "concode_elem_sep", "void", "setStatus", "concode_elem_sep", "String", "getIsActive", "concode_elem_sep", "void", "setModifiedDate", "concode_elem_sep", "void", "setCreatedDate", "concode_elem_sep", "void", "setPredecessorId", "concode_elem_sep", "String", "getIsSystemDerived"]}
{"code": "String function ( ResultSet arg0 , String arg1 ) { return getStringValue ( arg0 , arg1 , true ) ; }", "nl": "get string value from database , replacing empty string with empty concode_field_sep Connection connection concode_elem_sep DbInfo info concode_field_sep void disconnect concode_elem_sep DbInfo getInfo concode_elem_sep Connection getConnnection concode_elem_sep boolean connect", "code_tokens": ["String", "function", "(", "ResultSet", "arg0", ",", "String", "arg1", ")", "{", "return", "getStringValue", "(", "arg0", ",", "arg1", ",", "true", ")", ";", "}"], "nl_tokens": ["get", "string", "value", "from", "database", ",", "replacing", "empty", "string", "with", "empty", "concode_field_sep", "Connection", "connection", "concode_elem_sep", "DbInfo", "info", "concode_field_sep", "void", "disconnect", "concode_elem_sep", "DbInfo", "getInfo", "concode_elem_sep", "Connection", "getConnnection", "concode_elem_sep", "boolean", "connect"]}
{"code": "int function ( ) { return ++ generatedClassSerial ; }", "nl": "internal engine method to return serial number for generated classes to ensure name uniqueness . concode_field_sep long serialVersionUID concode_elem_sep HashMap<Class<?>,Object> interfaceAdapterCache concode_elem_sep boolean cachingIsEnabled concode_elem_sep HashMap<Class<?>,JavaMembers> classTable concode_elem_sep Object AKEY concode_elem_sep int generatedClassSerial concode_elem_sep HashMap<JavaAdapter.JavaAdapterSignature,Class<?>> classAdapterCache concode_field_sep void clearCaches concode_elem_sep boolean isInvokerOptimizationEnabled concode_elem_sep boolean isCachingEnabled concode_elem_sep ClassCache get concode_elem_sep void setCachingEnabled concode_elem_sep Map<Class<?>,JavaMembers> getClassCacheMap concode_elem_sep Object getInterfaceAdapter concode_elem_sep void setInvokerOptimizationEnabled concode_elem_sep boolean associate concode_elem_sep Map<JavaAdapter.JavaAdapterSignature,Class<?>> getInterfaceAdapterCacheMap concode_elem_sep void cacheInterfaceAdapter", "code_tokens": ["int", "function", "(", ")", "{", "return", "+", "+", "generatedClassSerial", ";", "}"], "nl_tokens": ["internal", "engine", "method", "to", "return", "serial", "number", "for", "generated", "classes", "to", "ensure", "name", "uniqueness", ".", "concode_field_sep", "long", "serialVersionUID", "concode_elem_sep", "HashMap", "<", "Class", "<", "?", ">", ",", "Object", ">", "interfaceAdapterCache", "concode_elem_sep", "boolean", "cachingIsEnabled", "concode_elem_sep", "HashMap", "<", "Class", "<", "?", ">", ",", "JavaMembers", ">", "classTable", "concode_elem_sep", "Object", "AKEY", "concode_elem_sep", "int", "generatedClassSerial", "concode_elem_sep", "HashMap", "<", "JavaAdapter", ".", "JavaAdapterSignature", ",", "Class", "<", "?", ">>", "classAdapterCache", "concode_field_sep", "void", "clearCaches", "concode_elem_sep", "boolean", "isInvokerOptimizationEnabled", "concode_elem_sep", "boolean", "isCachingEnabled", "concode_elem_sep", "ClassCache", "get", "concode_elem_sep", "void", "setCachingEnabled", "concode_elem_sep", "Map", "<", "Class", "<", "?", ">", ",", "JavaMembers", ">", "getClassCacheMap", "concode_elem_sep", "Object", "getInterfaceAdapter", "concode_elem_sep", "void", "setInvokerOptimizationEnabled", "concode_elem_sep", "boolean", "associate", "concode_elem_sep", "Map", "<", "JavaAdapter", ".", "JavaAdapterSignature", ",", "Class", "<", "?", ">>", "getInterfaceAdapterCacheMap", "concode_elem_sep", "void", "cacheInterfaceAdapter"]}
{"code": "Texture function ( String arg0 , String arg1 ) { Texture loc0 = null ; if ( this . textures != null && FileMap . resourcesToDirectory . containsKey ( arg1 ) ) { loc0 = game . getAssets ( ) . get ( FileMap . resourcesToDirectory . get ( arg1 ) + arg0 + \"srini_string\" , Texture . class ) ; } return loc0 ; }", "nl": "retrieves a texture from the file system . concode_field_sep ShadowStruggles game concode_elem_sep Array<Asset> textures concode_elem_sep Array<Asset> sounds concode_elem_sep Array<Asset> rpgMaps concode_elem_sep String assetName concode_elem_sep Array<Asset> textureRegions concode_elem_sep String LOG concode_elem_sep String assetType concode_field_sep void loadMaps concode_elem_sep void disposeSounds concode_elem_sep TextureRegion getTextureRegion concode_elem_sep TiledMap getTiledMap concode_elem_sep void disposeTextures concode_elem_sep void disposeMaps concode_elem_sep void unloadSounds concode_elem_sep void loadSounds concode_elem_sep boolean equals concode_elem_sep void setAssetsToLoad concode_elem_sep void loadAssets concode_elem_sep void dispose concode_elem_sep void loadTextureAtlas concode_elem_sep void createTextureAtlas concode_elem_sep void disposeAtlas concode_elem_sep void loadTextures", "code_tokens": ["Texture", "function", "(", "String", "arg0", ",", "String", "arg1", ")", "{", "Texture", "loc0", "=", "null", ";", "if", "(", "this", ".", "textures", "!=", "null", "&", "&", "FileMap", ".", "resourcesToDirectory", ".", "containsKey", "(", "arg1", ")", ")", "{", "loc0", "=", "game", ".", "getAssets", "(", ")", ".", "get", "(", "FileMap", ".", "resourcesToDirectory", ".", "get", "(", "arg1", ")", "+", "arg0", "+", "\"srini_string\"", ",", "Texture", ".", "class", ")", ";", "}", "return", "loc0", ";", "}"], "nl_tokens": ["retrieves", "a", "texture", "from", "the", "file", "system", ".", "concode_field_sep", "ShadowStruggles", "game", "concode_elem_sep", "Array", "<", "Asset", ">", "textures", "concode_elem_sep", "Array", "<", "Asset", ">", "sounds", "concode_elem_sep", "Array", "<", "Asset", ">", "rpgMaps", "concode_elem_sep", "String", "assetName", "concode_elem_sep", "Array", "<", "Asset", ">", "textureRegions", "concode_elem_sep", "String", "LOG", "concode_elem_sep", "String", "assetType", "concode_field_sep", "void", "loadMaps", "concode_elem_sep", "void", "disposeSounds", "concode_elem_sep", "TextureRegion", "getTextureRegion", "concode_elem_sep", "TiledMap", "getTiledMap", "concode_elem_sep", "void", "disposeTextures", "concode_elem_sep", "void", "disposeMaps", "concode_elem_sep", "void", "unloadSounds", "concode_elem_sep", "void", "loadSounds", "concode_elem_sep", "boolean", "equals", "concode_elem_sep", "void", "setAssetsToLoad", "concode_elem_sep", "void", "loadAssets", "concode_elem_sep", "void", "dispose", "concode_elem_sep", "void", "loadTextureAtlas", "concode_elem_sep", "void", "createTextureAtlas", "concode_elem_sep", "void", "disposeAtlas", "concode_elem_sep", "void", "loadTextures"]}
{"code": "void function ( boolean arg0 ) { XRLog . arg0 = arg0 ; }", "nl": "turns logging on or off , without affecting logging configuration . concode_field_sep String CONFIG concode_elem_sep String MATCH concode_elem_sep String RENDER concode_elem_sep String CSS_PARSE concode_elem_sep List LOGGER_NAMES concode_elem_sep String EXCEPTION concode_elem_sep boolean loggingEnabled concode_elem_sep String XML_ENTITIES concode_elem_sep String JUNIT concode_elem_sep String INIT concode_elem_sep XRLogger loggerImpl concode_elem_sep String LOAD concode_elem_sep String LAYOUT concode_elem_sep String GENERAL concode_elem_sep String CASCADE concode_elem_sep boolean initPending concode_field_sep void exception concode_elem_sep void exception concode_elem_sep XRLogger getLoggerImpl concode_elem_sep void init concode_elem_sep void init concode_elem_sep void init concode_elem_sep void init concode_elem_sep void junit concode_elem_sep void junit concode_elem_sep void junit concode_elem_sep List listRegisteredLoggers concode_elem_sep void cssParse concode_elem_sep void cssParse concode_elem_sep void cssParse concode_elem_sep void log concode_elem_sep void log concode_elem_sep void cascade concode_elem_sep void cascade concode_elem_sep void cascade concode_elem_sep void match concode_elem_sep void match concode_elem_sep void match concode_elem_sep void main concode_elem_sep String registerLoggerByName concode_elem_sep void setLevel concode_elem_sep void layout concode_elem_sep void layout concode_elem_sep void layout concode_elem_sep void general concode_elem_sep void general concode_elem_sep void general concode_elem_sep void load concode_elem_sep void load concode_elem_sep void load concode_elem_sep void setLoggerImpl concode_elem_sep void render concode_elem_sep void render concode_elem_sep void render concode_elem_sep void xmlEntities concode_elem_sep void xmlEntities concode_elem_sep void xmlEntities concode_elem_sep boolean isLoggingEnabled", "code_tokens": ["void", "function", "(", "boolean", "arg0", ")", "{", "XRLog", ".", "arg0", "=", "arg0", ";", "}"], "nl_tokens": ["turns", "logging", "on", "or", "off", ",", "without", "affecting", "logging", "configuration", ".", "concode_field_sep", "String", "CONFIG", "concode_elem_sep", "String", "MATCH", "concode_elem_sep", "String", "RENDER", "concode_elem_sep", "String", "CSS_PARSE", "concode_elem_sep", "List", "LOGGER_NAMES", "concode_elem_sep", "String", "EXCEPTION", "concode_elem_sep", "boolean", "loggingEnabled", "concode_elem_sep", "String", "XML_ENTITIES", "concode_elem_sep", "String", "JUNIT", "concode_elem_sep", "String", "INIT", "concode_elem_sep", "XRLogger", "loggerImpl", "concode_elem_sep", "String", "LOAD", "concode_elem_sep", "String", "LAYOUT", "concode_elem_sep", "String", "GENERAL", "concode_elem_sep", "String", "CASCADE", "concode_elem_sep", "boolean", "initPending", "concode_field_sep", "void", "exception", "concode_elem_sep", "void", "exception", "concode_elem_sep", "XRLogger", "getLoggerImpl", "concode_elem_sep", "void", "init", "concode_elem_sep", "void", "init", "concode_elem_sep", "void", "init", "concode_elem_sep", "void", "init", "concode_elem_sep", "void", "junit", "concode_elem_sep", "void", "junit", "concode_elem_sep", "void", "junit", "concode_elem_sep", "List", "listRegisteredLoggers", "concode_elem_sep", "void", "cssParse", "concode_elem_sep", "void", "cssParse", "concode_elem_sep", "void", "cssParse", "concode_elem_sep", "void", "log", "concode_elem_sep", "void", "log", "concode_elem_sep", "void", "cascade", "concode_elem_sep", "void", "cascade", "concode_elem_sep", "void", "cascade", "concode_elem_sep", "void", "match", "concode_elem_sep", "void", "match", "concode_elem_sep", "void", "match", "concode_elem_sep", "void", "main", "concode_elem_sep", "String", "registerLoggerByName", "concode_elem_sep", "void", "setLevel", "concode_elem_sep", "void", "layout", "concode_elem_sep", "void", "layout", "concode_elem_sep", "void", "layout", "concode_elem_sep", "void", "general", "concode_elem_sep", "void", "general", "concode_elem_sep", "void", "general", "concode_elem_sep", "void", "load", "concode_elem_sep", "void", "load", "concode_elem_sep", "void", "load", "concode_elem_sep", "void", "setLoggerImpl", "concode_elem_sep", "void", "render", "concode_elem_sep", "void", "render", "concode_elem_sep", "void", "render", "concode_elem_sep", "void", "xmlEntities", "concode_elem_sep", "void", "xmlEntities", "concode_elem_sep", "void", "xmlEntities", "concode_elem_sep", "boolean", "isLoggingEnabled"]}
{"code": "void function ( ) { testEventProperties . put ( Notification . NOTIFICATION_KEY_APPLICATION , \"srini_string\" ) ; notificationController . handleEvent ( new Event ( Notification . NOTIFICATION_TOPIC_BROADCAST , testEventProperties ) ) ; }", "nl": "test method for notificationcontroller #handleevent org.osgi.service.event.event verifies that illegalargumentexception is thrown when event 's notification #notification_key_application property is empty . concode_field_sep ServerMessage mockServerMessage concode_elem_sep ServerSession mockServerSession concode_elem_sep HashMap<String,Object> testEventProperties concode_elem_sep String MOCK_SESSION_ID concode_elem_sep NotificationController notificationController concode_field_sep void testHandleEventThrowsIllegalArgumentExceptionOnEmptyUser concode_elem_sep void testDeregisterUserSessionWithNullServerSessonThrowsException concode_elem_sep void testDeregisterUserSessionWithNullServerSessionIdThrowsException concode_elem_sep void testHandleEventThrowsIllegalArgumentExceptionOnNullTitle concode_elem_sep void testGetServerSessionByUserId concode_elem_sep void tearDown concode_elem_sep void testHandleEventThrowsIllegalArgumentExceptionOnEmptyTitle concode_elem_sep void testDeletePersistentNotificationThrowsIllegalArgumentOnNullServerSession concode_elem_sep void testDeregisterUserSessionRemovesUserFromKnownClients concode_elem_sep void testHandleEventThrowsIllegalArgumentExceptionOnEmptyMessage concode_elem_sep void testHandleEventThrowsIllegalArgumentExceptionOnNullApplication concode_elem_sep void testDeletePersistentNotificationThrowsIllegalArgumentOnNullUserId concode_elem_sep void testRegisterUserSessionWithNullServerSessionThrowsException concode_elem_sep void testHandleEventThrowsIllegalArgumentExceptionOnNullUser concode_elem_sep void testRegisterUserSession concode_elem_sep void setUp concode_elem_sep void testHandleEventThrowsIllegalArgumentExceptionOnNullTimestamp concode_elem_sep void testRegisterUserSessionWithNullServerSessionIdThrowsException concode_elem_sep void testHandleEventThrowsIllegalArgumentExceptionOnNullMessage", "code_tokens": ["void", "function", "(", ")", "{", "testEventProperties", ".", "put", "(", "Notification", ".", "NOTIFICATION_KEY_APPLICATION", ",", "\"srini_string\"", ")", ";", "notificationController", ".", "handleEvent", "(", "new", "Event", "(", "Notification", ".", "NOTIFICATION_TOPIC_BROADCAST", ",", "testEventProperties", ")", ")", ";", "}"], "nl_tokens": ["test", "method", "for", "notificationcontroller", "#handleevent org.osgi.service.event.event verifies that illegalargumentexception is thrown when event 's notification #notification_key_application property is empty . concode_field_sep ServerMessage mockServerMessage concode_elem_sep ServerSession mockServerSession concode_elem_sep HashMap<String,Object> testEventProperties concode_elem_sep String MOCK_SESSION_ID concode_elem_sep NotificationController notificationController concode_field_sep void testHandleEventThrowsIllegalArgumentExceptionOnEmptyUser concode_elem_sep void testDeregisterUserSessionWithNullServerSessonThrowsException concode_elem_sep void testDeregisterUserSessionWithNullServerSessionIdThrowsException concode_elem_sep void testHandleEventThrowsIllegalArgumentExceptionOnNullTitle concode_elem_sep void testGetServerSessionByUserId concode_elem_sep void tearDown concode_elem_sep void testHandleEventThrowsIllegalArgumentExceptionOnEmptyTitle concode_elem_sep void testDeletePersistentNotificationThrowsIllegalArgumentOnNullServerSession concode_elem_sep void testDeregisterUserSessionRemovesUserFromKnownClients concode_elem_sep void testHandleEventThrowsIllegalArgumentExceptionOnEmptyMessage concode_elem_sep void testHandleEventThrowsIllegalArgumentExceptionOnNullApplication concode_elem_sep void testDeletePersistentNotificationThrowsIllegalArgumentOnNullUserId concode_elem_sep void testRegisterUserSessionWithNullServerSessionThrowsException concode_elem_sep void testHandleEventThrowsIllegalArgumentExceptionOnNullUser concode_elem_sep void testRegisterUserSession concode_elem_sep void setUp concode_elem_sep void testHandleEventThrowsIllegalArgumentExceptionOnNullTimestamp concode_elem_sep void testRegisterUserSessionWithNullServerSessionIdThrowsException concode_elem_sep void testHandleEventThrowsIllegalArgumentExceptionOnNullMessage"]}
{"code": "Builder function ( @ Nullable String arg0 ) { this . unsafeReplacement = arg0 ; return this ; }", "nl": "sets the replacement string for any characters outside the ` safe ' range that have no explicit replacement . if unsafereplacement is null then no replacement will occur , ifit is '' '' then the unsafe characters are removed from the output . concode_field_sep Escaper NULL_ESCAPER concode_elem_sep Map<Character,String> replacementMap concode_elem_sep char safeMax concode_elem_sep String unsafeReplacement concode_elem_sep char safeMin concode_field_sep Escaper nullEscaper concode_elem_sep Escaper build concode_elem_sep Builder addEscape concode_elem_sep Builder builder concode_elem_sep Builder setSafeRange concode_elem_sep String stringOrNull concode_elem_sep UnicodeEscaper asUnicodeEscaper concode_elem_sep String escape concode_elem_sep char[] escape concode_elem_sep String computeReplacement concode_elem_sep String computeReplacement concode_elem_sep UnicodeEscaper wrap", "code_tokens": ["Builder", "function", "(", "@", "Nullable", "String", "arg0", ")", "{", "this", ".", "unsafeReplacement", "=", "arg0", ";", "return", "this", ";", "}"], "nl_tokens": ["sets", "the", "replacement", "string", "for", "any", "characters", "outside", "the", "`", "safe", "' range that have no explicit replacement . if unsafereplacement is null then no replacement will occur , ifit is '", "' '", "'", "then", "the", "unsafe", "characters", "are", "removed", "from", "the", "output", ".", "concode_field_sep", "Escaper", "NULL_ESCAPER", "concode_elem_sep", "Map", "<", "Character", ",", "String", ">", "replacementMap", "concode_elem_sep", "char", "safeMax", "concode_elem_sep", "String", "unsafeReplacement", "concode_elem_sep", "char", "safeMin", "concode_field_sep", "Escaper", "nullEscaper", "concode_elem_sep", "Escaper", "build", "concode_elem_sep", "Builder", "addEscape", "concode_elem_sep", "Builder", "builder", "concode_elem_sep", "Builder", "setSafeRange", "concode_elem_sep", "String", "stringOrNull", "concode_elem_sep", "UnicodeEscaper", "asUnicodeEscaper", "concode_elem_sep", "String", "escape", "concode_elem_sep", "char", "[", "]", "escape", "concode_elem_sep", "String", "computeReplacement", "concode_elem_sep", "String", "computeReplacement", "concode_elem_sep", "UnicodeEscaper", "wrap"]}
{"code": "String function ( ) { return album ; }", "nl": "get the value of album concode_field_sep FolderInfo.CheckedFlag checkedFlag concode_elem_sep String artist concode_elem_sep String album concode_elem_sep double rating concode_elem_sep int errorLevel concode_field_sep FolderInfo.CheckedFlag getCheckedFlag concode_elem_sep void setArtist concode_elem_sep int getErrorLevel concode_elem_sep void setErrorLevel concode_elem_sep String getArtist concode_elem_sep void setAlbum concode_elem_sep String toString concode_elem_sep void setCheckedFlag concode_elem_sep void setRating concode_elem_sep double getRating", "code_tokens": ["String", "function", "(", ")", "{", "return", "album", ";", "}"], "nl_tokens": ["get", "the", "value", "of", "album", "concode_field_sep", "FolderInfo", ".", "CheckedFlag", "checkedFlag", "concode_elem_sep", "String", "artist", "concode_elem_sep", "String", "album", "concode_elem_sep", "double", "rating", "concode_elem_sep", "int", "errorLevel", "concode_field_sep", "FolderInfo", ".", "CheckedFlag", "getCheckedFlag", "concode_elem_sep", "void", "setArtist", "concode_elem_sep", "int", "getErrorLevel", "concode_elem_sep", "void", "setErrorLevel", "concode_elem_sep", "String", "getArtist", "concode_elem_sep", "void", "setAlbum", "concode_elem_sep", "String", "toString", "concode_elem_sep", "void", "setCheckedFlag", "concode_elem_sep", "void", "setRating", "concode_elem_sep", "double", "getRating"]}
{"code": "void function ( ) { try { instance . setYear ( 10000 ) ; fail ( \"srini_string\" ) ; } catch ( IllegalArgumentException loc1 ) { } }", "nl": "test method for net.sf.marineapi.nmea.util.date #setyear int . concode_field_sep Date instance concode_elem_sep GregorianCalendar cal concode_field_sep void testConstructorWithString concode_elem_sep void testSetMonth concode_elem_sep void testSetYearThreeDigits concode_elem_sep void testConstructor concode_elem_sep void testToStringFourDigitYear concode_elem_sep void testEqualsAfterInit concode_elem_sep void testEqualsWrongType concode_elem_sep void testSetYearTwoDigit concode_elem_sep void testEqualsWhenChanged concode_elem_sep void testToISO8601WithTime concode_elem_sep void setUp concode_elem_sep void testGetMonth concode_elem_sep void testEqualsItself concode_elem_sep void testSetYearNegative concode_elem_sep void testConstructorWithValues concode_elem_sep void testSetDayOutOfBounds concode_elem_sep void testGetYear concode_elem_sep void testToISO8601WithTimeAndZeroZone concode_elem_sep void testToISO8601FourDigitYear concode_elem_sep void testSetDay concode_elem_sep void testSetYearFourDigit concode_elem_sep void testToStringTwoDigitYear concode_elem_sep void testToISO8601WithTimeAndPositiveOffset concode_elem_sep void testToISO8601TwoDigitYear concode_elem_sep void testToISO8601WithTimeAndNegativeOffset concode_elem_sep void testGetDay concode_elem_sep void testSetMonthOutOfBounds", "code_tokens": ["void", "function", "(", ")", "{", "try", "{", "instance", ".", "setYear", "(", "10000", ")", ";", "fail", "(", "\"srini_string\"", ")", ";", "}", "catch", "(", "IllegalArgumentException", "loc1", ")", "{", "}", "}"], "nl_tokens": ["test", "method", "for", "net", ".", "sf", ".", "marineapi", ".", "nmea", ".", "util", ".", "date", "#setyear int . concode_field_sep Date instance concode_elem_sep GregorianCalendar cal concode_field_sep void testConstructorWithString concode_elem_sep void testSetMonth concode_elem_sep void testSetYearThreeDigits concode_elem_sep void testConstructor concode_elem_sep void testToStringFourDigitYear concode_elem_sep void testEqualsAfterInit concode_elem_sep void testEqualsWrongType concode_elem_sep void testSetYearTwoDigit concode_elem_sep void testEqualsWhenChanged concode_elem_sep void testToISO8601WithTime concode_elem_sep void setUp concode_elem_sep void testGetMonth concode_elem_sep void testEqualsItself concode_elem_sep void testSetYearNegative concode_elem_sep void testConstructorWithValues concode_elem_sep void testSetDayOutOfBounds concode_elem_sep void testGetYear concode_elem_sep void testToISO8601WithTimeAndZeroZone concode_elem_sep void testToISO8601FourDigitYear concode_elem_sep void testSetDay concode_elem_sep void testSetYearFourDigit concode_elem_sep void testToStringTwoDigitYear concode_elem_sep void testToISO8601WithTimeAndPositiveOffset concode_elem_sep void testToISO8601TwoDigitYear concode_elem_sep void testToISO8601WithTimeAndNegativeOffset concode_elem_sep void testGetDay concode_elem_sep void testSetMonthOutOfBounds"]}
{"code": "Result function ( ResultLevel arg0 ) { Result loc0 = new Result ( ) ; for ( ResultEntry loc1 : this . log ) { if ( loc1 . getLevel ( ) . compareTo ( arg0 ) <= 0 ) { loc0 . add ( loc1 ) ; } } return loc0 ; }", "nl": "complementary operation to filteronly concode_field_sep Result globalLog concode_elem_sep List<ResultEntry> log concode_elem_sep Map<ResultObserver,ResultObserverSettings> observers concode_field_sep Result getGlobalResult concode_elem_sep Result filterOut concode_elem_sep Result filterOut concode_elem_sep Result filterOut concode_elem_sep boolean removeObserver concode_elem_sep void addObserverLogSource concode_elem_sep void setSources concode_elem_sep boolean remove concode_elem_sep Iterator<ResultEntry> iterator concode_elem_sep boolean removeAll concode_elem_sep ResultEntry get concode_elem_sep Object[] toArray concode_elem_sep T[] toArray concode_elem_sep boolean registerObserver concode_elem_sep boolean add concode_elem_sep void removeObserverLogSource concode_elem_sep boolean containsAll concode_elem_sep void clear concode_elem_sep boolean isEmpty concode_elem_sep void setObserverLevel concode_elem_sep boolean contains concode_elem_sep int size concode_elem_sep boolean addAll concode_elem_sep List<String> getSoures concode_elem_sep String toString concode_elem_sep void notifyObserversClear concode_elem_sep void notifyObserversAdd concode_elem_sep boolean retainAll", "code_tokens": ["Result", "function", "(", "ResultLevel", "arg0", ")", "{", "Result", "loc0", "=", "new", "Result", "(", ")", ";", "for", "(", "ResultEntry", "loc1", ":", "this", ".", "log", ")", "{", "if", "(", "loc1", ".", "getLevel", "(", ")", ".", "compareTo", "(", "arg0", ")", "<=", "0", ")", "{", "loc0", ".", "add", "(", "loc1", ")", ";", "}", "}", "return", "loc0", ";", "}"], "nl_tokens": ["complementary", "operation", "to", "filteronly", "concode_field_sep", "Result", "globalLog", "concode_elem_sep", "List", "<", "ResultEntry", ">", "log", "concode_elem_sep", "Map", "<", "ResultObserver", ",", "ResultObserverSettings", ">", "observers", "concode_field_sep", "Result", "getGlobalResult", "concode_elem_sep", "Result", "filterOut", "concode_elem_sep", "Result", "filterOut", "concode_elem_sep", "Result", "filterOut", "concode_elem_sep", "boolean", "removeObserver", "concode_elem_sep", "void", "addObserverLogSource", "concode_elem_sep", "void", "setSources", "concode_elem_sep", "boolean", "remove", "concode_elem_sep", "Iterator", "<", "ResultEntry", ">", "iterator", "concode_elem_sep", "boolean", "removeAll", "concode_elem_sep", "ResultEntry", "get", "concode_elem_sep", "Object", "[", "]", "toArray", "concode_elem_sep", "T", "[", "]", "toArray", "concode_elem_sep", "boolean", "registerObserver", "concode_elem_sep", "boolean", "add", "concode_elem_sep", "void", "removeObserverLogSource", "concode_elem_sep", "boolean", "containsAll", "concode_elem_sep", "void", "clear", "concode_elem_sep", "boolean", "isEmpty", "concode_elem_sep", "void", "setObserverLevel", "concode_elem_sep", "boolean", "contains", "concode_elem_sep", "int", "size", "concode_elem_sep", "boolean", "addAll", "concode_elem_sep", "List", "<", "String", ">", "getSoures", "concode_elem_sep", "String", "toString", "concode_elem_sep", "void", "notifyObserversClear", "concode_elem_sep", "void", "notifyObserversAdd", "concode_elem_sep", "boolean", "retainAll"]}
{"code": "ProjectModel function ( String arg0 , UserModel arg1 ) { for ( ProjectModel loc0 : getProjectModels ( arg1 , true ) ) { if ( loc0 . arg0 . equalsIgnoreCase ( arg0 ) ) { return loc0 ; } } return null ; }", "nl": "returns the project model for the specified user . concode_field_sep IStoredSettings settings concode_elem_sep IRuntimeManager runtimeManager concode_elem_sep FileBasedConfig projectConfigs concode_elem_sep Logger logger concode_elem_sep IRepositoryManager repositoryManager concode_elem_sep Map<String,ProjectModel> projectCache concode_elem_sep IUserManager userManager concode_elem_sep ObjectCache<String> projectMarkdownCache concode_elem_sep ObjectCache<String> projectRepositoriesMarkdownCache concode_field_sep ProjectManager stop concode_elem_sep void reloadProjectMarkdown concode_elem_sep ProjectManager start concode_elem_sep Map<String,ProjectModel> getProjectConfigs concode_elem_sep List<ProjectModel> getProjectModels concode_elem_sep List<ProjectModel> getProjectModels", "code_tokens": ["ProjectModel", "function", "(", "String", "arg0", ",", "UserModel", "arg1", ")", "{", "for", "(", "ProjectModel", "loc0", ":", "getProjectModels", "(", "arg1", ",", "true", ")", ")", "{", "if", "(", "loc0", ".", "arg0", ".", "equalsIgnoreCase", "(", "arg0", ")", ")", "{", "return", "loc0", ";", "}", "}", "return", "null", ";", "}"], "nl_tokens": ["returns", "the", "project", "model", "for", "the", "specified", "user", ".", "concode_field_sep", "IStoredSettings", "settings", "concode_elem_sep", "IRuntimeManager", "runtimeManager", "concode_elem_sep", "FileBasedConfig", "projectConfigs", "concode_elem_sep", "Logger", "logger", "concode_elem_sep", "IRepositoryManager", "repositoryManager", "concode_elem_sep", "Map", "<", "String", ",", "ProjectModel", ">", "projectCache", "concode_elem_sep", "IUserManager", "userManager", "concode_elem_sep", "ObjectCache", "<", "String", ">", "projectMarkdownCache", "concode_elem_sep", "ObjectCache", "<", "String", ">", "projectRepositoriesMarkdownCache", "concode_field_sep", "ProjectManager", "stop", "concode_elem_sep", "void", "reloadProjectMarkdown", "concode_elem_sep", "ProjectManager", "start", "concode_elem_sep", "Map", "<", "String", ",", "ProjectModel", ">", "getProjectConfigs", "concode_elem_sep", "List", "<", "ProjectModel", ">", "getProjectModels", "concode_elem_sep", "List", "<", "ProjectModel", ">", "getProjectModels"]}
{"code": "FSImageWriter function ( float arg0 ) { FSImageWriter loc0 = new FSImageWriter ( \"srini_string\" ) ; loc0 . setWriteCompressionMode ( ImageWriteParam . MODE_EXPLICIT ) ; loc0 . setWriteCompressionType ( \"srini_string\" ) ; loc0 . setWriteCompressionQuality ( arg0 ) ; return loc0 ; }", "nl": "convenience method for initializing a writer for the jpeg image format . concode_field_sep String imageFormat concode_elem_sep float writeCompressionQuality concode_elem_sep String writeCompressionType concode_elem_sep int writeCompressionMode concode_elem_sep String DEFAULT_IMAGE_FORMAT concode_field_sep void setWriteCompressionMode concode_elem_sep void setWriteCompressionType concode_elem_sep void setWriteCompressionQuality concode_elem_sep void write concode_elem_sep void write concode_elem_sep ImageWriteParam getImageWriteParameters concode_elem_sep ImageWriter lookupImageWriterForFormat", "code_tokens": ["FSImageWriter", "function", "(", "float", "arg0", ")", "{", "FSImageWriter", "loc0", "=", "new", "FSImageWriter", "(", "\"srini_string\"", ")", ";", "loc0", ".", "setWriteCompressionMode", "(", "ImageWriteParam", ".", "MODE_EXPLICIT", ")", ";", "loc0", ".", "setWriteCompressionType", "(", "\"srini_string\"", ")", ";", "loc0", ".", "setWriteCompressionQuality", "(", "arg0", ")", ";", "return", "loc0", ";", "}"], "nl_tokens": ["convenience", "method", "for", "initializing", "a", "writer", "for", "the", "jpeg", "image", "format", ".", "concode_field_sep", "String", "imageFormat", "concode_elem_sep", "float", "writeCompressionQuality", "concode_elem_sep", "String", "writeCompressionType", "concode_elem_sep", "int", "writeCompressionMode", "concode_elem_sep", "String", "DEFAULT_IMAGE_FORMAT", "concode_field_sep", "void", "setWriteCompressionMode", "concode_elem_sep", "void", "setWriteCompressionType", "concode_elem_sep", "void", "setWriteCompressionQuality", "concode_elem_sep", "void", "write", "concode_elem_sep", "void", "write", "concode_elem_sep", "ImageWriteParam", "getImageWriteParameters", "concode_elem_sep", "ImageWriter", "lookupImageWriterForFormat"]}
{"code": "byte [ ] function ( ) { return m_byteArray ; }", "nl": "accessor for the tie breaker bytes . concode_field_sep Random s_random concode_elem_sep byte[] m_byteArray concode_field_sep placeholderType placeHolder", "code_tokens": ["byte", "[", "]", "function", "(", ")", "{", "return", "m_byteArray", ";", "}"], "nl_tokens": ["accessor", "for", "the", "tie", "breaker", "bytes", ".", "concode_field_sep", "Random", "s_random", "concode_elem_sep", "byte", "[", "]", "m_byteArray", "concode_field_sep", "placeholderType", "placeHolder"]}
{"code": "void function ( ) { System . out . println ( \"srini_string\" ) ; HTTPDirectConnection loc0 = new HTTPDirectConnection ( this . URI ) ; this . urlConn = loc0 . getURLConnection ( ) ; }", "nl": "method calling to use the direct connection . concode_field_sep BufferedReader reader concode_elem_sep URLConnection urlConn concode_elem_sep String URI concode_field_sep URLConnection getURLConnection concode_elem_sep BufferedReader getBufferedReader concode_elem_sep void ProxyConnect", "code_tokens": ["void", "function", "(", ")", "{", "System", ".", "out", ".", "println", "(", "\"srini_string\"", ")", ";", "HTTPDirectConnection", "loc0", "=", "new", "HTTPDirectConnection", "(", "this", ".", "URI", ")", ";", "this", ".", "urlConn", "=", "loc0", ".", "getURLConnection", "(", ")", ";", "}"], "nl_tokens": ["method", "calling", "to", "use", "the", "direct", "connection", ".", "concode_field_sep", "BufferedReader", "reader", "concode_elem_sep", "URLConnection", "urlConn", "concode_elem_sep", "String", "URI", "concode_field_sep", "URLConnection", "getURLConnection", "concode_elem_sep", "BufferedReader", "getBufferedReader", "concode_elem_sep", "void", "ProxyConnect"]}
{"code": "NotationProvider function ( int arg0 , Object arg1 ) { NotationName loc0 = Notation . findNotation ( currentLanguage ) ; return getNotationProvider ( arg0 , arg1 , loc0 ) ; }", "nl": "get a notationprovider for the given language . concode_field_sep int TYPE_CALLSTATE concode_elem_sep Map<NotationName,Map<Integer,Class>> allLanguages concode_elem_sep int TYPE_ENUMERATION_LITERAL concode_elem_sep NotationProviderFactory2 instance concode_elem_sep int TYPE_ATTRIBUTE concode_elem_sep int TYPE_OBJECT concode_elem_sep int TYPE_TRANSITION concode_elem_sep int TYPE_OBJECTFLOWSTATE_STATE concode_elem_sep int TYPE_MESSAGE concode_elem_sep int TYPE_ASSOCIATION_ROLE concode_elem_sep NotationName defaultLanguage concode_elem_sep Logger LOG concode_elem_sep String currentLanguage concode_elem_sep int TYPE_OBJECTFLOWSTATE_TYPE concode_elem_sep int TYPE_COMPONENTINSTANCE concode_elem_sep int TYPE_OPERATION concode_elem_sep int TYPE_EXTENSION_POINT concode_elem_sep int TYPE_NAME concode_elem_sep int TYPE_ACTIONSTATE concode_elem_sep int TYPE_NODEINSTANCE concode_elem_sep int TYPE_ASSOCIATION_END_NAME concode_elem_sep int TYPE_MULTIPLICITY concode_elem_sep int TYPE_ASSOCIATION_NAME concode_elem_sep int TYPE_CLASSIFIERROLE concode_elem_sep int TYPE_STATEBODY concode_field_sep void setCurrentLanguage concode_elem_sep void setDefaultNotation concode_elem_sep NotationProviderFactory2 getInstance concode_elem_sep boolean removeNotation concode_elem_sep void addNotationProvider concode_elem_sep Class getNotationProviderClass", "code_tokens": ["NotationProvider", "function", "(", "int", "arg0", ",", "Object", "arg1", ")", "{", "NotationName", "loc0", "=", "Notation", ".", "findNotation", "(", "currentLanguage", ")", ";", "return", "getNotationProvider", "(", "arg0", ",", "arg1", ",", "loc0", ")", ";", "}"], "nl_tokens": ["get", "a", "notationprovider", "for", "the", "given", "language", ".", "concode_field_sep", "int", "TYPE_CALLSTATE", "concode_elem_sep", "Map", "<", "NotationName", ",", "Map", "<", "Integer", ",", "Class", ">>", "allLanguages", "concode_elem_sep", "int", "TYPE_ENUMERATION_LITERAL", "concode_elem_sep", "NotationProviderFactory2", "instance", "concode_elem_sep", "int", "TYPE_ATTRIBUTE", "concode_elem_sep", "int", "TYPE_OBJECT", "concode_elem_sep", "int", "TYPE_TRANSITION", "concode_elem_sep", "int", "TYPE_OBJECTFLOWSTATE_STATE", "concode_elem_sep", "int", "TYPE_MESSAGE", "concode_elem_sep", "int", "TYPE_ASSOCIATION_ROLE", "concode_elem_sep", "NotationName", "defaultLanguage", "concode_elem_sep", "Logger", "LOG", "concode_elem_sep", "String", "currentLanguage", "concode_elem_sep", "int", "TYPE_OBJECTFLOWSTATE_TYPE", "concode_elem_sep", "int", "TYPE_COMPONENTINSTANCE", "concode_elem_sep", "int", "TYPE_OPERATION", "concode_elem_sep", "int", "TYPE_EXTENSION_POINT", "concode_elem_sep", "int", "TYPE_NAME", "concode_elem_sep", "int", "TYPE_ACTIONSTATE", "concode_elem_sep", "int", "TYPE_NODEINSTANCE", "concode_elem_sep", "int", "TYPE_ASSOCIATION_END_NAME", "concode_elem_sep", "int", "TYPE_MULTIPLICITY", "concode_elem_sep", "int", "TYPE_ASSOCIATION_NAME", "concode_elem_sep", "int", "TYPE_CLASSIFIERROLE", "concode_elem_sep", "int", "TYPE_STATEBODY", "concode_field_sep", "void", "setCurrentLanguage", "concode_elem_sep", "void", "setDefaultNotation", "concode_elem_sep", "NotationProviderFactory2", "getInstance", "concode_elem_sep", "boolean", "removeNotation", "concode_elem_sep", "void", "addNotationProvider", "concode_elem_sep", "Class", "getNotationProviderClass"]}
{"code": "void function ( ) { System . out . println ( \"srini_string\" ) ; int loc0 = 0 ; LogEntryInterval loc1 = new LogEntryInterval ( ) ; loc1 . setNumberRequests ( loc0 ) ; }", "nl": "test of setnumberrequests method , of class logentryinterval . concode_field_sep PlaceHolder placeHolder concode_field_sep void testSetIntervalNumber concode_elem_sep void testGetIntervalNumber concode_elem_sep void testGetNumberRequests concode_elem_sep void testSetMeanResponseTime concode_elem_sep void testGetMeanResponseTime concode_elem_sep void testIncNumberRequests", "code_tokens": ["void", "function", "(", ")", "{", "System", ".", "out", ".", "println", "(", "\"srini_string\"", ")", ";", "int", "loc0", "=", "0", ";", "LogEntryInterval", "loc1", "=", "new", "LogEntryInterval", "(", ")", ";", "loc1", ".", "setNumberRequests", "(", "loc0", ")", ";", "}"], "nl_tokens": ["test", "of", "setnumberrequests", "method", ",", "of", "class", "logentryinterval", ".", "concode_field_sep", "PlaceHolder", "placeHolder", "concode_field_sep", "void", "testSetIntervalNumber", "concode_elem_sep", "void", "testGetIntervalNumber", "concode_elem_sep", "void", "testGetNumberRequests", "concode_elem_sep", "void", "testSetMeanResponseTime", "concode_elem_sep", "void", "testGetMeanResponseTime", "concode_elem_sep", "void", "testIncNumberRequests"]}
{"code": "GetOfferDetailsResponse . Return . DetailOfferData . OfferMedia . OfferImage . Entry . Value . Item function ( ) { return new GetOfferDetailsResponse . Return . DetailOfferData . OfferMedia . OfferImage . Entry . Value . Item ( ) ; }", "nl": "create an instance of getofferdetailsresponse.return.detailofferdata.offermedia.offerimage.entry.value.item concode_field_sep PlaceHolder placeHolder concode_field_sep GetOfferDetailsResponse.Return.DetailOfferData.SourceGeos createGetOfferDetailsResponseReturnDetailOfferDataSourceGeos concode_elem_sep GetOfferDetailsResponse.Return.DetailOfferData.Seo createGetOfferDetailsResponseReturnDetailOfferDataSeo concode_elem_sep GetOfferDetailsResponse.Return.DetailOfferData.Merchant.Addresses createGetOfferDetailsResponseReturnDetailOfferDataMerchantAddresses concode_elem_sep GetOfferDetailsResponse.Return.DetailOfferData.TargetGeos.Geo.Country createGetOfferDetailsResponseReturnDetailOfferDataTargetGeosGeoCountry concode_elem_sep GetOfferDetailsResponse.Return.DetailOfferData.OfferMedia.OfferImage.Entry createGetOfferDetailsResponseReturnDetailOfferDataOfferMediaOfferImageEntry concode_elem_sep GetOfferDetailsResponse.Return.DetailOfferData.TargetGeos.Geo createGetOfferDetailsResponseReturnDetailOfferDataTargetGeosGeo concode_elem_sep GetOfferDetailsResponse.Return.DetailOfferData.OfferMedia createGetOfferDetailsResponseReturnDetailOfferDataOfferMedia concode_elem_sep GetOfferDetailsResponse.Return.DetailOfferData.FulfillmentPartner createGetOfferDetailsResponseReturnDetailOfferDataFulfillmentPartner concode_elem_sep GetOfferDetailsResponse.Return.DetailOfferData.OfferMedia.OfferImage.Entry.Value createGetOfferDetailsResponseReturnDetailOfferDataOfferMediaOfferImageEntryValue concode_elem_sep GetOfferDetailsResponse.Return.DetailOfferData.Products.Product createGetOfferDetailsResponseReturnDetailOfferDataProductsProduct concode_elem_sep GetOfferDetailsResponse.Return.DetailOfferData.RedemptionAddresses.RedemptionAddress createGetOfferDetailsResponseReturnDetailOfferDataRedemptionAddressesRedemptionAddress concode_elem_sep GetOfferDetailsResponse.Return.DetailOfferData.SourceGeos.Geo.Region createGetOfferDetailsResponseReturnDetailOfferDataSourceGeosGeoRegion concode_elem_sep GetOfferDetailsResponse.Return.DetailOfferData.TargetGeos.Geo.City createGetOfferDetailsResponseReturnDetailOfferDataTargetGeosGeoCity concode_elem_sep GetOfferDetailsResponse.Return.DetailOfferData createGetOfferDetailsResponseReturnDetailOfferData concode_elem_sep GetOfferDetailsResponse createGetOfferDetailsResponse concode_elem_sep GetOfferDetailsResponse.Return.DetailOfferData.SourceGeos.Geo.City createGetOfferDetailsResponseReturnDetailOfferDataSourceGeosGeoCity concode_elem_sep GetOfferDetailsResponse.Return.DetailOfferData.Products createGetOfferDetailsResponseReturnDetailOfferDataProducts concode_elem_sep GetOfferDetailsResponse.Return.DetailOfferData.OfferMedia.OfferImage createGetOfferDetailsResponseReturnDetailOfferDataOfferMediaOfferImage concode_elem_sep GetOfferDetailsResponse.Return.DetailOfferData.RedemptionAddresses createGetOfferDetailsResponseReturnDetailOfferDataRedemptionAddresses concode_elem_sep GetOfferDetailsResponse.Return createGetOfferDetailsResponseReturn concode_elem_sep GetOfferDetailsResponse.Return.DetailOfferData.SourceGeos.Geo.Country createGetOfferDetailsResponseReturnDetailOfferDataSourceGeosGeoCountry concode_elem_sep GetOfferDetailsResponse.Return.DetailOfferData.TargetGeos createGetOfferDetailsResponseReturnDetailOfferDataTargetGeos concode_elem_sep GetOfferDetailsResponse.Return.DetailOfferData.TargetGeos.Geo.Region createGetOfferDetailsResponseReturnDetailOfferDataTargetGeosGeoRegion concode_elem_sep GetOfferDetailsResponse.Return.DetailOfferData.Merchant createGetOfferDetailsResponseReturnDetailOfferDataMerchant concode_elem_sep GetOfferDetailsResponse.Return.DetailOfferData.SourceGeos.Geo createGetOfferDetailsResponseReturnDetailOfferDataSourceGeosGeo concode_elem_sep GetOfferDetailsResponse.Return.DetailOfferData.OfferDisplay createGetOfferDetailsResponseReturnDetailOfferDataOfferDisplay", "code_tokens": ["GetOfferDetailsResponse", ".", "Return", ".", "DetailOfferData", ".", "OfferMedia", ".", "OfferImage", ".", "Entry", ".", "Value", ".", "Item", "function", "(", ")", "{", "return", "new", "GetOfferDetailsResponse", ".", "Return", ".", "DetailOfferData", ".", "OfferMedia", ".", "OfferImage", ".", "Entry", ".", "Value", ".", "Item", "(", ")", ";", "}"], "nl_tokens": ["create", "an", "instance", "of", "getofferdetailsresponse", ".", "return", ".", "detailofferdata", ".", "offermedia", ".", "offerimage", ".", "entry", ".", "value", ".", "item", "concode_field_sep", "PlaceHolder", "placeHolder", "concode_field_sep", "GetOfferDetailsResponse", ".", "Return", ".", "DetailOfferData", ".", "SourceGeos", "createGetOfferDetailsResponseReturnDetailOfferDataSourceGeos", "concode_elem_sep", "GetOfferDetailsResponse", ".", "Return", ".", "DetailOfferData", ".", "Seo", "createGetOfferDetailsResponseReturnDetailOfferDataSeo", "concode_elem_sep", "GetOfferDetailsResponse", ".", "Return", ".", "DetailOfferData", ".", "Merchant", ".", "Addresses", "createGetOfferDetailsResponseReturnDetailOfferDataMerchantAddresses", "concode_elem_sep", "GetOfferDetailsResponse", ".", "Return", ".", "DetailOfferData", ".", "TargetGeos", ".", "Geo", ".", "Country", "createGetOfferDetailsResponseReturnDetailOfferDataTargetGeosGeoCountry", "concode_elem_sep", "GetOfferDetailsResponse", ".", "Return", ".", "DetailOfferData", ".", "OfferMedia", ".", "OfferImage", ".", "Entry", "createGetOfferDetailsResponseReturnDetailOfferDataOfferMediaOfferImageEntry", "concode_elem_sep", "GetOfferDetailsResponse", ".", "Return", ".", "DetailOfferData", ".", "TargetGeos", ".", "Geo", "createGetOfferDetailsResponseReturnDetailOfferDataTargetGeosGeo", "concode_elem_sep", "GetOfferDetailsResponse", ".", "Return", ".", "DetailOfferData", ".", "OfferMedia", "createGetOfferDetailsResponseReturnDetailOfferDataOfferMedia", "concode_elem_sep", "GetOfferDetailsResponse", ".", "Return", ".", "DetailOfferData", ".", "FulfillmentPartner", "createGetOfferDetailsResponseReturnDetailOfferDataFulfillmentPartner", "concode_elem_sep", "GetOfferDetailsResponse", ".", "Return", ".", "DetailOfferData", ".", "OfferMedia", ".", "OfferImage", ".", "Entry", ".", "Value", "createGetOfferDetailsResponseReturnDetailOfferDataOfferMediaOfferImageEntryValue", "concode_elem_sep", "GetOfferDetailsResponse", ".", "Return", ".", "DetailOfferData", ".", "Products", ".", "Product", "createGetOfferDetailsResponseReturnDetailOfferDataProductsProduct", "concode_elem_sep", "GetOfferDetailsResponse", ".", "Return", ".", "DetailOfferData", ".", "RedemptionAddresses", ".", "RedemptionAddress", "createGetOfferDetailsResponseReturnDetailOfferDataRedemptionAddressesRedemptionAddress", "concode_elem_sep", "GetOfferDetailsResponse", ".", "Return", ".", "DetailOfferData", ".", "SourceGeos", ".", "Geo", ".", "Region", "createGetOfferDetailsResponseReturnDetailOfferDataSourceGeosGeoRegion", "concode_elem_sep", "GetOfferDetailsResponse", ".", "Return", ".", "DetailOfferData", ".", "TargetGeos", ".", "Geo", ".", "City", "createGetOfferDetailsResponseReturnDetailOfferDataTargetGeosGeoCity", "concode_elem_sep", "GetOfferDetailsResponse", ".", "Return", ".", "DetailOfferData", "createGetOfferDetailsResponseReturnDetailOfferData", "concode_elem_sep", "GetOfferDetailsResponse", "createGetOfferDetailsResponse", "concode_elem_sep", "GetOfferDetailsResponse", ".", "Return", ".", "DetailOfferData", ".", "SourceGeos", ".", "Geo", ".", "City", "createGetOfferDetailsResponseReturnDetailOfferDataSourceGeosGeoCity", "concode_elem_sep", "GetOfferDetailsResponse", ".", "Return", ".", "DetailOfferData", ".", "Products", "createGetOfferDetailsResponseReturnDetailOfferDataProducts", "concode_elem_sep", "GetOfferDetailsResponse", ".", "Return", ".", "DetailOfferData", ".", "OfferMedia", ".", "OfferImage", "createGetOfferDetailsResponseReturnDetailOfferDataOfferMediaOfferImage", "concode_elem_sep", "GetOfferDetailsResponse", ".", "Return", ".", "DetailOfferData", ".", "RedemptionAddresses", "createGetOfferDetailsResponseReturnDetailOfferDataRedemptionAddresses", "concode_elem_sep", "GetOfferDetailsResponse", ".", "Return", "createGetOfferDetailsResponseReturn", "concode_elem_sep", "GetOfferDetailsResponse", ".", "Return", ".", "DetailOfferData", ".", "SourceGeos", ".", "Geo", ".", "Country", "createGetOfferDetailsResponseReturnDetailOfferDataSourceGeosGeoCountry", "concode_elem_sep", "GetOfferDetailsResponse", ".", "Return", ".", "DetailOfferData", ".", "TargetGeos", "createGetOfferDetailsResponseReturnDetailOfferDataTargetGeos", "concode_elem_sep", "GetOfferDetailsResponse", ".", "Return", ".", "DetailOfferData", ".", "TargetGeos", ".", "Geo", ".", "Region", "createGetOfferDetailsResponseReturnDetailOfferDataTargetGeosGeoRegion", "concode_elem_sep", "GetOfferDetailsResponse", ".", "Return", ".", "DetailOfferData", ".", "Merchant", "createGetOfferDetailsResponseReturnDetailOfferDataMerchant", "concode_elem_sep", "GetOfferDetailsResponse", ".", "Return", ".", "DetailOfferData", ".", "SourceGeos", ".", "Geo", "createGetOfferDetailsResponseReturnDetailOfferDataSourceGeosGeo", "concode_elem_sep", "GetOfferDetailsResponse", ".", "Return", ".", "DetailOfferData", ".", "OfferDisplay", "createGetOfferDetailsResponseReturnDetailOfferDataOfferDisplay"]}
{"code": "ValidatedItemDTO [ ] function ( String arg0 , boolean arg1 ) { try { return stub . validateAuthnRequest ( arg0 , arg1 ) ; } catch ( RemoteException loc0 ) { log . error ( \"srini_string\" , loc0 ) ; throw new AxisFault ( loc0 . getMessage ( ) , loc0 ) ; } }", "nl": "validate saml request concode_field_sep Log log concode_elem_sep IdentitySAMLValidatorServiceStub stub concode_field_sep GeneratedResponseDTO buildResponse concode_elem_sep String[] getIssuersOfSAMLServiceProviders", "code_tokens": ["ValidatedItemDTO", "[", "]", "function", "(", "String", "arg0", ",", "boolean", "arg1", ")", "{", "try", "{", "return", "stub", ".", "validateAuthnRequest", "(", "arg0", ",", "arg1", ")", ";", "}", "catch", "(", "RemoteException", "loc0", ")", "{", "log", ".", "error", "(", "\"srini_string\"", ",", "loc0", ")", ";", "throw", "new", "AxisFault", "(", "loc0", ".", "getMessage", "(", ")", ",", "loc0", ")", ";", "}", "}"], "nl_tokens": ["validate", "saml", "request", "concode_field_sep", "Log", "log", "concode_elem_sep", "IdentitySAMLValidatorServiceStub", "stub", "concode_field_sep", "GeneratedResponseDTO", "buildResponse", "concode_elem_sep", "String", "[", "]", "getIssuersOfSAMLServiceProviders"]}
{"code": "void function ( ) { if ( with_the_ad ) { withad . notifyDataSetChanged ( ) ; } else { noad . notifyDataSetChanged ( ) ; } }", "nl": "once it is called , the list will restart from the zero scroll concode_field_sep RecyclerView.LayoutManager mManager concode_elem_sep boolean auto_disable_loadmore concode_elem_sep int page_now concode_elem_sep UltimateRecyclerView listview concode_elem_sep EASY noad concode_elem_sep ADMOB withad concode_elem_sep Runnable refresh_default concode_elem_sep onLoadMore loading_more concode_elem_sep boolean with_the_ad concode_elem_sep int max_pages concode_elem_sep int layoutLoadMoreResId concode_elem_sep int container_data_items concode_field_sep void init concode_elem_sep boolean request_start concode_elem_sep BiAdAdapterSwitcher onEnableRefresh concode_elem_sep BiAdAdapterSwitcher onEnableLoadmore concode_elem_sep void run concode_elem_sep void setMaxPages concode_elem_sep BiAdAdapterSwitcher EnableAutoDisableLoadMoreByMaxPages concode_elem_sep void load_more_data_at_zero concode_elem_sep void emptyViewControl concode_elem_sep void load_more_data concode_elem_sep BiAdAdapterSwitcher setCustomOnFresh concode_elem_sep View getV concode_elem_sep void removeALL concode_elem_sep void scrollToTop concode_elem_sep void maximum_size concode_elem_sep void reset concode_elem_sep void insert_default concode_elem_sep void insert_default", "code_tokens": ["void", "function", "(", ")", "{", "if", "(", "with_the_ad", ")", "{", "withad", ".", "notifyDataSetChanged", "(", ")", ";", "}", "else", "{", "noad", ".", "notifyDataSetChanged", "(", ")", ";", "}", "}"], "nl_tokens": ["once", "it", "is", "called", ",", "the", "list", "will", "restart", "from", "the", "zero", "scroll", "concode_field_sep", "RecyclerView", ".", "LayoutManager", "mManager", "concode_elem_sep", "boolean", "auto_disable_loadmore", "concode_elem_sep", "int", "page_now", "concode_elem_sep", "UltimateRecyclerView", "listview", "concode_elem_sep", "EASY", "noad", "concode_elem_sep", "ADMOB", "withad", "concode_elem_sep", "Runnable", "refresh_default", "concode_elem_sep", "onLoadMore", "loading_more", "concode_elem_sep", "boolean", "with_the_ad", "concode_elem_sep", "int", "max_pages", "concode_elem_sep", "int", "layoutLoadMoreResId", "concode_elem_sep", "int", "container_data_items", "concode_field_sep", "void", "init", "concode_elem_sep", "boolean", "request_start", "concode_elem_sep", "BiAdAdapterSwitcher", "onEnableRefresh", "concode_elem_sep", "BiAdAdapterSwitcher", "onEnableLoadmore", "concode_elem_sep", "void", "run", "concode_elem_sep", "void", "setMaxPages", "concode_elem_sep", "BiAdAdapterSwitcher", "EnableAutoDisableLoadMoreByMaxPages", "concode_elem_sep", "void", "load_more_data_at_zero", "concode_elem_sep", "void", "emptyViewControl", "concode_elem_sep", "void", "load_more_data", "concode_elem_sep", "BiAdAdapterSwitcher", "setCustomOnFresh", "concode_elem_sep", "View", "getV", "concode_elem_sep", "void", "removeALL", "concode_elem_sep", "void", "scrollToTop", "concode_elem_sep", "void", "maximum_size", "concode_elem_sep", "void", "reset", "concode_elem_sep", "void", "insert_default", "concode_elem_sep", "void", "insert_default"]}
{"code": "void function ( ) { this . parent . remove ( this . credential . toString ( ) ) ; parent = null ; }", "nl": "delete the authentication . that is important if the authentication turned out to invalid . for example during login , if no clientidentity was associated with the given credentials concode_field_sep JsonTray parent concode_elem_sep ClientCredential credential concode_elem_sep JSONObject json concode_field_sep boolean checkExpireTime concode_elem_sep ClientIdentity getIdentity concode_elem_sep Object get concode_elem_sep void setExpireTime concode_elem_sep boolean getBoolean concode_elem_sep boolean getBoolean concode_elem_sep Authentication setIdentity concode_elem_sep String getString concode_elem_sep String getString concode_elem_sep boolean has concode_elem_sep void put concode_elem_sep void remove", "code_tokens": ["void", "function", "(", ")", "{", "this", ".", "parent", ".", "remove", "(", "this", ".", "credential", ".", "toString", "(", ")", ")", ";", "parent", "=", "null", ";", "}"], "nl_tokens": ["delete", "the", "authentication", ".", "that", "is", "important", "if", "the", "authentication", "turned", "out", "to", "invalid", ".", "for", "example", "during", "login", ",", "if", "no", "clientidentity", "was", "associated", "with", "the", "given", "credentials", "concode_field_sep", "JsonTray", "parent", "concode_elem_sep", "ClientCredential", "credential", "concode_elem_sep", "JSONObject", "json", "concode_field_sep", "boolean", "checkExpireTime", "concode_elem_sep", "ClientIdentity", "getIdentity", "concode_elem_sep", "Object", "get", "concode_elem_sep", "void", "setExpireTime", "concode_elem_sep", "boolean", "getBoolean", "concode_elem_sep", "boolean", "getBoolean", "concode_elem_sep", "Authentication", "setIdentity", "concode_elem_sep", "String", "getString", "concode_elem_sep", "String", "getString", "concode_elem_sep", "boolean", "has", "concode_elem_sep", "void", "put", "concode_elem_sep", "void", "remove"]}
{"code": "NodeVisitor function ( Node arg0 , Node arg1 ) { return enter ( arg1 ) ; }", "nl": "begin normal traversal of a subtree rooted at n . this gives the visitor the option of changing internal state or returning a new visitor which will be used to visit the children of n . the default implementation of this method is to call #enter node enter n , as most subclasses do not need to know the parent of the node n . concode_field_sep Lang lang concode_field_sep N visitEdgeNoOverride concode_elem_sep Node leave concode_elem_sep Node leave concode_elem_sep void finish concode_elem_sep void finish concode_elem_sep String toString concode_elem_sep Node override concode_elem_sep Node override concode_elem_sep N visitEdge concode_elem_sep NodeVisitor copy concode_elem_sep Lang lang concode_elem_sep NodeVisitor begin", "code_tokens": ["NodeVisitor", "function", "(", "Node", "arg0", ",", "Node", "arg1", ")", "{", "return", "enter", "(", "arg1", ")", ";", "}"], "nl_tokens": ["begin", "normal", "traversal", "of", "a", "subtree", "rooted", "at", "n", ".", "this", "gives", "the", "visitor", "the", "option", "of", "changing", "internal", "state", "or", "returning", "a", "new", "visitor", "which", "will", "be", "used", "to", "visit", "the", "children", "of", "n", ".", "the", "default", "implementation", "of", "this", "method", "is", "to", "call", "#enter node enter n , as most subclasses do not need to know the parent of the node n . concode_field_sep Lang lang concode_field_sep N visitEdgeNoOverride concode_elem_sep Node leave concode_elem_sep Node leave concode_elem_sep void finish concode_elem_sep void finish concode_elem_sep String toString concode_elem_sep Node override concode_elem_sep Node override concode_elem_sep N visitEdge concode_elem_sep NodeVisitor copy concode_elem_sep Lang lang concode_elem_sep NodeVisitor begin"]}
{"code": "List < Playlist > function ( ) { List loc0 = new ArrayList ( playlists . values ( ) ) ; Collections . sort ( loc0 ) ; return loc0 ; }", "nl": "return playlists as a collection concode_field_sep String appPath concode_elem_sep Keys keys concode_elem_sep Machine machine concode_elem_sep String logPath concode_elem_sep Options options concode_elem_sep HashMap<Integer,Playlist> playlists concode_elem_sep DefaultListModel genreListModel concode_elem_sep Logger logger concode_elem_sep DbConnJaMuz db concode_elem_sep ArrayList<String> tags concode_field_sep void logConfig concode_elem_sep boolean getCurrentMachine concode_elem_sep boolean createLog concode_elem_sep Proxy getProxy concode_elem_sep void readTags concode_elem_sep List<Playlist> getPlaylistsVisible concode_elem_sep void readGenres concode_elem_sep boolean setProxy concode_elem_sep boolean connectDatabase concode_elem_sep Playlist getPlaylist concode_elem_sep boolean readPlaylists concode_elem_sep Logger getLogger concode_elem_sep ArrayList<String> getTags concode_elem_sep boolean configure concode_elem_sep Options getKeys concode_elem_sep File getFile concode_elem_sep DbConnJaMuz getDb concode_elem_sep Machine getMachine concode_elem_sep DefaultListModel getGenreListModel concode_elem_sep DefaultHttpClient getHttpClient concode_elem_sep String getLogPath concode_elem_sep Options getOptions concode_elem_sep List<String> getGenres", "code_tokens": ["List", "<", "Playlist", ">", "function", "(", ")", "{", "List", "loc0", "=", "new", "ArrayList", "(", "playlists", ".", "values", "(", ")", ")", ";", "Collections", ".", "sort", "(", "loc0", ")", ";", "return", "loc0", ";", "}"], "nl_tokens": ["return", "playlists", "as", "a", "collection", "concode_field_sep", "String", "appPath", "concode_elem_sep", "Keys", "keys", "concode_elem_sep", "Machine", "machine", "concode_elem_sep", "String", "logPath", "concode_elem_sep", "Options", "options", "concode_elem_sep", "HashMap", "<", "Integer", ",", "Playlist", ">", "playlists", "concode_elem_sep", "DefaultListModel", "genreListModel", "concode_elem_sep", "Logger", "logger", "concode_elem_sep", "DbConnJaMuz", "db", "concode_elem_sep", "ArrayList", "<", "String", ">", "tags", "concode_field_sep", "void", "logConfig", "concode_elem_sep", "boolean", "getCurrentMachine", "concode_elem_sep", "boolean", "createLog", "concode_elem_sep", "Proxy", "getProxy", "concode_elem_sep", "void", "readTags", "concode_elem_sep", "List", "<", "Playlist", ">", "getPlaylistsVisible", "concode_elem_sep", "void", "readGenres", "concode_elem_sep", "boolean", "setProxy", "concode_elem_sep", "boolean", "connectDatabase", "concode_elem_sep", "Playlist", "getPlaylist", "concode_elem_sep", "boolean", "readPlaylists", "concode_elem_sep", "Logger", "getLogger", "concode_elem_sep", "ArrayList", "<", "String", ">", "getTags", "concode_elem_sep", "boolean", "configure", "concode_elem_sep", "Options", "getKeys", "concode_elem_sep", "File", "getFile", "concode_elem_sep", "DbConnJaMuz", "getDb", "concode_elem_sep", "Machine", "getMachine", "concode_elem_sep", "DefaultListModel", "getGenreListModel", "concode_elem_sep", "DefaultHttpClient", "getHttpClient", "concode_elem_sep", "String", "getLogPath", "concode_elem_sep", "Options", "getOptions", "concode_elem_sep", "List", "<", "String", ">", "getGenres"]}
{"code": "void function ( Document arg0 , Element arg1 ) { Element loc0 = arg0 . createElement ( \"srini_string\" ) ; arg1 . appendChild ( loc0 ) ; for ( SourceSinkDomPair loc1 : this . document . getDomainAssignment ( ) ) writeSourceSinkDomPair ( loc1 , arg0 , loc0 ) ; }", "nl": "writes out the domains assignments section of the rifl document concode_field_sep RIFLDocument document concode_field_sep void writeFlowPair concode_elem_sep void writeSourceSinkDomPair concode_elem_sep RIFLDocument getDocument concode_elem_sep void writeJavaFieldSpec concode_elem_sep void writeAttackerIO concode_elem_sep void writeDomains concode_elem_sep void writeDomainHierarchy concode_elem_sep void writeJavaParameterSpec concode_elem_sep void writeDomainSpec concode_elem_sep void writeFlowPolicy concode_elem_sep void writeDomainPair concode_elem_sep String write concode_elem_sep void writeSourceSinkSpec", "code_tokens": ["void", "function", "(", "Document", "arg0", ",", "Element", "arg1", ")", "{", "Element", "loc0", "=", "arg0", ".", "createElement", "(", "\"srini_string\"", ")", ";", "arg1", ".", "appendChild", "(", "loc0", ")", ";", "for", "(", "SourceSinkDomPair", "loc1", ":", "this", ".", "document", ".", "getDomainAssignment", "(", ")", ")", "writeSourceSinkDomPair", "(", "loc1", ",", "arg0", ",", "loc0", ")", ";", "}"], "nl_tokens": ["writes", "out", "the", "domains", "assignments", "section", "of", "the", "rifl", "document", "concode_field_sep", "RIFLDocument", "document", "concode_field_sep", "void", "writeFlowPair", "concode_elem_sep", "void", "writeSourceSinkDomPair", "concode_elem_sep", "RIFLDocument", "getDocument", "concode_elem_sep", "void", "writeJavaFieldSpec", "concode_elem_sep", "void", "writeAttackerIO", "concode_elem_sep", "void", "writeDomains", "concode_elem_sep", "void", "writeDomainHierarchy", "concode_elem_sep", "void", "writeJavaParameterSpec", "concode_elem_sep", "void", "writeDomainSpec", "concode_elem_sep", "void", "writeFlowPolicy", "concode_elem_sep", "void", "writeDomainPair", "concode_elem_sep", "String", "write", "concode_elem_sep", "void", "writeSourceSinkSpec"]}
{"code": "List < AbstractArgoJPanel > function ( ) { List < AbstractArgoJPanel > loc0 = new ArrayList < AbstractArgoJPanel > ( ) ; loc0 . add ( TestPanel . getInstance ( ) ) ; return loc0 ; }", "nl": "return our details tab s . proof of concept only . concode_field_sep long serialVersionUID concode_elem_sep String aboutName concode_elem_sep Logger LOG concode_field_sep String getName concode_elem_sep String getInfo concode_elem_sep boolean enable concode_elem_sep boolean disable", "code_tokens": ["List", "<", "AbstractArgoJPanel", ">", "function", "(", ")", "{", "List", "<", "AbstractArgoJPanel", ">", "loc0", "=", "new", "ArrayList", "<", "AbstractArgoJPanel", ">", "(", ")", ";", "loc0", ".", "add", "(", "TestPanel", ".", "getInstance", "(", ")", ")", ";", "return", "loc0", ";", "}"], "nl_tokens": ["return", "our", "details", "tab", "s", ".", "proof", "of", "concept", "only", ".", "concode_field_sep", "long", "serialVersionUID", "concode_elem_sep", "String", "aboutName", "concode_elem_sep", "Logger", "LOG", "concode_field_sep", "String", "getName", "concode_elem_sep", "String", "getInfo", "concode_elem_sep", "boolean", "enable", "concode_elem_sep", "boolean", "disable"]}
{"code": "void function ( ) { setPopulationSize ( 0 ) ; setIterations ( 0 ) ; }", "nl": "sets the population size and number of iterations to zero . concode_field_sep String ITERATIONS concode_elem_sep String POPULATION_SIZE concode_elem_sep int individualLength concode_elem_sep double mutationProbability concode_elem_sep Character[] finiteAlphabet concode_elem_sep Metrics metrics concode_elem_sep Random random concode_field_sep String randomSelection concode_elem_sep String mutate concode_elem_sep String geneticAlgorithm concode_elem_sep String geneticAlgorithm concode_elem_sep void setIterations concode_elem_sep int randomOffset concode_elem_sep String retrieveBestIndividual concode_elem_sep Metrics getMetrics concode_elem_sep int getPopulationSize concode_elem_sep String reproduce concode_elem_sep void setPopulationSize concode_elem_sep int getIterations concode_elem_sep void validatePopulation concode_elem_sep String ga", "code_tokens": ["void", "function", "(", ")", "{", "setPopulationSize", "(", "0", ")", ";", "setIterations", "(", "0", ")", ";", "}"], "nl_tokens": ["sets", "the", "population", "size", "and", "number", "of", "iterations", "to", "zero", ".", "concode_field_sep", "String", "ITERATIONS", "concode_elem_sep", "String", "POPULATION_SIZE", "concode_elem_sep", "int", "individualLength", "concode_elem_sep", "double", "mutationProbability", "concode_elem_sep", "Character", "[", "]", "finiteAlphabet", "concode_elem_sep", "Metrics", "metrics", "concode_elem_sep", "Random", "random", "concode_field_sep", "String", "randomSelection", "concode_elem_sep", "String", "mutate", "concode_elem_sep", "String", "geneticAlgorithm", "concode_elem_sep", "String", "geneticAlgorithm", "concode_elem_sep", "void", "setIterations", "concode_elem_sep", "int", "randomOffset", "concode_elem_sep", "String", "retrieveBestIndividual", "concode_elem_sep", "Metrics", "getMetrics", "concode_elem_sep", "int", "getPopulationSize", "concode_elem_sep", "String", "reproduce", "concode_elem_sep", "void", "setPopulationSize", "concode_elem_sep", "int", "getIterations", "concode_elem_sep", "void", "validatePopulation", "concode_elem_sep", "String", "ga"]}
{"code": "void function ( ) { String [ ] loc0 = { \"srini_string\" , \"srini_string\" , \"srini_string\" , \"srini_string\" , \"srini_string\" , \"srini_string\" } ; instance . setSatelliteIds ( loc0 ) ; String [ ] loc1 = instance . getSatelliteIds ( ) ; assertEquals ( loc0 . length , loc1 . length ) ; int loc2 = 0 ; for ( String loc3 : loc0 ) { assertEquals ( loc3 , loc1 [ loc2 ++ ] ) ; } }", "nl": "test method for net.sf.marineapi.nmea.parser.gsaparser #setsatellitesids string . concode_field_sep GSASentence instance concode_elem_sep String EXAMPLE concode_elem_sep GSASentence empty concode_field_sep void testGetFixStatus concode_elem_sep void testSetFixStatus concode_elem_sep void testGetPositionDOP concode_elem_sep void testGetSatelliteIds concode_elem_sep void testConstructor concode_elem_sep void testGetHorizontalDOP concode_elem_sep void testSetPositionDOP concode_elem_sep void testGetVerticalDOP concode_elem_sep void testSetFaaMode concode_elem_sep void testSetHorizontalDOP concode_elem_sep void setUp concode_elem_sep void testGetFaaMode concode_elem_sep void testSetVerticalDOP", "code_tokens": ["void", "function", "(", ")", "{", "String", "[", "]", "loc0", "=", "{", "\"srini_string\"", ",", "\"srini_string\"", ",", "\"srini_string\"", ",", "\"srini_string\"", ",", "\"srini_string\"", ",", "\"srini_string\"", "}", ";", "instance", ".", "setSatelliteIds", "(", "loc0", ")", ";", "String", "[", "]", "loc1", "=", "instance", ".", "getSatelliteIds", "(", ")", ";", "assertEquals", "(", "loc0", ".", "length", ",", "loc1", ".", "length", ")", ";", "int", "loc2", "=", "0", ";", "for", "(", "String", "loc3", ":", "loc0", ")", "{", "assertEquals", "(", "loc3", ",", "loc1", "[", "loc2", "+", "+", "]", ")", ";", "}", "}"], "nl_tokens": ["test", "method", "for", "net", ".", "sf", ".", "marineapi", ".", "nmea", ".", "parser", ".", "gsaparser", "#setsatellitesids string . concode_field_sep GSASentence instance concode_elem_sep String EXAMPLE concode_elem_sep GSASentence empty concode_field_sep void testGetFixStatus concode_elem_sep void testSetFixStatus concode_elem_sep void testGetPositionDOP concode_elem_sep void testGetSatelliteIds concode_elem_sep void testConstructor concode_elem_sep void testGetHorizontalDOP concode_elem_sep void testSetPositionDOP concode_elem_sep void testGetVerticalDOP concode_elem_sep void testSetFaaMode concode_elem_sep void testSetHorizontalDOP concode_elem_sep void setUp concode_elem_sep void testGetFaaMode concode_elem_sep void testSetVerticalDOP"]}
{"code": "void function ( Exchange arg0 ) { }", "nl": "called on completion of the mep for which the conduit was required . concode_field_sep Endpoint endpoint concode_field_sep void prepare concode_elem_sep Endpoint getEndpoint concode_elem_sep Conduit selectConduit concode_elem_sep void setEndpoint", "code_tokens": ["void", "function", "(", "Exchange", "arg0", ")", "{", "}"], "nl_tokens": ["called", "on", "completion", "of", "the", "mep", "for", "which", "the", "conduit", "was", "required", ".", "concode_field_sep", "Endpoint", "endpoint", "concode_field_sep", "void", "prepare", "concode_elem_sep", "Endpoint", "getEndpoint", "concode_elem_sep", "Conduit", "selectConduit", "concode_elem_sep", "void", "setEndpoint"]}
{"code": "void function ( ) { this . m_selectorManager . addChannelInterestNow ( this . m_socketChannel , SelectionKey . OP_WRITE ) ; }", "nl": "activates interest in writing from the selector thread . concode_field_sep WriteListener m_listener concode_elem_sep SocketChannel m_socketChannel concode_elem_sep SelectorManager m_selectorManager concode_elem_sep int m_numQueued concode_elem_sep Collection m_buffers concode_elem_sep long m_totalBytes concode_elem_sep boolean m_closed concode_elem_sep WriteListener NO_OP_LISTENER concode_elem_sep long m_startTime concode_elem_sep Logger LOG concode_elem_sep List m_writeBuffers concode_field_sep long getTotalBytes concode_elem_sep void disableWriteLater concode_elem_sep void onWrite concode_elem_sep void writeLater concode_elem_sep void writeLater concode_elem_sep void writeLater concode_elem_sep boolean writeBuffer concode_elem_sep void enableWriteLater concode_elem_sep Collection getBuffers concode_elem_sep void checkForNull concode_elem_sep long getStartTime concode_elem_sep void write concode_elem_sep void write concode_elem_sep void write concode_elem_sep boolean write concode_elem_sep void close concode_elem_sep WriteListener getListener concode_elem_sep int getNumQueued", "code_tokens": ["void", "function", "(", ")", "{", "this", ".", "m_selectorManager", ".", "addChannelInterestNow", "(", "this", ".", "m_socketChannel", ",", "SelectionKey", ".", "OP_WRITE", ")", ";", "}"], "nl_tokens": ["activates", "interest", "in", "writing", "from", "the", "selector", "thread", ".", "concode_field_sep", "WriteListener", "m_listener", "concode_elem_sep", "SocketChannel", "m_socketChannel", "concode_elem_sep", "SelectorManager", "m_selectorManager", "concode_elem_sep", "int", "m_numQueued", "concode_elem_sep", "Collection", "m_buffers", "concode_elem_sep", "long", "m_totalBytes", "concode_elem_sep", "boolean", "m_closed", "concode_elem_sep", "WriteListener", "NO_OP_LISTENER", "concode_elem_sep", "long", "m_startTime", "concode_elem_sep", "Logger", "LOG", "concode_elem_sep", "List", "m_writeBuffers", "concode_field_sep", "long", "getTotalBytes", "concode_elem_sep", "void", "disableWriteLater", "concode_elem_sep", "void", "onWrite", "concode_elem_sep", "void", "writeLater", "concode_elem_sep", "void", "writeLater", "concode_elem_sep", "void", "writeLater", "concode_elem_sep", "boolean", "writeBuffer", "concode_elem_sep", "void", "enableWriteLater", "concode_elem_sep", "Collection", "getBuffers", "concode_elem_sep", "void", "checkForNull", "concode_elem_sep", "long", "getStartTime", "concode_elem_sep", "void", "write", "concode_elem_sep", "void", "write", "concode_elem_sep", "void", "write", "concode_elem_sep", "boolean", "write", "concode_elem_sep", "void", "close", "concode_elem_sep", "WriteListener", "getListener", "concode_elem_sep", "int", "getNumQueued"]}
{"code": "Document function ( final InputStream arg0 ) { return extractAll ( arg0 , null , true , true ) ; }", "nl": "extract the content and metadata from the input stream . depending on media type validation , the detector could be run against input stream in order to ensure that parser supports this type of content . concode_field_sep LuceneDocumentMetadata defaultDocumentMetadata concode_elem_sep TikaContentExtractor extractor concode_field_sep Field getContentField concode_elem_sep Field getField concode_elem_sep Document extractMetadata concode_elem_sep Document extractMetadata concode_elem_sep Document extractAll concode_elem_sep Document extractContent", "code_tokens": ["Document", "function", "(", "final", "InputStream", "arg0", ")", "{", "return", "extractAll", "(", "arg0", ",", "null", ",", "true", ",", "true", ")", ";", "}"], "nl_tokens": ["extract", "the", "content", "and", "metadata", "from", "the", "input", "stream", ".", "depending", "on", "media", "type", "validation", ",", "the", "detector", "could", "be", "run", "against", "input", "stream", "in", "order", "to", "ensure", "that", "parser", "supports", "this", "type", "of", "content", ".", "concode_field_sep", "LuceneDocumentMetadata", "defaultDocumentMetadata", "concode_elem_sep", "TikaContentExtractor", "extractor", "concode_field_sep", "Field", "getContentField", "concode_elem_sep", "Field", "getField", "concode_elem_sep", "Document", "extractMetadata", "concode_elem_sep", "Document", "extractMetadata", "concode_elem_sep", "Document", "extractAll", "concode_elem_sep", "Document", "extractContent"]}
{"code": "RegistrationRequest function ( ) { return new RegistrationRequest ( ) ; }", "nl": "create an instance of registrationrequest concode_field_sep QName _SignCertificateResponse_QNAME concode_elem_sep QName _Access_QNAME concode_elem_sep QName _CheckServiceAccessResponse_QNAME concode_elem_sep QName _SignCertificateRequest_QNAME concode_elem_sep QName _CertificateChainInfo_QNAME concode_elem_sep QName _RegistrationRequest_QNAME concode_elem_sep QName _User_QNAME concode_elem_sep QName _AuthenticateResponse_QNAME concode_elem_sep QName _CheckServiceAccessRequest_QNAME concode_elem_sep QName _ValidateTokenResponse_QNAME concode_elem_sep QName _AuthenticateRequest_QNAME concode_elem_sep QName _Auth_QNAME concode_elem_sep QName _ValidateAccess_QNAME concode_elem_sep QName _RegistrationResponse_QNAME concode_elem_sep QName _Roles_QNAME concode_field_sep ValidateTokenResponse createValidateTokenResponse concode_elem_sep JAXBElement<ValidateTokenResponse> createValidateTokenResponse concode_elem_sep CertificateChainInfo createCertificateChainInfo concode_elem_sep JAXBElement<CertificateChainInfo> createCertificateChainInfo concode_elem_sep RoleList createRoleList concode_elem_sep CheckServiceAccessRequest createCheckServiceAccessRequest concode_elem_sep JAXBElement<CheckServiceAccessRequest> createCheckServiceAccessRequest concode_elem_sep Role createRole concode_elem_sep Token createToken concode_elem_sep CheckServiceAccessResponse createCheckServiceAccessResponse concode_elem_sep JAXBElement<CheckServiceAccessResponse> createCheckServiceAccessResponse concode_elem_sep PasswordCredentials createPasswordCredentials concode_elem_sep AuthenticateResponse createAuthenticateResponse concode_elem_sep JAXBElement<AuthenticateResponse> createAuthenticateResponse concode_elem_sep ValidateAccess createValidateAccess concode_elem_sep JAXBElement<ValidateAccess> createValidateAccess concode_elem_sep AuthenticateRequest createAuthenticateRequest concode_elem_sep JAXBElement<AuthenticateRequest> createAuthenticateRequest concode_elem_sep Auth createAuth concode_elem_sep JAXBElement<Auth> createAuth concode_elem_sep CertificateInfo createCertificateInfo concode_elem_sep UserValidation createUserValidation concode_elem_sep CertificateCredentials createCertificateCredentials concode_elem_sep RegistrationResponse createRegistrationResponse concode_elem_sep JAXBElement<RegistrationResponse> createRegistrationResponse concode_elem_sep User createUser concode_elem_sep JAXBElement<User> createUser concode_elem_sep JAXBElement<RoleList> createRoles concode_elem_sep Access createAccess concode_elem_sep JAXBElement<Access> createAccess concode_elem_sep ProjectValidation createProjectValidation concode_elem_sep SignCertificateResponse createSignCertificateResponse concode_elem_sep JAXBElement<SignCertificateResponse> createSignCertificateResponse concode_elem_sep SignCertificateRequest createSignCertificateRequest concode_elem_sep JAXBElement<SignCertificateRequest> createSignCertificateRequest", "code_tokens": ["RegistrationRequest", "function", "(", ")", "{", "return", "new", "RegistrationRequest", "(", ")", ";", "}"], "nl_tokens": ["create", "an", "instance", "of", "registrationrequest", "concode_field_sep", "QName", "_SignCertificateResponse_QNAME", "concode_elem_sep", "QName", "_Access_QNAME", "concode_elem_sep", "QName", "_CheckServiceAccessResponse_QNAME", "concode_elem_sep", "QName", "_SignCertificateRequest_QNAME", "concode_elem_sep", "QName", "_CertificateChainInfo_QNAME", "concode_elem_sep", "QName", "_RegistrationRequest_QNAME", "concode_elem_sep", "QName", "_User_QNAME", "concode_elem_sep", "QName", "_AuthenticateResponse_QNAME", "concode_elem_sep", "QName", "_CheckServiceAccessRequest_QNAME", "concode_elem_sep", "QName", "_ValidateTokenResponse_QNAME", "concode_elem_sep", "QName", "_AuthenticateRequest_QNAME", "concode_elem_sep", "QName", "_Auth_QNAME", "concode_elem_sep", "QName", "_ValidateAccess_QNAME", "concode_elem_sep", "QName", "_RegistrationResponse_QNAME", "concode_elem_sep", "QName", "_Roles_QNAME", "concode_field_sep", "ValidateTokenResponse", "createValidateTokenResponse", "concode_elem_sep", "JAXBElement", "<", "ValidateTokenResponse", ">", "createValidateTokenResponse", "concode_elem_sep", "CertificateChainInfo", "createCertificateChainInfo", "concode_elem_sep", "JAXBElement", "<", "CertificateChainInfo", ">", "createCertificateChainInfo", "concode_elem_sep", "RoleList", "createRoleList", "concode_elem_sep", "CheckServiceAccessRequest", "createCheckServiceAccessRequest", "concode_elem_sep", "JAXBElement", "<", "CheckServiceAccessRequest", ">", "createCheckServiceAccessRequest", "concode_elem_sep", "Role", "createRole", "concode_elem_sep", "Token", "createToken", "concode_elem_sep", "CheckServiceAccessResponse", "createCheckServiceAccessResponse", "concode_elem_sep", "JAXBElement", "<", "CheckServiceAccessResponse", ">", "createCheckServiceAccessResponse", "concode_elem_sep", "PasswordCredentials", "createPasswordCredentials", "concode_elem_sep", "AuthenticateResponse", "createAuthenticateResponse", "concode_elem_sep", "JAXBElement", "<", "AuthenticateResponse", ">", "createAuthenticateResponse", "concode_elem_sep", "ValidateAccess", "createValidateAccess", "concode_elem_sep", "JAXBElement", "<", "ValidateAccess", ">", "createValidateAccess", "concode_elem_sep", "AuthenticateRequest", "createAuthenticateRequest", "concode_elem_sep", "JAXBElement", "<", "AuthenticateRequest", ">", "createAuthenticateRequest", "concode_elem_sep", "Auth", "createAuth", "concode_elem_sep", "JAXBElement", "<", "Auth", ">", "createAuth", "concode_elem_sep", "CertificateInfo", "createCertificateInfo", "concode_elem_sep", "UserValidation", "createUserValidation", "concode_elem_sep", "CertificateCredentials", "createCertificateCredentials", "concode_elem_sep", "RegistrationResponse", "createRegistrationResponse", "concode_elem_sep", "JAXBElement", "<", "RegistrationResponse", ">", "createRegistrationResponse", "concode_elem_sep", "User", "createUser", "concode_elem_sep", "JAXBElement", "<", "User", ">", "createUser", "concode_elem_sep", "JAXBElement", "<", "RoleList", ">", "createRoles", "concode_elem_sep", "Access", "createAccess", "concode_elem_sep", "JAXBElement", "<", "Access", ">", "createAccess", "concode_elem_sep", "ProjectValidation", "createProjectValidation", "concode_elem_sep", "SignCertificateResponse", "createSignCertificateResponse", "concode_elem_sep", "JAXBElement", "<", "SignCertificateResponse", ">", "createSignCertificateResponse", "concode_elem_sep", "SignCertificateRequest", "createSignCertificateRequest", "concode_elem_sep", "JAXBElement", "<", "SignCertificateRequest", ">", "createSignCertificateRequest"]}
{"code": "void function ( int arg0 ) { unifiedBreak ( arg0 , 1 , \"srini_string\" , 1 ) ; }", "nl": "the most common use of `` unifiedbreak '' : level 1 , with an alternative of a single space . concode_field_sep PlaceHolder placeHolder concode_field_sep void newline concode_elem_sep void newline concode_elem_sep void newline concode_elem_sep boolean flush concode_elem_sep boolean flush concode_elem_sep void end concode_elem_sep String toString concode_elem_sep void allowBreak concode_elem_sep void allowBreak concode_elem_sep void allowBreak concode_elem_sep void write concode_elem_sep void write concode_elem_sep void begin concode_elem_sep void close", "code_tokens": ["void", "function", "(", "int", "arg0", ")", "{", "unifiedBreak", "(", "arg0", ",", "1", ",", "\"srini_string\"", ",", "1", ")", ";", "}"], "nl_tokens": ["the", "most", "common", "use", "of", "`", "`", "unifiedbreak", "''", ":", "level", "1", ",", "with", "an", "alternative", "of", "a", "single", "space", ".", "concode_field_sep", "PlaceHolder", "placeHolder", "concode_field_sep", "void", "newline", "concode_elem_sep", "void", "newline", "concode_elem_sep", "void", "newline", "concode_elem_sep", "boolean", "flush", "concode_elem_sep", "boolean", "flush", "concode_elem_sep", "void", "end", "concode_elem_sep", "String", "toString", "concode_elem_sep", "void", "allowBreak", "concode_elem_sep", "void", "allowBreak", "concode_elem_sep", "void", "allowBreak", "concode_elem_sep", "void", "write", "concode_elem_sep", "void", "write", "concode_elem_sep", "void", "begin", "concode_elem_sep", "void", "close"]}
{"code": "void function ( ) { char loc0 = RequestInput . getChar ( \"srini_string\" ) ; System . out . println ( \"srini_string\" + loc0 ) ; }", "nl": "test method for com.sqa.em.util.helper.requestinput #getchar java.lang.string . concode_field_sep PlaceHolder placeHolder concode_field_sep void testAddStringElement concode_elem_sep void testGetString concode_elem_sep void testGetCharStringCharArray concode_elem_sep void testGetDouble concode_elem_sep void testGetBoolean concode_elem_sep void testGetIntStringIntInt concode_elem_sep void testGetIntString", "code_tokens": ["void", "function", "(", ")", "{", "char", "loc0", "=", "RequestInput", ".", "getChar", "(", "\"srini_string\"", ")", ";", "System", ".", "out", ".", "println", "(", "\"srini_string\"", "+", "loc0", ")", ";", "}"], "nl_tokens": ["test", "method", "for", "com", ".", "sqa", ".", "em", ".", "util", ".", "helper", ".", "requestinput", "#getchar java.lang.string . concode_field_sep PlaceHolder placeHolder concode_field_sep void testAddStringElement concode_elem_sep void testGetString concode_elem_sep void testGetCharStringCharArray concode_elem_sep void testGetDouble concode_elem_sep void testGetBoolean concode_elem_sep void testGetIntStringIntInt concode_elem_sep void testGetIntString"]}
{"code": "void function ( String arg0 , String arg1 ) { com . google . common . io . Files . move ( new File ( arg0 ) , new File ( arg1 ) ) ; }", "nl": "moves file from one place to another , can across storage devices e.g. , from memory to ssd when file #renameto may not work.current implementation uses com.google.common.io.files #move file , file , may change if there is a better solution . concode_field_sep Logger LOG concode_field_sep void setLocalDirStickyBit concode_elem_sep short getLocalFileMode concode_elem_sep void changeLocalFileUser concode_elem_sep void delete concode_elem_sep String getLocalFileOwner concode_elem_sep void createFile concode_elem_sep void createStorageDirPath concode_elem_sep void changeLocalFileToFullPermission concode_elem_sep void changeLocalFileGroup concode_elem_sep String getLocalFileGroup concode_elem_sep void createDir concode_elem_sep boolean exists concode_elem_sep void createBlockPath concode_elem_sep void changeLocalFilePermission concode_elem_sep void deletePathRecursively", "code_tokens": ["void", "function", "(", "String", "arg0", ",", "String", "arg1", ")", "{", "com", ".", "google", ".", "common", ".", "io", ".", "Files", ".", "move", "(", "new", "File", "(", "arg0", ")", ",", "new", "File", "(", "arg1", ")", ")", ";", "}"], "nl_tokens": ["moves", "file", "from", "one", "place", "to", "another", ",", "can", "across", "storage", "devices", "e", ".", "g", ".", ",", "from", "memory", "to", "ssd", "when", "file", "#renameto may not work.current implementation uses com.google.common.io.files #move file , file , may change if there is a better solution . concode_field_sep Logger LOG concode_field_sep void setLocalDirStickyBit concode_elem_sep short getLocalFileMode concode_elem_sep void changeLocalFileUser concode_elem_sep void delete concode_elem_sep String getLocalFileOwner concode_elem_sep void createFile concode_elem_sep void createStorageDirPath concode_elem_sep void changeLocalFileToFullPermission concode_elem_sep void changeLocalFileGroup concode_elem_sep String getLocalFileGroup concode_elem_sep void createDir concode_elem_sep boolean exists concode_elem_sep void createBlockPath concode_elem_sep void changeLocalFilePermission concode_elem_sep void deletePathRecursively"]}
{"code": "void function ( BundleContext arg0 ) { for ( AutoSIMDeviceConfig loc0 : config . devices ) { environments . deregisterConnectionFactory ( loc0 . name ) ; factories . remove ( loc0 . name ) ; } }", "nl": "implements bundleactivator.stop . does nothing since the framework will automatically unregister any registered services . concode_field_sep IEnvironments environments concode_elem_sep HashMap<String,DevicesConnectionFactory> factories concode_elem_sep AutoSIMDevicesConfig config concode_field_sep void start", "code_tokens": ["void", "function", "(", "BundleContext", "arg0", ")", "{", "for", "(", "AutoSIMDeviceConfig", "loc0", ":", "config", ".", "devices", ")", "{", "environments", ".", "deregisterConnectionFactory", "(", "loc0", ".", "name", ")", ";", "factories", ".", "remove", "(", "loc0", ".", "name", ")", ";", "}", "}"], "nl_tokens": ["implements", "bundleactivator", ".", "stop", ".", "does", "nothing", "since", "the", "framework", "will", "automatically", "unregister", "any", "registered", "services", ".", "concode_field_sep", "IEnvironments", "environments", "concode_elem_sep", "HashMap", "<", "String", ",", "DevicesConnectionFactory", ">", "factories", "concode_elem_sep", "AutoSIMDevicesConfig", "config", "concode_field_sep", "void", "start"]}
{"code": "ServiceBuilder function ( Class < ? extends Api > arg0 ) { this . api = createApi ( arg0 ) ; return this ; }", "nl": "configures the api concode_field_sep String apiKey concode_elem_sep OutputStream debugStream concode_elem_sep String scope concode_elem_sep SignatureType signatureType concode_elem_sep String callback concode_elem_sep String apiSecret concode_elem_sep Api api concode_field_sep ServiceBuilder debug concode_elem_sep ServiceBuilder apiKey concode_elem_sep ServiceBuilder debugStream concode_elem_sep OAuthService build concode_elem_sep Api createApi concode_elem_sep ServiceBuilder scope concode_elem_sep ServiceBuilder signatureType concode_elem_sep ServiceBuilder callback concode_elem_sep ServiceBuilder apiSecret", "code_tokens": ["ServiceBuilder", "function", "(", "Class", "<", "?", "extends", "Api", ">", "arg0", ")", "{", "this", ".", "api", "=", "createApi", "(", "arg0", ")", ";", "return", "this", ";", "}"], "nl_tokens": ["configures", "the", "api", "concode_field_sep", "String", "apiKey", "concode_elem_sep", "OutputStream", "debugStream", "concode_elem_sep", "String", "scope", "concode_elem_sep", "SignatureType", "signatureType", "concode_elem_sep", "String", "callback", "concode_elem_sep", "String", "apiSecret", "concode_elem_sep", "Api", "api", "concode_field_sep", "ServiceBuilder", "debug", "concode_elem_sep", "ServiceBuilder", "apiKey", "concode_elem_sep", "ServiceBuilder", "debugStream", "concode_elem_sep", "OAuthService", "build", "concode_elem_sep", "Api", "createApi", "concode_elem_sep", "ServiceBuilder", "scope", "concode_elem_sep", "ServiceBuilder", "signatureType", "concode_elem_sep", "ServiceBuilder", "callback", "concode_elem_sep", "ServiceBuilder", "apiSecret"]}
{"code": "void function ( ) { assertEquals ( FaaMode . AUTOMATIC , rmc . getMode ( ) ) ; }", "nl": "test method for net.sf.marineapi.nmea.parser.rmcparser #getmode . concode_field_sep String EXAMPLE concode_elem_sep RMCParser rmc concode_elem_sep RMCParser empty concode_field_sep void testSetFaaModeWhenOmitted concode_elem_sep void testSetDirectionOfVariationWithInvalidDirection concode_elem_sep void testGetCorrectedCourse concode_elem_sep void testGetDataStatus concode_elem_sep void testConstructor concode_elem_sep void testGetTime concode_elem_sep void testSetCourse concode_elem_sep void testSetFaaMode concode_elem_sep void testSetVariation concode_elem_sep void setUp concode_elem_sep void testGetMonth concode_elem_sep void testGetCourse concode_elem_sep void testSetDate concode_elem_sep void testGetYear concode_elem_sep void testSetDataStatus concode_elem_sep void testGetDirectionOfVariation concode_elem_sep void testGetDate concode_elem_sep void testGetMagneticVariation concode_elem_sep void testSetPosition concode_elem_sep void testGetPosition concode_elem_sep void testSetDirectionOfVariation concode_elem_sep void testSetTime concode_elem_sep void testGetDay concode_elem_sep void testGetSpeed concode_elem_sep void testSetSpeed", "code_tokens": ["void", "function", "(", ")", "{", "assertEquals", "(", "FaaMode", ".", "AUTOMATIC", ",", "rmc", ".", "getMode", "(", ")", ")", ";", "}"], "nl_tokens": ["test", "method", "for", "net", ".", "sf", ".", "marineapi", ".", "nmea", ".", "parser", ".", "rmcparser", "#getmode . concode_field_sep String EXAMPLE concode_elem_sep RMCParser rmc concode_elem_sep RMCParser empty concode_field_sep void testSetFaaModeWhenOmitted concode_elem_sep void testSetDirectionOfVariationWithInvalidDirection concode_elem_sep void testGetCorrectedCourse concode_elem_sep void testGetDataStatus concode_elem_sep void testConstructor concode_elem_sep void testGetTime concode_elem_sep void testSetCourse concode_elem_sep void testSetFaaMode concode_elem_sep void testSetVariation concode_elem_sep void setUp concode_elem_sep void testGetMonth concode_elem_sep void testGetCourse concode_elem_sep void testSetDate concode_elem_sep void testGetYear concode_elem_sep void testSetDataStatus concode_elem_sep void testGetDirectionOfVariation concode_elem_sep void testGetDate concode_elem_sep void testGetMagneticVariation concode_elem_sep void testSetPosition concode_elem_sep void testGetPosition concode_elem_sep void testSetDirectionOfVariation concode_elem_sep void testSetTime concode_elem_sep void testGetDay concode_elem_sep void testGetSpeed concode_elem_sep void testSetSpeed"]}
{"code": "Optional < String > function ( String arg0 ) { int loc0 = Integer . parseInt ( arg0 , 16 ) ; int loc1 = ( loc0 & 0xFF0000 ) >> 16 ; int loc2 = ( loc0 & 0xFF00 ) >> 8 ; int loc3 = ( loc0 & 0xFF ) ; return getNamedColor ( loc1 , loc2 , loc3 ) ; }", "nl": "get the color name of the color that is exactly equal to the given hex color value as a 6-digit hex string . concode_field_sep int r concode_elem_sep int b concode_elem_sep Map<RGB,String> namedColors concode_elem_sep int g concode_field_sep int hashCode concode_elem_sep boolean equals concode_elem_sep Color getColor concode_elem_sep String getClosestNamedColor concode_elem_sep String getClosestNamedColor concode_elem_sep double calculateColorDistSq", "code_tokens": ["Optional", "<", "String", ">", "function", "(", "String", "arg0", ")", "{", "int", "loc0", "=", "Integer", ".", "parseInt", "(", "arg0", ",", "16", ")", ";", "int", "loc1", "=", "(", "loc0", "&", "0xFF0000", ")", ">>", "16", ";", "int", "loc2", "=", "(", "loc0", "&", "0xFF00", ")", ">>", "8", ";", "int", "loc3", "=", "(", "loc0", "&", "0xFF", ")", ";", "return", "getNamedColor", "(", "loc1", ",", "loc2", ",", "loc3", ")", ";", "}"], "nl_tokens": ["get", "the", "color", "name", "of", "the", "color", "that", "is", "exactly", "equal", "to", "the", "given", "hex", "color", "value", "as", "a", "6", "-", "digit", "hex", "string", ".", "concode_field_sep", "int", "r", "concode_elem_sep", "int", "b", "concode_elem_sep", "Map", "<", "RGB", ",", "String", ">", "namedColors", "concode_elem_sep", "int", "g", "concode_field_sep", "int", "hashCode", "concode_elem_sep", "boolean", "equals", "concode_elem_sep", "Color", "getColor", "concode_elem_sep", "String", "getClosestNamedColor", "concode_elem_sep", "String", "getClosestNamedColor", "concode_elem_sep", "double", "calculateColorDistSq"]}
{"code": "void function ( ) { final Preferences loc0 = Preferences . userRoot ( ) ; loc0 . putDouble ( PrefKeys . LAST_VERSION , getVersion ( ) ) ; }", "nl": "sets the last version recorded as having run to the currently running version . concode_field_sep boolean s_newVersionSet concode_elem_sep boolean s_newVersion concode_elem_sep boolean s_installed concode_elem_sep Logger LOG concode_field_sep double getVersion concode_elem_sep boolean running concode_elem_sep boolean hasId concode_elem_sep void setInstalled concode_elem_sep double getLastVersion concode_elem_sep boolean isInstalled concode_elem_sep long setId concode_elem_sep long getId concode_elem_sep String getBaseUri concode_elem_sep File getTorrentDir concode_elem_sep boolean newVersion", "code_tokens": ["void", "function", "(", ")", "{", "final", "Preferences", "loc0", "=", "Preferences", ".", "userRoot", "(", ")", ";", "loc0", ".", "putDouble", "(", "PrefKeys", ".", "LAST_VERSION", ",", "getVersion", "(", ")", ")", ";", "}"], "nl_tokens": ["sets", "the", "last", "version", "recorded", "as", "having", "run", "to", "the", "currently", "running", "version", ".", "concode_field_sep", "boolean", "s_newVersionSet", "concode_elem_sep", "boolean", "s_newVersion", "concode_elem_sep", "boolean", "s_installed", "concode_elem_sep", "Logger", "LOG", "concode_field_sep", "double", "getVersion", "concode_elem_sep", "boolean", "running", "concode_elem_sep", "boolean", "hasId", "concode_elem_sep", "void", "setInstalled", "concode_elem_sep", "double", "getLastVersion", "concode_elem_sep", "boolean", "isInstalled", "concode_elem_sep", "long", "setId", "concode_elem_sep", "long", "getId", "concode_elem_sep", "String", "getBaseUri", "concode_elem_sep", "File", "getTorrentDir", "concode_elem_sep", "boolean", "newVersion"]}
{"code": "void function ( AbstractSettings arg0 ) { PROPS . add ( arg0 ) ; }", "nl": "adds a settings class to the list of factories that this handler will act upon . concode_field_sep List PROPS concode_field_sep void revertToDefault concode_elem_sep void reload concode_elem_sep void save concode_elem_sep void setShouldSave concode_elem_sep void removeSettings", "code_tokens": ["void", "function", "(", "AbstractSettings", "arg0", ")", "{", "PROPS", ".", "add", "(", "arg0", ")", ";", "}"], "nl_tokens": ["adds", "a", "settings", "class", "to", "the", "list", "of", "factories", "that", "this", "handler", "will", "act", "upon", ".", "concode_field_sep", "List", "PROPS", "concode_field_sep", "void", "revertToDefault", "concode_elem_sep", "void", "reload", "concode_elem_sep", "void", "save", "concode_elem_sep", "void", "setShouldSave", "concode_elem_sep", "void", "removeSettings"]}
{"code": "EndpointReferenceType function ( EndpointInfo arg0 , Bus arg1 ) { return getTargetReference ( arg0 , null , arg1 ) ; }", "nl": "get the target reference . concode_field_sep MessageObserver incomingObserver concode_field_sep void activate concode_elem_sep Logger getLogger concode_elem_sep MessageObserver getMessageObserver concode_elem_sep void setMessageObserver concode_elem_sep void deactivate", "code_tokens": ["EndpointReferenceType", "function", "(", "EndpointInfo", "arg0", ",", "Bus", "arg1", ")", "{", "return", "getTargetReference", "(", "arg0", ",", "null", ",", "arg1", ")", ";", "}"], "nl_tokens": ["get", "the", "target", "reference", ".", "concode_field_sep", "MessageObserver", "incomingObserver", "concode_field_sep", "void", "activate", "concode_elem_sep", "Logger", "getLogger", "concode_elem_sep", "MessageObserver", "getMessageObserver", "concode_elem_sep", "void", "setMessageObserver", "concode_elem_sep", "void", "deactivate"]}
{"code": "T function ( ) { try { return acquire ( 100 , TimeUnit . DAYS ) ; } catch ( TimeoutException loc0 ) { throw Throwables . propagate ( loc0 ) ; } }", "nl": "acquire a resource of type code t from the pool . concode_field_sep ReentrantLock mLock concode_elem_sep ScheduledExecutorService mExecutor concode_elem_sep Clock mClock concode_elem_sep long mInitialDelayMs concode_elem_sep long mLastAccessTimeMs concode_elem_sep Condition mNotEmpty concode_elem_sep ScheduledExecutorService mGcExecutor concode_elem_sep long mGcIntervalMs concode_elem_sep int mIdentity concode_elem_sep T mResource concode_elem_sep int mMaxCapacity concode_elem_sep HashMap<T,ResourceInternal<T>> mResources concode_elem_sep int mMaxCapacity concode_elem_sep ScheduledFuture<?> mGcFuture concode_elem_sep TreeSet<ResourceInternal<T>> mResourceAvailable concode_elem_sep int mMinCapacity concode_elem_sep Logger LOG concode_elem_sep int mMinCapacity concode_field_sep T createNewResource concode_elem_sep int compare concode_elem_sep void release concode_elem_sep ResourceInternal<T> poll concode_elem_sep void remove concode_elem_sep boolean isHealthy concode_elem_sep boolean shouldGc concode_elem_sep void setLastAccessTimeMs concode_elem_sep Options setMinCapacity concode_elem_sep Options setGcIntervalMs concode_elem_sep Options setGcExecutor concode_elem_sep Options setInitialDelayMs concode_elem_sep long getInitialDelayMs concode_elem_sep long getLastAccessTimeMs concode_elem_sep void close concode_elem_sep boolean add concode_elem_sep ScheduledExecutorService getGcExecutor concode_elem_sep int getMaxCapacity concode_elem_sep Options defaultOptions concode_elem_sep void closeResource concode_elem_sep Options setMaxCapacity concode_elem_sep void closeResourceSync concode_elem_sep int size concode_elem_sep long getGcIntervalMs concode_elem_sep T checkHealthyAndRetry concode_elem_sep int getMinCapacity concode_elem_sep boolean isFull", "code_tokens": ["T", "function", "(", ")", "{", "try", "{", "return", "acquire", "(", "100", ",", "TimeUnit", ".", "DAYS", ")", ";", "}", "catch", "(", "TimeoutException", "loc0", ")", "{", "throw", "Throwables", ".", "propagate", "(", "loc0", ")", ";", "}", "}"], "nl_tokens": ["acquire", "a", "resource", "of", "type", "code", "t", "from", "the", "pool", ".", "concode_field_sep", "ReentrantLock", "mLock", "concode_elem_sep", "ScheduledExecutorService", "mExecutor", "concode_elem_sep", "Clock", "mClock", "concode_elem_sep", "long", "mInitialDelayMs", "concode_elem_sep", "long", "mLastAccessTimeMs", "concode_elem_sep", "Condition", "mNotEmpty", "concode_elem_sep", "ScheduledExecutorService", "mGcExecutor", "concode_elem_sep", "long", "mGcIntervalMs", "concode_elem_sep", "int", "mIdentity", "concode_elem_sep", "T", "mResource", "concode_elem_sep", "int", "mMaxCapacity", "concode_elem_sep", "HashMap", "<", "T", ",", "ResourceInternal", "<", "T", ">>", "mResources", "concode_elem_sep", "int", "mMaxCapacity", "concode_elem_sep", "ScheduledFuture", "<", "?", ">", "mGcFuture", "concode_elem_sep", "TreeSet", "<", "ResourceInternal", "<", "T", ">>", "mResourceAvailable", "concode_elem_sep", "int", "mMinCapacity", "concode_elem_sep", "Logger", "LOG", "concode_elem_sep", "int", "mMinCapacity", "concode_field_sep", "T", "createNewResource", "concode_elem_sep", "int", "compare", "concode_elem_sep", "void", "release", "concode_elem_sep", "ResourceInternal", "<", "T", ">", "poll", "concode_elem_sep", "void", "remove", "concode_elem_sep", "boolean", "isHealthy", "concode_elem_sep", "boolean", "shouldGc", "concode_elem_sep", "void", "setLastAccessTimeMs", "concode_elem_sep", "Options", "setMinCapacity", "concode_elem_sep", "Options", "setGcIntervalMs", "concode_elem_sep", "Options", "setGcExecutor", "concode_elem_sep", "Options", "setInitialDelayMs", "concode_elem_sep", "long", "getInitialDelayMs", "concode_elem_sep", "long", "getLastAccessTimeMs", "concode_elem_sep", "void", "close", "concode_elem_sep", "boolean", "add", "concode_elem_sep", "ScheduledExecutorService", "getGcExecutor", "concode_elem_sep", "int", "getMaxCapacity", "concode_elem_sep", "Options", "defaultOptions", "concode_elem_sep", "void", "closeResource", "concode_elem_sep", "Options", "setMaxCapacity", "concode_elem_sep", "void", "closeResourceSync", "concode_elem_sep", "int", "size", "concode_elem_sep", "long", "getGcIntervalMs", "concode_elem_sep", "T", "checkHealthyAndRetry", "concode_elem_sep", "int", "getMinCapacity", "concode_elem_sep", "boolean", "isFull"]}
{"code": "SpringChain function ( ) { return new SpringChain ( ) ; }", "nl": "factory method for creating a new springchain with default springconfig . concode_field_sep int DEFAULT_ATTACHMENT_TENSION concode_elem_sep CopyOnWriteArrayList<SpringListener> mListeners concode_elem_sep SpringConfig mAttachmentSpringConfig concode_elem_sep int DEFAULT_ATTACHMENT_FRICTION concode_elem_sep int DEFAULT_MAIN_TENSION concode_elem_sep int mControlSpringIndex concode_elem_sep SpringConfigRegistry registry concode_elem_sep SpringConfig mMainSpringConfig concode_elem_sep SpringSystem mSpringSystem concode_elem_sep int DEFAULT_MAIN_FRICTION concode_elem_sep CopyOnWriteArrayList<Spring> mSprings concode_elem_sep int id concode_field_sep SpringConfig getMainSpringConfig concode_elem_sep List<Spring> getAllSprings concode_elem_sep SpringChain setControlSpringIndex concode_elem_sep void onSpringActivate concode_elem_sep Spring getControlSpring concode_elem_sep void onSpringAtRest concode_elem_sep void onSpringUpdate concode_elem_sep SpringChain addSpring concode_elem_sep void onSpringEndStateChange concode_elem_sep SpringConfig getAttachmentSpringConfig", "code_tokens": ["SpringChain", "function", "(", ")", "{", "return", "new", "SpringChain", "(", ")", ";", "}"], "nl_tokens": ["factory", "method", "for", "creating", "a", "new", "springchain", "with", "default", "springconfig", ".", "concode_field_sep", "int", "DEFAULT_ATTACHMENT_TENSION", "concode_elem_sep", "CopyOnWriteArrayList", "<", "SpringListener", ">", "mListeners", "concode_elem_sep", "SpringConfig", "mAttachmentSpringConfig", "concode_elem_sep", "int", "DEFAULT_ATTACHMENT_FRICTION", "concode_elem_sep", "int", "DEFAULT_MAIN_TENSION", "concode_elem_sep", "int", "mControlSpringIndex", "concode_elem_sep", "SpringConfigRegistry", "registry", "concode_elem_sep", "SpringConfig", "mMainSpringConfig", "concode_elem_sep", "SpringSystem", "mSpringSystem", "concode_elem_sep", "int", "DEFAULT_MAIN_FRICTION", "concode_elem_sep", "CopyOnWriteArrayList", "<", "Spring", ">", "mSprings", "concode_elem_sep", "int", "id", "concode_field_sep", "SpringConfig", "getMainSpringConfig", "concode_elem_sep", "List", "<", "Spring", ">", "getAllSprings", "concode_elem_sep", "SpringChain", "setControlSpringIndex", "concode_elem_sep", "void", "onSpringActivate", "concode_elem_sep", "Spring", "getControlSpring", "concode_elem_sep", "void", "onSpringAtRest", "concode_elem_sep", "void", "onSpringUpdate", "concode_elem_sep", "SpringChain", "addSpring", "concode_elem_sep", "void", "onSpringEndStateChange", "concode_elem_sep", "SpringConfig", "getAttachmentSpringConfig"]}
{"code": "List < Node > function ( ) { return evaluationResults ; }", "nl": "retrieves the results of last evaluation . concode_field_sep List<Node> evaluationResults concode_elem_sep List<ViewerModelListener> listeners concode_elem_sep Logger LOGGER concode_elem_sep Node rootNode concode_field_sep void fireViewerModelEvent concode_elem_sep void removeViewerModelListener concode_elem_sep void appendToXPathExpression concode_elem_sep void selectNode concode_elem_sep void addViewerModelListener concode_elem_sep void commitSource concode_elem_sep boolean hasCompiledTree concode_elem_sep void evaluateXPathExpression concode_elem_sep Node getRootNode", "code_tokens": ["List", "<", "Node", ">", "function", "(", ")", "{", "return", "evaluationResults", ";", "}"], "nl_tokens": ["retrieves", "the", "results", "of", "last", "evaluation", ".", "concode_field_sep", "List", "<", "Node", ">", "evaluationResults", "concode_elem_sep", "List", "<", "ViewerModelListener", ">", "listeners", "concode_elem_sep", "Logger", "LOGGER", "concode_elem_sep", "Node", "rootNode", "concode_field_sep", "void", "fireViewerModelEvent", "concode_elem_sep", "void", "removeViewerModelListener", "concode_elem_sep", "void", "appendToXPathExpression", "concode_elem_sep", "void", "selectNode", "concode_elem_sep", "void", "addViewerModelListener", "concode_elem_sep", "void", "commitSource", "concode_elem_sep", "boolean", "hasCompiledTree", "concode_elem_sep", "void", "evaluateXPathExpression", "concode_elem_sep", "Node", "getRootNode"]}
{"code": "byte [ ] function ( ) { return alertSigningKey ; }", "nl": "the key used to sign com.google.bitcoin.core.alertmessage s . you can use com.google.bitcoin.core.eckey #verify byte , byte , byte to verifysignatures using it . concode_field_sep int addressHeader concode_elem_sep int INTERVAL concode_elem_sep byte[] alertSigningKey concode_elem_sep int[] acceptableAddressCodes concode_elem_sep long packetMagic concode_elem_sep int p2shHeader concode_elem_sep List<NetworkParameters> paramSet concode_elem_sep int PROTOCOL_VERSION concode_elem_sep Block genesisBlock concode_elem_sep BigInteger proofOfWorkLimit concode_elem_sep int subsidyDecreaseBlockCount concode_elem_sep int port concode_elem_sep BigInteger MAX_MONEY concode_elem_sep int TARGET_SPACING concode_elem_sep String[] dnsSeeds concode_elem_sep Map<Integer,Sha256Hash> checkpoints concode_elem_sep byte[] SATOSHI_KEY concode_elem_sep int interval concode_elem_sep String id concode_elem_sep int spendableCoinbaseDepth concode_elem_sep int dumpedPrivateKeyHeader concode_elem_sep int targetTimespan concode_elem_sep int TARGET_TIMESPAN concode_elem_sep int BIP16_ENFORCE_TIME concode_field_sep NetworkParameters regTests concode_elem_sep boolean allowEmptyPeerChain concode_elem_sep int getDumpedPrivateKeyHeader concode_elem_sep NetworkParameters testNet2 concode_elem_sep NetworkParameters testNet3 concode_elem_sep NetworkParameters unitTests concode_elem_sep String getId concode_elem_sep int getAddressHeader concode_elem_sep int[] getAcceptableAddressCodes concode_elem_sep NetworkParameters prodNet concode_elem_sep NetworkParameters fromID concode_elem_sep int getTargetTimespan concode_elem_sep String[] getDnsSeeds concode_elem_sep int hashCode concode_elem_sep int getSpendableCoinbaseDepth concode_elem_sep NetworkParameters testNet concode_elem_sep Sha256Hash calculateBlockPoWHash concode_elem_sep BigInteger getMaxMoney concode_elem_sep NetworkParameters getParamsFromAddressByte concode_elem_sep void registerParams concode_elem_sep boolean isCheckpoint concode_elem_sep int getP2SHHeader concode_elem_sep int getInterval concode_elem_sep int getRetargetBlockCount concode_elem_sep int getRetargetBlockCount concode_elem_sep Block getGenesisBlock concode_elem_sep int getSubsidyDecreaseBlockCount concode_elem_sep Block createGenesis concode_elem_sep long getPacketMagic concode_elem_sep int getPort concode_elem_sep boolean equals concode_elem_sep boolean passesCheckpoint concode_elem_sep boolean isAcceptableAddressVersion concode_elem_sep String getURIScheme concode_elem_sep BigInteger getProofOfWorkLimit", "code_tokens": ["byte", "[", "]", "function", "(", ")", "{", "return", "alertSigningKey", ";", "}"], "nl_tokens": ["the", "key", "used", "to", "sign", "com", ".", "google", ".", "bitcoin", ".", "core", ".", "alertmessage", "s", ".", "you", "can", "use", "com", ".", "google", ".", "bitcoin", ".", "core", ".", "eckey", "#verify byte , byte , byte to verifysignatures using it . concode_field_sep int addressHeader concode_elem_sep int INTERVAL concode_elem_sep byte[] alertSigningKey concode_elem_sep int[] acceptableAddressCodes concode_elem_sep long packetMagic concode_elem_sep int p2shHeader concode_elem_sep List<NetworkParameters> paramSet concode_elem_sep int PROTOCOL_VERSION concode_elem_sep Block genesisBlock concode_elem_sep BigInteger proofOfWorkLimit concode_elem_sep int subsidyDecreaseBlockCount concode_elem_sep int port concode_elem_sep BigInteger MAX_MONEY concode_elem_sep int TARGET_SPACING concode_elem_sep String[] dnsSeeds concode_elem_sep Map<Integer,Sha256Hash> checkpoints concode_elem_sep byte[] SATOSHI_KEY concode_elem_sep int interval concode_elem_sep String id concode_elem_sep int spendableCoinbaseDepth concode_elem_sep int dumpedPrivateKeyHeader concode_elem_sep int targetTimespan concode_elem_sep int TARGET_TIMESPAN concode_elem_sep int BIP16_ENFORCE_TIME concode_field_sep NetworkParameters regTests concode_elem_sep boolean allowEmptyPeerChain concode_elem_sep int getDumpedPrivateKeyHeader concode_elem_sep NetworkParameters testNet2 concode_elem_sep NetworkParameters testNet3 concode_elem_sep NetworkParameters unitTests concode_elem_sep String getId concode_elem_sep int getAddressHeader concode_elem_sep int[] getAcceptableAddressCodes concode_elem_sep NetworkParameters prodNet concode_elem_sep NetworkParameters fromID concode_elem_sep int getTargetTimespan concode_elem_sep String[] getDnsSeeds concode_elem_sep int hashCode concode_elem_sep int getSpendableCoinbaseDepth concode_elem_sep NetworkParameters testNet concode_elem_sep Sha256Hash calculateBlockPoWHash concode_elem_sep BigInteger getMaxMoney concode_elem_sep NetworkParameters getParamsFromAddressByte concode_elem_sep void registerParams concode_elem_sep boolean isCheckpoint concode_elem_sep int getP2SHHeader concode_elem_sep int getInterval concode_elem_sep int getRetargetBlockCount concode_elem_sep int getRetargetBlockCount concode_elem_sep Block getGenesisBlock concode_elem_sep int getSubsidyDecreaseBlockCount concode_elem_sep Block createGenesis concode_elem_sep long getPacketMagic concode_elem_sep int getPort concode_elem_sep boolean equals concode_elem_sep boolean passesCheckpoint concode_elem_sep boolean isAcceptableAddressVersion concode_elem_sep String getURIScheme concode_elem_sep BigInteger getProofOfWorkLimit"]}
{"code": "void function ( ) { m_sipProxy . start ( ) ; m_turnServer . start ( ) ; try { synchronized ( this ) { wait ( ) ; } } catch ( InterruptedException loc0 ) { loc0 . printStackTrace ( ) ; } }", "nl": "launches any services that should be launched only if this peer is on the open internet , such as running a turn server or a sip proxy . concode_field_sep SipRegistrar m_registrar concode_elem_sep Logger LOG concode_elem_sep OnlineStatusRegistrationListener m_onlineStatusListener concode_elem_sep TurnServer m_turnServer concode_elem_sep SipProxy m_sipProxy concode_field_sep void clearOldUsers concode_elem_sep void main concode_elem_sep void loadContexts", "code_tokens": ["void", "function", "(", ")", "{", "m_sipProxy", ".", "start", "(", ")", ";", "m_turnServer", ".", "start", "(", ")", ";", "try", "{", "synchronized", "(", "this", ")", "{", "wait", "(", ")", ";", "}", "}", "catch", "(", "InterruptedException", "loc0", ")", "{", "loc0", ".", "printStackTrace", "(", ")", ";", "}", "}"], "nl_tokens": ["launches", "any", "services", "that", "should", "be", "launched", "only", "if", "this", "peer", "is", "on", "the", "open", "internet", ",", "such", "as", "running", "a", "turn", "server", "or", "a", "sip", "proxy", ".", "concode_field_sep", "SipRegistrar", "m_registrar", "concode_elem_sep", "Logger", "LOG", "concode_elem_sep", "OnlineStatusRegistrationListener", "m_onlineStatusListener", "concode_elem_sep", "TurnServer", "m_turnServer", "concode_elem_sep", "SipProxy", "m_sipProxy", "concode_field_sep", "void", "clearOldUsers", "concode_elem_sep", "void", "main", "concode_elem_sep", "void", "loadContexts"]}
{"code": "void function ( ) { final double loc0 = 95.56789 ; vtg . setMagneticCourse ( loc0 ) ; assertTrue ( vtg . toString ( ) . contains ( \"srini_string\" ) ) ; assertEquals ( loc0 , vtg . getMagneticCourse ( ) , 0.1 ) ; }", "nl": "test method for net.sf.marineapi.nmea.parser.vtgparser #setmagneticcourse double . concode_field_sep String EXAMPLE concode_elem_sep VTGSentence vtg concode_elem_sep VTGSentence empty concode_field_sep void testGetMagneticCourse concode_elem_sep void testGetSpeedKmh concode_elem_sep void testGetSpeedKnots concode_elem_sep void testSetMagneticCourseWithNegativeValue concode_elem_sep void testSetMagneticCourseWithValueGreaterThanAllowed concode_elem_sep void testSetSpeedKmhWithNegativeValue concode_elem_sep void testSetSpeedKnotsWithNegativeValue concode_elem_sep void testConstructor concode_elem_sep void testGetTrueCourse concode_elem_sep void testSetSpeedKmh concode_elem_sep void testSetMode concode_elem_sep void testSetModeWhenOmitted concode_elem_sep void testSetTrueCourseWithNegativeValue concode_elem_sep void setUp concode_elem_sep void testSetSpeedKnots concode_elem_sep void testSetTrueCourse concode_elem_sep void testGetMode concode_elem_sep void testSetTrueCourseWithValueGreaterThanAllowed", "code_tokens": ["void", "function", "(", ")", "{", "final", "double", "loc0", "=", "95.56789", ";", "vtg", ".", "setMagneticCourse", "(", "loc0", ")", ";", "assertTrue", "(", "vtg", ".", "toString", "(", ")", ".", "contains", "(", "\"srini_string\"", ")", ")", ";", "assertEquals", "(", "loc0", ",", "vtg", ".", "getMagneticCourse", "(", ")", ",", "0.1", ")", ";", "}"], "nl_tokens": ["test", "method", "for", "net", ".", "sf", ".", "marineapi", ".", "nmea", ".", "parser", ".", "vtgparser", "#setmagneticcourse double . concode_field_sep String EXAMPLE concode_elem_sep VTGSentence vtg concode_elem_sep VTGSentence empty concode_field_sep void testGetMagneticCourse concode_elem_sep void testGetSpeedKmh concode_elem_sep void testGetSpeedKnots concode_elem_sep void testSetMagneticCourseWithNegativeValue concode_elem_sep void testSetMagneticCourseWithValueGreaterThanAllowed concode_elem_sep void testSetSpeedKmhWithNegativeValue concode_elem_sep void testSetSpeedKnotsWithNegativeValue concode_elem_sep void testConstructor concode_elem_sep void testGetTrueCourse concode_elem_sep void testSetSpeedKmh concode_elem_sep void testSetMode concode_elem_sep void testSetModeWhenOmitted concode_elem_sep void testSetTrueCourseWithNegativeValue concode_elem_sep void setUp concode_elem_sep void testSetSpeedKnots concode_elem_sep void testSetTrueCourse concode_elem_sep void testGetMode concode_elem_sep void testSetTrueCourseWithValueGreaterThanAllowed"]}
{"code": "void function ( String arg0 ) { this . build = arg0 ; }", "nl": "sets the value of the build property . concode_field_sep String executionEndDateTime concode_elem_sep String build concode_elem_sep String browser concode_elem_sep String projectName concode_elem_sep String executionStartDateTime concode_elem_sep String value concode_elem_sep String url concode_elem_sep String TotalDuration concode_field_sep String getProjectName concode_elem_sep String getBuild concode_elem_sep String getExecutionStartDateTime concode_elem_sep void setExecutionEndDateTime concode_elem_sep String getExecutionEndDateTime concode_elem_sep void setUrl concode_elem_sep String getValue concode_elem_sep void setProjectName concode_elem_sep String getUrl concode_elem_sep String getTotalDuration concode_elem_sep void setValue concode_elem_sep void setTotalDuration concode_elem_sep void setBrowser concode_elem_sep void setExecutionStartDateTime concode_elem_sep String getBrowser", "code_tokens": ["void", "function", "(", "String", "arg0", ")", "{", "this", ".", "build", "=", "arg0", ";", "}"], "nl_tokens": ["sets", "the", "value", "of", "the", "build", "property", ".", "concode_field_sep", "String", "executionEndDateTime", "concode_elem_sep", "String", "build", "concode_elem_sep", "String", "browser", "concode_elem_sep", "String", "projectName", "concode_elem_sep", "String", "executionStartDateTime", "concode_elem_sep", "String", "value", "concode_elem_sep", "String", "url", "concode_elem_sep", "String", "TotalDuration", "concode_field_sep", "String", "getProjectName", "concode_elem_sep", "String", "getBuild", "concode_elem_sep", "String", "getExecutionStartDateTime", "concode_elem_sep", "void", "setExecutionEndDateTime", "concode_elem_sep", "String", "getExecutionEndDateTime", "concode_elem_sep", "void", "setUrl", "concode_elem_sep", "String", "getValue", "concode_elem_sep", "void", "setProjectName", "concode_elem_sep", "String", "getUrl", "concode_elem_sep", "String", "getTotalDuration", "concode_elem_sep", "void", "setValue", "concode_elem_sep", "void", "setTotalDuration", "concode_elem_sep", "void", "setBrowser", "concode_elem_sep", "void", "setExecutionStartDateTime", "concode_elem_sep", "String", "getBrowser"]}
{"code": "List < Date > function ( ) { if ( dates == null ) { dates = new ArrayList < Date > ( ) ; } return this . dates ; }", "nl": "gets the value of the dates property . this accessor method returns a reference to the live list , not a snapshot . therefore any modification you make to the returned list will be present inside the jaxb object . this is why there is not a set method for the dates property . for example , to add a new item , do as follows : getdates . add newitem ; objects of the following type s are allowed in the list string concode_field_sep List<Double> doubles concode_elem_sep List<BigDecimal> decimals concode_elem_sep List<Integer> numbers concode_elem_sep List<String> ids concode_elem_sep List<Date> dates concode_elem_sep List<ComplexNode> complexNodes concode_elem_sep long serialVersionUID concode_field_sep List<BigDecimal> getDecimals concode_elem_sep List<Double> getDoubles concode_elem_sep List<String> getIds concode_elem_sep List<ComplexNode> getComplexNodes concode_elem_sep List<Integer> getNumbers", "code_tokens": ["List", "<", "Date", ">", "function", "(", ")", "{", "if", "(", "dates", "==", "null", ")", "{", "dates", "=", "new", "ArrayList", "<", "Date", ">", "(", ")", ";", "}", "return", "this", ".", "dates", ";", "}"], "nl_tokens": ["gets", "the", "value", "of", "the", "dates", "property", ".", "this", "accessor", "method", "returns", "a", "reference", "to", "the", "live", "list", ",", "not", "a", "snapshot", ".", "therefore", "any", "modification", "you", "make", "to", "the", "returned", "list", "will", "be", "present", "inside", "the", "jaxb", "object", ".", "this", "is", "why", "there", "is", "not", "a", "set", "method", "for", "the", "dates", "property", ".", "for", "example", ",", "to", "add", "a", "new", "item", ",", "do", "as", "follows", ":", "getdates", ".", "add", "newitem", ";", "objects", "of", "the", "following", "type", "s", "are", "allowed", "in", "the", "list", "string", "concode_field_sep", "List", "<", "Double", ">", "doubles", "concode_elem_sep", "List", "<", "BigDecimal", ">", "decimals", "concode_elem_sep", "List", "<", "Integer", ">", "numbers", "concode_elem_sep", "List", "<", "String", ">", "ids", "concode_elem_sep", "List", "<", "Date", ">", "dates", "concode_elem_sep", "List", "<", "ComplexNode", ">", "complexNodes", "concode_elem_sep", "long", "serialVersionUID", "concode_field_sep", "List", "<", "BigDecimal", ">", "getDecimals", "concode_elem_sep", "List", "<", "Double", ">", "getDoubles", "concode_elem_sep", "List", "<", "String", ">", "getIds", "concode_elem_sep", "List", "<", "ComplexNode", ">", "getComplexNodes", "concode_elem_sep", "List", "<", "Integer", ">", "getNumbers"]}
{"code": "void function ( String arg0 ) { failedImages . add ( arg0 ) ; }", "nl": "add an image url that failed loading to be tracked concode_field_sep HashSet<String> failedImages concode_field_sep boolean failed", "code_tokens": ["void", "function", "(", "String", "arg0", ")", "{", "failedImages", ".", "add", "(", "arg0", ")", ";", "}"], "nl_tokens": ["add", "an", "image", "url", "that", "failed", "loading", "to", "be", "tracked", "concode_field_sep", "HashSet", "<", "String", ">", "failedImages", "concode_field_sep", "boolean", "failed"]}
{"code": "void function ( Project arg0 ) { if ( currentProject == arg0 ) { currentProject = null ; } arg0 . remove ( ) ; }", "nl": "remove the project . concode_field_sep ClienteConecta clienteEnvia concode_elem_sep Logger LOG concode_elem_sep ProjectManager instance concode_elem_sep Action saveAction concode_elem_sep String SAVE_STATE_PROPERTY_NAME concode_elem_sep String NO_PROJECT concode_elem_sep boolean creatingCurrentProject concode_elem_sep EventListenerList listenerList concode_elem_sep String CURRENT_PROJECT_PROPERTY_NAME concode_elem_sep Project currentProject concode_elem_sep PropertyChangeEvent event concode_field_sep void setSaveAction concode_elem_sep ProjectManager getManager concode_elem_sep Project getCurrentProject concode_elem_sep void firePropertyChanged concode_elem_sep void createDefaultDiagrams concode_elem_sep boolean isSaveActionEnabled concode_elem_sep void setSaveEnabled concode_elem_sep void setCurrentProject concode_elem_sep Project makeEmptyProject concode_elem_sep Project makeEmptyProject concode_elem_sep void removePropertyChangeListener concode_elem_sep void addPropertyChangeListener concode_elem_sep Object execute", "code_tokens": ["void", "function", "(", "Project", "arg0", ")", "{", "if", "(", "currentProject", "==", "arg0", ")", "{", "currentProject", "=", "null", ";", "}", "arg0", ".", "remove", "(", ")", ";", "}"], "nl_tokens": ["remove", "the", "project", ".", "concode_field_sep", "ClienteConecta", "clienteEnvia", "concode_elem_sep", "Logger", "LOG", "concode_elem_sep", "ProjectManager", "instance", "concode_elem_sep", "Action", "saveAction", "concode_elem_sep", "String", "SAVE_STATE_PROPERTY_NAME", "concode_elem_sep", "String", "NO_PROJECT", "concode_elem_sep", "boolean", "creatingCurrentProject", "concode_elem_sep", "EventListenerList", "listenerList", "concode_elem_sep", "String", "CURRENT_PROJECT_PROPERTY_NAME", "concode_elem_sep", "Project", "currentProject", "concode_elem_sep", "PropertyChangeEvent", "event", "concode_field_sep", "void", "setSaveAction", "concode_elem_sep", "ProjectManager", "getManager", "concode_elem_sep", "Project", "getCurrentProject", "concode_elem_sep", "void", "firePropertyChanged", "concode_elem_sep", "void", "createDefaultDiagrams", "concode_elem_sep", "boolean", "isSaveActionEnabled", "concode_elem_sep", "void", "setSaveEnabled", "concode_elem_sep", "void", "setCurrentProject", "concode_elem_sep", "Project", "makeEmptyProject", "concode_elem_sep", "Project", "makeEmptyProject", "concode_elem_sep", "void", "removePropertyChangeListener", "concode_elem_sep", "void", "addPropertyChangeListener", "concode_elem_sep", "Object", "execute"]}
{"code": "boolean function ( Goal arg0 ) { return job ( ) != null && job ( ) == arg0 . job ( ) ; }", "nl": "return true if this goal conflicts with the other ; that is passes running over both goals could access the same data . concode_field_sep Set<Goal> prerequisites concode_elem_sep Set<Goal> corequisites concode_elem_sep String name concode_elem_sep int state concode_elem_sep Job job concode_field_sep Collection<Goal> corequisiteGoals concode_elem_sep void setUnreachable concode_elem_sep boolean isReachable concode_elem_sep void addPrerequisiteGoal concode_elem_sep void setUnreachableThisRun concode_elem_sep String stateString concode_elem_sep void addCorequisiteGoal concode_elem_sep int hashCode concode_elem_sep Pass createPass concode_elem_sep Collection<Goal> prerequisiteGoals concode_elem_sep void checkCycles concode_elem_sep boolean hasBeenReached concode_elem_sep boolean equals concode_elem_sep String name concode_elem_sep void setState concode_elem_sep String toString concode_elem_sep int state concode_elem_sep Job job", "code_tokens": ["boolean", "function", "(", "Goal", "arg0", ")", "{", "return", "job", "(", ")", "!=", "null", "&", "&", "job", "(", ")", "==", "arg0", ".", "job", "(", ")", ";", "}"], "nl_tokens": ["return", "true", "if", "this", "goal", "conflicts", "with", "the", "other", ";", "that", "is", "passes", "running", "over", "both", "goals", "could", "access", "the", "same", "data", ".", "concode_field_sep", "Set", "<", "Goal", ">", "prerequisites", "concode_elem_sep", "Set", "<", "Goal", ">", "corequisites", "concode_elem_sep", "String", "name", "concode_elem_sep", "int", "state", "concode_elem_sep", "Job", "job", "concode_field_sep", "Collection", "<", "Goal", ">", "corequisiteGoals", "concode_elem_sep", "void", "setUnreachable", "concode_elem_sep", "boolean", "isReachable", "concode_elem_sep", "void", "addPrerequisiteGoal", "concode_elem_sep", "void", "setUnreachableThisRun", "concode_elem_sep", "String", "stateString", "concode_elem_sep", "void", "addCorequisiteGoal", "concode_elem_sep", "int", "hashCode", "concode_elem_sep", "Pass", "createPass", "concode_elem_sep", "Collection", "<", "Goal", ">", "prerequisiteGoals", "concode_elem_sep", "void", "checkCycles", "concode_elem_sep", "boolean", "hasBeenReached", "concode_elem_sep", "boolean", "equals", "concode_elem_sep", "String", "name", "concode_elem_sep", "void", "setState", "concode_elem_sep", "String", "toString", "concode_elem_sep", "int", "state", "concode_elem_sep", "Job", "job"]}
{"code": "void function ( int arg0 , PlayerTickEvent arg1 ) { if ( playerList . containsKey ( arg0 ) ) { if ( playerList . get ( arg0 ) [ 0 ] < 1 ) { runPlayer ( arg0 , arg1 ) ; } playerList . put ( arg0 , new int [ ] { playerList . get ( arg0 ) [ 0 ] - 1 , playerList . get ( arg0 ) [ 1 ] } ) ; } else { playerList . put ( arg0 , new int [ ] { 1200 , 0 } ) ; } }", "nl": "takes a playerid as a arg , and checks if they are currently being ticked . takes care of handling adding them to the tick , and incrementing ticks . concode_field_sep Map<Integer,int[]> playerList concode_field_sep void onEvent concode_elem_sep void runPlayer", "code_tokens": ["void", "function", "(", "int", "arg0", ",", "PlayerTickEvent", "arg1", ")", "{", "if", "(", "playerList", ".", "containsKey", "(", "arg0", ")", ")", "{", "if", "(", "playerList", ".", "get", "(", "arg0", ")", "[", "0", "]", "<", "1", ")", "{", "runPlayer", "(", "arg0", ",", "arg1", ")", ";", "}", "playerList", ".", "put", "(", "arg0", ",", "new", "int", "[", "]", "{", "playerList", ".", "get", "(", "arg0", ")", "[", "0", "]", "-", "1", ",", "playerList", ".", "get", "(", "arg0", ")", "[", "1", "]", "}", ")", ";", "}", "else", "{", "playerList", ".", "put", "(", "arg0", ",", "new", "int", "[", "]", "{", "1200", ",", "0", "}", ")", ";", "}", "}"], "nl_tokens": ["takes", "a", "playerid", "as", "a", "arg", ",", "and", "checks", "if", "they", "are", "currently", "being", "ticked", ".", "takes", "care", "of", "handling", "adding", "them", "to", "the", "tick", ",", "and", "incrementing", "ticks", ".", "concode_field_sep", "Map", "<", "Integer", ",", "int", "[", "]", ">", "playerList", "concode_field_sep", "void", "onEvent", "concode_elem_sep", "void", "runPlayer"]}
{"code": "HashMap < String , GeneticProfile > function ( ) { return getDefaultGeneticProfileMap ( true , true ) ; }", "nl": "gets a hashmap of the default mutation and copy number profiles . concode_field_sep ArrayList<GeneticProfile> otherCnaProfileList concode_elem_sep String RAE concode_elem_sep ArrayList<GeneticProfile> mutationProfileList concode_elem_sep ArrayList<GeneticProfile> raeProfileList concode_elem_sep String GISTIC concode_elem_sep ArrayList<GeneticProfile> gisticProfileList concode_field_sep HashMap<String,GeneticProfile> getDefaultCopyNumberMap concode_elem_sep void addCopyNumberProfile concode_elem_sep GeneticProfile getDefaultCnaProfile concode_elem_sep HashMap<String,GeneticProfile> getDefaultGeneticProfileMap concode_elem_sep void conditionallyAddProfileToSet concode_elem_sep void addMutationProfile concode_elem_sep GeneticProfile getFirstPriorityProfile concode_elem_sep void addRaeProfile concode_elem_sep GeneticProfile getDefaultMutationProfile concode_elem_sep void addGisticProfile concode_elem_sep void addOtherCnaProfile concode_elem_sep void addGeneticProfile concode_elem_sep HashMap<String,GeneticProfile> getDefaultMutationMap concode_elem_sep int getNumDefaultMutationAndCopyNumberProfiles", "code_tokens": ["HashMap", "<", "String", ",", "GeneticProfile", ">", "function", "(", ")", "{", "return", "getDefaultGeneticProfileMap", "(", "true", ",", "true", ")", ";", "}"], "nl_tokens": ["gets", "a", "hashmap", "of", "the", "default", "mutation", "and", "copy", "number", "profiles", ".", "concode_field_sep", "ArrayList", "<", "GeneticProfile", ">", "otherCnaProfileList", "concode_elem_sep", "String", "RAE", "concode_elem_sep", "ArrayList", "<", "GeneticProfile", ">", "mutationProfileList", "concode_elem_sep", "ArrayList", "<", "GeneticProfile", ">", "raeProfileList", "concode_elem_sep", "String", "GISTIC", "concode_elem_sep", "ArrayList", "<", "GeneticProfile", ">", "gisticProfileList", "concode_field_sep", "HashMap", "<", "String", ",", "GeneticProfile", ">", "getDefaultCopyNumberMap", "concode_elem_sep", "void", "addCopyNumberProfile", "concode_elem_sep", "GeneticProfile", "getDefaultCnaProfile", "concode_elem_sep", "HashMap", "<", "String", ",", "GeneticProfile", ">", "getDefaultGeneticProfileMap", "concode_elem_sep", "void", "conditionallyAddProfileToSet", "concode_elem_sep", "void", "addMutationProfile", "concode_elem_sep", "GeneticProfile", "getFirstPriorityProfile", "concode_elem_sep", "void", "addRaeProfile", "concode_elem_sep", "GeneticProfile", "getDefaultMutationProfile", "concode_elem_sep", "void", "addGisticProfile", "concode_elem_sep", "void", "addOtherCnaProfile", "concode_elem_sep", "void", "addGeneticProfile", "concode_elem_sep", "HashMap", "<", "String", ",", "GeneticProfile", ">", "getDefaultMutationMap", "concode_elem_sep", "int", "getNumDefaultMutationAndCopyNumberProfiles"]}
{"code": "String function ( ) { String loc0 = \"srini_string\" ; try { loc0 = address . getPostalZone ( ) . getValue ( ) ; } catch ( NullPointerException loc1 ) { } return loc0 ; }", "nl": "getzip returns a string < / code representing the postal zone in a ubl address . concode_field_sep AddressType address concode_field_sep String getState concode_elem_sep String getStreet concode_elem_sep String getCity", "code_tokens": ["String", "function", "(", ")", "{", "String", "loc0", "=", "\"srini_string\"", ";", "try", "{", "loc0", "=", "address", ".", "getPostalZone", "(", ")", ".", "getValue", "(", ")", ";", "}", "catch", "(", "NullPointerException", "loc1", ")", "{", "}", "return", "loc0", ";", "}"], "nl_tokens": ["getzip", "returns", "a", "string", "<", "/", "code", "representing", "the", "postal", "zone", "in", "a", "ubl", "address", ".", "concode_field_sep", "AddressType", "address", "concode_field_sep", "String", "getState", "concode_elem_sep", "String", "getStreet", "concode_elem_sep", "String", "getCity"]}
{"code": "DenseMatrix64F function ( DenseMatrix64F arg0 , double arg1 ) { if ( ! MatrixFeatures . isVector ( arg0 ) ) throw new IllegalArgumentException ( \"srini_string\" ) ; DenseMatrix64F loc0 = CommonOps . identity ( arg0 . getNumElements ( ) ) ; CommonOps . multAddTransB ( - arg1 , arg0 , arg0 , loc0 ) ; return loc0 ; }", "nl": "creates a reflector from the provided vector and gamma . q = i - & gamma ; u ut in practice org.ejml.alg.dense.mult.vectorvectormult #householder double , org.ejml.data.d1matrix64f , org.ejml.data.d1matrix64f , org.ejml.data.d1matrix64f multhouseholder should be used for performance reasons since there is no need to calculate q explicitly . concode_field_sep PlaceHolder placeHolder concode_field_sep void subvector concode_elem_sep double elementSumSq concode_elem_sep double diffNormP1 concode_elem_sep DenseMatrix64F pivotMatrix concode_elem_sep DenseMatrix64F copyChangeRow concode_elem_sep double diffNormF concode_elem_sep double qualityTriangular concode_elem_sep double diffNormF_fast concode_elem_sep void addIdentity concode_elem_sep double diagProd concode_elem_sep DenseMatrix64F copyTriangle concode_elem_sep DenseMatrix64F[] splitIntoVectors", "code_tokens": ["DenseMatrix64F", "function", "(", "DenseMatrix64F", "arg0", ",", "double", "arg1", ")", "{", "if", "(", "!", "MatrixFeatures", ".", "isVector", "(", "arg0", ")", ")", "throw", "new", "IllegalArgumentException", "(", "\"srini_string\"", ")", ";", "DenseMatrix64F", "loc0", "=", "CommonOps", ".", "identity", "(", "arg0", ".", "getNumElements", "(", ")", ")", ";", "CommonOps", ".", "multAddTransB", "(", "-", "arg1", ",", "arg0", ",", "arg0", ",", "loc0", ")", ";", "return", "loc0", ";", "}"], "nl_tokens": ["creates", "a", "reflector", "from", "the", "provided", "vector", "and", "gamma", ".", "q", "=", "i", "-", "&", "gamma", ";", "u", "ut", "in", "practice", "org", ".", "ejml", ".", "alg", ".", "dense", ".", "mult", ".", "vectorvectormult", "#householder double , org.ejml.data.d1matrix64f , org.ejml.data.d1matrix64f , org.ejml.data.d1matrix64f multhouseholder should be used for performance reasons since there is no need to calculate q explicitly . concode_field_sep PlaceHolder placeHolder concode_field_sep void subvector concode_elem_sep double elementSumSq concode_elem_sep double diffNormP1 concode_elem_sep DenseMatrix64F pivotMatrix concode_elem_sep DenseMatrix64F copyChangeRow concode_elem_sep double diffNormF concode_elem_sep double qualityTriangular concode_elem_sep double diffNormF_fast concode_elem_sep void addIdentity concode_elem_sep double diagProd concode_elem_sep DenseMatrix64F copyTriangle concode_elem_sep DenseMatrix64F[] splitIntoVectors"]}
{"code": "void function ( String arg0 , IndividualStructure arg1 ) { this . individualStructures . put ( arg0 , arg1 ) ; }", "nl": "add an individual structure . if the individual structure identifier already exists the old individual structure will be overwritten . concode_field_sep HashMap<String,IndividualStructure> individualStructures concode_field_sep void removeIndividualStructure concode_elem_sep void setIndividualStructures concode_elem_sep void clear concode_elem_sep HashMap<String,IndividualStructure> getIndividualStructures", "code_tokens": ["void", "function", "(", "String", "arg0", ",", "IndividualStructure", "arg1", ")", "{", "this", ".", "individualStructures", ".", "put", "(", "arg0", ",", "arg1", ")", ";", "}"], "nl_tokens": ["add", "an", "individual", "structure", ".", "if", "the", "individual", "structure", "identifier", "already", "exists", "the", "old", "individual", "structure", "will", "be", "overwritten", ".", "concode_field_sep", "HashMap", "<", "String", ",", "IndividualStructure", ">", "individualStructures", "concode_field_sep", "void", "removeIndividualStructure", "concode_elem_sep", "void", "setIndividualStructures", "concode_elem_sep", "void", "clear", "concode_elem_sep", "HashMap", "<", "String", ",", "IndividualStructure", ">", "getIndividualStructures"]}
{"code": "String function ( Object arg0 ) { if ( arg0 instanceof Fig ) { arg0 = ( ( Fig ) arg0 ) . getOwner ( ) ; } if ( arg0 == null ) return null ; if ( arg0 instanceof CommentEdge ) { return ( String ) ( ( CommentEdge ) arg0 ) . getUUID ( ) ; } return Model . getFacade ( ) . getUUID ( arg0 ) ; }", "nl": "return the uuid of the element . concode_field_sep PlaceHolder placeHolder concode_field_sep String getNewUUID", "code_tokens": ["String", "function", "(", "Object", "arg0", ")", "{", "if", "(", "arg0", "instanceof", "Fig", ")", "{", "arg0", "=", "(", "(", "Fig", ")", "arg0", ")", ".", "getOwner", "(", ")", ";", "}", "if", "(", "arg0", "==", "null", ")", "return", "null", ";", "if", "(", "arg0", "instanceof", "CommentEdge", ")", "{", "return", "(", "String", ")", "(", "(", "CommentEdge", ")", "arg0", ")", ".", "getUUID", "(", ")", ";", "}", "return", "Model", ".", "getFacade", "(", ")", ".", "getUUID", "(", "arg0", ")", ";", "}"], "nl_tokens": ["return", "the", "uuid", "of", "the", "element", ".", "concode_field_sep", "PlaceHolder", "placeHolder", "concode_field_sep", "String", "getNewUUID"]}
{"code": "Object function ( Object arg0 ) { if ( arg0 instanceof String && ( ( String ) arg0 ) . equals ( \"srini_string\" ) ) { return null ; } return arg0 ; }", "nl": "jsobject will return the string `` undefined '' at certain times , so we need to make sure we 're not getting a value that looks valid , but is n't . concode_field_sep String variableName concode_elem_sep int objectCounter concode_elem_sep JSObject jsObject concode_elem_sep IJavascriptRuntime runtime concode_elem_sep Map<JSObject,JavascriptObject> peerRegistry concode_field_sep Integer checkInteger concode_elem_sep Object getProperty concode_elem_sep T getProperty concode_elem_sep Object invokeJavascript concode_elem_sep Object invokeJavascript concode_elem_sep T invokeJavascriptReturnValue concode_elem_sep T invokeJavascriptReturnValue concode_elem_sep void setProperty concode_elem_sep void setProperty concode_elem_sep void setProperty concode_elem_sep boolean isMemberDefined concode_elem_sep String getNextVariableName concode_elem_sep String getVariableName concode_elem_sep Boolean checkBoolean concode_elem_sep JSObject getJSObject", "code_tokens": ["Object", "function", "(", "Object", "arg0", ")", "{", "if", "(", "arg0", "instanceof", "String", "&", "&", "(", "(", "String", ")", "arg0", ")", ".", "equals", "(", "\"srini_string\"", ")", ")", "{", "return", "null", ";", "}", "return", "arg0", ";", "}"], "nl_tokens": ["jsobject", "will", "return", "the", "string", "`", "`", "undefined", "''", "at", "certain", "times", ",", "so", "we", "need", "to", "make", "sure", "we", "'re not getting a value that looks valid , but is n'", "t", ".", "concode_field_sep", "String", "variableName", "concode_elem_sep", "int", "objectCounter", "concode_elem_sep", "JSObject", "jsObject", "concode_elem_sep", "IJavascriptRuntime", "runtime", "concode_elem_sep", "Map", "<", "JSObject", ",", "JavascriptObject", ">", "peerRegistry", "concode_field_sep", "Integer", "checkInteger", "concode_elem_sep", "Object", "getProperty", "concode_elem_sep", "T", "getProperty", "concode_elem_sep", "Object", "invokeJavascript", "concode_elem_sep", "Object", "invokeJavascript", "concode_elem_sep", "T", "invokeJavascriptReturnValue", "concode_elem_sep", "T", "invokeJavascriptReturnValue", "concode_elem_sep", "void", "setProperty", "concode_elem_sep", "void", "setProperty", "concode_elem_sep", "void", "setProperty", "concode_elem_sep", "boolean", "isMemberDefined", "concode_elem_sep", "String", "getNextVariableName", "concode_elem_sep", "String", "getVariableName", "concode_elem_sep", "Boolean", "checkBoolean", "concode_elem_sep", "JSObject", "getJSObject"]}
{"code": "void function ( ) { if ( currentblk != null ) tx . unpin ( currentblk ) ; currentblk = null ; }", "nl": "closes the page by unpinning its buffer . concode_field_sep Transaction tx concode_elem_sep TableInfo ti concode_elem_sep int slotsize concode_elem_sep Block currentblk concode_field_sep void insertDir concode_elem_sep int getChildNum concode_elem_sep void insert concode_elem_sep void delete concode_elem_sep Block split concode_elem_sep void transferRecs concode_elem_sep int fldpos concode_elem_sep int getNumRecs concode_elem_sep int slotpos concode_elem_sep int getFlag concode_elem_sep void setVal concode_elem_sep RID getDataRid concode_elem_sep Constant getVal concode_elem_sep void setFlag concode_elem_sep void insertLeaf concode_elem_sep Block appendNew concode_elem_sep String getString concode_elem_sep void setInt concode_elem_sep int getInt concode_elem_sep void setString concode_elem_sep Constant getDataVal concode_elem_sep void copyRecord concode_elem_sep boolean isFull concode_elem_sep void setNumRecs concode_elem_sep int findSlotBefore", "code_tokens": ["void", "function", "(", ")", "{", "if", "(", "currentblk", "!=", "null", ")", "tx", ".", "unpin", "(", "currentblk", ")", ";", "currentblk", "=", "null", ";", "}"], "nl_tokens": ["closes", "the", "page", "by", "unpinning", "its", "buffer", ".", "concode_field_sep", "Transaction", "tx", "concode_elem_sep", "TableInfo", "ti", "concode_elem_sep", "int", "slotsize", "concode_elem_sep", "Block", "currentblk", "concode_field_sep", "void", "insertDir", "concode_elem_sep", "int", "getChildNum", "concode_elem_sep", "void", "insert", "concode_elem_sep", "void", "delete", "concode_elem_sep", "Block", "split", "concode_elem_sep", "void", "transferRecs", "concode_elem_sep", "int", "fldpos", "concode_elem_sep", "int", "getNumRecs", "concode_elem_sep", "int", "slotpos", "concode_elem_sep", "int", "getFlag", "concode_elem_sep", "void", "setVal", "concode_elem_sep", "RID", "getDataRid", "concode_elem_sep", "Constant", "getVal", "concode_elem_sep", "void", "setFlag", "concode_elem_sep", "void", "insertLeaf", "concode_elem_sep", "Block", "appendNew", "concode_elem_sep", "String", "getString", "concode_elem_sep", "void", "setInt", "concode_elem_sep", "int", "getInt", "concode_elem_sep", "void", "setString", "concode_elem_sep", "Constant", "getDataVal", "concode_elem_sep", "void", "copyRecord", "concode_elem_sep", "boolean", "isFull", "concode_elem_sep", "void", "setNumRecs", "concode_elem_sep", "int", "findSlotBefore"]}
{"code": "boolean function ( String arg0 , String arg1 ) { return userService . renameRepositoryRole ( arg0 , arg1 ) ; }", "nl": "renames a repository role . concode_field_sep IStoredSettings settings concode_elem_sep Map<String,String> legacyBackingServices concode_elem_sep IRuntimeManager runtimeManager concode_elem_sep Logger logger concode_elem_sep IUserService userService concode_field_sep boolean deleteRepositoryRole concode_elem_sep List<String> getAllUsernames concode_elem_sep List<UserModel> getAllUsers concode_elem_sep UserModel getUserModel concode_elem_sep UserModel getUserModel concode_elem_sep boolean updateUserModel concode_elem_sep boolean updateUserModel concode_elem_sep TeamModel getTeamModel concode_elem_sep boolean updateTeamModel concode_elem_sep boolean updateTeamModel concode_elem_sep boolean isInternalAccount concode_elem_sep List<String> getTeamNamesForRepositoryRole concode_elem_sep boolean deleteTeam concode_elem_sep boolean updateUserModels concode_elem_sep List<String> getUsernamesForRepositoryRole concode_elem_sep boolean deleteTeamModel concode_elem_sep UserManager start concode_elem_sep void setUserService concode_elem_sep IUserService createUserService concode_elem_sep List<TeamModel> getAllTeams concode_elem_sep String getCookie concode_elem_sep boolean deleteUserModel concode_elem_sep UserManager stop concode_elem_sep boolean deleteUser concode_elem_sep void setup concode_elem_sep List<String> getAllTeamNames concode_elem_sep boolean updateTeamModels", "code_tokens": ["boolean", "function", "(", "String", "arg0", ",", "String", "arg1", ")", "{", "return", "userService", ".", "renameRepositoryRole", "(", "arg0", ",", "arg1", ")", ";", "}"], "nl_tokens": ["renames", "a", "repository", "role", ".", "concode_field_sep", "IStoredSettings", "settings", "concode_elem_sep", "Map", "<", "String", ",", "String", ">", "legacyBackingServices", "concode_elem_sep", "IRuntimeManager", "runtimeManager", "concode_elem_sep", "Logger", "logger", "concode_elem_sep", "IUserService", "userService", "concode_field_sep", "boolean", "deleteRepositoryRole", "concode_elem_sep", "List", "<", "String", ">", "getAllUsernames", "concode_elem_sep", "List", "<", "UserModel", ">", "getAllUsers", "concode_elem_sep", "UserModel", "getUserModel", "concode_elem_sep", "UserModel", "getUserModel", "concode_elem_sep", "boolean", "updateUserModel", "concode_elem_sep", "boolean", "updateUserModel", "concode_elem_sep", "TeamModel", "getTeamModel", "concode_elem_sep", "boolean", "updateTeamModel", "concode_elem_sep", "boolean", "updateTeamModel", "concode_elem_sep", "boolean", "isInternalAccount", "concode_elem_sep", "List", "<", "String", ">", "getTeamNamesForRepositoryRole", "concode_elem_sep", "boolean", "deleteTeam", "concode_elem_sep", "boolean", "updateUserModels", "concode_elem_sep", "List", "<", "String", ">", "getUsernamesForRepositoryRole", "concode_elem_sep", "boolean", "deleteTeamModel", "concode_elem_sep", "UserManager", "start", "concode_elem_sep", "void", "setUserService", "concode_elem_sep", "IUserService", "createUserService", "concode_elem_sep", "List", "<", "TeamModel", ">", "getAllTeams", "concode_elem_sep", "String", "getCookie", "concode_elem_sep", "boolean", "deleteUserModel", "concode_elem_sep", "UserManager", "stop", "concode_elem_sep", "boolean", "deleteUser", "concode_elem_sep", "void", "setup", "concode_elem_sep", "List", "<", "String", ">", "getAllTeamNames", "concode_elem_sep", "boolean", "updateTeamModels"]}
{"code": "void function ( @ PathVariable long arg0 ) { repository . delete ( arg0 ) ; }", "nl": "remove a terminal concode_field_sep TerminalDeviceRepository repository concode_field_sep void addDevice concode_elem_sep TerminalDevice getStatus concode_elem_sep Set<Schedule> getSchedule concode_elem_sep void setStatus", "code_tokens": ["void", "function", "(", "@", "PathVariable", "long", "arg0", ")", "{", "repository", ".", "delete", "(", "arg0", ")", ";", "}"], "nl_tokens": ["remove", "a", "terminal", "concode_field_sep", "TerminalDeviceRepository", "repository", "concode_field_sep", "void", "addDevice", "concode_elem_sep", "TerminalDevice", "getStatus", "concode_elem_sep", "Set", "<", "Schedule", ">", "getSchedule", "concode_elem_sep", "void", "setStatus"]}
{"code": "symbol function ( ) { return _on_symbol ; }", "nl": "the symbol we make the transition on . concode_field_sep lalr_state _to_state concode_elem_sep lalr_transition _next concode_elem_sep symbol _on_symbol concode_field_sep lalr_transition next concode_elem_sep String toString concode_elem_sep lalr_state to_state", "code_tokens": ["symbol", "function", "(", ")", "{", "return", "_on_symbol", ";", "}"], "nl_tokens": ["the", "symbol", "we", "make", "the", "transition", "on", ".", "concode_field_sep", "lalr_state", "_to_state", "concode_elem_sep", "lalr_transition", "_next", "concode_elem_sep", "symbol", "_on_symbol", "concode_field_sep", "lalr_transition", "next", "concode_elem_sep", "String", "toString", "concode_elem_sep", "lalr_state", "to_state"]}
{"code": "void function ( Object arg0 ) { }", "nl": "initialized some new modelelement o. concode_field_sep PlaceHolder placeHolder concode_field_sep placeholderType placeHolder", "code_tokens": ["void", "function", "(", "Object", "arg0", ")", "{", "}"], "nl_tokens": ["initialized", "some", "new", "modelelement", "o", ".", "concode_field_sep", "PlaceHolder", "placeHolder", "concode_field_sep", "placeholderType", "placeHolder"]}
{"code": "void function ( boolean arg0 ) { isCurrentScenario = arg0 ; }", "nl": "setter for property ` currentscenario ' . concode_field_sep String summary concode_elem_sep boolean isCurrentScenario concode_elem_sep List<String> services concode_elem_sep String wsuId concode_elem_sep List<String> modules concode_elem_sep String description concode_elem_sep boolean isGeneralPolicy concode_elem_sep String category concode_elem_sep String type concode_elem_sep String scenarioId concode_field_sep void setSummary concode_elem_sep String getSummary concode_elem_sep boolean isCurrentScenario concode_elem_sep List<String> getModules concode_elem_sep String getCategory concode_elem_sep void setCurrentScenario concode_elem_sep void setDescription concode_elem_sep void setType concode_elem_sep String getDescription concode_elem_sep void addModule concode_elem_sep boolean getGeneralPolicy concode_elem_sep void addService concode_elem_sep void setCategory concode_elem_sep String getType concode_elem_sep String getScenarioId concode_elem_sep void setScenarioId concode_elem_sep boolean getIsCurrentScenario concode_elem_sep void setGeneralPolicy concode_elem_sep List<String> getServices concode_elem_sep void setWsuId concode_elem_sep String getWsuId", "code_tokens": ["void", "function", "(", "boolean", "arg0", ")", "{", "isCurrentScenario", "=", "arg0", ";", "}"], "nl_tokens": ["setter", "for", "property", "`", "currentscenario", "'", ".", "concode_field_sep", "String", "summary", "concode_elem_sep", "boolean", "isCurrentScenario", "concode_elem_sep", "List", "<", "String", ">", "services", "concode_elem_sep", "String", "wsuId", "concode_elem_sep", "List", "<", "String", ">", "modules", "concode_elem_sep", "String", "description", "concode_elem_sep", "boolean", "isGeneralPolicy", "concode_elem_sep", "String", "category", "concode_elem_sep", "String", "type", "concode_elem_sep", "String", "scenarioId", "concode_field_sep", "void", "setSummary", "concode_elem_sep", "String", "getSummary", "concode_elem_sep", "boolean", "isCurrentScenario", "concode_elem_sep", "List", "<", "String", ">", "getModules", "concode_elem_sep", "String", "getCategory", "concode_elem_sep", "void", "setCurrentScenario", "concode_elem_sep", "void", "setDescription", "concode_elem_sep", "void", "setType", "concode_elem_sep", "String", "getDescription", "concode_elem_sep", "void", "addModule", "concode_elem_sep", "boolean", "getGeneralPolicy", "concode_elem_sep", "void", "addService", "concode_elem_sep", "void", "setCategory", "concode_elem_sep", "String", "getType", "concode_elem_sep", "String", "getScenarioId", "concode_elem_sep", "void", "setScenarioId", "concode_elem_sep", "boolean", "getIsCurrentScenario", "concode_elem_sep", "void", "setGeneralPolicy", "concode_elem_sep", "List", "<", "String", ">", "getServices", "concode_elem_sep", "void", "setWsuId", "concode_elem_sep", "String", "getWsuId"]}
{"code": "Date function ( ) { return this . expires ; }", "nl": "gets the date at which the access token expires . concode_field_sep Date ALREADY_EXPIRED_EXPIRATION_TIME concode_elem_sep Date expires concode_elem_sep String EXPIRES_IN_KEY concode_elem_sep Date lastRefresh concode_elem_sep AccessTokenSource DEFAULT_ACCESS_TOKEN_SOURCE concode_elem_sep Date DEFAULT_LAST_REFRESH_TIME concode_elem_sep String ACCESS_TOKEN_KEY concode_elem_sep long serialVersionUID concode_elem_sep AccessTokenSource source concode_elem_sep String token concode_elem_sep Date DEFAULT_EXPIRATION_TIME concode_elem_sep long serialVersionUID concode_elem_sep List<String> permissions concode_elem_sep Date MIN_DATE concode_elem_sep Date MAX_DATE concode_field_sep AccessToken createFromNativeLogin concode_elem_sep Object readResolve concode_elem_sep List<String> getPermissions concode_elem_sep String tokenToString concode_elem_sep Object writeReplace concode_elem_sep AccessToken createFromNativeLinkingIntent concode_elem_sep boolean isInvalid concode_elem_sep AccessToken createNew concode_elem_sep void readObject concode_elem_sep Date getBundleLongAsDate concode_elem_sep AccessToken createFromExistingAccessToken concode_elem_sep AccessToken createFromBundle concode_elem_sep void appendPermissions concode_elem_sep AccessTokenSource getSource concode_elem_sep AccessToken createFromTokenWithRefreshedPermissions concode_elem_sep String getToken concode_elem_sep Bundle toCacheBundle concode_elem_sep AccessToken createEmptyToken concode_elem_sep AccessToken createFromString concode_elem_sep Date getLastRefresh concode_elem_sep String toString concode_elem_sep AccessToken createFromCache concode_elem_sep AccessToken createFromRefresh concode_elem_sep AccessToken createFromWebBundle", "code_tokens": ["Date", "function", "(", ")", "{", "return", "this", ".", "expires", ";", "}"], "nl_tokens": ["gets", "the", "date", "at", "which", "the", "access", "token", "expires", ".", "concode_field_sep", "Date", "ALREADY_EXPIRED_EXPIRATION_TIME", "concode_elem_sep", "Date", "expires", "concode_elem_sep", "String", "EXPIRES_IN_KEY", "concode_elem_sep", "Date", "lastRefresh", "concode_elem_sep", "AccessTokenSource", "DEFAULT_ACCESS_TOKEN_SOURCE", "concode_elem_sep", "Date", "DEFAULT_LAST_REFRESH_TIME", "concode_elem_sep", "String", "ACCESS_TOKEN_KEY", "concode_elem_sep", "long", "serialVersionUID", "concode_elem_sep", "AccessTokenSource", "source", "concode_elem_sep", "String", "token", "concode_elem_sep", "Date", "DEFAULT_EXPIRATION_TIME", "concode_elem_sep", "long", "serialVersionUID", "concode_elem_sep", "List", "<", "String", ">", "permissions", "concode_elem_sep", "Date", "MIN_DATE", "concode_elem_sep", "Date", "MAX_DATE", "concode_field_sep", "AccessToken", "createFromNativeLogin", "concode_elem_sep", "Object", "readResolve", "concode_elem_sep", "List", "<", "String", ">", "getPermissions", "concode_elem_sep", "String", "tokenToString", "concode_elem_sep", "Object", "writeReplace", "concode_elem_sep", "AccessToken", "createFromNativeLinkingIntent", "concode_elem_sep", "boolean", "isInvalid", "concode_elem_sep", "AccessToken", "createNew", "concode_elem_sep", "void", "readObject", "concode_elem_sep", "Date", "getBundleLongAsDate", "concode_elem_sep", "AccessToken", "createFromExistingAccessToken", "concode_elem_sep", "AccessToken", "createFromBundle", "concode_elem_sep", "void", "appendPermissions", "concode_elem_sep", "AccessTokenSource", "getSource", "concode_elem_sep", "AccessToken", "createFromTokenWithRefreshedPermissions", "concode_elem_sep", "String", "getToken", "concode_elem_sep", "Bundle", "toCacheBundle", "concode_elem_sep", "AccessToken", "createEmptyToken", "concode_elem_sep", "AccessToken", "createFromString", "concode_elem_sep", "Date", "getLastRefresh", "concode_elem_sep", "String", "toString", "concode_elem_sep", "AccessToken", "createFromCache", "concode_elem_sep", "AccessToken", "createFromRefresh", "concode_elem_sep", "AccessToken", "createFromWebBundle"]}
{"code": "long function ( ) { return mTimeDelta ; }", "nl": "return the time difference in milliseconds between the previous accepted gesturedetector event and the current gesturedetector event . concode_field_sep float mCurrPressure concode_elem_sep MotionEvent mCurrEvent concode_elem_sep float PRESSURE_THRESHOLD concode_elem_sep float mPrevPressure concode_elem_sep boolean mGestureInProgress concode_elem_sep MotionEvent mPrevEvent concode_elem_sep Context mContext concode_elem_sep long mTimeDelta concode_field_sep void updateStateByEvent concode_elem_sep void handleStartProgressEvent concode_elem_sep boolean onTouchEvent concode_elem_sep void resetState concode_elem_sep void handleInProgressEvent concode_elem_sep boolean isInProgress concode_elem_sep long getEventTime", "code_tokens": ["long", "function", "(", ")", "{", "return", "mTimeDelta", ";", "}"], "nl_tokens": ["return", "the", "time", "difference", "in", "milliseconds", "between", "the", "previous", "accepted", "gesturedetector", "event", "and", "the", "current", "gesturedetector", "event", ".", "concode_field_sep", "float", "mCurrPressure", "concode_elem_sep", "MotionEvent", "mCurrEvent", "concode_elem_sep", "float", "PRESSURE_THRESHOLD", "concode_elem_sep", "float", "mPrevPressure", "concode_elem_sep", "boolean", "mGestureInProgress", "concode_elem_sep", "MotionEvent", "mPrevEvent", "concode_elem_sep", "Context", "mContext", "concode_elem_sep", "long", "mTimeDelta", "concode_field_sep", "void", "updateStateByEvent", "concode_elem_sep", "void", "handleStartProgressEvent", "concode_elem_sep", "boolean", "onTouchEvent", "concode_elem_sep", "void", "resetState", "concode_elem_sep", "void", "handleInProgressEvent", "concode_elem_sep", "boolean", "isInProgress", "concode_elem_sep", "long", "getEventTime"]}
{"code": "boolean function ( Bits arg0 ) { if ( arg0 != null ) { return ( ordinal ( ) & arg0 . ordinal ( ) ) == arg0 . ordinal ( ) ; } return false ; }", "nl": "checks whether these bits imply the given bits . concode_field_sep Bits mOwnerBits concode_elem_sep Bits mGroupBits concode_elem_sep Bits[] SVALS concode_elem_sep Bits mOtherBits concode_elem_sep String mString concode_field_sep Bits extractOtherBits concode_elem_sep boolean tryParseInt concode_elem_sep Bits or concode_elem_sep void set concode_elem_sep Bits extractOwnerBits concode_elem_sep Mode applyUMask concode_elem_sep Mode applyUMask concode_elem_sep void setOtherBits concode_elem_sep Bits getOtherBits concode_elem_sep Mode getDefault concode_elem_sep Mode createFullAccess concode_elem_sep Bits getGroupBits concode_elem_sep Bits extractGroupBits concode_elem_sep Bits getOwnerBits concode_elem_sep void setOwnerBits concode_elem_sep Bits not concode_elem_sep void fromShort concode_elem_sep Bits and concode_elem_sep int hashCode concode_elem_sep void setGroupBits concode_elem_sep boolean equals concode_elem_sep Mode getUMask concode_elem_sep String toString concode_elem_sep String toString concode_elem_sep short toShort concode_elem_sep Mode createNoAccess", "code_tokens": ["boolean", "function", "(", "Bits", "arg0", ")", "{", "if", "(", "arg0", "!=", "null", ")", "{", "return", "(", "ordinal", "(", ")", "&", "arg0", ".", "ordinal", "(", ")", ")", "==", "arg0", ".", "ordinal", "(", ")", ";", "}", "return", "false", ";", "}"], "nl_tokens": ["checks", "whether", "these", "bits", "imply", "the", "given", "bits", ".", "concode_field_sep", "Bits", "mOwnerBits", "concode_elem_sep", "Bits", "mGroupBits", "concode_elem_sep", "Bits", "[", "]", "SVALS", "concode_elem_sep", "Bits", "mOtherBits", "concode_elem_sep", "String", "mString", "concode_field_sep", "Bits", "extractOtherBits", "concode_elem_sep", "boolean", "tryParseInt", "concode_elem_sep", "Bits", "or", "concode_elem_sep", "void", "set", "concode_elem_sep", "Bits", "extractOwnerBits", "concode_elem_sep", "Mode", "applyUMask", "concode_elem_sep", "Mode", "applyUMask", "concode_elem_sep", "void", "setOtherBits", "concode_elem_sep", "Bits", "getOtherBits", "concode_elem_sep", "Mode", "getDefault", "concode_elem_sep", "Mode", "createFullAccess", "concode_elem_sep", "Bits", "getGroupBits", "concode_elem_sep", "Bits", "extractGroupBits", "concode_elem_sep", "Bits", "getOwnerBits", "concode_elem_sep", "void", "setOwnerBits", "concode_elem_sep", "Bits", "not", "concode_elem_sep", "void", "fromShort", "concode_elem_sep", "Bits", "and", "concode_elem_sep", "int", "hashCode", "concode_elem_sep", "void", "setGroupBits", "concode_elem_sep", "boolean", "equals", "concode_elem_sep", "Mode", "getUMask", "concode_elem_sep", "String", "toString", "concode_elem_sep", "String", "toString", "concode_elem_sep", "short", "toShort", "concode_elem_sep", "Mode", "createNoAccess"]}
{"code": "Map < Variable , Term > function ( FOLNode arg0 , FOLNode arg1 ) { return unify ( arg0 , arg1 , new LinkedHashMap < Variable , Term > ( ) ) ; }", "nl": "returns a map representing the substitution i.e. a set of variable/term pairs or null which is used to indicate a failure to unify . concode_field_sep SubstVisitor _substVisitor concode_field_sep List<? extends FOLNode> args concode_elem_sep String op concode_elem_sep Map<Variable,Term> cascadeSubstitution concode_elem_sep Map<Variable,Term> unifyOps concode_elem_sep boolean occurCheck concode_elem_sep boolean isCompound concode_elem_sep Map<Variable,Term> unifyVar", "code_tokens": ["Map", "<", "Variable", ",", "Term", ">", "function", "(", "FOLNode", "arg0", ",", "FOLNode", "arg1", ")", "{", "return", "unify", "(", "arg0", ",", "arg1", ",", "new", "LinkedHashMap", "<", "Variable", ",", "Term", ">", "(", ")", ")", ";", "}"], "nl_tokens": ["returns", "a", "map", "representing", "the", "substitution", "i", ".", "e", ".", "a", "set", "of", "variable", "/", "term", "pairs", "or", "null", "which", "is", "used", "to", "indicate", "a", "failure", "to", "unify", ".", "concode_field_sep", "SubstVisitor", "_substVisitor", "concode_field_sep", "List", "<", "?", "extends", "FOLNode", ">", "args", "concode_elem_sep", "String", "op", "concode_elem_sep", "Map", "<", "Variable", ",", "Term", ">", "cascadeSubstitution", "concode_elem_sep", "Map", "<", "Variable", ",", "Term", ">", "unifyOps", "concode_elem_sep", "boolean", "occurCheck", "concode_elem_sep", "boolean", "isCompound", "concode_elem_sep", "Map", "<", "Variable", ",", "Term", ">", "unifyVar"]}
{"code": "int function ( ) { return - 1 ; }", "nl": "checkpoint records have no associated transaction , and so the method returns a `` dummy '' , negative txid . concode_field_sep PlaceHolder placeHolder concode_field_sep int op concode_elem_sep int writeToLog concode_elem_sep void undo concode_elem_sep String toString concode_elem_sep void redo", "code_tokens": ["int", "function", "(", ")", "{", "return", "-", "1", ";", "}"], "nl_tokens": ["checkpoint", "records", "have", "no", "associated", "transaction", ",", "and", "so", "the", "method", "returns", "a", "`", "`", "dummy", "''", ",", "negative", "txid", ".", "concode_field_sep", "PlaceHolder", "placeHolder", "concode_field_sep", "int", "op", "concode_elem_sep", "int", "writeToLog", "concode_elem_sep", "void", "undo", "concode_elem_sep", "String", "toString", "concode_elem_sep", "void", "redo"]}
{"code": "String function ( ) { return id ; }", "nl": "get the id of satellite vehicle , for example `` 05 '' . concode_field_sep int elevation concode_elem_sep int noise concode_elem_sep int azimuth concode_elem_sep String id concode_field_sep int getAzimuth concode_elem_sep void setElevation concode_elem_sep void setNoise concode_elem_sep void setId concode_elem_sep int getNoise concode_elem_sep int getElevation concode_elem_sep void setAzimuth", "code_tokens": ["String", "function", "(", ")", "{", "return", "id", ";", "}"], "nl_tokens": ["get", "the", "id", "of", "satellite", "vehicle", ",", "for", "example", "`", "`", "0", "5", "''", ".", "concode_field_sep", "int", "elevation", "concode_elem_sep", "int", "noise", "concode_elem_sep", "int", "azimuth", "concode_elem_sep", "String", "id", "concode_field_sep", "int", "getAzimuth", "concode_elem_sep", "void", "setElevation", "concode_elem_sep", "void", "setNoise", "concode_elem_sep", "void", "setId", "concode_elem_sep", "int", "getNoise", "concode_elem_sep", "int", "getElevation", "concode_elem_sep", "void", "setAzimuth"]}
{"code": "void function ( ) { URL loc0 = ClassLoader . getSystemResource ( \"srini_string\" ) ; PSTFile loc1 = new PSTFile ( new File ( loc0 . toURI ( ) ) ) ; Assert . assertEquals ( \"srini_string\" , loc1 . getMessageStore ( ) . isPasswordProtected ( ) , false ) ; }", "nl": "test for non-password protectedness . concode_field_sep PlaceHolder placeHolder concode_field_sep void testPasswordProtected", "code_tokens": ["void", "function", "(", ")", "{", "URL", "loc0", "=", "ClassLoader", ".", "getSystemResource", "(", "\"srini_string\"", ")", ";", "PSTFile", "loc1", "=", "new", "PSTFile", "(", "new", "File", "(", "loc0", ".", "toURI", "(", ")", ")", ")", ";", "Assert", ".", "assertEquals", "(", "\"srini_string\"", ",", "loc1", ".", "getMessageStore", "(", ")", ".", "isPasswordProtected", "(", ")", ",", "false", ")", ";", "}"], "nl_tokens": ["test", "for", "non", "-", "password", "protectedness", ".", "concode_field_sep", "PlaceHolder", "placeHolder", "concode_field_sep", "void", "testPasswordProtected"]}
{"code": "long function ( ) { return this . testId ; }", "nl": "gets the test id . concode_field_sep Timestamp lastModifiedTimeStamp concode_elem_sep Timestamp fetcherStartTimestamp concode_elem_sep Timestamp createTimeStamp concode_elem_sep long serialVersionUID concode_elem_sep BigDecimal batchId concode_elem_sep String errorMsg concode_elem_sep OutcomeType outcomeType concode_elem_sep String createdBy concode_elem_sep BigDecimal feedId concode_elem_sep long testId concode_elem_sep BigDecimal runId concode_elem_sep Timestamp fetcherEndTimeStamp concode_elem_sep List<RegPCLTestResultDetailsEntity> regPclTestResultDetails concode_elem_sep RunStatusType runStatus concode_field_sep void setLastModifiedTimeStamp concode_elem_sep void setFeedId concode_elem_sep void setFetcherStartTimestamp concode_elem_sep OutcomeType getOutcomeType concode_elem_sep void updateLastModifiedTimeStamp concode_elem_sep void updateCreateTimeStamp concode_elem_sep BigDecimal getRunId concode_elem_sep void setBatchId concode_elem_sep List<RegPCLTestResultDetailsEntity> getRegPclTestResultDetails concode_elem_sep void setTestId concode_elem_sep RegPCLTestResultDetailsEntity removeRegPclTestResultDetail concode_elem_sep void setRegPclTestResultDetails concode_elem_sep void setErrorMsg concode_elem_sep RunStatusType getRunStatus concode_elem_sep RegPCLTestResultDetailsEntity addRegPclTestResultDetail concode_elem_sep String getErrorMsg concode_elem_sep void setRunStatus concode_elem_sep Timestamp getFetcherEndTimeStamp concode_elem_sep Timestamp getLastModifiedTimeStamp concode_elem_sep BigDecimal getFeedId concode_elem_sep void setRunId concode_elem_sep Timestamp getFetcherStartTimestamp concode_elem_sep void setFetcherEndTimeStamp concode_elem_sep void setCreateTimeStamp concode_elem_sep void setCreatedBy concode_elem_sep Timestamp getCreateTimeStamp concode_elem_sep BigDecimal getBatchId concode_elem_sep void setOutcomeType concode_elem_sep String getCreatedBy", "code_tokens": ["long", "function", "(", ")", "{", "return", "this", ".", "testId", ";", "}"], "nl_tokens": ["gets", "the", "test", "id", ".", "concode_field_sep", "Timestamp", "lastModifiedTimeStamp", "concode_elem_sep", "Timestamp", "fetcherStartTimestamp", "concode_elem_sep", "Timestamp", "createTimeStamp", "concode_elem_sep", "long", "serialVersionUID", "concode_elem_sep", "BigDecimal", "batchId", "concode_elem_sep", "String", "errorMsg", "concode_elem_sep", "OutcomeType", "outcomeType", "concode_elem_sep", "String", "createdBy", "concode_elem_sep", "BigDecimal", "feedId", "concode_elem_sep", "long", "testId", "concode_elem_sep", "BigDecimal", "runId", "concode_elem_sep", "Timestamp", "fetcherEndTimeStamp", "concode_elem_sep", "List", "<", "RegPCLTestResultDetailsEntity", ">", "regPclTestResultDetails", "concode_elem_sep", "RunStatusType", "runStatus", "concode_field_sep", "void", "setLastModifiedTimeStamp", "concode_elem_sep", "void", "setFeedId", "concode_elem_sep", "void", "setFetcherStartTimestamp", "concode_elem_sep", "OutcomeType", "getOutcomeType", "concode_elem_sep", "void", "updateLastModifiedTimeStamp", "concode_elem_sep", "void", "updateCreateTimeStamp", "concode_elem_sep", "BigDecimal", "getRunId", "concode_elem_sep", "void", "setBatchId", "concode_elem_sep", "List", "<", "RegPCLTestResultDetailsEntity", ">", "getRegPclTestResultDetails", "concode_elem_sep", "void", "setTestId", "concode_elem_sep", "RegPCLTestResultDetailsEntity", "removeRegPclTestResultDetail", "concode_elem_sep", "void", "setRegPclTestResultDetails", "concode_elem_sep", "void", "setErrorMsg", "concode_elem_sep", "RunStatusType", "getRunStatus", "concode_elem_sep", "RegPCLTestResultDetailsEntity", "addRegPclTestResultDetail", "concode_elem_sep", "String", "getErrorMsg", "concode_elem_sep", "void", "setRunStatus", "concode_elem_sep", "Timestamp", "getFetcherEndTimeStamp", "concode_elem_sep", "Timestamp", "getLastModifiedTimeStamp", "concode_elem_sep", "BigDecimal", "getFeedId", "concode_elem_sep", "void", "setRunId", "concode_elem_sep", "Timestamp", "getFetcherStartTimestamp", "concode_elem_sep", "void", "setFetcherEndTimeStamp", "concode_elem_sep", "void", "setCreateTimeStamp", "concode_elem_sep", "void", "setCreatedBy", "concode_elem_sep", "Timestamp", "getCreateTimeStamp", "concode_elem_sep", "BigDecimal", "getBatchId", "concode_elem_sep", "void", "setOutcomeType", "concode_elem_sep", "String", "getCreatedBy"]}
{"code": "void function ( Entity arg0 ) { this . source = arg0 ; }", "nl": "set the target to run away from . concode_field_sep EntityMobWithInventory mob concode_elem_sep PathEntity path concode_elem_sep int ticker concode_elem_sep World world concode_elem_sep double runSpeed concode_elem_sep Vec3 destination concode_elem_sep Entity source concode_elem_sep boolean destinationSet concode_field_sep void moveToBlock concode_elem_sep void nextStep concode_elem_sep void setDestination", "code_tokens": ["void", "function", "(", "Entity", "arg0", ")", "{", "this", ".", "source", "=", "arg0", ";", "}"], "nl_tokens": ["set", "the", "target", "to", "run", "away", "from", ".", "concode_field_sep", "EntityMobWithInventory", "mob", "concode_elem_sep", "PathEntity", "path", "concode_elem_sep", "int", "ticker", "concode_elem_sep", "World", "world", "concode_elem_sep", "double", "runSpeed", "concode_elem_sep", "Vec3", "destination", "concode_elem_sep", "Entity", "source", "concode_elem_sep", "boolean", "destinationSet", "concode_field_sep", "void", "moveToBlock", "concode_elem_sep", "void", "nextStep", "concode_elem_sep", "void", "setDestination"]}
{"code": "String function ( String arg0 ) { if ( s1 . hasField ( arg0 ) ) return s1 . getString ( arg0 ) ; else return s2 . getString ( arg0 ) ; }", "nl": "returns the string value of the specified field . the value is obtained from whichever scan contains the field . concode_field_sep Scan s1 concode_elem_sep Scan s2 concode_field_sep boolean next concode_elem_sep int getInt concode_elem_sep Constant getVal concode_elem_sep void beforeFirst concode_elem_sep void close concode_elem_sep boolean hasField", "code_tokens": ["String", "function", "(", "String", "arg0", ")", "{", "if", "(", "s1", ".", "hasField", "(", "arg0", ")", ")", "return", "s1", ".", "getString", "(", "arg0", ")", ";", "else", "return", "s2", ".", "getString", "(", "arg0", ")", ";", "}"], "nl_tokens": ["returns", "the", "string", "value", "of", "the", "specified", "field", ".", "the", "value", "is", "obtained", "from", "whichever", "scan", "contains", "the", "field", ".", "concode_field_sep", "Scan", "s1", "concode_elem_sep", "Scan", "s2", "concode_field_sep", "boolean", "next", "concode_elem_sep", "int", "getInt", "concode_elem_sep", "Constant", "getVal", "concode_elem_sep", "void", "beforeFirst", "concode_elem_sep", "void", "close", "concode_elem_sep", "boolean", "hasField"]}
{"code": "Sha256Hash function ( File arg0 ) { FileInputStream loc0 = new FileInputStream ( arg0 ) ; try { return create ( ByteStreams . toByteArray ( loc0 ) ) ; } finally { loc0 . close ( ) ; } }", "nl": "returns a hash of the given files contents . reads the file fully into memory before hashing so only use with small files . concode_field_sep Sha256Hash ZERO_HASH concode_elem_sep byte[] bytes concode_field_sep Sha256Hash createDouble concode_elem_sep int hashCode concode_elem_sep boolean equals concode_elem_sep Sha256Hash create concode_elem_sep BigInteger toBigInteger concode_elem_sep String toString concode_elem_sep Sha256Hash duplicate concode_elem_sep int compareTo concode_elem_sep byte[] getBytes", "code_tokens": ["Sha256Hash", "function", "(", "File", "arg0", ")", "{", "FileInputStream", "loc0", "=", "new", "FileInputStream", "(", "arg0", ")", ";", "try", "{", "return", "create", "(", "ByteStreams", ".", "toByteArray", "(", "loc0", ")", ")", ";", "}", "finally", "{", "loc0", ".", "close", "(", ")", ";", "}", "}"], "nl_tokens": ["returns", "a", "hash", "of", "the", "given", "files", "contents", ".", "reads", "the", "file", "fully", "into", "memory", "before", "hashing", "so", "only", "use", "with", "small", "files", ".", "concode_field_sep", "Sha256Hash", "ZERO_HASH", "concode_elem_sep", "byte", "[", "]", "bytes", "concode_field_sep", "Sha256Hash", "createDouble", "concode_elem_sep", "int", "hashCode", "concode_elem_sep", "boolean", "equals", "concode_elem_sep", "Sha256Hash", "create", "concode_elem_sep", "BigInteger", "toBigInteger", "concode_elem_sep", "String", "toString", "concode_elem_sep", "Sha256Hash", "duplicate", "concode_elem_sep", "int", "compareTo", "concode_elem_sep", "byte", "[", "]", "getBytes"]}
{"code": "void function ( String arg0 ) { PROPS . put ( KEY , arg0 ) ; loadValue ( arg0 ) ; }", "nl": "set new property value concode_field_sep boolean _alwaysSave concode_elem_sep String DEFAULT_VALUE concode_elem_sep Properties DEFAULT_PROPS concode_elem_sep Properties PROPS concode_elem_sep String KEY concode_field_sep void loadValue concode_elem_sep void revertToDefault concode_elem_sep String getKey concode_elem_sep boolean isDefault concode_elem_sep void reload concode_elem_sep Setting setAlwaysSave concode_elem_sep String getValueAsString concode_elem_sep boolean shouldAlwaysSave", "code_tokens": ["void", "function", "(", "String", "arg0", ")", "{", "PROPS", ".", "put", "(", "KEY", ",", "arg0", ")", ";", "loadValue", "(", "arg0", ")", ";", "}"], "nl_tokens": ["set", "new", "property", "value", "concode_field_sep", "boolean", "_alwaysSave", "concode_elem_sep", "String", "DEFAULT_VALUE", "concode_elem_sep", "Properties", "DEFAULT_PROPS", "concode_elem_sep", "Properties", "PROPS", "concode_elem_sep", "String", "KEY", "concode_field_sep", "void", "loadValue", "concode_elem_sep", "void", "revertToDefault", "concode_elem_sep", "String", "getKey", "concode_elem_sep", "boolean", "isDefault", "concode_elem_sep", "void", "reload", "concode_elem_sep", "Setting", "setAlwaysSave", "concode_elem_sep", "String", "getValueAsString", "concode_elem_sep", "boolean", "shouldAlwaysSave"]}
{"code": "int [ ] function ( ) { return originalMatrix . itemNames ; }", "nl": "get the array of items stored in the original q-matrix concode_field_sep QMatrix originalMatrix concode_elem_sep List<MatrixPosition> positions concode_field_sep int getLocalSequenceUtility concode_elem_sep int getItemUtility concode_elem_sep int getItemUtility concode_elem_sep int getRemainingUtility", "code_tokens": ["int", "[", "]", "function", "(", ")", "{", "return", "originalMatrix", ".", "itemNames", ";", "}"], "nl_tokens": ["get", "the", "array", "of", "items", "stored", "in", "the", "original", "q", "-", "matrix", "concode_field_sep", "QMatrix", "originalMatrix", "concode_elem_sep", "List", "<", "MatrixPosition", ">", "positions", "concode_field_sep", "int", "getLocalSequenceUtility", "concode_elem_sep", "int", "getItemUtility", "concode_elem_sep", "int", "getItemUtility", "concode_elem_sep", "int", "getRemainingUtility"]}
{"code": "void function ( ) { assertEquals ( 1.85 , vhw . getSpeedKmh ( ) , 0.01 ) ; }", "nl": "test method for net.sf.marineapi.nmea.parser.vhwparser #getspeedkmh . concode_field_sep VHWParser vhw concode_elem_sep String EXAMPLE concode_field_sep void testGetSpeedKnots concode_elem_sep void testSetMagneticHeading concode_elem_sep void testGetMagneticHeading concode_elem_sep void testConstructorTalkerId concode_elem_sep void testIsTrue concode_elem_sep void testSetHeading concode_elem_sep void testSetSpeedKilometres concode_elem_sep void setUp concode_elem_sep void testSetSpeedKnots concode_elem_sep void testGetHeading concode_elem_sep void testConstructorString", "code_tokens": ["void", "function", "(", ")", "{", "assertEquals", "(", "1.85", ",", "vhw", ".", "getSpeedKmh", "(", ")", ",", "0.01", ")", ";", "}"], "nl_tokens": ["test", "method", "for", "net", ".", "sf", ".", "marineapi", ".", "nmea", ".", "parser", ".", "vhwparser", "#getspeedkmh . concode_field_sep VHWParser vhw concode_elem_sep String EXAMPLE concode_field_sep void testGetSpeedKnots concode_elem_sep void testSetMagneticHeading concode_elem_sep void testGetMagneticHeading concode_elem_sep void testConstructorTalkerId concode_elem_sep void testIsTrue concode_elem_sep void testSetHeading concode_elem_sep void testSetSpeedKilometres concode_elem_sep void setUp concode_elem_sep void testSetSpeedKnots concode_elem_sep void testGetHeading concode_elem_sep void testConstructorString"]}
{"code": "Position function ( polyglot . types . TypeObject arg0 ) { Position loc0 = arg0 . position ( ) ; if ( loc0 == null ) loc0 = Position . compilerGenerated ( 0 ) ; return loc0 ; }", "nl": "return a position for a type object . generate one if the type does n't have one . concode_field_sep ExtensionInfo ext concode_elem_sep int EXPR concode_elem_sep int DECL concode_elem_sep Position pos concode_elem_sep int MEMB concode_elem_sep int STMT concode_elem_sep int TYPE concode_elem_sep int FILE concode_field_sep TypeNode parseType concode_elem_sep TypeNode parseType concode_elem_sep ClassMember parseMember concode_elem_sep ClassMember parseMember concode_elem_sep QQParser parser concode_elem_sep Stmt parseStmt concode_elem_sep Stmt parseStmt concode_elem_sep ClassDecl parseDecl concode_elem_sep ClassDecl parseDecl concode_elem_sep SourceFile parseFile concode_elem_sep SourceFile parseFile concode_elem_sep Node parse concode_elem_sep Lexer lexer concode_elem_sep Expr parseExpr concode_elem_sep Expr parseExpr", "code_tokens": ["Position", "function", "(", "polyglot", ".", "types", ".", "TypeObject", "arg0", ")", "{", "Position", "loc0", "=", "arg0", ".", "position", "(", ")", ";", "if", "(", "loc0", "==", "null", ")", "loc0", "=", "Position", ".", "compilerGenerated", "(", "0", ")", ";", "return", "loc0", ";", "}"], "nl_tokens": ["return", "a", "position", "for", "a", "type", "object", ".", "generate", "one", "if", "the", "type", "does", "n", "'", "t", "have", "one", ".", "concode_field_sep", "ExtensionInfo", "ext", "concode_elem_sep", "int", "EXPR", "concode_elem_sep", "int", "DECL", "concode_elem_sep", "Position", "pos", "concode_elem_sep", "int", "MEMB", "concode_elem_sep", "int", "STMT", "concode_elem_sep", "int", "TYPE", "concode_elem_sep", "int", "FILE", "concode_field_sep", "TypeNode", "parseType", "concode_elem_sep", "TypeNode", "parseType", "concode_elem_sep", "ClassMember", "parseMember", "concode_elem_sep", "ClassMember", "parseMember", "concode_elem_sep", "QQParser", "parser", "concode_elem_sep", "Stmt", "parseStmt", "concode_elem_sep", "Stmt", "parseStmt", "concode_elem_sep", "ClassDecl", "parseDecl", "concode_elem_sep", "ClassDecl", "parseDecl", "concode_elem_sep", "SourceFile", "parseFile", "concode_elem_sep", "SourceFile", "parseFile", "concode_elem_sep", "Node", "parse", "concode_elem_sep", "Lexer", "lexer", "concode_elem_sep", "Expr", "parseExpr", "concode_elem_sep", "Expr", "parseExpr"]}
{"code": "boolean function ( int arg0 ) { AbstractPlugin loc0 = getByIndex ( arg0 ) ; return remove ( loc0 ) ; }", "nl": "remove a plugin from this container by its index concode_field_sep SortedUniqueList<AbstractPlugin> plugins concode_elem_sep long serialVersionUID concode_field_sep boolean add concode_elem_sep boolean contains concode_elem_sep Iterator<AbstractPlugin> iterator concode_elem_sep boolean removeByName concode_elem_sep int size concode_elem_sep AbstractPlugin getByIndex concode_elem_sep AbstractPlugin getByName concode_elem_sep void clear concode_elem_sep int indexOf concode_elem_sep boolean remove", "code_tokens": ["boolean", "function", "(", "int", "arg0", ")", "{", "AbstractPlugin", "loc0", "=", "getByIndex", "(", "arg0", ")", ";", "return", "remove", "(", "loc0", ")", ";", "}"], "nl_tokens": ["remove", "a", "plugin", "from", "this", "container", "by", "its", "index", "concode_field_sep", "SortedUniqueList", "<", "AbstractPlugin", ">", "plugins", "concode_elem_sep", "long", "serialVersionUID", "concode_field_sep", "boolean", "add", "concode_elem_sep", "boolean", "contains", "concode_elem_sep", "Iterator", "<", "AbstractPlugin", ">", "iterator", "concode_elem_sep", "boolean", "removeByName", "concode_elem_sep", "int", "size", "concode_elem_sep", "AbstractPlugin", "getByIndex", "concode_elem_sep", "AbstractPlugin", "getByName", "concode_elem_sep", "void", "clear", "concode_elem_sep", "int", "indexOf", "concode_elem_sep", "boolean", "remove"]}
{"code": "void function ( ) { final Iterator < IoSession > loc0 = this . m_connections . values ( ) . iterator ( ) ; while ( loc0 . hasNext ( ) ) { final IoSession loc1 = loc0 . next ( ) ; loc1 . close ( ) ; loc0 . remove ( ) ; } }", "nl": "closes all connections to remote hosts associated with this turn client . concode_field_sep IoSession m_ioSession concode_elem_sep InetAddress m_publicAddress concode_elem_sep Map<InetAddress,InetAddress> m_permittedAddresses concode_elem_sep Set<InetAddress> m_trackedRemoteHosts concode_elem_sep Logger LOG concode_elem_sep InetSocketAddress m_mappedAddress concode_elem_sep Map<InetSocketAddress,IoSession> m_connections concode_elem_sep TcpAllocatedTurnServer m_allocatedTurnServer concode_field_sep boolean hasActiveDestination concode_elem_sep void updateConnectionStatus concode_elem_sep void handleConnect concode_elem_sep InetSocketAddress getMappedAddress concode_elem_sep InetSocketAddress getRelayAddress concode_elem_sep void addConnection concode_elem_sep IoSession getIoSession concode_elem_sep boolean hasIncomingPermission concode_elem_sep void startServer concode_elem_sep void removeConnection concode_elem_sep int getNumConnections concode_elem_sep boolean write concode_elem_sep void close", "code_tokens": ["void", "function", "(", ")", "{", "final", "Iterator", "<", "IoSession", ">", "loc0", "=", "this", ".", "m_connections", ".", "values", "(", ")", ".", "iterator", "(", ")", ";", "while", "(", "loc0", ".", "hasNext", "(", ")", ")", "{", "final", "IoSession", "loc1", "=", "loc0", ".", "next", "(", ")", ";", "loc1", ".", "close", "(", ")", ";", "loc0", ".", "remove", "(", ")", ";", "}", "}"], "nl_tokens": ["closes", "all", "connections", "to", "remote", "hosts", "associated", "with", "this", "turn", "client", ".", "concode_field_sep", "IoSession", "m_ioSession", "concode_elem_sep", "InetAddress", "m_publicAddress", "concode_elem_sep", "Map", "<", "InetAddress", ",", "InetAddress", ">", "m_permittedAddresses", "concode_elem_sep", "Set", "<", "InetAddress", ">", "m_trackedRemoteHosts", "concode_elem_sep", "Logger", "LOG", "concode_elem_sep", "InetSocketAddress", "m_mappedAddress", "concode_elem_sep", "Map", "<", "InetSocketAddress", ",", "IoSession", ">", "m_connections", "concode_elem_sep", "TcpAllocatedTurnServer", "m_allocatedTurnServer", "concode_field_sep", "boolean", "hasActiveDestination", "concode_elem_sep", "void", "updateConnectionStatus", "concode_elem_sep", "void", "handleConnect", "concode_elem_sep", "InetSocketAddress", "getMappedAddress", "concode_elem_sep", "InetSocketAddress", "getRelayAddress", "concode_elem_sep", "void", "addConnection", "concode_elem_sep", "IoSession", "getIoSession", "concode_elem_sep", "boolean", "hasIncomingPermission", "concode_elem_sep", "void", "startServer", "concode_elem_sep", "void", "removeConnection", "concode_elem_sep", "int", "getNumConnections", "concode_elem_sep", "boolean", "write", "concode_elem_sep", "void", "close"]}
{"code": "DagEngine function ( ) { return new DagEngine ( ) ; }", "nl": "return a dag engine for a system user no user , no group . concode_field_sep PlaceHolder placeHolder concode_field_sep void init concode_elem_sep Class<? extends Service> getInterface concode_elem_sep void destroy concode_elem_sep DagEngine getDagEngine", "code_tokens": ["DagEngine", "function", "(", ")", "{", "return", "new", "DagEngine", "(", ")", ";", "}"], "nl_tokens": ["return", "a", "dag", "engine", "for", "a", "system", "user", "no", "user", ",", "no", "group", ".", "concode_field_sep", "PlaceHolder", "placeHolder", "concode_field_sep", "void", "init", "concode_elem_sep", "Class", "<", "?", "extends", "Service", ">", "getInterface", "concode_elem_sep", "void", "destroy", "concode_elem_sep", "DagEngine", "getDagEngine"]}
{"code": "void function ( long arg0 ) { this . testId = arg0 ; }", "nl": "sets the test id . concode_field_sep long testId concode_elem_sep long serialVersionUID concode_elem_sep long seqId concode_field_sep long getSeqId concode_elem_sep int hashCode concode_elem_sep void setSeqId concode_elem_sep boolean equals concode_elem_sep long getTestId", "code_tokens": ["void", "function", "(", "long", "arg0", ")", "{", "this", ".", "testId", "=", "arg0", ";", "}"], "nl_tokens": ["sets", "the", "test", "id", ".", "concode_field_sep", "long", "testId", "concode_elem_sep", "long", "serialVersionUID", "concode_elem_sep", "long", "seqId", "concode_field_sep", "long", "getSeqId", "concode_elem_sep", "int", "hashCode", "concode_elem_sep", "void", "setSeqId", "concode_elem_sep", "boolean", "equals", "concode_elem_sep", "long", "getTestId"]}
{"code": "void function ( SeekBar arg0 ) { int loc0 = arg0 . getProgress ( ) ; if ( loc0 < arg0 . getMax ( ) ) { arg0 . setProgress ( loc0 + 1 ) ; } else { arg0 . setProgress ( loc0 - 1 ) ; } arg0 . setProgress ( loc0 ) ; }", "nl": "puts the slider back in its original position , but makes it seem as if it has moved , allowing onprogresschanged to be called concode_field_sep PlaceHolder placeHolder concode_field_sep Bitmap StringToBitMap concode_elem_sep void erase concode_elem_sep Bitmap getMorph concode_elem_sep boolean isGood concode_elem_sep Bitmap rescaleImg concode_elem_sep Bitmap rescaleImg concode_elem_sep Intent shareImage concode_elem_sep Bitmap decodeSampledBitmapFromResource concode_elem_sep String BitMapToString concode_elem_sep Bitmap rescaleThumb concode_elem_sep Bitmap rescaleThumb concode_elem_sep boolean hasBackground concode_elem_sep TextView createMessage concode_elem_sep Intent getEmail concode_elem_sep Uri getImageUri concode_elem_sep void switchDims concode_elem_sep int calculateInSampleSize concode_elem_sep boolean hasForeground concode_elem_sep int[] getDims", "code_tokens": ["void", "function", "(", "SeekBar", "arg0", ")", "{", "int", "loc0", "=", "arg0", ".", "getProgress", "(", ")", ";", "if", "(", "loc0", "<", "arg0", ".", "getMax", "(", ")", ")", "{", "arg0", ".", "setProgress", "(", "loc0", "+", "1", ")", ";", "}", "else", "{", "arg0", ".", "setProgress", "(", "loc0", "-", "1", ")", ";", "}", "arg0", ".", "setProgress", "(", "loc0", ")", ";", "}"], "nl_tokens": ["puts", "the", "slider", "back", "in", "its", "original", "position", ",", "but", "makes", "it", "seem", "as", "if", "it", "has", "moved", ",", "allowing", "onprogresschanged", "to", "be", "called", "concode_field_sep", "PlaceHolder", "placeHolder", "concode_field_sep", "Bitmap", "StringToBitMap", "concode_elem_sep", "void", "erase", "concode_elem_sep", "Bitmap", "getMorph", "concode_elem_sep", "boolean", "isGood", "concode_elem_sep", "Bitmap", "rescaleImg", "concode_elem_sep", "Bitmap", "rescaleImg", "concode_elem_sep", "Intent", "shareImage", "concode_elem_sep", "Bitmap", "decodeSampledBitmapFromResource", "concode_elem_sep", "String", "BitMapToString", "concode_elem_sep", "Bitmap", "rescaleThumb", "concode_elem_sep", "Bitmap", "rescaleThumb", "concode_elem_sep", "boolean", "hasBackground", "concode_elem_sep", "TextView", "createMessage", "concode_elem_sep", "Intent", "getEmail", "concode_elem_sep", "Uri", "getImageUri", "concode_elem_sep", "void", "switchDims", "concode_elem_sep", "int", "calculateInSampleSize", "concode_elem_sep", "boolean", "hasForeground", "concode_elem_sep", "int", "[", "]", "getDims"]}
{"code": "View function ( ) { if ( mMenuItem != null ) { return HoneycombMenuItem . getActionView ( mMenuItem ) ; } return null ; }", "nl": "returns the currently set action view for this menu item . concode_field_sep android.view.MenuItem mMenuItem concode_field_sep boolean hasSubMenu concode_elem_sep CharSequence getTitleCondensed concode_elem_sep int getGroupId concode_elem_sep int getItemId concode_elem_sep CharSequence getTitle concode_elem_sep MenuItem setChecked concode_elem_sep char getAlphabeticShortcut concode_elem_sep MenuItem setOnMenuItemClickListener concode_elem_sep MenuItem setOnMenuItemClickListener concode_elem_sep Intent getIntent concode_elem_sep boolean isCheckable concode_elem_sep MenuItem setShortcut concode_elem_sep MenuItem setVisible concode_elem_sep void setShowAsAction concode_elem_sep void setShowAsAction concode_elem_sep SubMenu getSubMenu concode_elem_sep MenuItem setIntent concode_elem_sep MenuItem setCheckable concode_elem_sep MenuItem setAlphabeticShortcut concode_elem_sep MenuItem setTitle concode_elem_sep MenuItem setTitle concode_elem_sep MenuItem setNumericShortcut concode_elem_sep boolean isVisible concode_elem_sep boolean isChecked concode_elem_sep MenuItem setTitleCondensed concode_elem_sep Drawable getIcon concode_elem_sep MenuItem setIcon concode_elem_sep MenuItem setIcon concode_elem_sep MenuItem setEnabled concode_elem_sep int getOrder concode_elem_sep boolean isEnabled concode_elem_sep char getNumericShortcut concode_elem_sep void setActionView concode_elem_sep void setActionView concode_elem_sep MenuItem setActionView concode_elem_sep MenuItem setActionView concode_elem_sep ContextMenuInfo getMenuInfo", "code_tokens": ["View", "function", "(", ")", "{", "if", "(", "mMenuItem", "!=", "null", ")", "{", "return", "HoneycombMenuItem", ".", "getActionView", "(", "mMenuItem", ")", ";", "}", "return", "null", ";", "}"], "nl_tokens": ["returns", "the", "currently", "set", "action", "view", "for", "this", "menu", "item", ".", "concode_field_sep", "android", ".", "view", ".", "MenuItem", "mMenuItem", "concode_field_sep", "boolean", "hasSubMenu", "concode_elem_sep", "CharSequence", "getTitleCondensed", "concode_elem_sep", "int", "getGroupId", "concode_elem_sep", "int", "getItemId", "concode_elem_sep", "CharSequence", "getTitle", "concode_elem_sep", "MenuItem", "setChecked", "concode_elem_sep", "char", "getAlphabeticShortcut", "concode_elem_sep", "MenuItem", "setOnMenuItemClickListener", "concode_elem_sep", "MenuItem", "setOnMenuItemClickListener", "concode_elem_sep", "Intent", "getIntent", "concode_elem_sep", "boolean", "isCheckable", "concode_elem_sep", "MenuItem", "setShortcut", "concode_elem_sep", "MenuItem", "setVisible", "concode_elem_sep", "void", "setShowAsAction", "concode_elem_sep", "void", "setShowAsAction", "concode_elem_sep", "SubMenu", "getSubMenu", "concode_elem_sep", "MenuItem", "setIntent", "concode_elem_sep", "MenuItem", "setCheckable", "concode_elem_sep", "MenuItem", "setAlphabeticShortcut", "concode_elem_sep", "MenuItem", "setTitle", "concode_elem_sep", "MenuItem", "setTitle", "concode_elem_sep", "MenuItem", "setNumericShortcut", "concode_elem_sep", "boolean", "isVisible", "concode_elem_sep", "boolean", "isChecked", "concode_elem_sep", "MenuItem", "setTitleCondensed", "concode_elem_sep", "Drawable", "getIcon", "concode_elem_sep", "MenuItem", "setIcon", "concode_elem_sep", "MenuItem", "setIcon", "concode_elem_sep", "MenuItem", "setEnabled", "concode_elem_sep", "int", "getOrder", "concode_elem_sep", "boolean", "isEnabled", "concode_elem_sep", "char", "getNumericShortcut", "concode_elem_sep", "void", "setActionView", "concode_elem_sep", "void", "setActionView", "concode_elem_sep", "MenuItem", "setActionView", "concode_elem_sep", "MenuItem", "setActionView", "concode_elem_sep", "ContextMenuInfo", "getMenuInfo"]}
{"code": "int function ( int arg0 ) { if ( arg0 < 253 ) return 1 ; else if ( arg0 < 65536 ) return 3 ; return 5 ; }", "nl": "gets the minimum encoded size of the given value . concode_field_sep int originallyEncodedSize concode_elem_sep long value concode_field_sep byte[] encode concode_elem_sep int getSizeInBytes concode_elem_sep int getOriginalSizeInBytes", "code_tokens": ["int", "function", "(", "int", "arg0", ")", "{", "if", "(", "arg0", "<", "253", ")", "return", "1", ";", "else", "if", "(", "arg0", "<", "65536", ")", "return", "3", ";", "return", "5", ";", "}"], "nl_tokens": ["gets", "the", "minimum", "encoded", "size", "of", "the", "given", "value", ".", "concode_field_sep", "int", "originallyEncodedSize", "concode_elem_sep", "long", "value", "concode_field_sep", "byte", "[", "]", "encode", "concode_elem_sep", "int", "getSizeInBytes", "concode_elem_sep", "int", "getOriginalSizeInBytes"]}
{"code": "boolean function ( ) { return mCheckpointRead && ( mCheckpointOpenedTime == mCheckpointLastModifiedTime ) ; }", "nl": "checks to see if the journal checkpoint has not been updated . if it has been updated since the creation of this reader , this reader is no longer valid . concode_field_sep String mCheckpointPath concode_elem_sep boolean mCheckpointRead concode_elem_sep long mCurrentLogNumber concode_elem_sep long mCheckpointOpenedTime concode_elem_sep Journal mJournal concode_elem_sep UnderFileSystem mUfs concode_elem_sep long mCheckpointLastModifiedTime concode_elem_sep Logger LOG concode_field_sep JournalInputStream getNextInputStream concode_elem_sep JournalInputStream getCheckpointInputStream concode_elem_sep long getCheckpointLastModifiedTimeMs", "code_tokens": ["boolean", "function", "(", ")", "{", "return", "mCheckpointRead", "&", "&", "(", "mCheckpointOpenedTime", "==", "mCheckpointLastModifiedTime", ")", ";", "}"], "nl_tokens": ["checks", "to", "see", "if", "the", "journal", "checkpoint", "has", "not", "been", "updated", ".", "if", "it", "has", "been", "updated", "since", "the", "creation", "of", "this", "reader", ",", "this", "reader", "is", "no", "longer", "valid", ".", "concode_field_sep", "String", "mCheckpointPath", "concode_elem_sep", "boolean", "mCheckpointRead", "concode_elem_sep", "long", "mCurrentLogNumber", "concode_elem_sep", "long", "mCheckpointOpenedTime", "concode_elem_sep", "Journal", "mJournal", "concode_elem_sep", "UnderFileSystem", "mUfs", "concode_elem_sep", "long", "mCheckpointLastModifiedTime", "concode_elem_sep", "Logger", "LOG", "concode_field_sep", "JournalInputStream", "getNextInputStream", "concode_elem_sep", "JournalInputStream", "getCheckpointInputStream", "concode_elem_sep", "long", "getCheckpointLastModifiedTimeMs"]}
{"code": "void function ( ) { String loc0 = \"srini_string\" ; when ( mHttpConMock . getOutputStream ( ) ) . thenThrow ( new IOException ( loc0 ) ) ; mThrown . expect ( IOException . class ) ; mThrown . expectMessage ( loc0 ) ; new SwiftOutputStream ( mHttpConMock ) . close ( ) ; }", "nl": "tests to ensure ioexception is thrown if httpurlconnection #getoutputstream throws anioexception . concode_field_sep OutputStream mOutputStreamMock concode_elem_sep HttpURLConnection mHttpConMock concode_elem_sep ExpectedException mThrown concode_field_sep void testCloseError concode_elem_sep void testCloseSuccess concode_elem_sep void before concode_elem_sep void testFlush concode_elem_sep void testWrite3 concode_elem_sep void testWrite1 concode_elem_sep void testWrite2", "code_tokens": ["void", "function", "(", ")", "{", "String", "loc0", "=", "\"srini_string\"", ";", "when", "(", "mHttpConMock", ".", "getOutputStream", "(", ")", ")", ".", "thenThrow", "(", "new", "IOException", "(", "loc0", ")", ")", ";", "mThrown", ".", "expect", "(", "IOException", ".", "class", ")", ";", "mThrown", ".", "expectMessage", "(", "loc0", ")", ";", "new", "SwiftOutputStream", "(", "mHttpConMock", ")", ".", "close", "(", ")", ";", "}"], "nl_tokens": ["tests", "to", "ensure", "ioexception", "is", "thrown", "if", "httpurlconnection", "#getoutputstream throws anioexception . concode_field_sep OutputStream mOutputStreamMock concode_elem_sep HttpURLConnection mHttpConMock concode_elem_sep ExpectedException mThrown concode_field_sep void testCloseError concode_elem_sep void testCloseSuccess concode_elem_sep void before concode_elem_sep void testFlush concode_elem_sep void testWrite3 concode_elem_sep void testWrite1 concode_elem_sep void testWrite2"]}
{"code": "String function ( String [ ] arg0 , Object [ ] [ ] arg1 ) { return of ( arg0 , arg1 , Borders . FULL ) ; }", "nl": "create a new table with the specified headers and row data . concode_field_sep int emptyWidth concode_elem_sep String[] headers concode_elem_sep String EMPTY concode_elem_sep Object[][] data concode_elem_sep Borders borders concode_elem_sep int columns concode_elem_sep int[] columnWidths concode_elem_sep int bitmask concode_field_sep String pad concode_elem_sep boolean isset concode_elem_sep boolean columns concode_elem_sep void printDivider concode_elem_sep boolean header concode_elem_sep String toString concode_elem_sep void printData concode_elem_sep boolean body concode_elem_sep boolean rows", "code_tokens": ["String", "function", "(", "String", "[", "]", "arg0", ",", "Object", "[", "]", "[", "]", "arg1", ")", "{", "return", "of", "(", "arg0", ",", "arg1", ",", "Borders", ".", "FULL", ")", ";", "}"], "nl_tokens": ["create", "a", "new", "table", "with", "the", "specified", "headers", "and", "row", "data", ".", "concode_field_sep", "int", "emptyWidth", "concode_elem_sep", "String", "[", "]", "headers", "concode_elem_sep", "String", "EMPTY", "concode_elem_sep", "Object", "[", "]", "[", "]", "data", "concode_elem_sep", "Borders", "borders", "concode_elem_sep", "int", "columns", "concode_elem_sep", "int", "[", "]", "columnWidths", "concode_elem_sep", "int", "bitmask", "concode_field_sep", "String", "pad", "concode_elem_sep", "boolean", "isset", "concode_elem_sep", "boolean", "columns", "concode_elem_sep", "void", "printDivider", "concode_elem_sep", "boolean", "header", "concode_elem_sep", "String", "toString", "concode_elem_sep", "void", "printData", "concode_elem_sep", "boolean", "body", "concode_elem_sep", "boolean", "rows"]}
{"code": "ThreadFactoryBuilder function ( ThreadFactory arg0 ) { this . backingThreadFactory = checkNotNull ( arg0 ) ; return this ; }", "nl": "sets the backing threadfactory for new threads created with this threadfactory . threadswill be created by invoking #newthread runnable on this backing threadfactory . concode_field_sep Boolean daemon concode_elem_sep UncaughtExceptionHandler uncaughtExceptionHandler concode_elem_sep Integer priority concode_elem_sep String nameFormat concode_elem_sep ThreadFactory backingThreadFactory concode_field_sep ThreadFactoryBuilder setDaemon concode_elem_sep ThreadFactoryBuilder setUncaughtExceptionHandler concode_elem_sep ThreadFactory build concode_elem_sep ThreadFactory build concode_elem_sep ThreadFactoryBuilder setNameFormat concode_elem_sep String format concode_elem_sep ThreadFactoryBuilder setPriority", "code_tokens": ["ThreadFactoryBuilder", "function", "(", "ThreadFactory", "arg0", ")", "{", "this", ".", "backingThreadFactory", "=", "checkNotNull", "(", "arg0", ")", ";", "return", "this", ";", "}"], "nl_tokens": ["sets", "the", "backing", "threadfactory", "for", "new", "threads", "created", "with", "this", "threadfactory", ".", "threadswill", "be", "created", "by", "invoking", "#newthread runnable on this backing threadfactory . concode_field_sep Boolean daemon concode_elem_sep UncaughtExceptionHandler uncaughtExceptionHandler concode_elem_sep Integer priority concode_elem_sep String nameFormat concode_elem_sep ThreadFactory backingThreadFactory concode_field_sep ThreadFactoryBuilder setDaemon concode_elem_sep ThreadFactoryBuilder setUncaughtExceptionHandler concode_elem_sep ThreadFactory build concode_elem_sep ThreadFactory build concode_elem_sep ThreadFactoryBuilder setNameFormat concode_elem_sep String format concode_elem_sep ThreadFactoryBuilder setPriority"]}
{"code": "boolean function ( CSSName arg0 ) { return cascadedProperties . get ( arg0 ) != null ; }", "nl": "returns true if property has been defined in this style . concode_field_sep Map cascadedProperties concode_elem_sep String fingerprint concode_elem_sep CascadedStyle emptyCascadedStyle concode_field_sep PropertyDeclaration createLayoutPropertyDeclaration concode_elem_sep java.util.Iterator getCascadedPropertyDeclarations concode_elem_sep PropertyDeclaration propertyByName concode_elem_sep CascadedStyle createLayoutStyle concode_elem_sep CascadedStyle createLayoutStyle concode_elem_sep CascadedStyle createLayoutStyle concode_elem_sep int countAssigned concode_elem_sep void addProperties concode_elem_sep CascadedStyle createAnonymousStyle concode_elem_sep String getFingerprint concode_elem_sep IdentValue getIdent", "code_tokens": ["boolean", "function", "(", "CSSName", "arg0", ")", "{", "return", "cascadedProperties", ".", "get", "(", "arg0", ")", "!=", "null", ";", "}"], "nl_tokens": ["returns", "true", "if", "property", "has", "been", "defined", "in", "this", "style", ".", "concode_field_sep", "Map", "cascadedProperties", "concode_elem_sep", "String", "fingerprint", "concode_elem_sep", "CascadedStyle", "emptyCascadedStyle", "concode_field_sep", "PropertyDeclaration", "createLayoutPropertyDeclaration", "concode_elem_sep", "java", ".", "util", ".", "Iterator", "getCascadedPropertyDeclarations", "concode_elem_sep", "PropertyDeclaration", "propertyByName", "concode_elem_sep", "CascadedStyle", "createLayoutStyle", "concode_elem_sep", "CascadedStyle", "createLayoutStyle", "concode_elem_sep", "CascadedStyle", "createLayoutStyle", "concode_elem_sep", "int", "countAssigned", "concode_elem_sep", "void", "addProperties", "concode_elem_sep", "CascadedStyle", "createAnonymousStyle", "concode_elem_sep", "String", "getFingerprint", "concode_elem_sep", "IdentValue", "getIdent"]}
{"code": "void function ( Bus arg0 ) { if ( bus != null ) { bus = arg0 ; } }", "nl": "sets the bus concode_field_sep List<String> produceMediaTypes concode_elem_sep Bus bus concode_elem_sep List<String> consumeMediaTypes concode_elem_sep boolean enableStreaming concode_elem_sep ResourceBundle BUNDLE concode_elem_sep boolean enableBuffering concode_elem_sep Logger LOG concode_field_sep void init concode_elem_sep Bus getBus concode_elem_sep void setConsumeMediaTypes concode_elem_sep void setEnableBuffering concode_elem_sep boolean getEnableStreaming concode_elem_sep List<String> getProduceMediaTypes concode_elem_sep void setEnableStreaming concode_elem_sep void setProduceMediaTypes concode_elem_sep List<String> getConsumeMediaTypes concode_elem_sep boolean getEnableBuffering concode_elem_sep boolean isPayloadEmpty concode_elem_sep boolean isPayloadEmpty concode_elem_sep void reportEmptyContentLength", "code_tokens": ["void", "function", "(", "Bus", "arg0", ")", "{", "if", "(", "bus", "!=", "null", ")", "{", "bus", "=", "arg0", ";", "}", "}"], "nl_tokens": ["sets", "the", "bus", "concode_field_sep", "List", "<", "String", ">", "produceMediaTypes", "concode_elem_sep", "Bus", "bus", "concode_elem_sep", "List", "<", "String", ">", "consumeMediaTypes", "concode_elem_sep", "boolean", "enableStreaming", "concode_elem_sep", "ResourceBundle", "BUNDLE", "concode_elem_sep", "boolean", "enableBuffering", "concode_elem_sep", "Logger", "LOG", "concode_field_sep", "void", "init", "concode_elem_sep", "Bus", "getBus", "concode_elem_sep", "void", "setConsumeMediaTypes", "concode_elem_sep", "void", "setEnableBuffering", "concode_elem_sep", "boolean", "getEnableStreaming", "concode_elem_sep", "List", "<", "String", ">", "getProduceMediaTypes", "concode_elem_sep", "void", "setEnableStreaming", "concode_elem_sep", "void", "setProduceMediaTypes", "concode_elem_sep", "List", "<", "String", ">", "getConsumeMediaTypes", "concode_elem_sep", "boolean", "getEnableBuffering", "concode_elem_sep", "boolean", "isPayloadEmpty", "concode_elem_sep", "boolean", "isPayloadEmpty", "concode_elem_sep", "void", "reportEmptyContentLength"]}
{"code": "void function ( ) { mBuffer = BufferUtils . getIncreasingByteBuffer ( LENGTH ) ; }", "nl": "sets up a new bytebuffer before a test runs . concode_field_sep ByteBuffer mBuffer concode_elem_sep int LENGTH concode_field_sep void nettyOutput concode_elem_sep void length concode_elem_sep void readOnlyByteBuffer", "code_tokens": ["void", "function", "(", ")", "{", "mBuffer", "=", "BufferUtils", ".", "getIncreasingByteBuffer", "(", "LENGTH", ")", ";", "}"], "nl_tokens": ["sets", "up", "a", "new", "bytebuffer", "before", "a", "test", "runs", ".", "concode_field_sep", "ByteBuffer", "mBuffer", "concode_elem_sep", "int", "LENGTH", "concode_field_sep", "void", "nettyOutput", "concode_elem_sep", "void", "length", "concode_elem_sep", "void", "readOnlyByteBuffer"]}
{"code": "void function ( BundleContext arg0 ) { for ( AutoSIMConnectionConfig loc0 : config . connections ) { environments . deregisterConnectionFactory ( loc0 . name ) ; factories . remove ( loc0 . name ) ; } }", "nl": "implements bundleactivator.stop . does nothing since the framework will automatically unregister any registered services . concode_field_sep IEnvironments environments concode_elem_sep HashMap<String,RestConnectionFactory> factories concode_elem_sep AutoSIMRestConfig config concode_field_sep void start", "code_tokens": ["void", "function", "(", "BundleContext", "arg0", ")", "{", "for", "(", "AutoSIMConnectionConfig", "loc0", ":", "config", ".", "connections", ")", "{", "environments", ".", "deregisterConnectionFactory", "(", "loc0", ".", "name", ")", ";", "factories", ".", "remove", "(", "loc0", ".", "name", ")", ";", "}", "}"], "nl_tokens": ["implements", "bundleactivator", ".", "stop", ".", "does", "nothing", "since", "the", "framework", "will", "automatically", "unregister", "any", "registered", "services", ".", "concode_field_sep", "IEnvironments", "environments", "concode_elem_sep", "HashMap", "<", "String", ",", "RestConnectionFactory", ">", "factories", "concode_elem_sep", "AutoSIMRestConfig", "config", "concode_field_sep", "void", "start"]}
{"code": "boolean function ( ) { System . out . println ( count + \"srini_string\" + limit ) ; return count >= limit ; }", "nl": "returns true if inventory is full . concode_field_sep int limit concode_elem_sep int count concode_elem_sep Map<Item,Integer> invMap concode_field_sep void addItem concode_elem_sep void printInventory concode_elem_sep ItemStack[] getItemStacks concode_elem_sep void dumpAll", "code_tokens": ["boolean", "function", "(", ")", "{", "System", ".", "out", ".", "println", "(", "count", "+", "\"srini_string\"", "+", "limit", ")", ";", "return", "count", ">=", "limit", ";", "}"], "nl_tokens": ["returns", "true", "if", "inventory", "is", "full", ".", "concode_field_sep", "int", "limit", "concode_elem_sep", "int", "count", "concode_elem_sep", "Map", "<", "Item", ",", "Integer", ">", "invMap", "concode_field_sep", "void", "addItem", "concode_elem_sep", "void", "printInventory", "concode_elem_sep", "ItemStack", "[", "]", "getItemStacks", "concode_elem_sep", "void", "dumpAll"]}
{"code": "boolean function ( String arg0 ) { if ( arg0 . length ( ) == 0 || ! Character . isJavaIdentifierStart ( arg0 . charAt ( 0 ) ) ) { return false ; } for ( int loc0 = 1 ; loc0 < arg0 . length ( ) ; loc0 ++ ) { if ( ! Character . isJavaIdentifierPart ( arg0 . charAt ( loc0 ) ) ) { return false ; } } return true ; }", "nl": "returns true if s is a legal java identifier . more info . concode_field_sep Logger logger concode_elem_sep Pattern KVP_PATTERN concode_elem_sep Pattern INT_PATTERN concode_elem_sep String[] EMPTY_STRING_ARRAY concode_field_sep String getQueryStringValue concode_elem_sep boolean isEmpty concode_elem_sep boolean isBlank concode_elem_sep boolean isContains concode_elem_sep boolean isContains concode_elem_sep String translat concode_elem_sep Map<String,String> parseQueryString concode_elem_sep boolean isInteger concode_elem_sep String getServiceKey concode_elem_sep String[] split concode_elem_sep boolean isNumeric concode_elem_sep Map<String,String> parseKeyValuePair concode_elem_sep boolean isNotEmpty concode_elem_sep String toString concode_elem_sep String toString concode_elem_sep String toQueryString concode_elem_sep String join concode_elem_sep String join concode_elem_sep String join concode_elem_sep String join concode_elem_sep boolean isEquals concode_elem_sep int parseInteger concode_elem_sep String camelToSplitName concode_elem_sep String toArgumentString", "code_tokens": ["boolean", "function", "(", "String", "arg0", ")", "{", "if", "(", "arg0", ".", "length", "(", ")", "==", "0", "|", "|", "!", "Character", ".", "isJavaIdentifierStart", "(", "arg0", ".", "charAt", "(", "0", ")", ")", ")", "{", "return", "false", ";", "}", "for", "(", "int", "loc0", "=", "1", ";", "loc0", "<", "arg0", ".", "length", "(", ")", ";", "loc0", "+", "+", ")", "{", "if", "(", "!", "Character", ".", "isJavaIdentifierPart", "(", "arg0", ".", "charAt", "(", "loc0", ")", ")", ")", "{", "return", "false", ";", "}", "}", "return", "true", ";", "}"], "nl_tokens": ["returns", "true", "if", "s", "is", "a", "legal", "java", "identifier", ".", "more", "info", ".", "concode_field_sep", "Logger", "logger", "concode_elem_sep", "Pattern", "KVP_PATTERN", "concode_elem_sep", "Pattern", "INT_PATTERN", "concode_elem_sep", "String", "[", "]", "EMPTY_STRING_ARRAY", "concode_field_sep", "String", "getQueryStringValue", "concode_elem_sep", "boolean", "isEmpty", "concode_elem_sep", "boolean", "isBlank", "concode_elem_sep", "boolean", "isContains", "concode_elem_sep", "boolean", "isContains", "concode_elem_sep", "String", "translat", "concode_elem_sep", "Map", "<", "String", ",", "String", ">", "parseQueryString", "concode_elem_sep", "boolean", "isInteger", "concode_elem_sep", "String", "getServiceKey", "concode_elem_sep", "String", "[", "]", "split", "concode_elem_sep", "boolean", "isNumeric", "concode_elem_sep", "Map", "<", "String", ",", "String", ">", "parseKeyValuePair", "concode_elem_sep", "boolean", "isNotEmpty", "concode_elem_sep", "String", "toString", "concode_elem_sep", "String", "toString", "concode_elem_sep", "String", "toQueryString", "concode_elem_sep", "String", "join", "concode_elem_sep", "String", "join", "concode_elem_sep", "String", "join", "concode_elem_sep", "String", "join", "concode_elem_sep", "boolean", "isEquals", "concode_elem_sep", "int", "parseInteger", "concode_elem_sep", "String", "camelToSplitName", "concode_elem_sep", "String", "toArgumentString"]}
{"code": "void function ( ) { RPCBlockReadResponse loc0 = new RPCBlockReadResponse ( BLOCK_ID , OFFSET , LENGTH , null , STATUS ) ; loc0 . encode ( mBuffer ) ; RPCBlockReadResponse loc1 = RPCBlockReadResponse . decode ( mBuffer ) ; assertValid ( BLOCK_ID , OFFSET , LENGTH , STATUS , loc0 ) ; assertValid ( BLOCK_ID , OFFSET , LENGTH , STATUS , loc1 ) ; }", "nl": "tests the rpcblockreadresponse #encode bytebuf and rpcblockreadresponse #decode bytebuf methods . concode_field_sep long SESSION_ID concode_elem_sep ByteBuf mBuffer concode_elem_sep long BLOCK_ID concode_elem_sep long LOCK_ID concode_elem_sep ExpectedException mThrown concode_elem_sep long LENGTH concode_elem_sep RPCResponse.Status STATUS concode_elem_sep long OFFSET concode_field_sep void encodedLength concode_elem_sep void before concode_elem_sep void getPayloadDataBuffer concode_elem_sep void assertValid concode_elem_sep void assertValid concode_elem_sep void createErrorResponse concode_elem_sep void validate", "code_tokens": ["void", "function", "(", ")", "{", "RPCBlockReadResponse", "loc0", "=", "new", "RPCBlockReadResponse", "(", "BLOCK_ID", ",", "OFFSET", ",", "LENGTH", ",", "null", ",", "STATUS", ")", ";", "loc0", ".", "encode", "(", "mBuffer", ")", ";", "RPCBlockReadResponse", "loc1", "=", "RPCBlockReadResponse", ".", "decode", "(", "mBuffer", ")", ";", "assertValid", "(", "BLOCK_ID", ",", "OFFSET", ",", "LENGTH", ",", "STATUS", ",", "loc0", ")", ";", "assertValid", "(", "BLOCK_ID", ",", "OFFSET", ",", "LENGTH", ",", "STATUS", ",", "loc1", ")", ";", "}"], "nl_tokens": ["tests", "the", "rpcblockreadresponse", "#encode bytebuf and rpcblockreadresponse #decode bytebuf methods . concode_field_sep long SESSION_ID concode_elem_sep ByteBuf mBuffer concode_elem_sep long BLOCK_ID concode_elem_sep long LOCK_ID concode_elem_sep ExpectedException mThrown concode_elem_sep long LENGTH concode_elem_sep RPCResponse.Status STATUS concode_elem_sep long OFFSET concode_field_sep void encodedLength concode_elem_sep void before concode_elem_sep void getPayloadDataBuffer concode_elem_sep void assertValid concode_elem_sep void assertValid concode_elem_sep void createErrorResponse concode_elem_sep void validate"]}
{"code": "int function ( ) { return elements . size ( ) ; }", "nl": "get the support of the itemset represented by this utility-list concode_field_sep Integer item concode_elem_sep long sumRutils concode_elem_sep long sumIutils concode_elem_sep List<Element> elements concode_field_sep void addElement", "code_tokens": ["int", "function", "(", ")", "{", "return", "elements", ".", "size", "(", ")", ";", "}"], "nl_tokens": ["get", "the", "support", "of", "the", "itemset", "represented", "by", "this", "utility", "-", "list", "concode_field_sep", "Integer", "item", "concode_elem_sep", "long", "sumRutils", "concode_elem_sep", "long", "sumIutils", "concode_elem_sep", "List", "<", "Element", ">", "elements", "concode_field_sep", "void", "addElement"]}
{"code": "String function ( ) { return _uriResolver . getBaseUri ( ) ; }", "nl": "returns the current baseurl for this class . concode_field_sep ImageResourceLoader _imageResourceLoader concode_elem_sep UriResolver _uriResolver concode_field_sep boolean isVisited concode_elem_sep void onLayoutException concode_elem_sep void onRenderException concode_elem_sep void shrinkImageCache concode_elem_sep ImageResource getImageResource concode_elem_sep String resolveURI concode_elem_sep void setImageResourceLoader concode_elem_sep byte[] getBinaryResource concode_elem_sep void documentStarted concode_elem_sep CSSResource getCSSResource concode_elem_sep void clearImageCache concode_elem_sep XMLResource getXMLResource concode_elem_sep void setBaseURL concode_elem_sep InputStream resolveAndOpenStream concode_elem_sep void setRepaintListener concode_elem_sep void documentLoaded", "code_tokens": ["String", "function", "(", ")", "{", "return", "_uriResolver", ".", "getBaseUri", "(", ")", ";", "}"], "nl_tokens": ["returns", "the", "current", "baseurl", "for", "this", "class", ".", "concode_field_sep", "ImageResourceLoader", "_imageResourceLoader", "concode_elem_sep", "UriResolver", "_uriResolver", "concode_field_sep", "boolean", "isVisited", "concode_elem_sep", "void", "onLayoutException", "concode_elem_sep", "void", "onRenderException", "concode_elem_sep", "void", "shrinkImageCache", "concode_elem_sep", "ImageResource", "getImageResource", "concode_elem_sep", "String", "resolveURI", "concode_elem_sep", "void", "setImageResourceLoader", "concode_elem_sep", "byte", "[", "]", "getBinaryResource", "concode_elem_sep", "void", "documentStarted", "concode_elem_sep", "CSSResource", "getCSSResource", "concode_elem_sep", "void", "clearImageCache", "concode_elem_sep", "XMLResource", "getXMLResource", "concode_elem_sep", "void", "setBaseURL", "concode_elem_sep", "InputStream", "resolveAndOpenStream", "concode_elem_sep", "void", "setRepaintListener", "concode_elem_sep", "void", "documentLoaded"]}
{"code": "Abstraction function ( ) { return this . abstraction ; }", "nl": "gets the abstraction with which the sink has been reached concode_field_sep Abstraction abstraction concode_elem_sep Value sinkValue concode_elem_sep Stmt sinkStmt concode_field_sep Stmt getSinkStmt concode_elem_sep int hashCode concode_elem_sep boolean equals concode_elem_sep Value getSinkValue", "code_tokens": ["Abstraction", "function", "(", ")", "{", "return", "this", ".", "abstraction", ";", "}"], "nl_tokens": ["gets", "the", "abstraction", "with", "which", "the", "sink", "has", "been", "reached", "concode_field_sep", "Abstraction", "abstraction", "concode_elem_sep", "Value", "sinkValue", "concode_elem_sep", "Stmt", "sinkStmt", "concode_field_sep", "Stmt", "getSinkStmt", "concode_elem_sep", "int", "hashCode", "concode_elem_sep", "boolean", "equals", "concode_elem_sep", "Value", "getSinkValue"]}
{"code": "void function ( ) { links . clear ( ) ; }", "nl": "clears all connections but keeps location position informations . concode_field_sep Hashtable<String,Point2D> locationPositions concode_elem_sep LabeledGraph<String,Double> links concode_field_sep Double getDistance concode_elem_sep void clear concode_elem_sep String randomlyGenerateDestination concode_elem_sep void setPosition concode_elem_sep void addBidirectionalLink concode_elem_sep void removeUnidirectionalLink concode_elem_sep Point2D getPosition concode_elem_sep void removeBidirectionalLink concode_elem_sep boolean isLocation concode_elem_sep List<String> getLocations concode_elem_sep void addUnidirectionalLink concode_elem_sep List<String> getLocationsLinkedTo concode_elem_sep void setDistAndDirToRefLocation", "code_tokens": ["void", "function", "(", ")", "{", "links", ".", "clear", "(", ")", ";", "}"], "nl_tokens": ["clears", "all", "connections", "but", "keeps", "location", "position", "informations", ".", "concode_field_sep", "Hashtable", "<", "String", ",", "Point2D", ">", "locationPositions", "concode_elem_sep", "LabeledGraph", "<", "String", ",", "Double", ">", "links", "concode_field_sep", "Double", "getDistance", "concode_elem_sep", "void", "clear", "concode_elem_sep", "String", "randomlyGenerateDestination", "concode_elem_sep", "void", "setPosition", "concode_elem_sep", "void", "addBidirectionalLink", "concode_elem_sep", "void", "removeUnidirectionalLink", "concode_elem_sep", "Point2D", "getPosition", "concode_elem_sep", "void", "removeBidirectionalLink", "concode_elem_sep", "boolean", "isLocation", "concode_elem_sep", "List", "<", "String", ">", "getLocations", "concode_elem_sep", "void", "addUnidirectionalLink", "concode_elem_sep", "List", "<", "String", ">", "getLocationsLinkedTo", "concode_elem_sep", "void", "setDistAndDirToRefLocation"]}
{"code": "void function ( TerminalDevice arg0 ) { repository . save ( arg0 ) ; }", "nl": "add a terminal concode_field_sep TerminalDeviceRepository repository concode_field_sep TerminalDevice getStatus concode_elem_sep void removeDevice concode_elem_sep Set<Schedule> getSchedule concode_elem_sep void setStatus", "code_tokens": ["void", "function", "(", "TerminalDevice", "arg0", ")", "{", "repository", ".", "save", "(", "arg0", ")", ";", "}"], "nl_tokens": ["add", "a", "terminal", "concode_field_sep", "TerminalDeviceRepository", "repository", "concode_field_sep", "TerminalDevice", "getStatus", "concode_elem_sep", "void", "removeDevice", "concode_elem_sep", "Set", "<", "Schedule", ">", "getSchedule", "concode_elem_sep", "void", "setStatus"]}
{"code": "void function ( Lock arg0 , long arg1 ) { arg0 . unlock ( ) ; releaseBlockLockIfUnused ( arg1 ) ; }", "nl": "unlocks the given lock and releases the block lock for the given block id if the lock no longer in use . concode_field_sep Map<Long,LockRecord> mLockIdToRecordMap concode_elem_sep Map<Long,Set<Long>> mSessionIdToLockIdsMap concode_elem_sep Object mSharedMapsLock concode_elem_sep AtomicLong LOCK_ID_GEN concode_elem_sep long mSessionId concode_elem_sep long mBlockId concode_elem_sep ResourcePool<ClientRWLock> mLockPool concode_elem_sep Lock mLock concode_elem_sep Logger LOG concode_elem_sep Map<Long,ClientRWLock> mLocks concode_field_sep void unlockBlock concode_elem_sep void unlockBlock concode_elem_sep ClientRWLock createNewResource concode_elem_sep Lock getLock concode_elem_sep ClientRWLock getBlockLock concode_elem_sep void validateLock concode_elem_sep long getBlockId concode_elem_sep long lockBlock concode_elem_sep void cleanupSession concode_elem_sep Set<Long> getLockedBlocks concode_elem_sep long getSessionId concode_elem_sep void close concode_elem_sep void releaseBlockLockIfUnused concode_elem_sep void validate", "code_tokens": ["void", "function", "(", "Lock", "arg0", ",", "long", "arg1", ")", "{", "arg0", ".", "unlock", "(", ")", ";", "releaseBlockLockIfUnused", "(", "arg1", ")", ";", "}"], "nl_tokens": ["unlocks", "the", "given", "lock", "and", "releases", "the", "block", "lock", "for", "the", "given", "block", "id", "if", "the", "lock", "no", "longer", "in", "use", ".", "concode_field_sep", "Map", "<", "Long", ",", "LockRecord", ">", "mLockIdToRecordMap", "concode_elem_sep", "Map", "<", "Long", ",", "Set", "<", "Long", ">>", "mSessionIdToLockIdsMap", "concode_elem_sep", "Object", "mSharedMapsLock", "concode_elem_sep", "AtomicLong", "LOCK_ID_GEN", "concode_elem_sep", "long", "mSessionId", "concode_elem_sep", "long", "mBlockId", "concode_elem_sep", "ResourcePool", "<", "ClientRWLock", ">", "mLockPool", "concode_elem_sep", "Lock", "mLock", "concode_elem_sep", "Logger", "LOG", "concode_elem_sep", "Map", "<", "Long", ",", "ClientRWLock", ">", "mLocks", "concode_field_sep", "void", "unlockBlock", "concode_elem_sep", "void", "unlockBlock", "concode_elem_sep", "ClientRWLock", "createNewResource", "concode_elem_sep", "Lock", "getLock", "concode_elem_sep", "ClientRWLock", "getBlockLock", "concode_elem_sep", "void", "validateLock", "concode_elem_sep", "long", "getBlockId", "concode_elem_sep", "long", "lockBlock", "concode_elem_sep", "void", "cleanupSession", "concode_elem_sep", "Set", "<", "Long", ">", "getLockedBlocks", "concode_elem_sep", "long", "getSessionId", "concode_elem_sep", "void", "close", "concode_elem_sep", "void", "releaseBlockLockIfUnused", "concode_elem_sep", "void", "validate"]}
{"code": "String function ( String arg0 ) { return _uriResolver . resolve ( arg0 ) ; }", "nl": "resolves the uri ; if absolute , leaves as is , if relative , returns an absolute uri based on the baseurl for the agent . concode_field_sep ImageResourceLoader _imageResourceLoader concode_elem_sep UriResolver _uriResolver concode_field_sep boolean isVisited concode_elem_sep void onLayoutException concode_elem_sep void onRenderException concode_elem_sep void shrinkImageCache concode_elem_sep ImageResource getImageResource concode_elem_sep void setImageResourceLoader concode_elem_sep byte[] getBinaryResource concode_elem_sep void documentStarted concode_elem_sep String getBaseURL concode_elem_sep CSSResource getCSSResource concode_elem_sep void clearImageCache concode_elem_sep XMLResource getXMLResource concode_elem_sep void setBaseURL concode_elem_sep InputStream resolveAndOpenStream concode_elem_sep void setRepaintListener concode_elem_sep void documentLoaded", "code_tokens": ["String", "function", "(", "String", "arg0", ")", "{", "return", "_uriResolver", ".", "resolve", "(", "arg0", ")", ";", "}"], "nl_tokens": ["resolves", "the", "uri", ";", "if", "absolute", ",", "leaves", "as", "is", ",", "if", "relative", ",", "returns", "an", "absolute", "uri", "based", "on", "the", "baseurl", "for", "the", "agent", ".", "concode_field_sep", "ImageResourceLoader", "_imageResourceLoader", "concode_elem_sep", "UriResolver", "_uriResolver", "concode_field_sep", "boolean", "isVisited", "concode_elem_sep", "void", "onLayoutException", "concode_elem_sep", "void", "onRenderException", "concode_elem_sep", "void", "shrinkImageCache", "concode_elem_sep", "ImageResource", "getImageResource", "concode_elem_sep", "void", "setImageResourceLoader", "concode_elem_sep", "byte", "[", "]", "getBinaryResource", "concode_elem_sep", "void", "documentStarted", "concode_elem_sep", "String", "getBaseURL", "concode_elem_sep", "CSSResource", "getCSSResource", "concode_elem_sep", "void", "clearImageCache", "concode_elem_sep", "XMLResource", "getXMLResource", "concode_elem_sep", "void", "setBaseURL", "concode_elem_sep", "InputStream", "resolveAndOpenStream", "concode_elem_sep", "void", "setRepaintListener", "concode_elem_sep", "void", "documentLoaded"]}
{"code": "void function ( ) { mWriteLock . lock ( ) ; Assert . assertFalse ( mWriteLock . tryLock ( ) ) ; }", "nl": "tests the clientrwlock #trylock method . concode_field_sep ClientRWLock mClientRWLock concode_elem_sep Lock mReadLock concode_elem_sep Lock mWriteLock concode_field_sep void unlock concode_elem_sep void lockInterruptibly concode_elem_sep void notSameLock concode_elem_sep void before concode_elem_sep void referenceCounting", "code_tokens": ["void", "function", "(", ")", "{", "mWriteLock", ".", "lock", "(", ")", ";", "Assert", ".", "assertFalse", "(", "mWriteLock", ".", "tryLock", "(", ")", ")", ";", "}"], "nl_tokens": ["tests", "the", "clientrwlock", "#trylock method . concode_field_sep ClientRWLock mClientRWLock concode_elem_sep Lock mReadLock concode_elem_sep Lock mWriteLock concode_field_sep void unlock concode_elem_sep void lockInterruptibly concode_elem_sep void notSameLock concode_elem_sep void before concode_elem_sep void referenceCounting"]}
{"code": "void function ( ) { Time loc0 = rmc . getTime ( ) ; assertNotNull ( loc0 ) ; assertEquals ( 12 , loc0 . getHour ( ) ) ; assertEquals ( 0 , loc0 . getMinutes ( ) ) ; assertEquals ( 44.567 , loc0 . getSeconds ( ) , 0.001 ) ; }", "nl": "test method for net.sf.marineapi.nmea.parser.rmcparser #gettime . concode_field_sep String EXAMPLE concode_elem_sep RMCParser rmc concode_elem_sep RMCParser empty concode_field_sep void testSetFaaModeWhenOmitted concode_elem_sep void testSetDirectionOfVariationWithInvalidDirection concode_elem_sep void testGetCorrectedCourse concode_elem_sep void testGetDataStatus concode_elem_sep void testConstructor concode_elem_sep void testSetCourse concode_elem_sep void testSetFaaMode concode_elem_sep void testSetVariation concode_elem_sep void setUp concode_elem_sep void testGetMonth concode_elem_sep void testGetCourse concode_elem_sep void testSetDate concode_elem_sep void testGetYear concode_elem_sep void testSetDataStatus concode_elem_sep void testGetDirectionOfVariation concode_elem_sep void testGetDate concode_elem_sep void testGetMagneticVariation concode_elem_sep void testSetPosition concode_elem_sep void testGetPosition concode_elem_sep void testSetDirectionOfVariation concode_elem_sep void testSetTime concode_elem_sep void testGetDay concode_elem_sep void testGetSpeed concode_elem_sep void testGetFaaMode concode_elem_sep void testSetSpeed", "code_tokens": ["void", "function", "(", ")", "{", "Time", "loc0", "=", "rmc", ".", "getTime", "(", ")", ";", "assertNotNull", "(", "loc0", ")", ";", "assertEquals", "(", "12", ",", "loc0", ".", "getHour", "(", ")", ")", ";", "assertEquals", "(", "0", ",", "loc0", ".", "getMinutes", "(", ")", ")", ";", "assertEquals", "(", "44.567", ",", "loc0", ".", "getSeconds", "(", ")", ",", "0.001", ")", ";", "}"], "nl_tokens": ["test", "method", "for", "net", ".", "sf", ".", "marineapi", ".", "nmea", ".", "parser", ".", "rmcparser", "#gettime . concode_field_sep String EXAMPLE concode_elem_sep RMCParser rmc concode_elem_sep RMCParser empty concode_field_sep void testSetFaaModeWhenOmitted concode_elem_sep void testSetDirectionOfVariationWithInvalidDirection concode_elem_sep void testGetCorrectedCourse concode_elem_sep void testGetDataStatus concode_elem_sep void testConstructor concode_elem_sep void testSetCourse concode_elem_sep void testSetFaaMode concode_elem_sep void testSetVariation concode_elem_sep void setUp concode_elem_sep void testGetMonth concode_elem_sep void testGetCourse concode_elem_sep void testSetDate concode_elem_sep void testGetYear concode_elem_sep void testSetDataStatus concode_elem_sep void testGetDirectionOfVariation concode_elem_sep void testGetDate concode_elem_sep void testGetMagneticVariation concode_elem_sep void testSetPosition concode_elem_sep void testGetPosition concode_elem_sep void testSetDirectionOfVariation concode_elem_sep void testSetTime concode_elem_sep void testGetDay concode_elem_sep void testGetSpeed concode_elem_sep void testGetFaaMode concode_elem_sep void testSetSpeed"]}
{"code": "Map < String , String > function ( FederationModel arg0 ) { String loc0 = asLink ( arg0 . loc0 , arg0 . token , FederationRequest . PULL_SETTINGS ) ; Map < String , String > loc1 = JsonUtils . retrieveJson ( loc0 , SETTINGS_TYPE ) ; return loc1 ; }", "nl": "tries to pull the gitblit server settings from the remote gitblit instance . concode_field_sep Type USERS_TYPE concode_elem_sep Type SETTINGS_TYPE concode_elem_sep Type REPOSITORIES_TYPE concode_elem_sep Type TEAMS_TYPE concode_elem_sep Logger LOGGER concode_field_sep Map<String,RepositoryModel> getRepositories concode_elem_sep String asLink concode_elem_sep String asLink concode_elem_sep Map<String,String> getScripts concode_elem_sep boolean acknowledgeStatus concode_elem_sep List<UserModel> getUsers concode_elem_sep List<FederationModel> getFederationRegistrations concode_elem_sep boolean poke concode_elem_sep FederationProposalResult propose concode_elem_sep List<TeamModel> getTeams", "code_tokens": ["Map", "<", "String", ",", "String", ">", "function", "(", "FederationModel", "arg0", ")", "{", "String", "loc0", "=", "asLink", "(", "arg0", ".", "loc0", ",", "arg0", ".", "token", ",", "FederationRequest", ".", "PULL_SETTINGS", ")", ";", "Map", "<", "String", ",", "String", ">", "loc1", "=", "JsonUtils", ".", "retrieveJson", "(", "loc0", ",", "SETTINGS_TYPE", ")", ";", "return", "loc1", ";", "}"], "nl_tokens": ["tries", "to", "pull", "the", "gitblit", "server", "settings", "from", "the", "remote", "gitblit", "instance", ".", "concode_field_sep", "Type", "USERS_TYPE", "concode_elem_sep", "Type", "SETTINGS_TYPE", "concode_elem_sep", "Type", "REPOSITORIES_TYPE", "concode_elem_sep", "Type", "TEAMS_TYPE", "concode_elem_sep", "Logger", "LOGGER", "concode_field_sep", "Map", "<", "String", ",", "RepositoryModel", ">", "getRepositories", "concode_elem_sep", "String", "asLink", "concode_elem_sep", "String", "asLink", "concode_elem_sep", "Map", "<", "String", ",", "String", ">", "getScripts", "concode_elem_sep", "boolean", "acknowledgeStatus", "concode_elem_sep", "List", "<", "UserModel", ">", "getUsers", "concode_elem_sep", "List", "<", "FederationModel", ">", "getFederationRegistrations", "concode_elem_sep", "boolean", "poke", "concode_elem_sep", "FederationProposalResult", "propose", "concode_elem_sep", "List", "<", "TeamModel", ">", "getTeams"]}
{"code": "MenuItem function ( OnMenuItemClickListener arg0 ) { mMenuItem . setOnMenuItemClickListener ( arg0 ) ; return this ; }", "nl": "set a custom listener for invocation of this menu item . concode_field_sep android.view.MenuItem mMenuItem concode_field_sep boolean hasSubMenu concode_elem_sep CharSequence getTitleCondensed concode_elem_sep int getGroupId concode_elem_sep int getItemId concode_elem_sep View getActionView concode_elem_sep View getActionView concode_elem_sep CharSequence getTitle concode_elem_sep MenuItem setChecked concode_elem_sep char getAlphabeticShortcut concode_elem_sep Intent getIntent concode_elem_sep boolean isCheckable concode_elem_sep MenuItem setShortcut concode_elem_sep MenuItem setVisible concode_elem_sep void setShowAsAction concode_elem_sep void setShowAsAction concode_elem_sep SubMenu getSubMenu concode_elem_sep MenuItem setIntent concode_elem_sep MenuItem setCheckable concode_elem_sep MenuItem setAlphabeticShortcut concode_elem_sep MenuItem setTitle concode_elem_sep MenuItem setTitle concode_elem_sep MenuItem setNumericShortcut concode_elem_sep boolean isVisible concode_elem_sep boolean isChecked concode_elem_sep MenuItem setTitleCondensed concode_elem_sep Drawable getIcon concode_elem_sep MenuItem setIcon concode_elem_sep MenuItem setIcon concode_elem_sep MenuItem setEnabled concode_elem_sep int getOrder concode_elem_sep boolean isEnabled concode_elem_sep char getNumericShortcut concode_elem_sep void setActionView concode_elem_sep void setActionView concode_elem_sep MenuItem setActionView concode_elem_sep MenuItem setActionView concode_elem_sep ContextMenuInfo getMenuInfo", "code_tokens": ["MenuItem", "function", "(", "OnMenuItemClickListener", "arg0", ")", "{", "mMenuItem", ".", "setOnMenuItemClickListener", "(", "arg0", ")", ";", "return", "this", ";", "}"], "nl_tokens": ["set", "a", "custom", "listener", "for", "invocation", "of", "this", "menu", "item", ".", "concode_field_sep", "android", ".", "view", ".", "MenuItem", "mMenuItem", "concode_field_sep", "boolean", "hasSubMenu", "concode_elem_sep", "CharSequence", "getTitleCondensed", "concode_elem_sep", "int", "getGroupId", "concode_elem_sep", "int", "getItemId", "concode_elem_sep", "View", "getActionView", "concode_elem_sep", "View", "getActionView", "concode_elem_sep", "CharSequence", "getTitle", "concode_elem_sep", "MenuItem", "setChecked", "concode_elem_sep", "char", "getAlphabeticShortcut", "concode_elem_sep", "Intent", "getIntent", "concode_elem_sep", "boolean", "isCheckable", "concode_elem_sep", "MenuItem", "setShortcut", "concode_elem_sep", "MenuItem", "setVisible", "concode_elem_sep", "void", "setShowAsAction", "concode_elem_sep", "void", "setShowAsAction", "concode_elem_sep", "SubMenu", "getSubMenu", "concode_elem_sep", "MenuItem", "setIntent", "concode_elem_sep", "MenuItem", "setCheckable", "concode_elem_sep", "MenuItem", "setAlphabeticShortcut", "concode_elem_sep", "MenuItem", "setTitle", "concode_elem_sep", "MenuItem", "setTitle", "concode_elem_sep", "MenuItem", "setNumericShortcut", "concode_elem_sep", "boolean", "isVisible", "concode_elem_sep", "boolean", "isChecked", "concode_elem_sep", "MenuItem", "setTitleCondensed", "concode_elem_sep", "Drawable", "getIcon", "concode_elem_sep", "MenuItem", "setIcon", "concode_elem_sep", "MenuItem", "setIcon", "concode_elem_sep", "MenuItem", "setEnabled", "concode_elem_sep", "int", "getOrder", "concode_elem_sep", "boolean", "isEnabled", "concode_elem_sep", "char", "getNumericShortcut", "concode_elem_sep", "void", "setActionView", "concode_elem_sep", "void", "setActionView", "concode_elem_sep", "MenuItem", "setActionView", "concode_elem_sep", "MenuItem", "setActionView", "concode_elem_sep", "ContextMenuInfo", "getMenuInfo"]}
{"code": "BookPreview function ( Book arg0 ) { return getPreview ( arg0 . getUUID ( ) ) ; }", "nl": "find the stored preview for the given book concode_field_sep Book preview concode_elem_sep String QUILL_EXTENSION concode_elem_sep LinkedList<BookPreview> data concode_elem_sep Bookshelf instance concode_elem_sep String TAG concode_elem_sep String TAG concode_elem_sep Storage storage concode_elem_sep Book currentBook concode_elem_sep UUID uuid concode_field_sep int compare concode_elem_sep void backup concode_elem_sep void backup concode_elem_sep void reloadPreview concode_elem_sep void backupDescription concode_elem_sep void setCurrentBook concode_elem_sep void setCurrentBook concode_elem_sep void assertNoCurrentBook concode_elem_sep void importBook concode_elem_sep Bitmap getThumbnail concode_elem_sep void deleteBook concode_elem_sep void exportBook concode_elem_sep String getTitle concode_elem_sep void reload concode_elem_sep UUID getUUID concode_elem_sep Bookshelf getBookshelf concode_elem_sep void newBook concode_elem_sep void sortBookPreviewList concode_elem_sep int getCount concode_elem_sep void importBookDirectory concode_elem_sep String getSummary concode_elem_sep BookPreview getCurrentBookPreview concode_elem_sep void deleteFromStorage concode_elem_sep Book getCurrentBook concode_elem_sep Time getLastModifiedTime concode_elem_sep LinkedList<BookPreview> getBookPreviewList concode_elem_sep void exportCurrentBook concode_elem_sep void createFirstNotebook concode_elem_sep void finalize concode_elem_sep void initialize", "code_tokens": ["BookPreview", "function", "(", "Book", "arg0", ")", "{", "return", "getPreview", "(", "arg0", ".", "getUUID", "(", ")", ")", ";", "}"], "nl_tokens": ["find", "the", "stored", "preview", "for", "the", "given", "book", "concode_field_sep", "Book", "preview", "concode_elem_sep", "String", "QUILL_EXTENSION", "concode_elem_sep", "LinkedList", "<", "BookPreview", ">", "data", "concode_elem_sep", "Bookshelf", "instance", "concode_elem_sep", "String", "TAG", "concode_elem_sep", "String", "TAG", "concode_elem_sep", "Storage", "storage", "concode_elem_sep", "Book", "currentBook", "concode_elem_sep", "UUID", "uuid", "concode_field_sep", "int", "compare", "concode_elem_sep", "void", "backup", "concode_elem_sep", "void", "backup", "concode_elem_sep", "void", "reloadPreview", "concode_elem_sep", "void", "backupDescription", "concode_elem_sep", "void", "setCurrentBook", "concode_elem_sep", "void", "setCurrentBook", "concode_elem_sep", "void", "assertNoCurrentBook", "concode_elem_sep", "void", "importBook", "concode_elem_sep", "Bitmap", "getThumbnail", "concode_elem_sep", "void", "deleteBook", "concode_elem_sep", "void", "exportBook", "concode_elem_sep", "String", "getTitle", "concode_elem_sep", "void", "reload", "concode_elem_sep", "UUID", "getUUID", "concode_elem_sep", "Bookshelf", "getBookshelf", "concode_elem_sep", "void", "newBook", "concode_elem_sep", "void", "sortBookPreviewList", "concode_elem_sep", "int", "getCount", "concode_elem_sep", "void", "importBookDirectory", "concode_elem_sep", "String", "getSummary", "concode_elem_sep", "BookPreview", "getCurrentBookPreview", "concode_elem_sep", "void", "deleteFromStorage", "concode_elem_sep", "Book", "getCurrentBook", "concode_elem_sep", "Time", "getLastModifiedTime", "concode_elem_sep", "LinkedList", "<", "BookPreview", ">", "getBookPreviewList", "concode_elem_sep", "void", "exportCurrentBook", "concode_elem_sep", "void", "createFirstNotebook", "concode_elem_sep", "void", "finalize", "concode_elem_sep", "void", "initialize"]}
{"code": "String function ( ) { return wsse11TokenType ; }", "nl": "get the wsse11 tokentype attribute concode_field_sep String identifier concode_elem_sep String wsseValueType concode_elem_sep boolean useKeyIdentifier concode_elem_sep boolean useDirectReference concode_elem_sep String wsse11TokenType concode_field_sep void setWsse11TokenType concode_elem_sep void setWsseValueType concode_elem_sep String getIdentifier concode_elem_sep void setIdentifier concode_elem_sep void setUseDirectReference concode_elem_sep boolean isUseKeyIdentifier concode_elem_sep String getWsseValueType concode_elem_sep boolean isUseDirectReference concode_elem_sep void setUseKeyIdentifier", "code_tokens": ["String", "function", "(", ")", "{", "return", "wsse11TokenType", ";", "}"], "nl_tokens": ["get", "the", "wsse11", "tokentype", "attribute", "concode_field_sep", "String", "identifier", "concode_elem_sep", "String", "wsseValueType", "concode_elem_sep", "boolean", "useKeyIdentifier", "concode_elem_sep", "boolean", "useDirectReference", "concode_elem_sep", "String", "wsse11TokenType", "concode_field_sep", "void", "setWsse11TokenType", "concode_elem_sep", "void", "setWsseValueType", "concode_elem_sep", "String", "getIdentifier", "concode_elem_sep", "void", "setIdentifier", "concode_elem_sep", "void", "setUseDirectReference", "concode_elem_sep", "boolean", "isUseKeyIdentifier", "concode_elem_sep", "String", "getWsseValueType", "concode_elem_sep", "boolean", "isUseDirectReference", "concode_elem_sep", "void", "setUseKeyIdentifier"]}
{"code": "void function ( byte [ ] arg0 ) { handleEvent ( new BinaryBytesEvent ( arg0 ) ) ; }", "nl": "handle event from the rawrtfparser . concode_field_sep IParserEventHandler handler concode_elem_sep IParserEvent GROUP_END concode_elem_sep IParserEvent GROUP_START concode_elem_sep IParserEvent DOCUMENT_START concode_elem_sep Deque<IParserEventHandler> handlerStack concode_elem_sep Map<Integer,String> m_fontEncodings concode_elem_sep Deque<ParserState> stack concode_elem_sep IParserEvent DOCUMENT_END concode_elem_sep ParserState state concode_elem_sep int skipBytes concode_field_sep void processCharacter concode_elem_sep void processUpr concode_elem_sep void handleEvent concode_elem_sep void processDocumentEnd concode_elem_sep void processGroupEnd concode_elem_sep void processCommand concode_elem_sep void parse concode_elem_sep void processCharacterBytes concode_elem_sep void processString concode_elem_sep void processDocumentStart concode_elem_sep void processUnicodeAlternateSkipCount concode_elem_sep void handleCommand concode_elem_sep void processGroupStart concode_elem_sep void processFont concode_elem_sep void processEncoding concode_elem_sep void processUnicode concode_elem_sep String currentEncoding concode_elem_sep void processFontCharset", "code_tokens": ["void", "function", "(", "byte", "[", "]", "arg0", ")", "{", "handleEvent", "(", "new", "BinaryBytesEvent", "(", "arg0", ")", ")", ";", "}"], "nl_tokens": ["handle", "event", "from", "the", "rawrtfparser", ".", "concode_field_sep", "IParserEventHandler", "handler", "concode_elem_sep", "IParserEvent", "GROUP_END", "concode_elem_sep", "IParserEvent", "GROUP_START", "concode_elem_sep", "IParserEvent", "DOCUMENT_START", "concode_elem_sep", "Deque", "<", "IParserEventHandler", ">", "handlerStack", "concode_elem_sep", "Map", "<", "Integer", ",", "String", ">", "m_fontEncodings", "concode_elem_sep", "Deque", "<", "ParserState", ">", "stack", "concode_elem_sep", "IParserEvent", "DOCUMENT_END", "concode_elem_sep", "ParserState", "state", "concode_elem_sep", "int", "skipBytes", "concode_field_sep", "void", "processCharacter", "concode_elem_sep", "void", "processUpr", "concode_elem_sep", "void", "handleEvent", "concode_elem_sep", "void", "processDocumentEnd", "concode_elem_sep", "void", "processGroupEnd", "concode_elem_sep", "void", "processCommand", "concode_elem_sep", "void", "parse", "concode_elem_sep", "void", "processCharacterBytes", "concode_elem_sep", "void", "processString", "concode_elem_sep", "void", "processDocumentStart", "concode_elem_sep", "void", "processUnicodeAlternateSkipCount", "concode_elem_sep", "void", "handleCommand", "concode_elem_sep", "void", "processGroupStart", "concode_elem_sep", "void", "processFont", "concode_elem_sep", "void", "processEncoding", "concode_elem_sep", "void", "processUnicode", "concode_elem_sep", "String", "currentEncoding", "concode_elem_sep", "void", "processFontCharset"]}
{"code": "void function ( Node arg0 , Set < T > arg1 , Class < T > arg2 ) { if ( null != arg0 ) { if ( ( null == arg2 ) || ( arg2 . equals ( arg0 . getClass ( ) ) ) ) { arg1 . add ( ( T ) arg0 ) ; } for ( int loc0 = 0 ; loc0 < arg0 . jjtGetNumChildren ( ) ; loc0 ++ ) { addNodeAndSubnodes ( arg0 . jjtGetChild ( loc0 ) , arg1 , arg2 ) ; } } }", "nl": "add the given node and its subnodes to the set of nodes . if clazz is not null , only nodes of the given class are put in the set of nodes . concode_field_sep PlaceHolder placeHolder concode_field_sep Set<T> getNodes concode_elem_sep void assertNumberOfNodes concode_elem_sep Set<T> getNodesOfType", "code_tokens": ["void", "function", "(", "Node", "arg0", ",", "Set", "<", "T", ">", "arg1", ",", "Class", "<", "T", ">", "arg2", ")", "{", "if", "(", "null", "!=", "arg0", ")", "{", "if", "(", "(", "null", "==", "arg2", ")", "|", "|", "(", "arg2", ".", "equals", "(", "arg0", ".", "getClass", "(", ")", ")", ")", ")", "{", "arg1", ".", "add", "(", "(", "T", ")", "arg0", ")", ";", "}", "for", "(", "int", "loc0", "=", "0", ";", "loc0", "<", "arg0", ".", "jjtGetNumChildren", "(", ")", ";", "loc0", "+", "+", ")", "{", "addNodeAndSubnodes", "(", "arg0", ".", "jjtGetChild", "(", "loc0", ")", ",", "arg1", ",", "arg2", ")", ";", "}", "}", "}"], "nl_tokens": ["add", "the", "given", "node", "and", "its", "subnodes", "to", "the", "set", "of", "nodes", ".", "if", "clazz", "is", "not", "null", ",", "only", "nodes", "of", "the", "given", "class", "are", "put", "in", "the", "set", "of", "nodes", ".", "concode_field_sep", "PlaceHolder", "placeHolder", "concode_field_sep", "Set", "<", "T", ">", "getNodes", "concode_elem_sep", "void", "assertNumberOfNodes", "concode_elem_sep", "Set", "<", "T", ">", "getNodesOfType"]}
{"code": "void function ( String arg0 ) { this . lastVersion = arg0 ; }", "nl": "manually set the last version name - for testing purposes only concode_field_sep String lastVersion concode_elem_sep StringBuffer sb concode_elem_sep Listmode listMode concode_elem_sep String thisVersion concode_elem_sep Context context concode_elem_sep String VERSION_KEY concode_elem_sep String EOCL concode_elem_sep String TAG concode_field_sep void openList concode_elem_sep boolean firstRun concode_elem_sep String getLastVersion concode_elem_sep String getLog concode_elem_sep String getLog concode_elem_sep String getThisVersion concode_elem_sep AlertDialog getFullLogDialog concode_elem_sep AlertDialog getLogDialog concode_elem_sep String getFullLog concode_elem_sep boolean firstRunEver concode_elem_sep void closeList concode_elem_sep AlertDialog getDialog", "code_tokens": ["void", "function", "(", "String", "arg0", ")", "{", "this", ".", "lastVersion", "=", "arg0", ";", "}"], "nl_tokens": ["manually", "set", "the", "last", "version", "name", "-", "for", "testing", "purposes", "only", "concode_field_sep", "String", "lastVersion", "concode_elem_sep", "StringBuffer", "sb", "concode_elem_sep", "Listmode", "listMode", "concode_elem_sep", "String", "thisVersion", "concode_elem_sep", "Context", "context", "concode_elem_sep", "String", "VERSION_KEY", "concode_elem_sep", "String", "EOCL", "concode_elem_sep", "String", "TAG", "concode_field_sep", "void", "openList", "concode_elem_sep", "boolean", "firstRun", "concode_elem_sep", "String", "getLastVersion", "concode_elem_sep", "String", "getLog", "concode_elem_sep", "String", "getLog", "concode_elem_sep", "String", "getThisVersion", "concode_elem_sep", "AlertDialog", "getFullLogDialog", "concode_elem_sep", "AlertDialog", "getLogDialog", "concode_elem_sep", "String", "getFullLog", "concode_elem_sep", "boolean", "firstRunEver", "concode_elem_sep", "void", "closeList", "concode_elem_sep", "AlertDialog", "getDialog"]}
{"code": "void function ( final String arg0 , final PropertyChangeListener arg1 ) { m_PropertyChangeSupport . removePropertyChangeListener ( arg0 , arg1 ) ; }", "nl": "remove propertychangelistener . concode_field_sep Element m_SignedPart concode_elem_sep int m_SignMode concode_elem_sep String PROP_SIGNEDELEMENT concode_elem_sep Element m_WrappingPayloadElemnt concode_elem_sep String PROP_REFERRINGELEMENT concode_elem_sep WrappingAttackMode m_CurrWrappingMode concode_elem_sep String PROP_WRAPPINGELMENT concode_elem_sep PropertyChangeSupport m_PropertyChangeSupport concode_elem_sep int m_CurrWrappingPayloadIdx concode_elem_sep Element m_AttackPayloadElemnt concode_elem_sep boolean m_IsAdditionalWrap concode_elem_sep String PROP_ATTACKELEMENT concode_field_sep void setAttackPayloadElement concode_elem_sep void setCurrWrappingPayloadIdx concode_elem_sep void setWrappingPayloadElement concode_elem_sep boolean isSigned concode_elem_sep boolean isAdditionalWrap concode_elem_sep Element getWrappingPayloadElement concode_elem_sep void setCurrWrappingMode concode_elem_sep void setIsAdditionalWrap concode_elem_sep Element getAttackPayloadElement concode_elem_sep void setSignedPart concode_elem_sep int getCurrWrappingPayloadIdx concode_elem_sep WrappingAttackMode getCurrWrappingMode concode_elem_sep Element getSignedPart concode_elem_sep int getSignMode concode_elem_sep void setSignMode concode_elem_sep void addPropertyChangeListener concode_elem_sep void addPropertyChangeListener", "code_tokens": ["void", "function", "(", "final", "String", "arg0", ",", "final", "PropertyChangeListener", "arg1", ")", "{", "m_PropertyChangeSupport", ".", "removePropertyChangeListener", "(", "arg0", ",", "arg1", ")", ";", "}"], "nl_tokens": ["remove", "propertychangelistener", ".", "concode_field_sep", "Element", "m_SignedPart", "concode_elem_sep", "int", "m_SignMode", "concode_elem_sep", "String", "PROP_SIGNEDELEMENT", "concode_elem_sep", "Element", "m_WrappingPayloadElemnt", "concode_elem_sep", "String", "PROP_REFERRINGELEMENT", "concode_elem_sep", "WrappingAttackMode", "m_CurrWrappingMode", "concode_elem_sep", "String", "PROP_WRAPPINGELMENT", "concode_elem_sep", "PropertyChangeSupport", "m_PropertyChangeSupport", "concode_elem_sep", "int", "m_CurrWrappingPayloadIdx", "concode_elem_sep", "Element", "m_AttackPayloadElemnt", "concode_elem_sep", "boolean", "m_IsAdditionalWrap", "concode_elem_sep", "String", "PROP_ATTACKELEMENT", "concode_field_sep", "void", "setAttackPayloadElement", "concode_elem_sep", "void", "setCurrWrappingPayloadIdx", "concode_elem_sep", "void", "setWrappingPayloadElement", "concode_elem_sep", "boolean", "isSigned", "concode_elem_sep", "boolean", "isAdditionalWrap", "concode_elem_sep", "Element", "getWrappingPayloadElement", "concode_elem_sep", "void", "setCurrWrappingMode", "concode_elem_sep", "void", "setIsAdditionalWrap", "concode_elem_sep", "Element", "getAttackPayloadElement", "concode_elem_sep", "void", "setSignedPart", "concode_elem_sep", "int", "getCurrWrappingPayloadIdx", "concode_elem_sep", "WrappingAttackMode", "getCurrWrappingMode", "concode_elem_sep", "Element", "getSignedPart", "concode_elem_sep", "int", "getSignMode", "concode_elem_sep", "void", "setSignMode", "concode_elem_sep", "void", "addPropertyChangeListener", "concode_elem_sep", "void", "addPropertyChangeListener"]}
{"code": "Iterable < E > function ( final Iterable arg0 ) { return map ( arg0 , new Mapper < Object , E > ( ) { public E apply ( Object arg1 ) { return ( E ) arg1 ; } } ) ; }", "nl": "turns an iterable into its type-safe cousin . concode_field_sep Predicate<? super T> filter concode_elem_sep boolean iterated concode_elem_sep Iterator<T> i concode_elem_sep Mapper<? super F,T> mapper concode_elem_sep T lookAhead concode_elem_sep E element concode_field_sep Iterable<E> singleton concode_elem_sep Iterable<T> filter concode_elem_sep boolean all concode_elem_sep E next concode_elem_sep T next concode_elem_sep T next concode_elem_sep int count concode_elem_sep boolean hasNext concode_elem_sep boolean hasNext concode_elem_sep boolean hasNext concode_elem_sep Iterable<T> map concode_elem_sep boolean any concode_elem_sep List<E> asList concode_elem_sep void remove concode_elem_sep void remove concode_elem_sep void remove", "code_tokens": ["Iterable", "<", "E", ">", "function", "(", "final", "Iterable", "arg0", ")", "{", "return", "map", "(", "arg0", ",", "new", "Mapper", "<", "Object", ",", "E", ">", "(", ")", "{", "public", "E", "apply", "(", "Object", "arg1", ")", "{", "return", "(", "E", ")", "arg1", ";", "}", "}", ")", ";", "}"], "nl_tokens": ["turns", "an", "iterable", "into", "its", "type", "-", "safe", "cousin", ".", "concode_field_sep", "Predicate", "<", "?", "super", "T", ">", "filter", "concode_elem_sep", "boolean", "iterated", "concode_elem_sep", "Iterator", "<", "T", ">", "i", "concode_elem_sep", "Mapper", "<", "?", "super", "F", ",", "T", ">", "mapper", "concode_elem_sep", "T", "lookAhead", "concode_elem_sep", "E", "element", "concode_field_sep", "Iterable", "<", "E", ">", "singleton", "concode_elem_sep", "Iterable", "<", "T", ">", "filter", "concode_elem_sep", "boolean", "all", "concode_elem_sep", "E", "next", "concode_elem_sep", "T", "next", "concode_elem_sep", "T", "next", "concode_elem_sep", "int", "count", "concode_elem_sep", "boolean", "hasNext", "concode_elem_sep", "boolean", "hasNext", "concode_elem_sep", "boolean", "hasNext", "concode_elem_sep", "Iterable", "<", "T", ">", "map", "concode_elem_sep", "boolean", "any", "concode_elem_sep", "List", "<", "E", ">", "asList", "concode_elem_sep", "void", "remove", "concode_elem_sep", "void", "remove", "concode_elem_sep", "void", "remove"]}
{"code": "void function ( Notation arg0 ) { unhandled ( arg0 ) ; }", "nl": "template delegator for testnode method . override to add custom logic concode_field_sep PlaceHolder placeHolder concode_field_sep void unhandled concode_elem_sep void testDocumentType concode_elem_sep void testComment concode_elem_sep void testNode concode_elem_sep void testElement concode_elem_sep void testEntity concode_elem_sep void noMoreNodes concode_elem_sep void testAttribute concode_elem_sep void testText concode_elem_sep void testEntityReference concode_elem_sep void testCDATASection concode_elem_sep void testProcessingInstruction", "code_tokens": ["void", "function", "(", "Notation", "arg0", ")", "{", "unhandled", "(", "arg0", ")", ";", "}"], "nl_tokens": ["template", "delegator", "for", "testnode", "method", ".", "override", "to", "add", "custom", "logic", "concode_field_sep", "PlaceHolder", "placeHolder", "concode_field_sep", "void", "unhandled", "concode_elem_sep", "void", "testDocumentType", "concode_elem_sep", "void", "testComment", "concode_elem_sep", "void", "testNode", "concode_elem_sep", "void", "testElement", "concode_elem_sep", "void", "testEntity", "concode_elem_sep", "void", "noMoreNodes", "concode_elem_sep", "void", "testAttribute", "concode_elem_sep", "void", "testText", "concode_elem_sep", "void", "testEntityReference", "concode_elem_sep", "void", "testCDATASection", "concode_elem_sep", "void", "testProcessingInstruction"]}
{"code": "ProctorResult function ( @ Nonnull final Identifiers arg0 , @ Nonnull final Map < String , Object > arg1 , @ Nonnull final Map < String , Integer > arg2 ) { return determineTestGroups ( arg0 , arg1 , arg2 , Collections . < String > emptyList ( ) ) ; }", "nl": "determine which test buckets apply to a particular client . concode_field_sep Map<String,TestChooser<?>> testChoosers concode_elem_sep ProctorLoadResult loadResult concode_elem_sep long INT_RANGE concode_elem_sep Proctor EMPTY concode_elem_sep Map<String,ConsumableTestDefinition> testDefinitions concode_elem_sep TestMatrixArtifact matrix concode_field_sep void appendTestMatrix concode_elem_sep void appendTestMatrixFiltered concode_elem_sep TestMatrixArtifact getArtifact concode_elem_sep ProctorLoadResult getLoadResult concode_elem_sep void appendTests concode_elem_sep void appendTests concode_elem_sep Proctor createEmptyProctor concode_elem_sep ConsumableTestDefinition getTestDefinition concode_elem_sep Proctor construct concode_elem_sep void appendAllTests concode_elem_sep void appendTestsNameFiltered", "code_tokens": ["ProctorResult", "function", "(", "@", "Nonnull", "final", "Identifiers", "arg0", ",", "@", "Nonnull", "final", "Map", "<", "String", ",", "Object", ">", "arg1", ",", "@", "Nonnull", "final", "Map", "<", "String", ",", "Integer", ">", "arg2", ")", "{", "return", "determineTestGroups", "(", "arg0", ",", "arg1", ",", "arg2", ",", "Collections", ".", "<", "String", ">", "emptyList", "(", ")", ")", ";", "}"], "nl_tokens": ["determine", "which", "test", "buckets", "apply", "to", "a", "particular", "client", ".", "concode_field_sep", "Map", "<", "String", ",", "TestChooser", "<", "?", ">>", "testChoosers", "concode_elem_sep", "ProctorLoadResult", "loadResult", "concode_elem_sep", "long", "INT_RANGE", "concode_elem_sep", "Proctor", "EMPTY", "concode_elem_sep", "Map", "<", "String", ",", "ConsumableTestDefinition", ">", "testDefinitions", "concode_elem_sep", "TestMatrixArtifact", "matrix", "concode_field_sep", "void", "appendTestMatrix", "concode_elem_sep", "void", "appendTestMatrixFiltered", "concode_elem_sep", "TestMatrixArtifact", "getArtifact", "concode_elem_sep", "ProctorLoadResult", "getLoadResult", "concode_elem_sep", "void", "appendTests", "concode_elem_sep", "void", "appendTests", "concode_elem_sep", "Proctor", "createEmptyProctor", "concode_elem_sep", "ConsumableTestDefinition", "getTestDefinition", "concode_elem_sep", "Proctor", "construct", "concode_elem_sep", "void", "appendAllTests", "concode_elem_sep", "void", "appendTestsNameFiltered"]}
{"code": "int function ( String arg0 ) { return offsets . get ( arg0 ) ; }", "nl": "returns the offset of a specified field within a record concode_field_sep Schema schema concode_elem_sep Map<String,Integer> offsets concode_elem_sep String tblname concode_elem_sep int recordlen concode_field_sep Schema schema concode_elem_sep int lengthInBytes concode_elem_sep String fileName concode_elem_sep int recordLength", "code_tokens": ["int", "function", "(", "String", "arg0", ")", "{", "return", "offsets", ".", "get", "(", "arg0", ")", ";", "}"], "nl_tokens": ["returns", "the", "offset", "of", "a", "specified", "field", "within", "a", "record", "concode_field_sep", "Schema", "schema", "concode_elem_sep", "Map", "<", "String", ",", "Integer", ">", "offsets", "concode_elem_sep", "String", "tblname", "concode_elem_sep", "int", "recordlen", "concode_field_sep", "Schema", "schema", "concode_elem_sep", "int", "lengthInBytes", "concode_elem_sep", "String", "fileName", "concode_elem_sep", "int", "recordLength"]}
{"code": "void function ( byte [ ] arg0 ) { this . addByteArray ( arg0 , 0 , arg0 . length ) ; }", "nl": "add a byte array field to the stream . \\ param value the byte array value to be added . concode_field_sep byte[] intBuf concode_elem_sep int MAX_INT_BYTES concode_elem_sep PackFormatInputStream format concode_elem_sep ByteArrayOutputStream packed concode_field_sep byte[] getValue concode_elem_sep void packLong concode_elem_sep void addShort concode_elem_sep void reset concode_elem_sep String getFormat concode_elem_sep void addByte concode_elem_sep void addInt concode_elem_sep void addLong concode_elem_sep void addRecord concode_elem_sep void addString", "code_tokens": ["void", "function", "(", "byte", "[", "]", "arg0", ")", "{", "this", ".", "addByteArray", "(", "arg0", ",", "0", ",", "arg0", ".", "length", ")", ";", "}"], "nl_tokens": ["add", "a", "byte", "array", "field", "to", "the", "stream", ".", "\\", "param", "value", "the", "byte", "array", "value", "to", "be", "added", ".", "concode_field_sep", "byte", "[", "]", "intBuf", "concode_elem_sep", "int", "MAX_INT_BYTES", "concode_elem_sep", "PackFormatInputStream", "format", "concode_elem_sep", "ByteArrayOutputStream", "packed", "concode_field_sep", "byte", "[", "]", "getValue", "concode_elem_sep", "void", "packLong", "concode_elem_sep", "void", "addShort", "concode_elem_sep", "void", "reset", "concode_elem_sep", "String", "getFormat", "concode_elem_sep", "void", "addByte", "concode_elem_sep", "void", "addInt", "concode_elem_sep", "void", "addLong", "concode_elem_sep", "void", "addRecord", "concode_elem_sep", "void", "addString"]}
{"code": "T function ( ) { Node loc0 = extractMinNode ( ) ; return loc0 . key ; }", "nl": "extract min value key from the heap concode_field_sep Map<T,Integer> nodePosition concode_elem_sep List<Node> allNodes concode_elem_sep int weight concode_elem_sep T key concode_field_sep void add concode_elem_sep T min concode_elem_sep void printPositionMap concode_elem_sep void swap concode_elem_sep void updatePositionMap concode_elem_sep Integer getWeight concode_elem_sep Node extractMinNode concode_elem_sep void printHeap concode_elem_sep void main concode_elem_sep void decrease concode_elem_sep boolean containsData concode_elem_sep boolean empty", "code_tokens": ["T", "function", "(", ")", "{", "Node", "loc0", "=", "extractMinNode", "(", ")", ";", "return", "loc0", ".", "key", ";", "}"], "nl_tokens": ["extract", "min", "value", "key", "from", "the", "heap", "concode_field_sep", "Map", "<", "T", ",", "Integer", ">", "nodePosition", "concode_elem_sep", "List", "<", "Node", ">", "allNodes", "concode_elem_sep", "int", "weight", "concode_elem_sep", "T", "key", "concode_field_sep", "void", "add", "concode_elem_sep", "T", "min", "concode_elem_sep", "void", "printPositionMap", "concode_elem_sep", "void", "swap", "concode_elem_sep", "void", "updatePositionMap", "concode_elem_sep", "Integer", "getWeight", "concode_elem_sep", "Node", "extractMinNode", "concode_elem_sep", "void", "printHeap", "concode_elem_sep", "void", "main", "concode_elem_sep", "void", "decrease", "concode_elem_sep", "boolean", "containsData", "concode_elem_sep", "boolean", "empty"]}
{"code": "void function ( String arg0 ) { this . feedId = arg0 ; }", "nl": "sets the feed id . concode_field_sep String feedId concode_elem_sep Long testId concode_elem_sep Long runId concode_elem_sep Long batchId concode_field_sep Long getBatchId concode_elem_sep String toString concode_elem_sep Long getRunId concode_elem_sep String getFeedId concode_elem_sep void setBatchId concode_elem_sep void setTestId concode_elem_sep Long getTestId concode_elem_sep void setRunId", "code_tokens": ["void", "function", "(", "String", "arg0", ")", "{", "this", ".", "feedId", "=", "arg0", ";", "}"], "nl_tokens": ["sets", "the", "feed", "id", ".", "concode_field_sep", "String", "feedId", "concode_elem_sep", "Long", "testId", "concode_elem_sep", "Long", "runId", "concode_elem_sep", "Long", "batchId", "concode_field_sep", "Long", "getBatchId", "concode_elem_sep", "String", "toString", "concode_elem_sep", "Long", "getRunId", "concode_elem_sep", "String", "getFeedId", "concode_elem_sep", "void", "setBatchId", "concode_elem_sep", "void", "setTestId", "concode_elem_sep", "Long", "getTestId", "concode_elem_sep", "void", "setRunId"]}
{"code": "void function ( ExceptionListener arg0 ) { this . exceptionListener = arg0 ; }", "nl": "set exception call-back listener . concode_field_sep String LOG_MSG concode_elem_sep String DISPATCH_ALL concode_elem_sep DataReader reader concode_elem_sep DataListener dataListener concode_elem_sep ConcurrentMap<String,List<SentenceListener>> listeners concode_elem_sep int pauseTimeout concode_elem_sep ExceptionListener exceptionListener concode_elem_sep Thread thread concode_elem_sep Logger LOGGER concode_elem_sep int DEFAULT_TIMEOUT concode_field_sep void fireReadingPaused concode_elem_sep void fireDataEvent concode_elem_sep ExceptionListener getExceptionListener concode_elem_sep void setPauseTimeout concode_elem_sep void start concode_elem_sep void removeSentenceListener concode_elem_sep void fireReadingStopped concode_elem_sep void registerListener concode_elem_sep List<SentenceListener> getSentenceListeners concode_elem_sep void handleException concode_elem_sep void setDataListener concode_elem_sep void stop concode_elem_sep void setInputStream concode_elem_sep void fireReadingStarted concode_elem_sep void fireSentenceEvent concode_elem_sep void addSentenceListener concode_elem_sep void addSentenceListener concode_elem_sep void addSentenceListener concode_elem_sep int getPauseTimeout concode_elem_sep void setDatagramSocket", "code_tokens": ["void", "function", "(", "ExceptionListener", "arg0", ")", "{", "this", ".", "exceptionListener", "=", "arg0", ";", "}"], "nl_tokens": ["set", "exception", "call", "-", "back", "listener", ".", "concode_field_sep", "String", "LOG_MSG", "concode_elem_sep", "String", "DISPATCH_ALL", "concode_elem_sep", "DataReader", "reader", "concode_elem_sep", "DataListener", "dataListener", "concode_elem_sep", "ConcurrentMap", "<", "String", ",", "List", "<", "SentenceListener", ">>", "listeners", "concode_elem_sep", "int", "pauseTimeout", "concode_elem_sep", "ExceptionListener", "exceptionListener", "concode_elem_sep", "Thread", "thread", "concode_elem_sep", "Logger", "LOGGER", "concode_elem_sep", "int", "DEFAULT_TIMEOUT", "concode_field_sep", "void", "fireReadingPaused", "concode_elem_sep", "void", "fireDataEvent", "concode_elem_sep", "ExceptionListener", "getExceptionListener", "concode_elem_sep", "void", "setPauseTimeout", "concode_elem_sep", "void", "start", "concode_elem_sep", "void", "removeSentenceListener", "concode_elem_sep", "void", "fireReadingStopped", "concode_elem_sep", "void", "registerListener", "concode_elem_sep", "List", "<", "SentenceListener", ">", "getSentenceListeners", "concode_elem_sep", "void", "handleException", "concode_elem_sep", "void", "setDataListener", "concode_elem_sep", "void", "stop", "concode_elem_sep", "void", "setInputStream", "concode_elem_sep", "void", "fireReadingStarted", "concode_elem_sep", "void", "fireSentenceEvent", "concode_elem_sep", "void", "addSentenceListener", "concode_elem_sep", "void", "addSentenceListener", "concode_elem_sep", "void", "addSentenceListener", "concode_elem_sep", "int", "getPauseTimeout", "concode_elem_sep", "void", "setDatagramSocket"]}
{"code": "double function ( OperationMetricKey arg0 , ASTMethodOrConstructorDeclaration arg1 ) { return TOP_LEVEL_PACKAGE . compute ( arg0 , arg1 , false ) ; }", "nl": "computes a metric identified by its code on a operation ast node . concode_field_sep PackageStats TOP_LEVEL_PACKAGE concode_elem_sep OperationMetric calculator concode_field_sep PackageStats getTopLevelPackageStats concode_elem_sep ClassMetric getCalculator concode_elem_sep OperationMetric getCalculator", "code_tokens": ["double", "function", "(", "OperationMetricKey", "arg0", ",", "ASTMethodOrConstructorDeclaration", "arg1", ")", "{", "return", "TOP_LEVEL_PACKAGE", ".", "compute", "(", "arg0", ",", "arg1", ",", "false", ")", ";", "}"], "nl_tokens": ["computes", "a", "metric", "identified", "by", "its", "code", "on", "a", "operation", "ast", "node", ".", "concode_field_sep", "PackageStats", "TOP_LEVEL_PACKAGE", "concode_elem_sep", "OperationMetric", "calculator", "concode_field_sep", "PackageStats", "getTopLevelPackageStats", "concode_elem_sep", "ClassMetric", "getCalculator", "concode_elem_sep", "OperationMetric", "getCalculator"]}
{"code": "void function ( FolderInfo . CheckedFlag arg0 ) { this . checkedFlag = arg0 ; }", "nl": "set the value of checkedflag concode_field_sep FolderInfo.CheckedFlag checkedFlag concode_elem_sep String artist concode_elem_sep String album concode_elem_sep double rating concode_elem_sep int errorLevel concode_field_sep FolderInfo.CheckedFlag getCheckedFlag concode_elem_sep void setArtist concode_elem_sep int getErrorLevel concode_elem_sep void setErrorLevel concode_elem_sep String getArtist concode_elem_sep void setAlbum concode_elem_sep String toString concode_elem_sep void setRating concode_elem_sep String getAlbum concode_elem_sep double getRating", "code_tokens": ["void", "function", "(", "FolderInfo", ".", "CheckedFlag", "arg0", ")", "{", "this", ".", "checkedFlag", "=", "arg0", ";", "}"], "nl_tokens": ["set", "the", "value", "of", "checkedflag", "concode_field_sep", "FolderInfo", ".", "CheckedFlag", "checkedFlag", "concode_elem_sep", "String", "artist", "concode_elem_sep", "String", "album", "concode_elem_sep", "double", "rating", "concode_elem_sep", "int", "errorLevel", "concode_field_sep", "FolderInfo", ".", "CheckedFlag", "getCheckedFlag", "concode_elem_sep", "void", "setArtist", "concode_elem_sep", "int", "getErrorLevel", "concode_elem_sep", "void", "setErrorLevel", "concode_elem_sep", "String", "getArtist", "concode_elem_sep", "void", "setAlbum", "concode_elem_sep", "String", "toString", "concode_elem_sep", "void", "setRating", "concode_elem_sep", "String", "getAlbum", "concode_elem_sep", "double", "getRating"]}
{"code": "boolean function ( Object arg0 ) { return isLink ( arg0 ) && uac . isVisited ( nsh . getLinkUri ( ( Element ) arg0 ) ) ; }", "nl": "gets the visited attribute of the standardattributeresolver object concode_field_sep NamespaceHandler nsh concode_elem_sep UserInterface ui concode_elem_sep UserAgentCallback uac concode_field_sep String getClass concode_elem_sep boolean isLink concode_elem_sep String getAttributeValue concode_elem_sep String getAttributeValue concode_elem_sep boolean isHover concode_elem_sep boolean isFocus concode_elem_sep String getLang concode_elem_sep String getID concode_elem_sep String getNonCssStyling concode_elem_sep String getElementStyling concode_elem_sep boolean isActive", "code_tokens": ["boolean", "function", "(", "Object", "arg0", ")", "{", "return", "isLink", "(", "arg0", ")", "&", "&", "uac", ".", "isVisited", "(", "nsh", ".", "getLinkUri", "(", "(", "Element", ")", "arg0", ")", ")", ";", "}"], "nl_tokens": ["gets", "the", "visited", "attribute", "of", "the", "standardattributeresolver", "object", "concode_field_sep", "NamespaceHandler", "nsh", "concode_elem_sep", "UserInterface", "ui", "concode_elem_sep", "UserAgentCallback", "uac", "concode_field_sep", "String", "getClass", "concode_elem_sep", "boolean", "isLink", "concode_elem_sep", "String", "getAttributeValue", "concode_elem_sep", "String", "getAttributeValue", "concode_elem_sep", "boolean", "isHover", "concode_elem_sep", "boolean", "isFocus", "concode_elem_sep", "String", "getLang", "concode_elem_sep", "String", "getID", "concode_elem_sep", "String", "getNonCssStyling", "concode_elem_sep", "String", "getElementStyling", "concode_elem_sep", "boolean", "isActive"]}
{"code": "void function ( BoxFolder arg0 , int arg1 ) { String loc0 = \"srini_string\" ; for ( BoxItem . Info loc1 : arg0 ) { for ( int loc2 = 0 ; loc2 < arg1 ; loc2 ++ ) { loc0 += INDENT_APPEND ; } if ( loc1 instanceof BoxFolder . Info ) { BoxFolder loc2 = ( BoxFolder ) loc1 . getResource ( ) ; listFolder ( loc2 , arg1 + 1 ) ; } } }", "nl": "recurisvely lists folders in the box account . primarily used for debugging . concode_field_sep String LOGIN_MESSAGE concode_elem_sep BoxFolder rootFolder concode_elem_sep String MISSING_FOLDER_MESSAGE concode_elem_sep BoxFolder currentFolder concode_elem_sep String devToken concode_elem_sep TextBot tb concode_elem_sep String INDENT_APPEND concode_field_sep void goToFolder concode_elem_sep void uploadFile concode_elem_sep void downloadFromCurrent concode_elem_sep void createNewFolder concode_elem_sep void deleteFolder concode_elem_sep void uploadFolder concode_elem_sep void uploadFolder concode_elem_sep void listFolders concode_elem_sep void notify concode_elem_sep List<String> getCurrentFiles concode_elem_sep void uploadFileToFolder concode_elem_sep BoxFolder getFolder concode_elem_sep BoxFolder getFolder concode_elem_sep void setUpNotifications concode_elem_sep void goToRootFolder", "code_tokens": ["void", "function", "(", "BoxFolder", "arg0", ",", "int", "arg1", ")", "{", "String", "loc0", "=", "\"srini_string\"", ";", "for", "(", "BoxItem", ".", "Info", "loc1", ":", "arg0", ")", "{", "for", "(", "int", "loc2", "=", "0", ";", "loc2", "<", "arg1", ";", "loc2", "+", "+", ")", "{", "loc0", "+=", "INDENT_APPEND", ";", "}", "if", "(", "loc1", "instanceof", "BoxFolder", ".", "Info", ")", "{", "BoxFolder", "loc2", "=", "(", "BoxFolder", ")", "loc1", ".", "getResource", "(", ")", ";", "listFolder", "(", "loc2", ",", "arg1", "+", "1", ")", ";", "}", "}", "}"], "nl_tokens": ["recurisvely", "lists", "folders", "in", "the", "box", "account", ".", "primarily", "used", "for", "debugging", ".", "concode_field_sep", "String", "LOGIN_MESSAGE", "concode_elem_sep", "BoxFolder", "rootFolder", "concode_elem_sep", "String", "MISSING_FOLDER_MESSAGE", "concode_elem_sep", "BoxFolder", "currentFolder", "concode_elem_sep", "String", "devToken", "concode_elem_sep", "TextBot", "tb", "concode_elem_sep", "String", "INDENT_APPEND", "concode_field_sep", "void", "goToFolder", "concode_elem_sep", "void", "uploadFile", "concode_elem_sep", "void", "downloadFromCurrent", "concode_elem_sep", "void", "createNewFolder", "concode_elem_sep", "void", "deleteFolder", "concode_elem_sep", "void", "uploadFolder", "concode_elem_sep", "void", "uploadFolder", "concode_elem_sep", "void", "listFolders", "concode_elem_sep", "void", "notify", "concode_elem_sep", "List", "<", "String", ">", "getCurrentFiles", "concode_elem_sep", "void", "uploadFileToFolder", "concode_elem_sep", "BoxFolder", "getFolder", "concode_elem_sep", "BoxFolder", "getFolder", "concode_elem_sep", "void", "setUpNotifications", "concode_elem_sep", "void", "goToRootFolder"]}
{"code": "FullyQualifiedClassType function ( ) { return handlerClass ; }", "nl": "gets the value of the handlerclass property . concode_field_sep FullyQualifiedClassType handlerClass concode_elem_sep List<CString> soapRole concode_elem_sep List<ParamValueType> initParam concode_elem_sep List<DisplayNameType> displayName concode_elem_sep List<XsdQNameType> soapHeader concode_elem_sep List<IconType> icon concode_elem_sep List<DescriptionType> description concode_elem_sep CString handlerName concode_elem_sep java.lang.String id concode_field_sep List<ParamValueType> getInitParam concode_elem_sep List<DisplayNameType> getDisplayName concode_elem_sep void setHandlerClass concode_elem_sep void setHandlerName concode_elem_sep void setId concode_elem_sep CString getHandlerName concode_elem_sep java.lang.String getId concode_elem_sep List<CString> getSoapRole concode_elem_sep List<DescriptionType> getDescription concode_elem_sep List<XsdQNameType> getSoapHeader concode_elem_sep List<IconType> getIcon", "code_tokens": ["FullyQualifiedClassType", "function", "(", ")", "{", "return", "handlerClass", ";", "}"], "nl_tokens": ["gets", "the", "value", "of", "the", "handlerclass", "property", ".", "concode_field_sep", "FullyQualifiedClassType", "handlerClass", "concode_elem_sep", "List", "<", "CString", ">", "soapRole", "concode_elem_sep", "List", "<", "ParamValueType", ">", "initParam", "concode_elem_sep", "List", "<", "DisplayNameType", ">", "displayName", "concode_elem_sep", "List", "<", "XsdQNameType", ">", "soapHeader", "concode_elem_sep", "List", "<", "IconType", ">", "icon", "concode_elem_sep", "List", "<", "DescriptionType", ">", "description", "concode_elem_sep", "CString", "handlerName", "concode_elem_sep", "java", ".", "lang", ".", "String", "id", "concode_field_sep", "List", "<", "ParamValueType", ">", "getInitParam", "concode_elem_sep", "List", "<", "DisplayNameType", ">", "getDisplayName", "concode_elem_sep", "void", "setHandlerClass", "concode_elem_sep", "void", "setHandlerName", "concode_elem_sep", "void", "setId", "concode_elem_sep", "CString", "getHandlerName", "concode_elem_sep", "java", ".", "lang", ".", "String", "getId", "concode_elem_sep", "List", "<", "CString", ">", "getSoapRole", "concode_elem_sep", "List", "<", "DescriptionType", ">", "getDescription", "concode_elem_sep", "List", "<", "XsdQNameType", ">", "getSoapHeader", "concode_elem_sep", "List", "<", "IconType", ">", "getIcon"]}
{"code": "String function ( ) { return title ; }", "nl": "gets the title attribute of the stylesheetinfo object concode_field_sep int AUTHOR concode_elem_sep int USER concode_elem_sep int USER_AGENT concode_elem_sep Stylesheet stylesheet concode_elem_sep int origin concode_elem_sep List mediaTypes concode_elem_sep String title concode_elem_sep String type concode_elem_sep String uri concode_elem_sep String content concode_field_sep void addMedium concode_elem_sep void setContent concode_elem_sep void setStylesheet concode_elem_sep List getMedia concode_elem_sep int getOrigin concode_elem_sep boolean appliesToMedia concode_elem_sep void setOrigin concode_elem_sep String getContent concode_elem_sep void setUri concode_elem_sep void setTitle concode_elem_sep Stylesheet getStylesheet concode_elem_sep void setType concode_elem_sep String getType concode_elem_sep void setMedia concode_elem_sep void setMedia concode_elem_sep boolean isInline concode_elem_sep String getUri", "code_tokens": ["String", "function", "(", ")", "{", "return", "title", ";", "}"], "nl_tokens": ["gets", "the", "title", "attribute", "of", "the", "stylesheetinfo", "object", "concode_field_sep", "int", "AUTHOR", "concode_elem_sep", "int", "USER", "concode_elem_sep", "int", "USER_AGENT", "concode_elem_sep", "Stylesheet", "stylesheet", "concode_elem_sep", "int", "origin", "concode_elem_sep", "List", "mediaTypes", "concode_elem_sep", "String", "title", "concode_elem_sep", "String", "type", "concode_elem_sep", "String", "uri", "concode_elem_sep", "String", "content", "concode_field_sep", "void", "addMedium", "concode_elem_sep", "void", "setContent", "concode_elem_sep", "void", "setStylesheet", "concode_elem_sep", "List", "getMedia", "concode_elem_sep", "int", "getOrigin", "concode_elem_sep", "boolean", "appliesToMedia", "concode_elem_sep", "void", "setOrigin", "concode_elem_sep", "String", "getContent", "concode_elem_sep", "void", "setUri", "concode_elem_sep", "void", "setTitle", "concode_elem_sep", "Stylesheet", "getStylesheet", "concode_elem_sep", "void", "setType", "concode_elem_sep", "String", "getType", "concode_elem_sep", "void", "setMedia", "concode_elem_sep", "void", "setMedia", "concode_elem_sep", "boolean", "isInline", "concode_elem_sep", "String", "getUri"]}
{"code": "String [ ] function ( String arg0 , Map < String , String > arg1 ) { return getNodes ( arg0 , arg1 , String . class ) ; }", "nl": "find the attributes or simple/text nodes concode_field_sep String XML_NAMESPACE concode_elem_sep InputStream stream concode_elem_sep Document doc concode_elem_sep Map<String,String> namespaces concode_field_sep URI[] getLinks concode_elem_sep String getPrefix concode_elem_sep T[] getNodes concode_elem_sep T[] getNodes concode_elem_sep void setBuffering concode_elem_sep String getValue concode_elem_sep String getValue concode_elem_sep T getValue concode_elem_sep URI getLink concode_elem_sep URI getLink concode_elem_sep String getNamespaceURI concode_elem_sep Iterator<?> getPrefixes concode_elem_sep Object readPrimitiveValue concode_elem_sep T getNode concode_elem_sep T getNode concode_elem_sep URI getBaseURI concode_elem_sep Object evaluate concode_elem_sep T readNode", "code_tokens": ["String", "[", "]", "function", "(", "String", "arg0", ",", "Map", "<", "String", ",", "String", ">", "arg1", ")", "{", "return", "getNodes", "(", "arg0", ",", "arg1", ",", "String", ".", "class", ")", ";", "}"], "nl_tokens": ["find", "the", "attributes", "or", "simple", "/", "text", "nodes", "concode_field_sep", "String", "XML_NAMESPACE", "concode_elem_sep", "InputStream", "stream", "concode_elem_sep", "Document", "doc", "concode_elem_sep", "Map", "<", "String", ",", "String", ">", "namespaces", "concode_field_sep", "URI", "[", "]", "getLinks", "concode_elem_sep", "String", "getPrefix", "concode_elem_sep", "T", "[", "]", "getNodes", "concode_elem_sep", "T", "[", "]", "getNodes", "concode_elem_sep", "void", "setBuffering", "concode_elem_sep", "String", "getValue", "concode_elem_sep", "String", "getValue", "concode_elem_sep", "T", "getValue", "concode_elem_sep", "URI", "getLink", "concode_elem_sep", "URI", "getLink", "concode_elem_sep", "String", "getNamespaceURI", "concode_elem_sep", "Iterator", "<", "?", ">", "getPrefixes", "concode_elem_sep", "Object", "readPrimitiveValue", "concode_elem_sep", "T", "getNode", "concode_elem_sep", "T", "getNode", "concode_elem_sep", "URI", "getBaseURI", "concode_elem_sep", "Object", "evaluate", "concode_elem_sep", "T", "readNode"]}
{"code": "byte [ ] function ( ) { return chainCode ; }", "nl": "returns the chain code associated with this key . see the specification to learn more about chain codes . concode_field_sep Joiner PATH_JOINER concode_elem_sep DeterministicKey parent concode_elem_sep ImmutableList<ChildNumber> childNumberPath concode_elem_sep byte[] chainCode concode_elem_sep ECPoint publicAsPoint concode_elem_sep long serialVersionUID concode_elem_sep BigInteger privateAsFieldElement concode_field_sep DeterministicKey getParent concode_elem_sep int getDepth concode_elem_sep ECPoint getPubPoint concode_elem_sep String serializePrivB58 concode_elem_sep String toBase58 concode_elem_sep String serializePubB58 concode_elem_sep byte[] serializePublic concode_elem_sep byte[] getPrivKeyBytes33 concode_elem_sep DeterministicKey getPubOnly concode_elem_sep boolean hasPrivate concode_elem_sep byte[] addChecksum concode_elem_sep ECKey toECKey concode_elem_sep byte[] serialize concode_elem_sep byte[] serializePrivate concode_elem_sep ChildNumber getChildNumber concode_elem_sep byte[] getIdentifier concode_elem_sep String getPath concode_elem_sep BigInteger getPrivAsFieldElement concode_elem_sep byte[] getPubKeyBytes concode_elem_sep String toString concode_elem_sep byte[] getFingerprint concode_elem_sep ImmutableList<ChildNumber> getChildNumberPath concode_elem_sep byte[] getPrivKeyBytes", "code_tokens": ["byte", "[", "]", "function", "(", ")", "{", "return", "chainCode", ";", "}"], "nl_tokens": ["returns", "the", "chain", "code", "associated", "with", "this", "key", ".", "see", "the", "specification", "to", "learn", "more", "about", "chain", "codes", ".", "concode_field_sep", "Joiner", "PATH_JOINER", "concode_elem_sep", "DeterministicKey", "parent", "concode_elem_sep", "ImmutableList", "<", "ChildNumber", ">", "childNumberPath", "concode_elem_sep", "byte", "[", "]", "chainCode", "concode_elem_sep", "ECPoint", "publicAsPoint", "concode_elem_sep", "long", "serialVersionUID", "concode_elem_sep", "BigInteger", "privateAsFieldElement", "concode_field_sep", "DeterministicKey", "getParent", "concode_elem_sep", "int", "getDepth", "concode_elem_sep", "ECPoint", "getPubPoint", "concode_elem_sep", "String", "serializePrivB58", "concode_elem_sep", "String", "toBase58", "concode_elem_sep", "String", "serializePubB58", "concode_elem_sep", "byte", "[", "]", "serializePublic", "concode_elem_sep", "byte", "[", "]", "getPrivKeyBytes33", "concode_elem_sep", "DeterministicKey", "getPubOnly", "concode_elem_sep", "boolean", "hasPrivate", "concode_elem_sep", "byte", "[", "]", "addChecksum", "concode_elem_sep", "ECKey", "toECKey", "concode_elem_sep", "byte", "[", "]", "serialize", "concode_elem_sep", "byte", "[", "]", "serializePrivate", "concode_elem_sep", "ChildNumber", "getChildNumber", "concode_elem_sep", "byte", "[", "]", "getIdentifier", "concode_elem_sep", "String", "getPath", "concode_elem_sep", "BigInteger", "getPrivAsFieldElement", "concode_elem_sep", "byte", "[", "]", "getPubKeyBytes", "concode_elem_sep", "String", "toString", "concode_elem_sep", "byte", "[", "]", "getFingerprint", "concode_elem_sep", "ImmutableList", "<", "ChildNumber", ">", "getChildNumberPath", "concode_elem_sep", "byte", "[", "]", "getPrivKeyBytes"]}
{"code": "void function ( final String arg0 ) { final File loc0 = new File ( \"srini_string\" ) ; loc0 . delete ( ) ; final OutputStream loc1 = new FileOutputStream ( loc0 ) ; final Reader loc2 = new StringReader ( arg0 ) ; IOUtils . copy ( loc2 , loc1 ) ; loc1 . flush ( ) ; loc1 . close ( ) ; loc2 . close ( ) ; }", "nl": "just for debugging xml feeds . concode_field_sep RestSearcher<YouTubeGDataVideo> m_searcher concode_elem_sep Logger m_log concode_elem_sep DocumentBuilder m_documentBuilder concode_field_sep RestResults<YouTubeGDataVideo> processResults", "code_tokens": ["void", "function", "(", "final", "String", "arg0", ")", "{", "final", "File", "loc0", "=", "new", "File", "(", "\"srini_string\"", ")", ";", "loc0", ".", "delete", "(", ")", ";", "final", "OutputStream", "loc1", "=", "new", "FileOutputStream", "(", "loc0", ")", ";", "final", "Reader", "loc2", "=", "new", "StringReader", "(", "arg0", ")", ";", "IOUtils", ".", "copy", "(", "loc2", ",", "loc1", ")", ";", "loc1", ".", "flush", "(", ")", ";", "loc1", ".", "close", "(", ")", ";", "loc2", ".", "close", "(", ")", ";", "}"], "nl_tokens": ["just", "for", "debugging", "xml", "feeds", ".", "concode_field_sep", "RestSearcher", "<", "YouTubeGDataVideo", ">", "m_searcher", "concode_elem_sep", "Logger", "m_log", "concode_elem_sep", "DocumentBuilder", "m_documentBuilder", "concode_field_sep", "RestResults", "<", "YouTubeGDataVideo", ">", "processResults"]}
{"code": "boolean function ( ) { return StringUtils . contains ( content , \"srini_string\" ) || StringUtils . contains ( content , \"srini_string\" ) ; }", "nl": "check for connection reset concode_field_sep long duration concode_elem_sep String content concode_field_sep void setDuration concode_elem_sep void setContent concode_elem_sep long getDuration concode_elem_sep boolean isReadTimedOut concode_elem_sep boolean isSOAPFault concode_elem_sep String getContent concode_elem_sep boolean isEmptyResponse", "code_tokens": ["boolean", "function", "(", ")", "{", "return", "StringUtils", ".", "contains", "(", "content", ",", "\"srini_string\"", ")", "|", "|", "StringUtils", ".", "contains", "(", "content", ",", "\"srini_string\"", ")", ";", "}"], "nl_tokens": ["check", "for", "connection", "reset", "concode_field_sep", "long", "duration", "concode_elem_sep", "String", "content", "concode_field_sep", "void", "setDuration", "concode_elem_sep", "void", "setContent", "concode_elem_sep", "long", "getDuration", "concode_elem_sep", "boolean", "isReadTimedOut", "concode_elem_sep", "boolean", "isSOAPFault", "concode_elem_sep", "String", "getContent", "concode_elem_sep", "boolean", "isEmptyResponse"]}
{"code": "void function ( ) { if ( ! mc . getSecurityContext ( ) . isSecure ( ) ) { LOG . warning ( \"srini_string\" ) ; if ( blockUnsecureRequests ) { throw ExceptionUtils . toBadRequestException ( null , null ) ; } } }", "nl": "https is the default transport for oauth 2.0 services . by default this method will issue a warning for open endpoints concode_field_sep Logger LOG concode_elem_sep MessageContext mc concode_elem_sep OAuthDataProvider dataProvider concode_elem_sep boolean writeOptionalParameters concode_elem_sep boolean blockUnsecureRequests concode_elem_sep Method dataProviderContextMethod concode_field_sep boolean isWriteOptionalParameters concode_elem_sep void setMessageContext concode_elem_sep void setBlockUnsecureRequests concode_elem_sep OAuthDataProvider getDataProvider concode_elem_sep MultivaluedMap<String,String> getQueryParameters concode_elem_sep Client getValidClient concode_elem_sep Client getValidClient concode_elem_sep void reportInvalidRequestError concode_elem_sep void reportInvalidRequestError concode_elem_sep void reportInvalidRequestError concode_elem_sep void reportInvalidRequestError concode_elem_sep void setDataProvider concode_elem_sep void setWriteOptionalParameters concode_elem_sep MessageContext getMessageContext", "code_tokens": ["void", "function", "(", ")", "{", "if", "(", "!", "mc", ".", "getSecurityContext", "(", ")", ".", "isSecure", "(", ")", ")", "{", "LOG", ".", "warning", "(", "\"srini_string\"", ")", ";", "if", "(", "blockUnsecureRequests", ")", "{", "throw", "ExceptionUtils", ".", "toBadRequestException", "(", "null", ",", "null", ")", ";", "}", "}", "}"], "nl_tokens": ["https", "is", "the", "default", "transport", "for", "oauth", "2.0", "services", ".", "by", "default", "this", "method", "will", "issue", "a", "warning", "for", "open", "endpoints", "concode_field_sep", "Logger", "LOG", "concode_elem_sep", "MessageContext", "mc", "concode_elem_sep", "OAuthDataProvider", "dataProvider", "concode_elem_sep", "boolean", "writeOptionalParameters", "concode_elem_sep", "boolean", "blockUnsecureRequests", "concode_elem_sep", "Method", "dataProviderContextMethod", "concode_field_sep", "boolean", "isWriteOptionalParameters", "concode_elem_sep", "void", "setMessageContext", "concode_elem_sep", "void", "setBlockUnsecureRequests", "concode_elem_sep", "OAuthDataProvider", "getDataProvider", "concode_elem_sep", "MultivaluedMap", "<", "String", ",", "String", ">", "getQueryParameters", "concode_elem_sep", "Client", "getValidClient", "concode_elem_sep", "Client", "getValidClient", "concode_elem_sep", "void", "reportInvalidRequestError", "concode_elem_sep", "void", "reportInvalidRequestError", "concode_elem_sep", "void", "reportInvalidRequestError", "concode_elem_sep", "void", "reportInvalidRequestError", "concode_elem_sep", "void", "setDataProvider", "concode_elem_sep", "void", "setWriteOptionalParameters", "concode_elem_sep", "MessageContext", "getMessageContext"]}
{"code": "void function ( String arg0 , String arg1 ) { revisionInformation = RevisionManagement . getRevisionInformation ( arg0 , arg1 ) ; }", "nl": "save old revision information of graph concode_field_sep HashMap<String,String> oldRevisionGraphMap concode_elem_sep Logger logger concode_elem_sep String revisionInformation concode_field_sep String getaddSetUri concode_elem_sep void saveGraphVorMergingInMap concode_elem_sep String getPatchUserUri concode_elem_sep String getRevisionNumber concode_elem_sep String getCommitUri concode_elem_sep boolean isFastForward concode_elem_sep LinkedList<String> createAddedOrRemovedTripleSet concode_elem_sep String loadGraphVorMerging concode_elem_sep String getPatchMessage concode_elem_sep String getdeleteSetUri concode_elem_sep String loadGraphVorMergingFromMap concode_elem_sep String createRebaseQuery", "code_tokens": ["void", "function", "(", "String", "arg0", ",", "String", "arg1", ")", "{", "revisionInformation", "=", "RevisionManagement", ".", "getRevisionInformation", "(", "arg0", ",", "arg1", ")", ";", "}"], "nl_tokens": ["save", "old", "revision", "information", "of", "graph", "concode_field_sep", "HashMap", "<", "String", ",", "String", ">", "oldRevisionGraphMap", "concode_elem_sep", "Logger", "logger", "concode_elem_sep", "String", "revisionInformation", "concode_field_sep", "String", "getaddSetUri", "concode_elem_sep", "void", "saveGraphVorMergingInMap", "concode_elem_sep", "String", "getPatchUserUri", "concode_elem_sep", "String", "getRevisionNumber", "concode_elem_sep", "String", "getCommitUri", "concode_elem_sep", "boolean", "isFastForward", "concode_elem_sep", "LinkedList", "<", "String", ">", "createAddedOrRemovedTripleSet", "concode_elem_sep", "String", "loadGraphVorMerging", "concode_elem_sep", "String", "getPatchMessage", "concode_elem_sep", "String", "getdeleteSetUri", "concode_elem_sep", "String", "loadGraphVorMergingFromMap", "concode_elem_sep", "String", "createRebaseQuery"]}
{"code": "Class < ? extends Service > function ( ) { return UUIDService . class ; }", "nl": "return the public interface for uuid service . concode_field_sep String systemId concode_elem_sep String startTime concode_elem_sep String CONF_PREFIX concode_elem_sep AtomicLong counter concode_elem_sep char type concode_elem_sep String CONF_GENERATOR concode_field_sep void init concode_elem_sep String generateChildId concode_elem_sep char getType concode_elem_sep String longPadding concode_elem_sep String generateId concode_elem_sep void destroy concode_elem_sep String getId concode_elem_sep String getChildName", "code_tokens": ["Class", "<", "?", "extends", "Service", ">", "function", "(", ")", "{", "return", "UUIDService", ".", "class", ";", "}"], "nl_tokens": ["return", "the", "public", "interface", "for", "uuid", "service", ".", "concode_field_sep", "String", "systemId", "concode_elem_sep", "String", "startTime", "concode_elem_sep", "String", "CONF_PREFIX", "concode_elem_sep", "AtomicLong", "counter", "concode_elem_sep", "char", "type", "concode_elem_sep", "String", "CONF_GENERATOR", "concode_field_sep", "void", "init", "concode_elem_sep", "String", "generateChildId", "concode_elem_sep", "char", "getType", "concode_elem_sep", "String", "longPadding", "concode_elem_sep", "String", "generateId", "concode_elem_sep", "void", "destroy", "concode_elem_sep", "String", "getId", "concode_elem_sep", "String", "getChildName"]}
{"code": "void function ( ) { File loc0 = storage . getBackupDir ( ) ; if ( loc0 == null ) return ; backup ( loc0 ) ; }", "nl": "backup all notebooks concode_field_sep Book preview concode_elem_sep String QUILL_EXTENSION concode_elem_sep LinkedList<BookPreview> data concode_elem_sep Bookshelf instance concode_elem_sep String TAG concode_elem_sep String TAG concode_elem_sep Storage storage concode_elem_sep Book currentBook concode_elem_sep UUID uuid concode_field_sep int compare concode_elem_sep BookPreview getPreview concode_elem_sep BookPreview getPreview concode_elem_sep void reloadPreview concode_elem_sep void backupDescription concode_elem_sep void setCurrentBook concode_elem_sep void setCurrentBook concode_elem_sep void assertNoCurrentBook concode_elem_sep void importBook concode_elem_sep Bitmap getThumbnail concode_elem_sep void deleteBook concode_elem_sep void exportBook concode_elem_sep String getTitle concode_elem_sep void reload concode_elem_sep UUID getUUID concode_elem_sep Bookshelf getBookshelf concode_elem_sep void newBook concode_elem_sep void sortBookPreviewList concode_elem_sep int getCount concode_elem_sep void importBookDirectory concode_elem_sep String getSummary concode_elem_sep BookPreview getCurrentBookPreview concode_elem_sep void deleteFromStorage concode_elem_sep Book getCurrentBook concode_elem_sep Time getLastModifiedTime concode_elem_sep LinkedList<BookPreview> getBookPreviewList concode_elem_sep void exportCurrentBook concode_elem_sep void createFirstNotebook concode_elem_sep void finalize concode_elem_sep void initialize", "code_tokens": ["void", "function", "(", ")", "{", "File", "loc0", "=", "storage", ".", "getBackupDir", "(", ")", ";", "if", "(", "loc0", "==", "null", ")", "return", ";", "backup", "(", "loc0", ")", ";", "}"], "nl_tokens": ["backup", "all", "notebooks", "concode_field_sep", "Book", "preview", "concode_elem_sep", "String", "QUILL_EXTENSION", "concode_elem_sep", "LinkedList", "<", "BookPreview", ">", "data", "concode_elem_sep", "Bookshelf", "instance", "concode_elem_sep", "String", "TAG", "concode_elem_sep", "String", "TAG", "concode_elem_sep", "Storage", "storage", "concode_elem_sep", "Book", "currentBook", "concode_elem_sep", "UUID", "uuid", "concode_field_sep", "int", "compare", "concode_elem_sep", "BookPreview", "getPreview", "concode_elem_sep", "BookPreview", "getPreview", "concode_elem_sep", "void", "reloadPreview", "concode_elem_sep", "void", "backupDescription", "concode_elem_sep", "void", "setCurrentBook", "concode_elem_sep", "void", "setCurrentBook", "concode_elem_sep", "void", "assertNoCurrentBook", "concode_elem_sep", "void", "importBook", "concode_elem_sep", "Bitmap", "getThumbnail", "concode_elem_sep", "void", "deleteBook", "concode_elem_sep", "void", "exportBook", "concode_elem_sep", "String", "getTitle", "concode_elem_sep", "void", "reload", "concode_elem_sep", "UUID", "getUUID", "concode_elem_sep", "Bookshelf", "getBookshelf", "concode_elem_sep", "void", "newBook", "concode_elem_sep", "void", "sortBookPreviewList", "concode_elem_sep", "int", "getCount", "concode_elem_sep", "void", "importBookDirectory", "concode_elem_sep", "String", "getSummary", "concode_elem_sep", "BookPreview", "getCurrentBookPreview", "concode_elem_sep", "void", "deleteFromStorage", "concode_elem_sep", "Book", "getCurrentBook", "concode_elem_sep", "Time", "getLastModifiedTime", "concode_elem_sep", "LinkedList", "<", "BookPreview", ">", "getBookPreviewList", "concode_elem_sep", "void", "exportCurrentBook", "concode_elem_sep", "void", "createFirstNotebook", "concode_elem_sep", "void", "finalize", "concode_elem_sep", "void", "initialize"]}
{"code": "void function ( Date arg0 ) { GregorianCalendar loc0 = new GregorianCalendar ( ) ; loc0 . setTime ( arg0 ) ; double loc1 = loc0 . get ( Calendar . SECOND ) + ( loc0 . get ( Calendar . MILLISECOND ) / 1000.0 ) ; setHour ( loc0 . get ( Calendar . HOUR_OF_DAY ) ) ; setMinutes ( loc0 . get ( Calendar . MINUTE ) ) ; setSeconds ( loc1 ) ; }", "nl": "set the time by java.util.date . the date information of is ignored , only hours , minutes and seconds are relevant . notice also that time zone offset is not affected by this method because java.util.date does not contain zone offset . concode_field_sep int offsetHours concode_elem_sep int offsetMinutes concode_elem_sep double seconds concode_elem_sep int minutes concode_elem_sep int hour concode_elem_sep String TIME_PATTERN concode_field_sep int getOffsetHours concode_elem_sep Date toDate concode_elem_sep String toISO8601 concode_elem_sep void setMinutes concode_elem_sep void setHour concode_elem_sep long getMilliseconds concode_elem_sep void setOffsetMinutes concode_elem_sep int getMinutes concode_elem_sep double getSeconds concode_elem_sep int hashCode concode_elem_sep void setSeconds concode_elem_sep boolean equals concode_elem_sep int getOffsetMinutes concode_elem_sep int getHour concode_elem_sep String toString concode_elem_sep void setOffsetHours", "code_tokens": ["void", "function", "(", "Date", "arg0", ")", "{", "GregorianCalendar", "loc0", "=", "new", "GregorianCalendar", "(", ")", ";", "loc0", ".", "setTime", "(", "arg0", ")", ";", "double", "loc1", "=", "loc0", ".", "get", "(", "Calendar", ".", "SECOND", ")", "+", "(", "loc0", ".", "get", "(", "Calendar", ".", "MILLISECOND", ")", "/", "1000.0", ")", ";", "setHour", "(", "loc0", ".", "get", "(", "Calendar", ".", "HOUR_OF_DAY", ")", ")", ";", "setMinutes", "(", "loc0", ".", "get", "(", "Calendar", ".", "MINUTE", ")", ")", ";", "setSeconds", "(", "loc1", ")", ";", "}"], "nl_tokens": ["set", "the", "time", "by", "java", ".", "util", ".", "date", ".", "the", "date", "information", "of", "is", "ignored", ",", "only", "hours", ",", "minutes", "and", "seconds", "are", "relevant", ".", "notice", "also", "that", "time", "zone", "offset", "is", "not", "affected", "by", "this", "method", "because", "java", ".", "util", ".", "date", "does", "not", "contain", "zone", "offset", ".", "concode_field_sep", "int", "offsetHours", "concode_elem_sep", "int", "offsetMinutes", "concode_elem_sep", "double", "seconds", "concode_elem_sep", "int", "minutes", "concode_elem_sep", "int", "hour", "concode_elem_sep", "String", "TIME_PATTERN", "concode_field_sep", "int", "getOffsetHours", "concode_elem_sep", "Date", "toDate", "concode_elem_sep", "String", "toISO8601", "concode_elem_sep", "void", "setMinutes", "concode_elem_sep", "void", "setHour", "concode_elem_sep", "long", "getMilliseconds", "concode_elem_sep", "void", "setOffsetMinutes", "concode_elem_sep", "int", "getMinutes", "concode_elem_sep", "double", "getSeconds", "concode_elem_sep", "int", "hashCode", "concode_elem_sep", "void", "setSeconds", "concode_elem_sep", "boolean", "equals", "concode_elem_sep", "int", "getOffsetMinutes", "concode_elem_sep", "int", "getHour", "concode_elem_sep", "String", "toString", "concode_elem_sep", "void", "setOffsetHours"]}
{"code": "void function ( int arg0 ) { this . grado = arg0 ; }", "nl": "asigna un nuevo grado al polonomio concode_field_sep int grado concode_elem_sep int[] coef concode_field_sep boolean igualA concode_elem_sep void setCoeficientes concode_elem_sep int getGrado concode_elem_sep int getCoeficiente concode_elem_sep String toString concode_elem_sep void setCoeficiente concode_elem_sep int[] getCoeficientes", "code_tokens": ["void", "function", "(", "int", "arg0", ")", "{", "this", ".", "grado", "=", "arg0", ";", "}"], "nl_tokens": ["asigna", "un", "nuevo", "grado", "al", "polonomio", "concode_field_sep", "int", "grado", "concode_elem_sep", "int", "[", "]", "coef", "concode_field_sep", "boolean", "igualA", "concode_elem_sep", "void", "setCoeficientes", "concode_elem_sep", "int", "getGrado", "concode_elem_sep", "int", "getCoeficiente", "concode_elem_sep", "String", "toString", "concode_elem_sep", "void", "setCoeficiente", "concode_elem_sep", "int", "[", "]", "getCoeficientes"]}
{"code": "boolean function ( final ByteBufferExt arg0 ) { final int loc0 = arg0 . position ( ) + RudpConstants . CHECKSUM_INDEX ; final UInt loc1 = arg0 . getUInt ( loc0 ) ; final UInt loc2 = new UIntImpl ( 0 ) ; arg0 . putUInt ( loc0 , loc2 ) ; final UInt loc3 = getChecksum ( arg0 ) ; return loc1 . equals ( loc3 ) ; }", "nl": "returns whether the checksum held in a byte buffer holding a rudp segment is correct . concode_field_sep PlaceHolder placeHolder concode_field_sep RudpConnectionId toId concode_elem_sep byte safeGet concode_elem_sep UInt getChecksum concode_elem_sep UInt getChecksum concode_elem_sep RudpListeningConnectionId toListeningId", "code_tokens": ["boolean", "function", "(", "final", "ByteBufferExt", "arg0", ")", "{", "final", "int", "loc0", "=", "arg0", ".", "position", "(", ")", "+", "RudpConstants", ".", "CHECKSUM_INDEX", ";", "final", "UInt", "loc1", "=", "arg0", ".", "getUInt", "(", "loc0", ")", ";", "final", "UInt", "loc2", "=", "new", "UIntImpl", "(", "0", ")", ";", "arg0", ".", "putUInt", "(", "loc0", ",", "loc2", ")", ";", "final", "UInt", "loc3", "=", "getChecksum", "(", "arg0", ")", ";", "return", "loc1", ".", "equals", "(", "loc3", ")", ";", "}"], "nl_tokens": ["returns", "whether", "the", "checksum", "held", "in", "a", "byte", "buffer", "holding", "a", "rudp", "segment", "is", "correct", ".", "concode_field_sep", "PlaceHolder", "placeHolder", "concode_field_sep", "RudpConnectionId", "toId", "concode_elem_sep", "byte", "safeGet", "concode_elem_sep", "UInt", "getChecksum", "concode_elem_sep", "UInt", "getChecksum", "concode_elem_sep", "RudpListeningConnectionId", "toListeningId"]}
{"code": "java . lang . String function ( ) { return literalName ; }", "nl": "returns a string representation of the enumeration value . concode_field_sep ParameterDirectionKindEnum PDK_INOUT concode_elem_sep java.util.List typeName concode_elem_sep ParameterDirectionKindEnum PDK_RETURN concode_elem_sep ParameterDirectionKindEnum PDK_OUT concode_elem_sep ParameterDirectionKindEnum PDK_IN concode_elem_sep java.lang.String literalName concode_field_sep java.lang.Object readResolve concode_elem_sep ParameterDirectionKind forName concode_elem_sep java.util.List refTypeName concode_elem_sep int hashCode concode_elem_sep boolean equals", "code_tokens": ["java", ".", "lang", ".", "String", "function", "(", ")", "{", "return", "literalName", ";", "}"], "nl_tokens": ["returns", "a", "string", "representation", "of", "the", "enumeration", "value", ".", "concode_field_sep", "ParameterDirectionKindEnum", "PDK_INOUT", "concode_elem_sep", "java", ".", "util", ".", "List", "typeName", "concode_elem_sep", "ParameterDirectionKindEnum", "PDK_RETURN", "concode_elem_sep", "ParameterDirectionKindEnum", "PDK_OUT", "concode_elem_sep", "ParameterDirectionKindEnum", "PDK_IN", "concode_elem_sep", "java", ".", "lang", ".", "String", "literalName", "concode_field_sep", "java", ".", "lang", ".", "Object", "readResolve", "concode_elem_sep", "ParameterDirectionKind", "forName", "concode_elem_sep", "java", ".", "util", ".", "List", "refTypeName", "concode_elem_sep", "int", "hashCode", "concode_elem_sep", "boolean", "equals"]}
{"code": "String function ( ) { return elem2 ; }", "nl": "gets the value of the elem2 property . concode_field_sep String elem2 concode_elem_sep String elem1 concode_elem_sep int elem3 concode_field_sep int getElem3 concode_elem_sep String getElem1 concode_elem_sep void setElem2 concode_elem_sep void setElem1 concode_elem_sep void setElem3", "code_tokens": ["String", "function", "(", ")", "{", "return", "elem2", ";", "}"], "nl_tokens": ["gets", "the", "value", "of", "the", "elem2", "property", ".", "concode_field_sep", "String", "elem2", "concode_elem_sep", "String", "elem1", "concode_elem_sep", "int", "elem3", "concode_field_sep", "int", "getElem3", "concode_elem_sep", "String", "getElem1", "concode_elem_sep", "void", "setElem2", "concode_elem_sep", "void", "setElem1", "concode_elem_sep", "void", "setElem3"]}
{"code": "boolean function ( ) { if ( s2 . next ( ) ) return true ; else { s2 . beforeFirst ( ) ; return s2 . next ( ) && s1 . next ( ) ; } }", "nl": "moves the scan to the next record . the method moves to the next rhs record , if possible . otherwise , it moves to the next lhs record and the first rhs record . if there are no more lhs records , the method returns false . concode_field_sep Scan s1 concode_elem_sep Scan s2 concode_field_sep int getInt concode_elem_sep Constant getVal concode_elem_sep void beforeFirst concode_elem_sep String getString concode_elem_sep void close concode_elem_sep boolean hasField", "code_tokens": ["boolean", "function", "(", ")", "{", "if", "(", "s2", ".", "next", "(", ")", ")", "return", "true", ";", "else", "{", "s2", ".", "beforeFirst", "(", ")", ";", "return", "s2", ".", "next", "(", ")", "&", "&", "s1", ".", "next", "(", ")", ";", "}", "}"], "nl_tokens": ["moves", "the", "scan", "to", "the", "next", "record", ".", "the", "method", "moves", "to", "the", "next", "rhs", "record", ",", "if", "possible", ".", "otherwise", ",", "it", "moves", "to", "the", "next", "lhs", "record", "and", "the", "first", "rhs", "record", ".", "if", "there", "are", "no", "more", "lhs", "records", ",", "the", "method", "returns", "false", ".", "concode_field_sep", "Scan", "s1", "concode_elem_sep", "Scan", "s2", "concode_field_sep", "int", "getInt", "concode_elem_sep", "Constant", "getVal", "concode_elem_sep", "void", "beforeFirst", "concode_elem_sep", "String", "getString", "concode_elem_sep", "void", "close", "concode_elem_sep", "boolean", "hasField"]}
{"code": "void function ( ) { SimpleDB . bufferMgr ( ) . flushAll ( txnum ) ; recoveryMgr . recover ( ) ; }", "nl": "flushes all modified buffers . then goes through the log , rolling back all uncommitted transactions . finally , writes a quiescent checkpoint record to the log . this method is called only during system startup , before user transactions begin . concode_field_sep RecoveryMgr recoveryMgr concode_elem_sep BufferList myBuffers concode_elem_sep ConcurrencyMgr concurMgr concode_elem_sep int END_OF_FILE concode_elem_sep int txnum concode_elem_sep int nextTxNum concode_field_sep void rollback concode_elem_sep int getInt concode_elem_sep void setString concode_elem_sep void pin concode_elem_sep int size concode_elem_sep void commit concode_elem_sep void unpin concode_elem_sep String getString concode_elem_sep int nextTxNumber concode_elem_sep Block append concode_elem_sep void setInt", "code_tokens": ["void", "function", "(", ")", "{", "SimpleDB", ".", "bufferMgr", "(", ")", ".", "flushAll", "(", "txnum", ")", ";", "recoveryMgr", ".", "recover", "(", ")", ";", "}"], "nl_tokens": ["flushes", "all", "modified", "buffers", ".", "then", "goes", "through", "the", "log", ",", "rolling", "back", "all", "uncommitted", "transactions", ".", "finally", ",", "writes", "a", "quiescent", "checkpoint", "record", "to", "the", "log", ".", "this", "method", "is", "called", "only", "during", "system", "startup", ",", "before", "user", "transactions", "begin", ".", "concode_field_sep", "RecoveryMgr", "recoveryMgr", "concode_elem_sep", "BufferList", "myBuffers", "concode_elem_sep", "ConcurrencyMgr", "concurMgr", "concode_elem_sep", "int", "END_OF_FILE", "concode_elem_sep", "int", "txnum", "concode_elem_sep", "int", "nextTxNum", "concode_field_sep", "void", "rollback", "concode_elem_sep", "int", "getInt", "concode_elem_sep", "void", "setString", "concode_elem_sep", "void", "pin", "concode_elem_sep", "int", "size", "concode_elem_sep", "void", "commit", "concode_elem_sep", "void", "unpin", "concode_elem_sep", "String", "getString", "concode_elem_sep", "int", "nextTxNumber", "concode_elem_sep", "Block", "append", "concode_elem_sep", "void", "setInt"]}
{"code": "void function ( DAVTransaction arg0 , DAVResource arg1 ) { try { arg1 . delete ( ) ; arg0 . setStatus ( 204 ) ; } catch ( DAVMultiStatus loc0 ) { loc0 . write ( arg0 ) ; } }", "nl": "process the delete method . concode_field_sep PlaceHolder placeHolder concode_field_sep placeholderType placeHolder", "code_tokens": ["void", "function", "(", "DAVTransaction", "arg0", ",", "DAVResource", "arg1", ")", "{", "try", "{", "arg1", ".", "delete", "(", ")", ";", "arg0", ".", "setStatus", "(", "204", ")", ";", "}", "catch", "(", "DAVMultiStatus", "loc0", ")", "{", "loc0", ".", "write", "(", "arg0", ")", ";", "}", "}"], "nl_tokens": ["process", "the", "delete", "method", ".", "concode_field_sep", "PlaceHolder", "placeHolder", "concode_field_sep", "placeholderType", "placeHolder"]}
{"code": "Object function ( String arg0 ) { for ( Object loc0 : obsoleteFeatures ) { if ( Model . getFacade ( ) . isAMethod ( loc0 ) && arg0 . equals ( Model . getFacade ( ) . getName ( loc0 ) ) ) { return loc0 ; } } return null ; }", "nl": "get a method from the current classifier not yet modeled . concode_field_sep String classnamePrefix concode_elem_sep Logger LOG concode_elem_sep Collection obsoleteInnerClasses concode_elem_sep Object component concode_elem_sep int anonymousClassCounter concode_elem_sep Context context concode_elem_sep Object classifier concode_elem_sep Collection obsoleteFeatures concode_field_sep void addClassifierContext concode_elem_sep void addPackageContext concode_elem_sep void removeObsoleteFeatures concode_elem_sep void innerClassifier concode_elem_sep void addComponent concode_elem_sep void outerClassifier concode_elem_sep Object getClassifier concode_elem_sep Object getFeature concode_elem_sep void removeObsoleteInnerClasses concode_elem_sep Object getAttribute concode_elem_sep void feature concode_elem_sep Collection getFeatures concode_elem_sep String getClassnamePrefix concode_elem_sep Object getOperation concode_elem_sep Object getComponent concode_elem_sep String anonymousClass concode_elem_sep Context getContext", "code_tokens": ["Object", "function", "(", "String", "arg0", ")", "{", "for", "(", "Object", "loc0", ":", "obsoleteFeatures", ")", "{", "if", "(", "Model", ".", "getFacade", "(", ")", ".", "isAMethod", "(", "loc0", ")", "&", "&", "arg0", ".", "equals", "(", "Model", ".", "getFacade", "(", ")", ".", "getName", "(", "loc0", ")", ")", ")", "{", "return", "loc0", ";", "}", "}", "return", "null", ";", "}"], "nl_tokens": ["get", "a", "method", "from", "the", "current", "classifier", "not", "yet", "modeled", ".", "concode_field_sep", "String", "classnamePrefix", "concode_elem_sep", "Logger", "LOG", "concode_elem_sep", "Collection", "obsoleteInnerClasses", "concode_elem_sep", "Object", "component", "concode_elem_sep", "int", "anonymousClassCounter", "concode_elem_sep", "Context", "context", "concode_elem_sep", "Object", "classifier", "concode_elem_sep", "Collection", "obsoleteFeatures", "concode_field_sep", "void", "addClassifierContext", "concode_elem_sep", "void", "addPackageContext", "concode_elem_sep", "void", "removeObsoleteFeatures", "concode_elem_sep", "void", "innerClassifier", "concode_elem_sep", "void", "addComponent", "concode_elem_sep", "void", "outerClassifier", "concode_elem_sep", "Object", "getClassifier", "concode_elem_sep", "Object", "getFeature", "concode_elem_sep", "void", "removeObsoleteInnerClasses", "concode_elem_sep", "Object", "getAttribute", "concode_elem_sep", "void", "feature", "concode_elem_sep", "Collection", "getFeatures", "concode_elem_sep", "String", "getClassnamePrefix", "concode_elem_sep", "Object", "getOperation", "concode_elem_sep", "Object", "getComponent", "concode_elem_sep", "String", "anonymousClass", "concode_elem_sep", "Context", "getContext"]}
{"code": "void function ( int arg0 ) { waitFor ( arg0 ) ; }", "nl": "pause for concode_field_sep int spinTime concode_elem_sep int[] recordedMovement concode_elem_sep int speed concode_elem_sep int cycleTime concode_elem_sep int MOVED_SPINRIGHT concode_elem_sep GeneralMotorConSchedule ourInstance concode_elem_sep int MOVED_RIGHT concode_elem_sep int MOVED_CYCLELEFT concode_elem_sep int MOVED_LOWERALT concode_elem_sep int cycleSpeed concode_elem_sep int cycleSpinSpeed concode_elem_sep int sideTime concode_elem_sep int runningThreads concode_elem_sep int altitudeSpeed concode_elem_sep int altitudeTime concode_elem_sep int batLvl concode_elem_sep int spinSpeed concode_elem_sep int hoverTime concode_elem_sep int MOVED_RAISEALT concode_elem_sep ARDrone drone concode_elem_sep int MOVED_CYCLERIGHT concode_elem_sep int runningID concode_elem_sep int MOVED_SPINLEFT concode_elem_sep int MOVED_BACKWARD concode_elem_sep int MOVED_FORWARD concode_elem_sep String TAG concode_elem_sep int MOVED_LEFT concode_elem_sep int spin90Time concode_elem_sep CommandManager cmd concode_elem_sep boolean printToConsole concode_elem_sep int spin90Speed concode_field_sep GeneralMotorConSchedule spin90Left concode_elem_sep boolean isRunningThread concode_elem_sep GeneralMotorConSchedule lowerAltitude concode_elem_sep GeneralMotorConSchedule hover concode_elem_sep GeneralMotorConSchedule spin90Right concode_elem_sep GeneralMotorConSchedule cycleRight concode_elem_sep GeneralMotorConSchedule backward concode_elem_sep void setBatLvl concode_elem_sep void waitFor concode_elem_sep int getBatLvl concode_elem_sep void onStop concode_elem_sep GeneralMotorConSchedule raiseAltitude concode_elem_sep GeneralMotorConSchedule cycleLeft concode_elem_sep GeneralMotorConSchedule spinRight concode_elem_sep void addLastMovement concode_elem_sep int getLastMovement concode_elem_sep int newRunningThread concode_elem_sep GeneralMotorConSchedule takeoff concode_elem_sep GeneralMotorConSchedule forward concode_elem_sep GeneralMotorConSchedule spinLeft concode_elem_sep GeneralMotorConSchedule right concode_elem_sep GeneralMotorConSchedule right concode_elem_sep void landing concode_elem_sep void setDrone concode_elem_sep GeneralMotorConSchedule left concode_elem_sep GeneralMotorConSchedule left concode_elem_sep GeneralMotorConSchedule getInstance", "code_tokens": ["void", "function", "(", "int", "arg0", ")", "{", "waitFor", "(", "arg0", ")", ";", "}"], "nl_tokens": ["pause", "for", "concode_field_sep", "int", "spinTime", "concode_elem_sep", "int", "[", "]", "recordedMovement", "concode_elem_sep", "int", "speed", "concode_elem_sep", "int", "cycleTime", "concode_elem_sep", "int", "MOVED_SPINRIGHT", "concode_elem_sep", "GeneralMotorConSchedule", "ourInstance", "concode_elem_sep", "int", "MOVED_RIGHT", "concode_elem_sep", "int", "MOVED_CYCLELEFT", "concode_elem_sep", "int", "MOVED_LOWERALT", "concode_elem_sep", "int", "cycleSpeed", "concode_elem_sep", "int", "cycleSpinSpeed", "concode_elem_sep", "int", "sideTime", "concode_elem_sep", "int", "runningThreads", "concode_elem_sep", "int", "altitudeSpeed", "concode_elem_sep", "int", "altitudeTime", "concode_elem_sep", "int", "batLvl", "concode_elem_sep", "int", "spinSpeed", "concode_elem_sep", "int", "hoverTime", "concode_elem_sep", "int", "MOVED_RAISEALT", "concode_elem_sep", "ARDrone", "drone", "concode_elem_sep", "int", "MOVED_CYCLERIGHT", "concode_elem_sep", "int", "runningID", "concode_elem_sep", "int", "MOVED_SPINLEFT", "concode_elem_sep", "int", "MOVED_BACKWARD", "concode_elem_sep", "int", "MOVED_FORWARD", "concode_elem_sep", "String", "TAG", "concode_elem_sep", "int", "MOVED_LEFT", "concode_elem_sep", "int", "spin90Time", "concode_elem_sep", "CommandManager", "cmd", "concode_elem_sep", "boolean", "printToConsole", "concode_elem_sep", "int", "spin90Speed", "concode_field_sep", "GeneralMotorConSchedule", "spin90Left", "concode_elem_sep", "boolean", "isRunningThread", "concode_elem_sep", "GeneralMotorConSchedule", "lowerAltitude", "concode_elem_sep", "GeneralMotorConSchedule", "hover", "concode_elem_sep", "GeneralMotorConSchedule", "spin90Right", "concode_elem_sep", "GeneralMotorConSchedule", "cycleRight", "concode_elem_sep", "GeneralMotorConSchedule", "backward", "concode_elem_sep", "void", "setBatLvl", "concode_elem_sep", "void", "waitFor", "concode_elem_sep", "int", "getBatLvl", "concode_elem_sep", "void", "onStop", "concode_elem_sep", "GeneralMotorConSchedule", "raiseAltitude", "concode_elem_sep", "GeneralMotorConSchedule", "cycleLeft", "concode_elem_sep", "GeneralMotorConSchedule", "spinRight", "concode_elem_sep", "void", "addLastMovement", "concode_elem_sep", "int", "getLastMovement", "concode_elem_sep", "int", "newRunningThread", "concode_elem_sep", "GeneralMotorConSchedule", "takeoff", "concode_elem_sep", "GeneralMotorConSchedule", "forward", "concode_elem_sep", "GeneralMotorConSchedule", "spinLeft", "concode_elem_sep", "GeneralMotorConSchedule", "right", "concode_elem_sep", "GeneralMotorConSchedule", "right", "concode_elem_sep", "void", "landing", "concode_elem_sep", "void", "setDrone", "concode_elem_sep", "GeneralMotorConSchedule", "left", "concode_elem_sep", "GeneralMotorConSchedule", "left", "concode_elem_sep", "GeneralMotorConSchedule", "getInstance"]}
{"code": "int function ( long arg0 ) { checkArgument ( ( arg0 >> Integer . SIZE ) == 0 , \"srini_string\" , arg0 ) ; return ( int ) arg0 ; }", "nl": "returns the int value that , when treated as unsigned , is equal to value , if possible . concode_field_sep long INT_MASK concode_field_sep int compare concode_elem_sep int compare concode_elem_sep int saturatedCast concode_elem_sep long toLong concode_elem_sep int max concode_elem_sep int decode concode_elem_sep int parseUnsignedInt concode_elem_sep int parseUnsignedInt concode_elem_sep int min concode_elem_sep Comparator<int[]> lexicographicalComparator concode_elem_sep String toString concode_elem_sep String toString concode_elem_sep String toString concode_elem_sep int divide concode_elem_sep String join concode_elem_sep int flip concode_elem_sep int remainder", "code_tokens": ["int", "function", "(", "long", "arg0", ")", "{", "checkArgument", "(", "(", "arg0", ">>", "Integer", ".", "SIZE", ")", "==", "0", ",", "\"srini_string\"", ",", "arg0", ")", ";", "return", "(", "int", ")", "arg0", ";", "}"], "nl_tokens": ["returns", "the", "int", "value", "that", ",", "when", "treated", "as", "unsigned", ",", "is", "equal", "to", "value", ",", "if", "possible", ".", "concode_field_sep", "long", "INT_MASK", "concode_field_sep", "int", "compare", "concode_elem_sep", "int", "compare", "concode_elem_sep", "int", "saturatedCast", "concode_elem_sep", "long", "toLong", "concode_elem_sep", "int", "max", "concode_elem_sep", "int", "decode", "concode_elem_sep", "int", "parseUnsignedInt", "concode_elem_sep", "int", "parseUnsignedInt", "concode_elem_sep", "int", "min", "concode_elem_sep", "Comparator", "<", "int", "[", "]", ">", "lexicographicalComparator", "concode_elem_sep", "String", "toString", "concode_elem_sep", "String", "toString", "concode_elem_sep", "String", "toString", "concode_elem_sep", "int", "divide", "concode_elem_sep", "String", "join", "concode_elem_sep", "int", "flip", "concode_elem_sep", "int", "remainder"]}
{"code": "void function ( ObjectType arg0 ) { this . objectType = arg0 ; }", "nl": "sets the objecttype used to read and write the trailing block instances . concode_field_sep ObjectType objectType concode_field_sep List<Object> readBlocks concode_elem_sep ObjectType getObjectType concode_elem_sep List<Object> writeBlocks", "code_tokens": ["void", "function", "(", "ObjectType", "arg0", ")", "{", "this", ".", "objectType", "=", "arg0", ";", "}"], "nl_tokens": ["sets", "the", "objecttype", "used", "to", "read", "and", "write", "the", "trailing", "block", "instances", ".", "concode_field_sep", "ObjectType", "objectType", "concode_field_sep", "List", "<", "Object", ">", "readBlocks", "concode_elem_sep", "ObjectType", "getObjectType", "concode_elem_sep", "List", "<", "Object", ">", "writeBlocks"]}
{"code": "String function ( ) { return _stack_type ; }", "nl": "string for the type of object used for the symbol on the parse stack . concode_field_sep String _stack_type concode_elem_sep String _name concode_elem_sep int _index concode_elem_sep int _use_count concode_field_sep int use_count concode_elem_sep String name concode_elem_sep boolean is_non_term concode_elem_sep void note_use concode_elem_sep int index concode_elem_sep String toString", "code_tokens": ["String", "function", "(", ")", "{", "return", "_stack_type", ";", "}"], "nl_tokens": ["string", "for", "the", "type", "of", "object", "used", "for", "the", "symbol", "on", "the", "parse", "stack", ".", "concode_field_sep", "String", "_stack_type", "concode_elem_sep", "String", "_name", "concode_elem_sep", "int", "_index", "concode_elem_sep", "int", "_use_count", "concode_field_sep", "int", "use_count", "concode_elem_sep", "String", "name", "concode_elem_sep", "boolean", "is_non_term", "concode_elem_sep", "void", "note_use", "concode_elem_sep", "int", "index", "concode_elem_sep", "String", "toString"]}
{"code": "URIBuilder function ( final String arg0 ) { this . fragment = arg0 ; this . encodedFragment = null ; return this ; }", "nl": "sets uri fragment . the value is expected to be unescaped and may contain non ascii characters . concode_field_sep String userInfo concode_elem_sep String encodedPath concode_elem_sep String scheme concode_elem_sep List<NameValuePair> queryParams concode_elem_sep String encodedSchemeSpecificPart concode_elem_sep String encodedFragment concode_elem_sep String encodedUserInfo concode_elem_sep String encodedAuthority concode_elem_sep String path concode_elem_sep String fragment concode_elem_sep String encodedQuery concode_elem_sep int port concode_elem_sep String host concode_field_sep URIBuilder setHost concode_elem_sep String encodeUserInfo concode_elem_sep String getScheme concode_elem_sep String encodeQuery concode_elem_sep String buildString concode_elem_sep URIBuilder setPath concode_elem_sep URIBuilder setScheme concode_elem_sep URIBuilder setPort concode_elem_sep URIBuilder addParameter concode_elem_sep URIBuilder setUserInfo concode_elem_sep URIBuilder setUserInfo concode_elem_sep String encodeFragment concode_elem_sep List<NameValuePair> parseQuery concode_elem_sep int getPort concode_elem_sep void digestURI concode_elem_sep URI build concode_elem_sep URIBuilder setParameter concode_elem_sep String getPath concode_elem_sep String encodePath concode_elem_sep List<NameValuePair> getQueryParams concode_elem_sep String getFragment concode_elem_sep URIBuilder setQuery concode_elem_sep String getUserInfo concode_elem_sep String normalizePath concode_elem_sep String getHost", "code_tokens": ["URIBuilder", "function", "(", "final", "String", "arg0", ")", "{", "this", ".", "fragment", "=", "arg0", ";", "this", ".", "encodedFragment", "=", "null", ";", "return", "this", ";", "}"], "nl_tokens": ["sets", "uri", "fragment", ".", "the", "value", "is", "expected", "to", "be", "unescaped", "and", "may", "contain", "non", "ascii", "characters", ".", "concode_field_sep", "String", "userInfo", "concode_elem_sep", "String", "encodedPath", "concode_elem_sep", "String", "scheme", "concode_elem_sep", "List", "<", "NameValuePair", ">", "queryParams", "concode_elem_sep", "String", "encodedSchemeSpecificPart", "concode_elem_sep", "String", "encodedFragment", "concode_elem_sep", "String", "encodedUserInfo", "concode_elem_sep", "String", "encodedAuthority", "concode_elem_sep", "String", "path", "concode_elem_sep", "String", "fragment", "concode_elem_sep", "String", "encodedQuery", "concode_elem_sep", "int", "port", "concode_elem_sep", "String", "host", "concode_field_sep", "URIBuilder", "setHost", "concode_elem_sep", "String", "encodeUserInfo", "concode_elem_sep", "String", "getScheme", "concode_elem_sep", "String", "encodeQuery", "concode_elem_sep", "String", "buildString", "concode_elem_sep", "URIBuilder", "setPath", "concode_elem_sep", "URIBuilder", "setScheme", "concode_elem_sep", "URIBuilder", "setPort", "concode_elem_sep", "URIBuilder", "addParameter", "concode_elem_sep", "URIBuilder", "setUserInfo", "concode_elem_sep", "URIBuilder", "setUserInfo", "concode_elem_sep", "String", "encodeFragment", "concode_elem_sep", "List", "<", "NameValuePair", ">", "parseQuery", "concode_elem_sep", "int", "getPort", "concode_elem_sep", "void", "digestURI", "concode_elem_sep", "URI", "build", "concode_elem_sep", "URIBuilder", "setParameter", "concode_elem_sep", "String", "getPath", "concode_elem_sep", "String", "encodePath", "concode_elem_sep", "List", "<", "NameValuePair", ">", "getQueryParams", "concode_elem_sep", "String", "getFragment", "concode_elem_sep", "URIBuilder", "setQuery", "concode_elem_sep", "String", "getUserInfo", "concode_elem_sep", "String", "normalizePath", "concode_elem_sep", "String", "getHost"]}
{"code": "ToStringHelper function ( double arg0 ) { return addHolder ( String . valueOf ( arg0 ) ) ; }", "nl": "adds an unnamed value to the formatted output . it is strongly encouraged to use #add string , double instead and give value areadable name . concode_field_sep ValueHolder next concode_elem_sep ValueHolder holderTail concode_elem_sep String name concode_elem_sep String className concode_elem_sep boolean omitNullValues concode_elem_sep ValueHolder holderHead concode_elem_sep Object value concode_field_sep ToStringHelper add concode_elem_sep ToStringHelper add concode_elem_sep ToStringHelper add concode_elem_sep ToStringHelper add concode_elem_sep ToStringHelper add concode_elem_sep ToStringHelper add concode_elem_sep ToStringHelper add concode_elem_sep ToStringHelper omitNullValues concode_elem_sep ValueHolder addHolder concode_elem_sep ToStringHelper addHolder concode_elem_sep ToStringHelper addHolder concode_elem_sep T firstNonNull concode_elem_sep ToStringHelper toStringHelper concode_elem_sep ToStringHelper toStringHelper concode_elem_sep ToStringHelper toStringHelper concode_elem_sep String toString", "code_tokens": ["ToStringHelper", "function", "(", "double", "arg0", ")", "{", "return", "addHolder", "(", "String", ".", "valueOf", "(", "arg0", ")", ")", ";", "}"], "nl_tokens": ["adds", "an", "unnamed", "value", "to", "the", "formatted", "output", ".", "it", "is", "strongly", "encouraged", "to", "use", "#add string , double instead and give value areadable name . concode_field_sep ValueHolder next concode_elem_sep ValueHolder holderTail concode_elem_sep String name concode_elem_sep String className concode_elem_sep boolean omitNullValues concode_elem_sep ValueHolder holderHead concode_elem_sep Object value concode_field_sep ToStringHelper add concode_elem_sep ToStringHelper add concode_elem_sep ToStringHelper add concode_elem_sep ToStringHelper add concode_elem_sep ToStringHelper add concode_elem_sep ToStringHelper add concode_elem_sep ToStringHelper add concode_elem_sep ToStringHelper omitNullValues concode_elem_sep ValueHolder addHolder concode_elem_sep ToStringHelper addHolder concode_elem_sep ToStringHelper addHolder concode_elem_sep T firstNonNull concode_elem_sep ToStringHelper toStringHelper concode_elem_sep ToStringHelper toStringHelper concode_elem_sep ToStringHelper toStringHelper concode_elem_sep String toString"]}
{"code": "EaseUI function ( ) { if ( instance == null ) { instance = new EaseUI ( ) ; } return instance ; }", "nl": "get instance of easeui concode_field_sep boolean sdkInited concode_elem_sep EaseUserProfileProvider userProvider concode_elem_sep EaseSettingsProvider settingsProvider concode_elem_sep List<Activity> activityList concode_elem_sep EaseEmojiconInfoProvider emojiconInfoProvider concode_elem_sep EaseUI instance concode_elem_sep String TAG concode_elem_sep Context appContext concode_elem_sep EaseNotifier notifier concode_field_sep void setSettingsProvider concode_elem_sep EaseNotifier getNotifier concode_elem_sep EaseUser getUser concode_elem_sep void setEmojiconInfoProvider concode_elem_sep void initNotifier concode_elem_sep boolean isMsgSoundAllowed concode_elem_sep boolean isMsgSoundAllowed concode_elem_sep EaseSettingsProvider getSettingsProvider concode_elem_sep EaseEmojicon getEmojiconInfo concode_elem_sep EaseEmojiconInfoProvider getEmojiconInfoProvider concode_elem_sep EMOptions initChatOptions concode_elem_sep boolean init concode_elem_sep String getAppName concode_elem_sep void setUserProfileProvider concode_elem_sep void pushActivity concode_elem_sep boolean isMsgVibrateAllowed concode_elem_sep boolean isMsgVibrateAllowed concode_elem_sep User getAppUser concode_elem_sep void registerMessageListener concode_elem_sep Map<String,Object> getTextEmojiconMapping concode_elem_sep boolean isMsgNotifyAllowed concode_elem_sep boolean isMsgNotifyAllowed concode_elem_sep boolean hasForegroundActivies concode_elem_sep boolean isSpeakerOpened concode_elem_sep boolean isSpeakerOpened concode_elem_sep void popActivity concode_elem_sep EaseUserProfileProvider getUserProfileProvider concode_elem_sep Context getContext concode_elem_sep EaseNotifier createNotifier", "code_tokens": ["EaseUI", "function", "(", ")", "{", "if", "(", "instance", "==", "null", ")", "{", "instance", "=", "new", "EaseUI", "(", ")", ";", "}", "return", "instance", ";", "}"], "nl_tokens": ["get", "instance", "of", "easeui", "concode_field_sep", "boolean", "sdkInited", "concode_elem_sep", "EaseUserProfileProvider", "userProvider", "concode_elem_sep", "EaseSettingsProvider", "settingsProvider", "concode_elem_sep", "List", "<", "Activity", ">", "activityList", "concode_elem_sep", "EaseEmojiconInfoProvider", "emojiconInfoProvider", "concode_elem_sep", "EaseUI", "instance", "concode_elem_sep", "String", "TAG", "concode_elem_sep", "Context", "appContext", "concode_elem_sep", "EaseNotifier", "notifier", "concode_field_sep", "void", "setSettingsProvider", "concode_elem_sep", "EaseNotifier", "getNotifier", "concode_elem_sep", "EaseUser", "getUser", "concode_elem_sep", "void", "setEmojiconInfoProvider", "concode_elem_sep", "void", "initNotifier", "concode_elem_sep", "boolean", "isMsgSoundAllowed", "concode_elem_sep", "boolean", "isMsgSoundAllowed", "concode_elem_sep", "EaseSettingsProvider", "getSettingsProvider", "concode_elem_sep", "EaseEmojicon", "getEmojiconInfo", "concode_elem_sep", "EaseEmojiconInfoProvider", "getEmojiconInfoProvider", "concode_elem_sep", "EMOptions", "initChatOptions", "concode_elem_sep", "boolean", "init", "concode_elem_sep", "String", "getAppName", "concode_elem_sep", "void", "setUserProfileProvider", "concode_elem_sep", "void", "pushActivity", "concode_elem_sep", "boolean", "isMsgVibrateAllowed", "concode_elem_sep", "boolean", "isMsgVibrateAllowed", "concode_elem_sep", "User", "getAppUser", "concode_elem_sep", "void", "registerMessageListener", "concode_elem_sep", "Map", "<", "String", ",", "Object", ">", "getTextEmojiconMapping", "concode_elem_sep", "boolean", "isMsgNotifyAllowed", "concode_elem_sep", "boolean", "isMsgNotifyAllowed", "concode_elem_sep", "boolean", "hasForegroundActivies", "concode_elem_sep", "boolean", "isSpeakerOpened", "concode_elem_sep", "boolean", "isSpeakerOpened", "concode_elem_sep", "void", "popActivity", "concode_elem_sep", "EaseUserProfileProvider", "getUserProfileProvider", "concode_elem_sep", "Context", "getContext", "concode_elem_sep", "EaseNotifier", "createNotifier"]}
{"code": "long function ( K arg0 , long arg1 ) { return accumulateAndGet ( arg0 , arg1 , Long :: sum ) ; }", "nl": "adds delta to the value currently associated with key , and returns the new value . concode_field_sep Map<K,Long> asMap concode_elem_sep ConcurrentHashMap<K,Long> map concode_field_sep long getAndIncrement concode_elem_sep long incrementAndGet concode_elem_sep Map<K,Long> createAsMap concode_elem_sep Map<K,Long> asMap concode_elem_sep boolean removeIfZero concode_elem_sep boolean replace concode_elem_sep long decrementAndGet concode_elem_sep long updateAndGet concode_elem_sep long sum concode_elem_sep long put concode_elem_sep long remove concode_elem_sep boolean remove concode_elem_sep void removeAllZeros concode_elem_sep long get concode_elem_sep void putAll concode_elem_sep AtomicLongMap<K> create concode_elem_sep AtomicLongMap<K> create concode_elem_sep long getAndAdd concode_elem_sep long getAndAccumulate concode_elem_sep long accumulateAndGet concode_elem_sep boolean containsKey concode_elem_sep boolean isEmpty concode_elem_sep void clear concode_elem_sep int size concode_elem_sep String toString concode_elem_sep long getAndUpdate concode_elem_sep long getAndDecrement concode_elem_sep long putIfAbsent", "code_tokens": ["long", "function", "(", "K", "arg0", ",", "long", "arg1", ")", "{", "return", "accumulateAndGet", "(", "arg0", ",", "arg1", ",", "Long", ":", ":", "sum", ")", ";", "}"], "nl_tokens": ["adds", "delta", "to", "the", "value", "currently", "associated", "with", "key", ",", "and", "returns", "the", "new", "value", ".", "concode_field_sep", "Map", "<", "K", ",", "Long", ">", "asMap", "concode_elem_sep", "ConcurrentHashMap", "<", "K", ",", "Long", ">", "map", "concode_field_sep", "long", "getAndIncrement", "concode_elem_sep", "long", "incrementAndGet", "concode_elem_sep", "Map", "<", "K", ",", "Long", ">", "createAsMap", "concode_elem_sep", "Map", "<", "K", ",", "Long", ">", "asMap", "concode_elem_sep", "boolean", "removeIfZero", "concode_elem_sep", "boolean", "replace", "concode_elem_sep", "long", "decrementAndGet", "concode_elem_sep", "long", "updateAndGet", "concode_elem_sep", "long", "sum", "concode_elem_sep", "long", "put", "concode_elem_sep", "long", "remove", "concode_elem_sep", "boolean", "remove", "concode_elem_sep", "void", "removeAllZeros", "concode_elem_sep", "long", "get", "concode_elem_sep", "void", "putAll", "concode_elem_sep", "AtomicLongMap", "<", "K", ">", "create", "concode_elem_sep", "AtomicLongMap", "<", "K", ">", "create", "concode_elem_sep", "long", "getAndAdd", "concode_elem_sep", "long", "getAndAccumulate", "concode_elem_sep", "long", "accumulateAndGet", "concode_elem_sep", "boolean", "containsKey", "concode_elem_sep", "boolean", "isEmpty", "concode_elem_sep", "void", "clear", "concode_elem_sep", "int", "size", "concode_elem_sep", "String", "toString", "concode_elem_sep", "long", "getAndUpdate", "concode_elem_sep", "long", "getAndDecrement", "concode_elem_sep", "long", "putIfAbsent"]}
{"code": "boolean function ( ) { if ( errorCode != 0 ) { return true ; } return false ; }", "nl": "checks if is sp error out . concode_field_sep Integer errorCode concode_elem_sep String errorMsg concode_field_sep void setErrorMsg concode_elem_sep Integer getErrorCode concode_elem_sep String toString concode_elem_sep void setErrorCode concode_elem_sep String getErrorMsg", "code_tokens": ["boolean", "function", "(", ")", "{", "if", "(", "errorCode", "!=", "0", ")", "{", "return", "true", ";", "}", "return", "false", ";", "}"], "nl_tokens": ["checks", "if", "is", "sp", "error", "out", ".", "concode_field_sep", "Integer", "errorCode", "concode_elem_sep", "String", "errorMsg", "concode_field_sep", "void", "setErrorMsg", "concode_elem_sep", "Integer", "getErrorCode", "concode_elem_sep", "String", "toString", "concode_elem_sep", "void", "setErrorCode", "concode_elem_sep", "String", "getErrorMsg"]}
{"code": "void function ( final ResourceTypeHandler arg0 , final String arg1 ) { if ( arg1 != null ) { extensionsDenied . put ( arg0 , Utils . getSet ( arg1 ) ) ; extensionsAllowed . get ( arg0 ) . clear ( ) ; } }", "nl": "setter for the denied extensions of a file type . the allowed extensions will be cleared . if extensionslist is null , denied extensions are kept untouched . concode_field_sep Map<ResourceTypeHandler,Set<String>> extensionsDenied concode_elem_sep Map<ResourceTypeHandler,Set<String>> extensionsAllowed concode_field_sep boolean isAllowed concode_elem_sep void setExtensionsAllowed concode_elem_sep Set<String> getExtensionsDenied concode_elem_sep Set<String> getExtensionsAllowed", "code_tokens": ["void", "function", "(", "final", "ResourceTypeHandler", "arg0", ",", "final", "String", "arg1", ")", "{", "if", "(", "arg1", "!=", "null", ")", "{", "extensionsDenied", ".", "put", "(", "arg0", ",", "Utils", ".", "getSet", "(", "arg1", ")", ")", ";", "extensionsAllowed", ".", "get", "(", "arg0", ")", ".", "clear", "(", ")", ";", "}", "}"], "nl_tokens": ["setter", "for", "the", "denied", "extensions", "of", "a", "file", "type", ".", "the", "allowed", "extensions", "will", "be", "cleared", ".", "if", "extensionslist", "is", "null", ",", "denied", "extensions", "are", "kept", "untouched", ".", "concode_field_sep", "Map", "<", "ResourceTypeHandler", ",", "Set", "<", "String", ">>", "extensionsDenied", "concode_elem_sep", "Map", "<", "ResourceTypeHandler", ",", "Set", "<", "String", ">>", "extensionsAllowed", "concode_field_sep", "boolean", "isAllowed", "concode_elem_sep", "void", "setExtensionsAllowed", "concode_elem_sep", "Set", "<", "String", ">", "getExtensionsDenied", "concode_elem_sep", "Set", "<", "String", ">", "getExtensionsAllowed"]}
{"code": "OutputStream function ( ) { return this . response . getOutputStream ( ) ; }", "nl": "write the body of the response . concode_field_sep int status concode_elem_sep int INFINITY concode_elem_sep HttpServletRequest request concode_elem_sep URI base concode_elem_sep HttpServletResponse response concode_field_sep URI lookup concode_elem_sep int getDepth concode_elem_sep InputStream read concode_elem_sep String getNormalizedPath concode_elem_sep URI getDestination concode_elem_sep String getMethod concode_elem_sep int getStatus concode_elem_sep boolean hasRequestBody concode_elem_sep void setStatus concode_elem_sep void setHeader concode_elem_sep boolean getOverwrite concode_elem_sep String getOriginalPath concode_elem_sep void setContentType concode_elem_sep Date getIfModifiedSince", "code_tokens": ["OutputStream", "function", "(", ")", "{", "return", "this", ".", "response", ".", "getOutputStream", "(", ")", ";", "}"], "nl_tokens": ["write", "the", "body", "of", "the", "response", ".", "concode_field_sep", "int", "status", "concode_elem_sep", "int", "INFINITY", "concode_elem_sep", "HttpServletRequest", "request", "concode_elem_sep", "URI", "base", "concode_elem_sep", "HttpServletResponse", "response", "concode_field_sep", "URI", "lookup", "concode_elem_sep", "int", "getDepth", "concode_elem_sep", "InputStream", "read", "concode_elem_sep", "String", "getNormalizedPath", "concode_elem_sep", "URI", "getDestination", "concode_elem_sep", "String", "getMethod", "concode_elem_sep", "int", "getStatus", "concode_elem_sep", "boolean", "hasRequestBody", "concode_elem_sep", "void", "setStatus", "concode_elem_sep", "void", "setHeader", "concode_elem_sep", "boolean", "getOverwrite", "concode_elem_sep", "String", "getOriginalPath", "concode_elem_sep", "void", "setContentType", "concode_elem_sep", "Date", "getIfModifiedSince"]}
{"code": "void function ( Date arg0 ) { this . fetcherStartTimeStamp = arg0 ; }", "nl": "sets the fetcher start time stamp . concode_field_sep Date lastModifiedTimeStamp concode_elem_sep Long feedId concode_elem_sep String createdBy concode_elem_sep Date fetcherStartTimeStamp concode_elem_sep Date createTimeStamp concode_elem_sep Long testId concode_elem_sep Long runId concode_elem_sep Date fetcherEndTimeStamp concode_elem_sep List<TestResultDetailsDTO> regTestResultDetailsLst concode_elem_sep OutcomeType outcome concode_elem_sep RunStatusType runStatus concode_elem_sep String errorMsg concode_field_sep void setLastModifiedTimeStamp concode_elem_sep Date getFetcherEndTimeStamp concode_elem_sep void setFeedId concode_elem_sep Date getLastModifiedTimeStamp concode_elem_sep OutcomeType getOutcome concode_elem_sep Long getRunId concode_elem_sep List<TestResultDetailsDTO> getRegTestResultDetailsLst concode_elem_sep Long getFeedId concode_elem_sep void setTestId concode_elem_sep Long getTestId concode_elem_sep Date getFetcherStartTimeStamp concode_elem_sep void setRunId concode_elem_sep void setRegTestResultDetailsLst concode_elem_sep void setErrorMsg concode_elem_sep void setFetcherEndTimeStamp concode_elem_sep void setCreateTimeStamp concode_elem_sep void setCreatedBy concode_elem_sep RunStatusType getRunStatus concode_elem_sep Date getCreateTimeStamp concode_elem_sep void setOutcome concode_elem_sep String toString concode_elem_sep String getCreatedBy concode_elem_sep String getErrorMsg concode_elem_sep void setRunStatus", "code_tokens": ["void", "function", "(", "Date", "arg0", ")", "{", "this", ".", "fetcherStartTimeStamp", "=", "arg0", ";", "}"], "nl_tokens": ["sets", "the", "fetcher", "start", "time", "stamp", ".", "concode_field_sep", "Date", "lastModifiedTimeStamp", "concode_elem_sep", "Long", "feedId", "concode_elem_sep", "String", "createdBy", "concode_elem_sep", "Date", "fetcherStartTimeStamp", "concode_elem_sep", "Date", "createTimeStamp", "concode_elem_sep", "Long", "testId", "concode_elem_sep", "Long", "runId", "concode_elem_sep", "Date", "fetcherEndTimeStamp", "concode_elem_sep", "List", "<", "TestResultDetailsDTO", ">", "regTestResultDetailsLst", "concode_elem_sep", "OutcomeType", "outcome", "concode_elem_sep", "RunStatusType", "runStatus", "concode_elem_sep", "String", "errorMsg", "concode_field_sep", "void", "setLastModifiedTimeStamp", "concode_elem_sep", "Date", "getFetcherEndTimeStamp", "concode_elem_sep", "void", "setFeedId", "concode_elem_sep", "Date", "getLastModifiedTimeStamp", "concode_elem_sep", "OutcomeType", "getOutcome", "concode_elem_sep", "Long", "getRunId", "concode_elem_sep", "List", "<", "TestResultDetailsDTO", ">", "getRegTestResultDetailsLst", "concode_elem_sep", "Long", "getFeedId", "concode_elem_sep", "void", "setTestId", "concode_elem_sep", "Long", "getTestId", "concode_elem_sep", "Date", "getFetcherStartTimeStamp", "concode_elem_sep", "void", "setRunId", "concode_elem_sep", "void", "setRegTestResultDetailsLst", "concode_elem_sep", "void", "setErrorMsg", "concode_elem_sep", "void", "setFetcherEndTimeStamp", "concode_elem_sep", "void", "setCreateTimeStamp", "concode_elem_sep", "void", "setCreatedBy", "concode_elem_sep", "RunStatusType", "getRunStatus", "concode_elem_sep", "Date", "getCreateTimeStamp", "concode_elem_sep", "void", "setOutcome", "concode_elem_sep", "String", "toString", "concode_elem_sep", "String", "getCreatedBy", "concode_elem_sep", "String", "getErrorMsg", "concode_elem_sep", "void", "setRunStatus"]}
{"code": "Permission function ( final int arg0 ) { return ( Permission ) PERMISSIONS . get ( new Integer ( arg0 ) ) ; }", "nl": "utility method for accessing permission instances by their permission id . this is used internally by hibernate to map database values to instances of this class . normal application code should never call this method . concode_field_sep String m_key concode_elem_sep Permission NOT_SHARED concode_elem_sep Permission FRIENDS concode_elem_sep int m_permissionIndex concode_elem_sep Permission ALL concode_elem_sep long serialVersionUID concode_elem_sep Permission FRIEND_FRIEND concode_elem_sep Permission PUBLIC concode_elem_sep Permission FRIEND_PUBLIC concode_elem_sep Map PERMISSIONS concode_elem_sep int m_id concode_field_sep String getKey concode_elem_sep int getID concode_elem_sep String toString", "code_tokens": ["Permission", "function", "(", "final", "int", "arg0", ")", "{", "return", "(", "Permission", ")", "PERMISSIONS", ".", "get", "(", "new", "Integer", "(", "arg0", ")", ")", ";", "}"], "nl_tokens": ["utility", "method", "for", "accessing", "permission", "instances", "by", "their", "permission", "id", ".", "this", "is", "used", "internally", "by", "hibernate", "to", "map", "database", "values", "to", "instances", "of", "this", "class", ".", "normal", "application", "code", "should", "never", "call", "this", "method", ".", "concode_field_sep", "String", "m_key", "concode_elem_sep", "Permission", "NOT_SHARED", "concode_elem_sep", "Permission", "FRIENDS", "concode_elem_sep", "int", "m_permissionIndex", "concode_elem_sep", "Permission", "ALL", "concode_elem_sep", "long", "serialVersionUID", "concode_elem_sep", "Permission", "FRIEND_FRIEND", "concode_elem_sep", "Permission", "PUBLIC", "concode_elem_sep", "Permission", "FRIEND_PUBLIC", "concode_elem_sep", "Map", "PERMISSIONS", "concode_elem_sep", "int", "m_id", "concode_field_sep", "String", "getKey", "concode_elem_sep", "int", "getID", "concode_elem_sep", "String", "toString"]}
{"code": "String function ( boolean arg0 , String arg1 ) { return getDataSourceName ( ) ; }", "nl": "return the datasourcename via the datasource interface method . both the parameters are ignored concode_field_sep Reader reader concode_elem_sep String dataSourceName concode_field_sep String getDataSourceName concode_elem_sep String toString concode_elem_sep InputStream getInputStream concode_elem_sep void setDataSourceName", "code_tokens": ["String", "function", "(", "boolean", "arg0", ",", "String", "arg1", ")", "{", "return", "getDataSourceName", "(", ")", ";", "}"], "nl_tokens": ["return", "the", "datasourcename", "via", "the", "datasource", "interface", "method", ".", "both", "the", "parameters", "are", "ignored", "concode_field_sep", "Reader", "reader", "concode_elem_sep", "String", "dataSourceName", "concode_field_sep", "String", "getDataSourceName", "concode_elem_sep", "String", "toString", "concode_elem_sep", "InputStream", "getInputStream", "concode_elem_sep", "void", "setDataSourceName"]}
{"code": "void function ( ) { XMLUnit . setIgnoreWhitespace ( true ) ; XMLUnit . setNormalize ( true ) ; Config . readConfig ( \"srini_string\" ) ; }", "nl": "initialize testclass concode_field_sep String graphName concode_elem_sep String user concode_elem_sep Endpoint ep concode_field_sep String createSelectQuery concode_elem_sep String createAutoMergeQuery concode_elem_sep String createCommonMergeQuery concode_elem_sep void testCommonMerge concode_elem_sep String createMergeWithQuery concode_elem_sep void setUp concode_elem_sep void testManualMerge concode_elem_sep void testAutoMerge concode_elem_sep void testCreatedGraph concode_elem_sep String createManualMergeQuery", "code_tokens": ["void", "function", "(", ")", "{", "XMLUnit", ".", "setIgnoreWhitespace", "(", "true", ")", ";", "XMLUnit", ".", "setNormalize", "(", "true", ")", ";", "Config", ".", "readConfig", "(", "\"srini_string\"", ")", ";", "}"], "nl_tokens": ["initialize", "testclass", "concode_field_sep", "String", "graphName", "concode_elem_sep", "String", "user", "concode_elem_sep", "Endpoint", "ep", "concode_field_sep", "String", "createSelectQuery", "concode_elem_sep", "String", "createAutoMergeQuery", "concode_elem_sep", "String", "createCommonMergeQuery", "concode_elem_sep", "void", "testCommonMerge", "concode_elem_sep", "String", "createMergeWithQuery", "concode_elem_sep", "void", "setUp", "concode_elem_sep", "void", "testManualMerge", "concode_elem_sep", "void", "testAutoMerge", "concode_elem_sep", "void", "testCreatedGraph", "concode_elem_sep", "String", "createManualMergeQuery"]}
{"code": "void function ( String arg0 ) { this . password = arg0 ; }", "nl": "setea el password del usuario . concode_field_sep String password concode_elem_sep Date credentialsExpirationDate concode_elem_sep Integer loginsFallidos concode_elem_sep Collection<GrantedAuthority> grantedAuthorities concode_elem_sep boolean credentialsNonExpired concode_elem_sep boolean accountNonExpired concode_elem_sep Long id concode_elem_sep boolean enabled concode_elem_sep String email concode_elem_sep String username concode_elem_sep boolean accountNonLocked concode_elem_sep String nombres concode_field_sep void setCredentialsNonExpired concode_elem_sep Date getCredentialsExpirationDate concode_elem_sep void setUsername concode_elem_sep void setAccountNonLocked concode_elem_sep String getNombres concode_elem_sep void setAccountNonExpired concode_elem_sep boolean isAccountNonLocked concode_elem_sep Long getId concode_elem_sep void setNombres concode_elem_sep Collection<GrantedAuthority> getAuthorities concode_elem_sep String getUsername concode_elem_sep void setEnabled concode_elem_sep String getPassword concode_elem_sep void setEmail concode_elem_sep void setAuthorities concode_elem_sep boolean isAccountNonExpired concode_elem_sep boolean isCredentialsNonExpired concode_elem_sep boolean isEnabled concode_elem_sep String getEmail concode_elem_sep void setId concode_elem_sep void setCredentialsExpirationDate", "code_tokens": ["void", "function", "(", "String", "arg0", ")", "{", "this", ".", "password", "=", "arg0", ";", "}"], "nl_tokens": ["setea", "el", "password", "del", "usuario", ".", "concode_field_sep", "String", "password", "concode_elem_sep", "Date", "credentialsExpirationDate", "concode_elem_sep", "Integer", "loginsFallidos", "concode_elem_sep", "Collection", "<", "GrantedAuthority", ">", "grantedAuthorities", "concode_elem_sep", "boolean", "credentialsNonExpired", "concode_elem_sep", "boolean", "accountNonExpired", "concode_elem_sep", "Long", "id", "concode_elem_sep", "boolean", "enabled", "concode_elem_sep", "String", "email", "concode_elem_sep", "String", "username", "concode_elem_sep", "boolean", "accountNonLocked", "concode_elem_sep", "String", "nombres", "concode_field_sep", "void", "setCredentialsNonExpired", "concode_elem_sep", "Date", "getCredentialsExpirationDate", "concode_elem_sep", "void", "setUsername", "concode_elem_sep", "void", "setAccountNonLocked", "concode_elem_sep", "String", "getNombres", "concode_elem_sep", "void", "setAccountNonExpired", "concode_elem_sep", "boolean", "isAccountNonLocked", "concode_elem_sep", "Long", "getId", "concode_elem_sep", "void", "setNombres", "concode_elem_sep", "Collection", "<", "GrantedAuthority", ">", "getAuthorities", "concode_elem_sep", "String", "getUsername", "concode_elem_sep", "void", "setEnabled", "concode_elem_sep", "String", "getPassword", "concode_elem_sep", "void", "setEmail", "concode_elem_sep", "void", "setAuthorities", "concode_elem_sep", "boolean", "isAccountNonExpired", "concode_elem_sep", "boolean", "isCredentialsNonExpired", "concode_elem_sep", "boolean", "isEnabled", "concode_elem_sep", "String", "getEmail", "concode_elem_sep", "void", "setId", "concode_elem_sep", "void", "setCredentialsExpirationDate"]}
{"code": "void function ( ) { head = reverse ( head ) ; }", "nl": "reverse linked list recursive concode_field_sep Node head concode_field_sep void add concode_elem_sep void removeAllNodes concode_elem_sep void print concode_elem_sep Node getHead concode_elem_sep void printKthFromLast concode_elem_sep int printKthFromLast concode_elem_sep void initialize concode_elem_sep void removeDuplicate concode_elem_sep void reverse concode_elem_sep Node reverse concode_elem_sep void arrangeEvenOddPosition concode_elem_sep void remove concode_elem_sep void removeNode concode_elem_sep void swapeParis", "code_tokens": ["void", "function", "(", ")", "{", "head", "=", "reverse", "(", "head", ")", ";", "}"], "nl_tokens": ["reverse", "linked", "list", "recursive", "concode_field_sep", "Node", "head", "concode_field_sep", "void", "add", "concode_elem_sep", "void", "removeAllNodes", "concode_elem_sep", "void", "print", "concode_elem_sep", "Node", "getHead", "concode_elem_sep", "void", "printKthFromLast", "concode_elem_sep", "int", "printKthFromLast", "concode_elem_sep", "void", "initialize", "concode_elem_sep", "void", "removeDuplicate", "concode_elem_sep", "void", "reverse", "concode_elem_sep", "Node", "reverse", "concode_elem_sep", "void", "arrangeEvenOddPosition", "concode_elem_sep", "void", "remove", "concode_elem_sep", "void", "removeNode", "concode_elem_sep", "void", "swapeParis"]}
{"code": "void function ( ) { Time loc0 = new Time ( 1 , 2 , 3.4 ) ; instance . setTime ( loc0 ) ; assertTrue ( instance . toString ( ) . contains ( \"srini_string\" ) ) ; }", "nl": "test method for net.sf.marineapi.nmea.parser.gllparser #settime time . concode_field_sep GLLParser instance concode_elem_sep String EXAMPLE concode_elem_sep GLLParser empty concode_field_sep void testSetPositionWithZeroValues concode_elem_sep void testGetPosition concode_elem_sep void testSetDataStatus concode_elem_sep void testSetPositionWithNonZeroValues concode_elem_sep void setUp concode_elem_sep void testGetDataStatus concode_elem_sep void testConstructor concode_elem_sep void testGetTime", "code_tokens": ["void", "function", "(", ")", "{", "Time", "loc0", "=", "new", "Time", "(", "1", ",", "2", ",", "3.4", ")", ";", "instance", ".", "setTime", "(", "loc0", ")", ";", "assertTrue", "(", "instance", ".", "toString", "(", ")", ".", "contains", "(", "\"srini_string\"", ")", ")", ";", "}"], "nl_tokens": ["test", "method", "for", "net", ".", "sf", ".", "marineapi", ".", "nmea", ".", "parser", ".", "gllparser", "#settime time . concode_field_sep GLLParser instance concode_elem_sep String EXAMPLE concode_elem_sep GLLParser empty concode_field_sep void testSetPositionWithZeroValues concode_elem_sep void testGetPosition concode_elem_sep void testSetDataStatus concode_elem_sep void testSetPositionWithNonZeroValues concode_elem_sep void setUp concode_elem_sep void testGetDataStatus concode_elem_sep void testConstructor concode_elem_sep void testGetTime"]}
{"code": "String function ( ) { return host ; }", "nl": "return the hostname the servlet container is bound to . concode_field_sep Server server concode_elem_sep String host concode_elem_sep String contextPath concode_elem_sep Context context concode_elem_sep int port concode_field_sep int getPort concode_elem_sep String getContextURL concode_elem_sep String getServletURL concode_elem_sep void stop concode_elem_sep void start concode_elem_sep void addServletEndpoint", "code_tokens": ["String", "function", "(", ")", "{", "return", "host", ";", "}"], "nl_tokens": ["return", "the", "hostname", "the", "servlet", "container", "is", "bound", "to", ".", "concode_field_sep", "Server", "server", "concode_elem_sep", "String", "host", "concode_elem_sep", "String", "contextPath", "concode_elem_sep", "Context", "context", "concode_elem_sep", "int", "port", "concode_field_sep", "int", "getPort", "concode_elem_sep", "String", "getContextURL", "concode_elem_sep", "String", "getServletURL", "concode_elem_sep", "void", "stop", "concode_elem_sep", "void", "start", "concode_elem_sep", "void", "addServletEndpoint"]}
{"code": "RemoteBlockWriter function ( ) { try { return CommonUtils . createNewClassInstance ( Configuration . < RemoteBlockWriter > getClass ( PropertyKey . USER_BLOCK_REMOTE_WRITER_CLASS ) , null , null ) ; } catch ( Exception loc0 ) { throw Throwables . propagate ( loc0 ) ; } }", "nl": "factory for remoteblockwriter . concode_field_sep PlaceHolder placeHolder concode_field_sep void write concode_elem_sep void open", "code_tokens": ["RemoteBlockWriter", "function", "(", ")", "{", "try", "{", "return", "CommonUtils", ".", "createNewClassInstance", "(", "Configuration", ".", "<", "RemoteBlockWriter", ">", "getClass", "(", "PropertyKey", ".", "USER_BLOCK_REMOTE_WRITER_CLASS", ")", ",", "null", ",", "null", ")", ";", "}", "catch", "(", "Exception", "loc0", ")", "{", "throw", "Throwables", ".", "propagate", "(", "loc0", ")", ";", "}", "}"], "nl_tokens": ["factory", "for", "remoteblockwriter", ".", "concode_field_sep", "PlaceHolder", "placeHolder", "concode_field_sep", "void", "write", "concode_elem_sep", "void", "open"]}
{"code": "Client function ( ) { return client ; }", "nl": "returns the client instance concode_field_sep List<String> approvedScope concode_elem_sep List<String> requestedScope concode_elem_sep String audience concode_elem_sep UserSubject subject concode_elem_sep Client client concode_elem_sep String grantType concode_field_sep UserSubject getSubject concode_elem_sep void setClient concode_elem_sep void setSubject concode_elem_sep void setRequestedScope concode_elem_sep List<String> getApprovedScope concode_elem_sep void setGrantType concode_elem_sep String getGrantType concode_elem_sep List<String> getRequestedScope concode_elem_sep String getAudience concode_elem_sep void setApprovedScope concode_elem_sep void setAudience", "code_tokens": ["Client", "function", "(", ")", "{", "return", "client", ";", "}"], "nl_tokens": ["returns", "the", "client", "instance", "concode_field_sep", "List", "<", "String", ">", "approvedScope", "concode_elem_sep", "List", "<", "String", ">", "requestedScope", "concode_elem_sep", "String", "audience", "concode_elem_sep", "UserSubject", "subject", "concode_elem_sep", "Client", "client", "concode_elem_sep", "String", "grantType", "concode_field_sep", "UserSubject", "getSubject", "concode_elem_sep", "void", "setClient", "concode_elem_sep", "void", "setSubject", "concode_elem_sep", "void", "setRequestedScope", "concode_elem_sep", "List", "<", "String", ">", "getApprovedScope", "concode_elem_sep", "void", "setGrantType", "concode_elem_sep", "String", "getGrantType", "concode_elem_sep", "List", "<", "String", ">", "getRequestedScope", "concode_elem_sep", "String", "getAudience", "concode_elem_sep", "void", "setApprovedScope", "concode_elem_sep", "void", "setAudience"]}
{"code": "void function ( String arg0 ) { this . geneList = arg0 ; }", "nl": "sets the list of genes in the set . concode_field_sep String geneList concode_elem_sep String name concode_field_sep void setName concode_elem_sep String getName concode_elem_sep String getGeneList concode_elem_sep String getId", "code_tokens": ["void", "function", "(", "String", "arg0", ")", "{", "this", ".", "geneList", "=", "arg0", ";", "}"], "nl_tokens": ["sets", "the", "list", "of", "genes", "in", "the", "set", ".", "concode_field_sep", "String", "geneList", "concode_elem_sep", "String", "name", "concode_field_sep", "void", "setName", "concode_elem_sep", "String", "getName", "concode_elem_sep", "String", "getGeneList", "concode_elem_sep", "String", "getId"]}
{"code": "boolean function ( ) { return ( this . errorLevel > 1 ) ; }", "nl": "returns if result is ko concode_field_sep int errorLevelFolder concode_elem_sep String tooltip concode_elem_sep int errorLevel concode_elem_sep String value concode_field_sep void restoreFolderErrorLevel concode_elem_sep void setKO concode_elem_sep void setKO concode_elem_sep boolean isWarning concode_elem_sep void setErrorLevel concode_elem_sep int getErrorLevel concode_elem_sep String analyseTrack concode_elem_sep String analyseTrackYear concode_elem_sep String formatNumber concode_elem_sep String colorField concode_elem_sep String colorField concode_elem_sep String getValue concode_elem_sep String analyseTrackComment concode_elem_sep String analyseTrackBpm concode_elem_sep int hashCode concode_elem_sep void setValue concode_elem_sep boolean equals concode_elem_sep String getDisplayToolTip concode_elem_sep void setOK concode_elem_sep String toString concode_elem_sep boolean isNotValid concode_elem_sep Color getDisplayColor concode_elem_sep String analyseTrackNumber concode_elem_sep String getDisplayText concode_elem_sep void setWarning concode_elem_sep void setWarning concode_elem_sep String analyseTrackString", "code_tokens": ["boolean", "function", "(", ")", "{", "return", "(", "this", ".", "errorLevel", ">", "1", ")", ";", "}"], "nl_tokens": ["returns", "if", "result", "is", "ko", "concode_field_sep", "int", "errorLevelFolder", "concode_elem_sep", "String", "tooltip", "concode_elem_sep", "int", "errorLevel", "concode_elem_sep", "String", "value", "concode_field_sep", "void", "restoreFolderErrorLevel", "concode_elem_sep", "void", "setKO", "concode_elem_sep", "void", "setKO", "concode_elem_sep", "boolean", "isWarning", "concode_elem_sep", "void", "setErrorLevel", "concode_elem_sep", "int", "getErrorLevel", "concode_elem_sep", "String", "analyseTrack", "concode_elem_sep", "String", "analyseTrackYear", "concode_elem_sep", "String", "formatNumber", "concode_elem_sep", "String", "colorField", "concode_elem_sep", "String", "colorField", "concode_elem_sep", "String", "getValue", "concode_elem_sep", "String", "analyseTrackComment", "concode_elem_sep", "String", "analyseTrackBpm", "concode_elem_sep", "int", "hashCode", "concode_elem_sep", "void", "setValue", "concode_elem_sep", "boolean", "equals", "concode_elem_sep", "String", "getDisplayToolTip", "concode_elem_sep", "void", "setOK", "concode_elem_sep", "String", "toString", "concode_elem_sep", "boolean", "isNotValid", "concode_elem_sep", "Color", "getDisplayColor", "concode_elem_sep", "String", "analyseTrackNumber", "concode_elem_sep", "String", "getDisplayText", "concode_elem_sep", "void", "setWarning", "concode_elem_sep", "void", "setWarning", "concode_elem_sep", "String", "analyseTrackString"]}
{"code": "long function ( ) { return geneA ; }", "nl": "gets entrez gene id for gene a. concode_field_sep String interactionType concode_elem_sep String experimentTypes concode_elem_sep long geneB concode_elem_sep String pmids concode_elem_sep long geneA concode_elem_sep String source concode_field_sep void setSource concode_elem_sep String toSif concode_elem_sep void setExperimentTypes concode_elem_sep void setGeneA concode_elem_sep void setGeneB concode_elem_sep String getInteractionType concode_elem_sep long getGeneB concode_elem_sep void setPmids concode_elem_sep String getSource concode_elem_sep String toString concode_elem_sep void setInteractionType concode_elem_sep String getExperimentTypes concode_elem_sep String getPmids", "code_tokens": ["long", "function", "(", ")", "{", "return", "geneA", ";", "}"], "nl_tokens": ["gets", "entrez", "gene", "id", "for", "gene", "a", ".", "concode_field_sep", "String", "interactionType", "concode_elem_sep", "String", "experimentTypes", "concode_elem_sep", "long", "geneB", "concode_elem_sep", "String", "pmids", "concode_elem_sep", "long", "geneA", "concode_elem_sep", "String", "source", "concode_field_sep", "void", "setSource", "concode_elem_sep", "String", "toSif", "concode_elem_sep", "void", "setExperimentTypes", "concode_elem_sep", "void", "setGeneA", "concode_elem_sep", "void", "setGeneB", "concode_elem_sep", "String", "getInteractionType", "concode_elem_sep", "long", "getGeneB", "concode_elem_sep", "void", "setPmids", "concode_elem_sep", "String", "getSource", "concode_elem_sep", "String", "toString", "concode_elem_sep", "void", "setInteractionType", "concode_elem_sep", "String", "getExperimentTypes", "concode_elem_sep", "String", "getPmids"]}
{"code": "ELEvaluator function ( Configuration arg0 , String arg1 ) { ELEvaluator loc0 = Services . get ( ) . get ( ELService . class ) . createEvaluator ( arg1 ) ; setConfigToEval ( loc0 , arg0 ) ; return loc0 ; }", "nl": "create an evaluator to be used in resolving configuration vars and frequency constant/functions used in stage 1 concode_field_sep Integer HOUR concode_elem_sep Integer MINUTE concode_field_sep ELEvaluator createLazyEvaluator concode_elem_sep String make2Digits concode_elem_sep ELEvaluator createSLAEvaluator concode_elem_sep void setConfigToEval concode_elem_sep ELEvaluator createELEvaluatorForDataEcho concode_elem_sep ELEvaluator createURIELEvaluator concode_elem_sep SyncCoordDataset getDSObject concode_elem_sep ELEvaluator createInstancesELEvaluator concode_elem_sep ELEvaluator createInstancesELEvaluator concode_elem_sep ELEvaluator createDataEvaluator", "code_tokens": ["ELEvaluator", "function", "(", "Configuration", "arg0", ",", "String", "arg1", ")", "{", "ELEvaluator", "loc0", "=", "Services", ".", "get", "(", ")", ".", "get", "(", "ELService", ".", "class", ")", ".", "createEvaluator", "(", "arg1", ")", ";", "setConfigToEval", "(", "loc0", ",", "arg0", ")", ";", "return", "loc0", ";", "}"], "nl_tokens": ["create", "an", "evaluator", "to", "be", "used", "in", "resolving", "configuration", "vars", "and", "frequency", "constant", "/", "functions", "used", "in", "stage", "1", "concode_field_sep", "Integer", "HOUR", "concode_elem_sep", "Integer", "MINUTE", "concode_field_sep", "ELEvaluator", "createLazyEvaluator", "concode_elem_sep", "String", "make2Digits", "concode_elem_sep", "ELEvaluator", "createSLAEvaluator", "concode_elem_sep", "void", "setConfigToEval", "concode_elem_sep", "ELEvaluator", "createELEvaluatorForDataEcho", "concode_elem_sep", "ELEvaluator", "createURIELEvaluator", "concode_elem_sep", "SyncCoordDataset", "getDSObject", "concode_elem_sep", "ELEvaluator", "createInstancesELEvaluator", "concode_elem_sep", "ELEvaluator", "createInstancesELEvaluator", "concode_elem_sep", "ELEvaluator", "createDataEvaluator"]}
{"code": "void function ( ) { DataByteBuffer loc0 = new DataByteBuffer ( mBuffer , LENGTH ) ; Object loc1 = loc0 . getNettyOutput ( ) ; Assert . assertTrue ( loc1 instanceof ByteBuf || loc1 instanceof FileRegion ) ; }", "nl": "tests the databytebuffer #getnettyoutput method . concode_field_sep ByteBuffer mBuffer concode_elem_sep int LENGTH concode_field_sep void before concode_elem_sep void length concode_elem_sep void readOnlyByteBuffer", "code_tokens": ["void", "function", "(", ")", "{", "DataByteBuffer", "loc0", "=", "new", "DataByteBuffer", "(", "mBuffer", ",", "LENGTH", ")", ";", "Object", "loc1", "=", "loc0", ".", "getNettyOutput", "(", ")", ";", "Assert", ".", "assertTrue", "(", "loc1", "instanceof", "ByteBuf", "|", "|", "loc1", "instanceof", "FileRegion", ")", ";", "}"], "nl_tokens": ["tests", "the", "databytebuffer", "#getnettyoutput method . concode_field_sep ByteBuffer mBuffer concode_elem_sep int LENGTH concode_field_sep void before concode_elem_sep void length concode_elem_sep void readOnlyByteBuffer"]}
{"code": "String function ( ) { return referencedRevisionLabelB ; }", "nl": "get the referenced revision label in b. concode_field_sep String referencedRevisionA concode_elem_sep String referencedRevisionLabelA concode_elem_sep String referencedRevisionLabelB concode_elem_sep String referencedRevisionB concode_elem_sep Triple triple concode_elem_sep SDDTripleStateEnum tripleResolutionState concode_elem_sep ResolutionStateEnum resolutionState concode_field_sep void setResolutionState concode_elem_sep String getReferencedRevisionLabelA concode_elem_sep void setReferencedRevisionLabelA concode_elem_sep SDDTripleStateEnum getTripleResolutionState concode_elem_sep void setReferencedRevisionLabelB concode_elem_sep Triple getTriple concode_elem_sep String getReferencedRevisionB concode_elem_sep void setTripleResolutionState concode_elem_sep void setTriple concode_elem_sep void setReferencedRevisionA concode_elem_sep String getReferencedRevisionA concode_elem_sep ResolutionStateEnum getResolutionState concode_elem_sep void setReferencedRevisionB", "code_tokens": ["String", "function", "(", ")", "{", "return", "referencedRevisionLabelB", ";", "}"], "nl_tokens": ["get", "the", "referenced", "revision", "label", "in", "b", ".", "concode_field_sep", "String", "referencedRevisionA", "concode_elem_sep", "String", "referencedRevisionLabelA", "concode_elem_sep", "String", "referencedRevisionLabelB", "concode_elem_sep", "String", "referencedRevisionB", "concode_elem_sep", "Triple", "triple", "concode_elem_sep", "SDDTripleStateEnum", "tripleResolutionState", "concode_elem_sep", "ResolutionStateEnum", "resolutionState", "concode_field_sep", "void", "setResolutionState", "concode_elem_sep", "String", "getReferencedRevisionLabelA", "concode_elem_sep", "void", "setReferencedRevisionLabelA", "concode_elem_sep", "SDDTripleStateEnum", "getTripleResolutionState", "concode_elem_sep", "void", "setReferencedRevisionLabelB", "concode_elem_sep", "Triple", "getTriple", "concode_elem_sep", "String", "getReferencedRevisionB", "concode_elem_sep", "void", "setTripleResolutionState", "concode_elem_sep", "void", "setTriple", "concode_elem_sep", "void", "setReferencedRevisionA", "concode_elem_sep", "String", "getReferencedRevisionA", "concode_elem_sep", "ResolutionStateEnum", "getResolutionState", "concode_elem_sep", "void", "setReferencedRevisionB"]}
{"code": "void function ( ) { Assert . assertEquals ( mTestDir . getCapacityBytes ( ) , mTestDirView . getCapacityBytes ( ) ) ; }", "nl": "tests the storagedirview #getcapacitybytes method . concode_field_sep StorageDir mTestDir concode_elem_sep StorageDirView mTestDirView concode_elem_sep int TEST_TIER_LEVEL concode_elem_sep int TEST_DIR concode_elem_sep long TEST_BLOCK_ID concode_elem_sep long TEST_SESSION_ID concode_elem_sep TemporaryFolder mTestFolder concode_elem_sep BlockMetadataManagerView mMetaManagerView concode_elem_sep long TEST_BLOCK_SIZE concode_elem_sep StorageTierView mTestTierView concode_elem_sep long TEST_TEMP_BLOCK_ID concode_field_sep void getParentTierView concode_elem_sep void createTempBlockMeta concode_elem_sep void before concode_elem_sep void getDirViewIndex concode_elem_sep void getCommittedBytes concode_elem_sep void getEvictableBlocks concode_elem_sep void toBlockStoreLocation concode_elem_sep void getAvailableBytes", "code_tokens": ["void", "function", "(", ")", "{", "Assert", ".", "assertEquals", "(", "mTestDir", ".", "getCapacityBytes", "(", ")", ",", "mTestDirView", ".", "getCapacityBytes", "(", ")", ")", ";", "}"], "nl_tokens": ["tests", "the", "storagedirview", "#getcapacitybytes method . concode_field_sep StorageDir mTestDir concode_elem_sep StorageDirView mTestDirView concode_elem_sep int TEST_TIER_LEVEL concode_elem_sep int TEST_DIR concode_elem_sep long TEST_BLOCK_ID concode_elem_sep long TEST_SESSION_ID concode_elem_sep TemporaryFolder mTestFolder concode_elem_sep BlockMetadataManagerView mMetaManagerView concode_elem_sep long TEST_BLOCK_SIZE concode_elem_sep StorageTierView mTestTierView concode_elem_sep long TEST_TEMP_BLOCK_ID concode_field_sep void getParentTierView concode_elem_sep void createTempBlockMeta concode_elem_sep void before concode_elem_sep void getDirViewIndex concode_elem_sep void getCommittedBytes concode_elem_sep void getEvictableBlocks concode_elem_sep void toBlockStoreLocation concode_elem_sep void getAvailableBytes"]}
{"code": "List < String > function ( ) { return getChangedRefs ( Constants . R_TAGS ) ; }", "nl": "returns the list of tags changed by the push . concode_field_sep Date date concode_elem_sep int authorCount concode_elem_sep Map<String,String> refIdChanges concode_elem_sep Set<RepositoryCommit> commits concode_elem_sep long serialVersionUID concode_elem_sep String repository concode_elem_sep Map<String,ReceiveCommand.Type> refUpdates concode_elem_sep UserModel user concode_field_sep String getOldId concode_elem_sep int getAuthorCount concode_elem_sep int getCommitCount concode_elem_sep boolean isDelete concode_elem_sep int compareTo concode_elem_sep ReceiveCommand.Type getChangeType concode_elem_sep RepositoryCommit addCommit concode_elem_sep RepositoryCommit addCommit concode_elem_sep List<String> getChangedRefs concode_elem_sep List<String> getChangedRefs concode_elem_sep List<String> getChangedBranches concode_elem_sep PersonIdent getAuthorIdent concode_elem_sep List<RepositoryCommit> getCommits concode_elem_sep List<RepositoryCommit> getCommits concode_elem_sep PersonIdent getCommitterIdent concode_elem_sep void addCommits concode_elem_sep boolean isNonFastForward concode_elem_sep boolean isNonFastForward concode_elem_sep String toString concode_elem_sep void updateRef concode_elem_sep void updateRef concode_elem_sep String getNewId", "code_tokens": ["List", "<", "String", ">", "function", "(", ")", "{", "return", "getChangedRefs", "(", "Constants", ".", "R_TAGS", ")", ";", "}"], "nl_tokens": ["returns", "the", "list", "of", "tags", "changed", "by", "the", "push", ".", "concode_field_sep", "Date", "date", "concode_elem_sep", "int", "authorCount", "concode_elem_sep", "Map", "<", "String", ",", "String", ">", "refIdChanges", "concode_elem_sep", "Set", "<", "RepositoryCommit", ">", "commits", "concode_elem_sep", "long", "serialVersionUID", "concode_elem_sep", "String", "repository", "concode_elem_sep", "Map", "<", "String", ",", "ReceiveCommand", ".", "Type", ">", "refUpdates", "concode_elem_sep", "UserModel", "user", "concode_field_sep", "String", "getOldId", "concode_elem_sep", "int", "getAuthorCount", "concode_elem_sep", "int", "getCommitCount", "concode_elem_sep", "boolean", "isDelete", "concode_elem_sep", "int", "compareTo", "concode_elem_sep", "ReceiveCommand", ".", "Type", "getChangeType", "concode_elem_sep", "RepositoryCommit", "addCommit", "concode_elem_sep", "RepositoryCommit", "addCommit", "concode_elem_sep", "List", "<", "String", ">", "getChangedRefs", "concode_elem_sep", "List", "<", "String", ">", "getChangedRefs", "concode_elem_sep", "List", "<", "String", ">", "getChangedBranches", "concode_elem_sep", "PersonIdent", "getAuthorIdent", "concode_elem_sep", "List", "<", "RepositoryCommit", ">", "getCommits", "concode_elem_sep", "List", "<", "RepositoryCommit", ">", "getCommits", "concode_elem_sep", "PersonIdent", "getCommitterIdent", "concode_elem_sep", "void", "addCommits", "concode_elem_sep", "boolean", "isNonFastForward", "concode_elem_sep", "boolean", "isNonFastForward", "concode_elem_sep", "String", "toString", "concode_elem_sep", "void", "updateRef", "concode_elem_sep", "void", "updateRef", "concode_elem_sep", "String", "getNewId"]}
{"code": "String function ( ConfigurationKey arg0 , String arg1 ) { return config . getString ( arg0 , arg1 ) ; }", "nl": "returns the string value of a configuration property . concode_field_sep String URL_SAVED concode_elem_sep String FILE_SAVED concode_elem_sep String URL_LOADED concode_elem_sep ConfigurationHandler config concode_elem_sep String FILE_LOADED concode_field_sep boolean save concode_elem_sep boolean save concode_elem_sep void setInteger concode_elem_sep double getDouble concode_elem_sep double getDouble concode_elem_sep int getInteger concode_elem_sep int getInteger concode_elem_sep void removeListener concode_elem_sep void removeListener concode_elem_sep IConfigurationFactory getFactory concode_elem_sep void setDouble concode_elem_sep ConfigurationKey makeKey concode_elem_sep ConfigurationKey makeKey concode_elem_sep ConfigurationKey makeKey concode_elem_sep ConfigurationKey makeKey concode_elem_sep ConfigurationKey makeKey concode_elem_sep ConfigurationKey makeKey concode_elem_sep void setString concode_elem_sep boolean load concode_elem_sep boolean load concode_elem_sep boolean load concode_elem_sep void removeKey concode_elem_sep ConfigurationHandler getConfigurationHandler concode_elem_sep boolean getBoolean concode_elem_sep boolean getBoolean concode_elem_sep void setBoolean concode_elem_sep void addListener concode_elem_sep void addListener", "code_tokens": ["String", "function", "(", "ConfigurationKey", "arg0", ",", "String", "arg1", ")", "{", "return", "config", ".", "getString", "(", "arg0", ",", "arg1", ")", ";", "}"], "nl_tokens": ["returns", "the", "string", "value", "of", "a", "configuration", "property", ".", "concode_field_sep", "String", "URL_SAVED", "concode_elem_sep", "String", "FILE_SAVED", "concode_elem_sep", "String", "URL_LOADED", "concode_elem_sep", "ConfigurationHandler", "config", "concode_elem_sep", "String", "FILE_LOADED", "concode_field_sep", "boolean", "save", "concode_elem_sep", "boolean", "save", "concode_elem_sep", "void", "setInteger", "concode_elem_sep", "double", "getDouble", "concode_elem_sep", "double", "getDouble", "concode_elem_sep", "int", "getInteger", "concode_elem_sep", "int", "getInteger", "concode_elem_sep", "void", "removeListener", "concode_elem_sep", "void", "removeListener", "concode_elem_sep", "IConfigurationFactory", "getFactory", "concode_elem_sep", "void", "setDouble", "concode_elem_sep", "ConfigurationKey", "makeKey", "concode_elem_sep", "ConfigurationKey", "makeKey", "concode_elem_sep", "ConfigurationKey", "makeKey", "concode_elem_sep", "ConfigurationKey", "makeKey", "concode_elem_sep", "ConfigurationKey", "makeKey", "concode_elem_sep", "ConfigurationKey", "makeKey", "concode_elem_sep", "void", "setString", "concode_elem_sep", "boolean", "load", "concode_elem_sep", "boolean", "load", "concode_elem_sep", "boolean", "load", "concode_elem_sep", "void", "removeKey", "concode_elem_sep", "ConfigurationHandler", "getConfigurationHandler", "concode_elem_sep", "boolean", "getBoolean", "concode_elem_sep", "boolean", "getBoolean", "concode_elem_sep", "void", "setBoolean", "concode_elem_sep", "void", "addListener", "concode_elem_sep", "void", "addListener"]}
{"code": "String function ( ) { StringBuffer loc0 = new StringBuffer ( \"srini_string\" ) ; for ( Customer loc1 : customers ) { loc0 . append ( \"srini_string\" + loc1 . getName ( ) + \"srini_string\" + format ( loc1 . getNumberOfAccounts ( ) , \"srini_string\" ) + \"srini_string\" ) ; } return loc0 . toString ( ) ; }", "nl": "this methods return the account number summary for all existing user that registered in the bank . concode_field_sep List<Customer> customers concode_field_sep void addCustomer concode_elem_sep double totalInterestPaid concode_elem_sep String format", "code_tokens": ["String", "function", "(", ")", "{", "StringBuffer", "loc0", "=", "new", "StringBuffer", "(", "\"srini_string\"", ")", ";", "for", "(", "Customer", "loc1", ":", "customers", ")", "{", "loc0", ".", "append", "(", "\"srini_string\"", "+", "loc1", ".", "getName", "(", ")", "+", "\"srini_string\"", "+", "format", "(", "loc1", ".", "getNumberOfAccounts", "(", ")", ",", "\"srini_string\"", ")", "+", "\"srini_string\"", ")", ";", "}", "return", "loc0", ".", "toString", "(", ")", ";", "}"], "nl_tokens": ["this", "methods", "return", "the", "account", "number", "summary", "for", "all", "existing", "user", "that", "registered", "in", "the", "bank", ".", "concode_field_sep", "List", "<", "Customer", ">", "customers", "concode_field_sep", "void", "addCustomer", "concode_elem_sep", "double", "totalInterestPaid", "concode_elem_sep", "String", "format"]}
{"code": "void function ( Vector arg0 ) { this . repeatList = arg0 ; }", "nl": "returns the list of repeat times r = fields specified in the sessiondescription . concode_field_sep Vector repeatList concode_elem_sep TimeField timeImpl concode_field_sep Time getTime concode_elem_sep void addRepeatField concode_elem_sep String toString concode_elem_sep Vector getRepeatTimes concode_elem_sep void setTime", "code_tokens": ["void", "function", "(", "Vector", "arg0", ")", "{", "this", ".", "repeatList", "=", "arg0", ";", "}"], "nl_tokens": ["returns", "the", "list", "of", "repeat", "times", "r", "=", "fields", "specified", "in", "the", "sessiondescription", ".", "concode_field_sep", "Vector", "repeatList", "concode_elem_sep", "TimeField", "timeImpl", "concode_field_sep", "Time", "getTime", "concode_elem_sep", "void", "addRepeatField", "concode_elem_sep", "String", "toString", "concode_elem_sep", "Vector", "getRepeatTimes", "concode_elem_sep", "void", "setTime"]}
{"code": "String function ( ) { return value ; }", "nl": "get the value value . concode_field_sep String value concode_field_sep void setValue concode_elem_sep String toString", "code_tokens": ["String", "function", "(", ")", "{", "return", "value", ";", "}"], "nl_tokens": ["get", "the", "value", "value", ".", "concode_field_sep", "String", "value", "concode_field_sep", "void", "setValue", "concode_elem_sep", "String", "toString"]}
{"code": "void function ( DataSet arg0 ) { List < String > loc0 = arg0 . getNonTargetAttributes ( ) ; this . tree = decisionTreeLearning ( arg0 , loc0 , new ConstantDecisonTree ( defaultValue ) ) ; }", "nl": "induces the decision tree from the specified set of examples concode_field_sep String defaultValue concode_elem_sep DecisionTree tree concode_field_sep ConstantDecisonTree majorityValue concode_elem_sep int[] test concode_elem_sep DecisionTree decisionTreeLearning concode_elem_sep boolean allExamplesHaveSameClassification concode_elem_sep String predict concode_elem_sep DecisionTree getDecisionTree concode_elem_sep String chooseAttribute", "code_tokens": ["void", "function", "(", "DataSet", "arg0", ")", "{", "List", "<", "String", ">", "loc0", "=", "arg0", ".", "getNonTargetAttributes", "(", ")", ";", "this", ".", "tree", "=", "decisionTreeLearning", "(", "arg0", ",", "loc0", ",", "new", "ConstantDecisonTree", "(", "defaultValue", ")", ")", ";", "}"], "nl_tokens": ["induces", "the", "decision", "tree", "from", "the", "specified", "set", "of", "examples", "concode_field_sep", "String", "defaultValue", "concode_elem_sep", "DecisionTree", "tree", "concode_field_sep", "ConstantDecisonTree", "majorityValue", "concode_elem_sep", "int", "[", "]", "test", "concode_elem_sep", "DecisionTree", "decisionTreeLearning", "concode_elem_sep", "boolean", "allExamplesHaveSameClassification", "concode_elem_sep", "String", "predict", "concode_elem_sep", "DecisionTree", "getDecisionTree", "concode_elem_sep", "String", "chooseAttribute"]}
{"code": "ExtensionMechanismsHelper function ( ) { return impl ; }", "nl": "the component we are decorating . concode_field_sep ExtensionMechanismsHelper impl concode_field_sep Object getStereotype concode_elem_sep Object getStereotype concode_elem_sep boolean isValidStereotype concode_elem_sep void addTaggedValue concode_elem_sep void removeTaggedValue concode_elem_sep Collection getAllPossibleStereotypes concode_elem_sep boolean isStereotype concode_elem_sep void removeBaseClass concode_elem_sep void setType concode_elem_sep boolean hasStereotype concode_elem_sep void setIcon concode_elem_sep Collection getStereotypes concode_elem_sep Collection getStereotypes concode_elem_sep String getMetaModelName concode_elem_sep boolean isValidStereoType concode_elem_sep void addExtendedElement concode_elem_sep void addBaseClass concode_elem_sep void setValueOfTag concode_elem_sep boolean isStereotypeInh concode_elem_sep void setTaggedValue concode_elem_sep void setTagType concode_elem_sep void addCopyStereotype concode_elem_sep void setDataValues concode_elem_sep boolean hasStereoType", "code_tokens": ["ExtensionMechanismsHelper", "function", "(", ")", "{", "return", "impl", ";", "}"], "nl_tokens": ["the", "component", "we", "are", "decorating", ".", "concode_field_sep", "ExtensionMechanismsHelper", "impl", "concode_field_sep", "Object", "getStereotype", "concode_elem_sep", "Object", "getStereotype", "concode_elem_sep", "boolean", "isValidStereotype", "concode_elem_sep", "void", "addTaggedValue", "concode_elem_sep", "void", "removeTaggedValue", "concode_elem_sep", "Collection", "getAllPossibleStereotypes", "concode_elem_sep", "boolean", "isStereotype", "concode_elem_sep", "void", "removeBaseClass", "concode_elem_sep", "void", "setType", "concode_elem_sep", "boolean", "hasStereotype", "concode_elem_sep", "void", "setIcon", "concode_elem_sep", "Collection", "getStereotypes", "concode_elem_sep", "Collection", "getStereotypes", "concode_elem_sep", "String", "getMetaModelName", "concode_elem_sep", "boolean", "isValidStereoType", "concode_elem_sep", "void", "addExtendedElement", "concode_elem_sep", "void", "addBaseClass", "concode_elem_sep", "void", "setValueOfTag", "concode_elem_sep", "boolean", "isStereotypeInh", "concode_elem_sep", "void", "setTaggedValue", "concode_elem_sep", "void", "setTagType", "concode_elem_sep", "void", "addCopyStereotype", "concode_elem_sep", "void", "setDataValues", "concode_elem_sep", "boolean", "hasStereoType"]}
{"code": "String function ( HttpServletRequest arg0 ) { String loc0 = arg0 . getParameter ( WebService . FORMAT ) ; return loc0 == null ? loc0 : loc0 . toLowerCase ( ) ; }", "nl": "get the return format requested concode_field_sep PlaceHolder placeHolder concode_field_sep HashSet<String> getCancerStudyIDs concode_elem_sep String getCaseSetId concode_elem_sep ArrayList<String> getSampleIds concode_elem_sep String getCancerStudyId concode_elem_sep ArrayList<String> getGeneticProfileId", "code_tokens": ["String", "function", "(", "HttpServletRequest", "arg0", ")", "{", "String", "loc0", "=", "arg0", ".", "getParameter", "(", "WebService", ".", "FORMAT", ")", ";", "return", "loc0", "==", "null", "?", "loc0", ":", "loc0", ".", "toLowerCase", "(", ")", ";", "}"], "nl_tokens": ["get", "the", "return", "format", "requested", "concode_field_sep", "PlaceHolder", "placeHolder", "concode_field_sep", "HashSet", "<", "String", ">", "getCancerStudyIDs", "concode_elem_sep", "String", "getCaseSetId", "concode_elem_sep", "ArrayList", "<", "String", ">", "getSampleIds", "concode_elem_sep", "String", "getCancerStudyId", "concode_elem_sep", "ArrayList", "<", "String", ">", "getGeneticProfileId"]}
{"code": "void function ( final int arg0 , final D1Submatrix64F arg1 , final D1Submatrix64F arg2 , int arg3 , double arg4 ) { double loc0 = BlockHouseHolder . innerProdRow ( arg0 , arg1 , arg3 , arg2 , arg3 , 1 ) ; double loc1 = arg1 . get ( arg3 , arg3 + 1 ) ; arg1 . set ( arg3 , arg3 + 1 , 1 ) ; BlockVectorOps . add_row ( arg0 , arg2 , arg3 , 1 , arg1 , arg3 , - 0.5 * arg4 * loc0 , arg2 , arg3 , arg3 + 1 , arg1 . col1 - arg1 . col0 ) ; arg1 . set ( arg3 , arg3 + 1 , loc1 ) ; }", "nl": "final computation for a single row of ` v ' : v = y - 1/2 & gamma ; y ^ tu u concode_field_sep PlaceHolder placeHolder concode_field_sep void tridiagUpperRow concode_elem_sep void multA_u concode_elem_sep double innerProdRowSymm concode_elem_sep void computeW_row concode_elem_sep void applyReflectorsToRow concode_elem_sep void computeY concode_elem_sep void computeV_blockVector", "code_tokens": ["void", "function", "(", "final", "int", "arg0", ",", "final", "D1Submatrix64F", "arg1", ",", "final", "D1Submatrix64F", "arg2", ",", "int", "arg3", ",", "double", "arg4", ")", "{", "double", "loc0", "=", "BlockHouseHolder", ".", "innerProdRow", "(", "arg0", ",", "arg1", ",", "arg3", ",", "arg2", ",", "arg3", ",", "1", ")", ";", "double", "loc1", "=", "arg1", ".", "get", "(", "arg3", ",", "arg3", "+", "1", ")", ";", "arg1", ".", "set", "(", "arg3", ",", "arg3", "+", "1", ",", "1", ")", ";", "BlockVectorOps", ".", "add_row", "(", "arg0", ",", "arg2", ",", "arg3", ",", "1", ",", "arg1", ",", "arg3", ",", "-", "0.5", "*", "arg4", "*", "loc0", ",", "arg2", ",", "arg3", ",", "arg3", "+", "1", ",", "arg1", ".", "col1", "-", "arg1", ".", "col0", ")", ";", "arg1", ".", "set", "(", "arg3", ",", "arg3", "+", "1", ",", "loc1", ")", ";", "}"], "nl_tokens": ["final", "computation", "for", "a", "single", "row", "of", "`", "v", "'", ":", "v", "=", "y", "-", "1", "/", "2", "&", "gamma", ";", "y", "^", "tu", "u", "concode_field_sep", "PlaceHolder", "placeHolder", "concode_field_sep", "void", "tridiagUpperRow", "concode_elem_sep", "void", "multA_u", "concode_elem_sep", "double", "innerProdRowSymm", "concode_elem_sep", "void", "computeW_row", "concode_elem_sep", "void", "applyReflectorsToRow", "concode_elem_sep", "void", "computeY", "concode_elem_sep", "void", "computeV_blockVector"]}
{"code": "int function ( ) { return dimension ; }", "nl": "get the k-dimensional space that the points is in calls : none called by : centroid , codebook concode_field_sep double coordinates[] concode_elem_sep int dimension concode_field_sep double[] getAllCo concode_elem_sep boolean equals concode_elem_sep double getCo concode_elem_sep void setCo concode_elem_sep void changeCo", "code_tokens": ["int", "function", "(", ")", "{", "return", "dimension", ";", "}"], "nl_tokens": ["get", "the", "k", "-", "dimensional", "space", "that", "the", "points", "is", "in", "calls", ":", "none", "called", "by", ":", "centroid", ",", "codebook", "concode_field_sep", "double", "coordinates", "[", "]", "concode_elem_sep", "int", "dimension", "concode_field_sep", "double", "[", "]", "getAllCo", "concode_elem_sep", "boolean", "equals", "concode_elem_sep", "double", "getCo", "concode_elem_sep", "void", "setCo", "concode_elem_sep", "void", "changeCo"]}
{"code": "void function ( String arg0 ) { this . album = arg0 ; }", "nl": "set the value of album concode_field_sep FolderInfo.CheckedFlag checkedFlag concode_elem_sep String artist concode_elem_sep String album concode_elem_sep double rating concode_elem_sep int errorLevel concode_field_sep FolderInfo.CheckedFlag getCheckedFlag concode_elem_sep void setArtist concode_elem_sep int getErrorLevel concode_elem_sep void setErrorLevel concode_elem_sep String getArtist concode_elem_sep String toString concode_elem_sep void setCheckedFlag concode_elem_sep void setRating concode_elem_sep String getAlbum concode_elem_sep double getRating", "code_tokens": ["void", "function", "(", "String", "arg0", ")", "{", "this", ".", "album", "=", "arg0", ";", "}"], "nl_tokens": ["set", "the", "value", "of", "album", "concode_field_sep", "FolderInfo", ".", "CheckedFlag", "checkedFlag", "concode_elem_sep", "String", "artist", "concode_elem_sep", "String", "album", "concode_elem_sep", "double", "rating", "concode_elem_sep", "int", "errorLevel", "concode_field_sep", "FolderInfo", ".", "CheckedFlag", "getCheckedFlag", "concode_elem_sep", "void", "setArtist", "concode_elem_sep", "int", "getErrorLevel", "concode_elem_sep", "void", "setErrorLevel", "concode_elem_sep", "String", "getArtist", "concode_elem_sep", "String", "toString", "concode_elem_sep", "void", "setCheckedFlag", "concode_elem_sep", "void", "setRating", "concode_elem_sep", "String", "getAlbum", "concode_elem_sep", "double", "getRating"]}
{"code": "ResponseEntity < Void > function ( @ PathVariable String arg0 ) { log . debug ( \"srini_string\" , arg0 ) ; dishCollectionService . delete ( arg0 ) ; return ResponseEntity . ok ( ) . headers ( HeaderUtil . createEntityDeletionAlert ( \"srini_string\" , arg0 . toString ( ) ) ) . build ( ) ; }", "nl": "delete / dish-collections / : id : delete the `` id '' dishcollection . concode_field_sep Logger log concode_elem_sep DishCollectionService dishCollectionService concode_field_sep ResponseEntity<List<DishCollection>> getAllDishCollections concode_elem_sep ResponseEntity<DishCollection> updateDishCollection concode_elem_sep ResponseEntity<DishCollection> createDishCollection concode_elem_sep ResponseEntity<DishCollection> getDishCollection", "code_tokens": ["ResponseEntity", "<", "Void", ">", "function", "(", "@", "PathVariable", "String", "arg0", ")", "{", "log", ".", "debug", "(", "\"srini_string\"", ",", "arg0", ")", ";", "dishCollectionService", ".", "delete", "(", "arg0", ")", ";", "return", "ResponseEntity", ".", "ok", "(", ")", ".", "headers", "(", "HeaderUtil", ".", "createEntityDeletionAlert", "(", "\"srini_string\"", ",", "arg0", ".", "toString", "(", ")", ")", ")", ".", "build", "(", ")", ";", "}"], "nl_tokens": ["delete", "/", "dish", "-", "collections", "/", ":", "id", ":", "delete", "the", "`", "`", "id", "''", "dishcollection", ".", "concode_field_sep", "Logger", "log", "concode_elem_sep", "DishCollectionService", "dishCollectionService", "concode_field_sep", "ResponseEntity", "<", "List", "<", "DishCollection", ">>", "getAllDishCollections", "concode_elem_sep", "ResponseEntity", "<", "DishCollection", ">", "updateDishCollection", "concode_elem_sep", "ResponseEntity", "<", "DishCollection", ">", "createDishCollection", "concode_elem_sep", "ResponseEntity", "<", "DishCollection", ">", "getDishCollection"]}
{"code": "int function ( ) { if ( vstack . empty ( ) ) throw new Exception ( \"srini_string\" ) ; return vstack . peek ( ) . intValue ( ) ; }", "nl": "return value on the top of the stack without popping it . concode_field_sep int real_next concode_elem_sep Stack<Integer> vstack concode_elem_sep Stack<Symbol> real_stack concode_field_sep void pop concode_elem_sep void get_from_real concode_elem_sep void push concode_elem_sep boolean empty", "code_tokens": ["int", "function", "(", ")", "{", "if", "(", "vstack", ".", "empty", "(", ")", ")", "throw", "new", "Exception", "(", "\"srini_string\"", ")", ";", "return", "vstack", ".", "peek", "(", ")", ".", "intValue", "(", ")", ";", "}"], "nl_tokens": ["return", "value", "on", "the", "top", "of", "the", "stack", "without", "popping", "it", ".", "concode_field_sep", "int", "real_next", "concode_elem_sep", "Stack", "<", "Integer", ">", "vstack", "concode_elem_sep", "Stack", "<", "Symbol", ">", "real_stack", "concode_field_sep", "void", "pop", "concode_elem_sep", "void", "get_from_real", "concode_elem_sep", "void", "push", "concode_elem_sep", "boolean", "empty"]}
{"code": "void function ( String arg0 ) { File loc0 = new File ( arg0 ) ; com . google . common . io . Files . createParentDirs ( loc0 ) ; if ( ! loc0 . createNewFile ( ) ) { throw new IOException ( \"srini_string\" + arg0 ) ; } }", "nl": "creates an empty file and its intermediate directories if necessary . concode_field_sep Logger LOG concode_field_sep void setLocalDirStickyBit concode_elem_sep void move concode_elem_sep short getLocalFileMode concode_elem_sep void changeLocalFileUser concode_elem_sep void delete concode_elem_sep String getLocalFileOwner concode_elem_sep void createStorageDirPath concode_elem_sep void changeLocalFileToFullPermission concode_elem_sep void changeLocalFileGroup concode_elem_sep String getLocalFileGroup concode_elem_sep void createDir concode_elem_sep boolean exists concode_elem_sep void createBlockPath concode_elem_sep void changeLocalFilePermission concode_elem_sep void deletePathRecursively", "code_tokens": ["void", "function", "(", "String", "arg0", ")", "{", "File", "loc0", "=", "new", "File", "(", "arg0", ")", ";", "com", ".", "google", ".", "common", ".", "io", ".", "Files", ".", "createParentDirs", "(", "loc0", ")", ";", "if", "(", "!", "loc0", ".", "createNewFile", "(", ")", ")", "{", "throw", "new", "IOException", "(", "\"srini_string\"", "+", "arg0", ")", ";", "}", "}"], "nl_tokens": ["creates", "an", "empty", "file", "and", "its", "intermediate", "directories", "if", "necessary", ".", "concode_field_sep", "Logger", "LOG", "concode_field_sep", "void", "setLocalDirStickyBit", "concode_elem_sep", "void", "move", "concode_elem_sep", "short", "getLocalFileMode", "concode_elem_sep", "void", "changeLocalFileUser", "concode_elem_sep", "void", "delete", "concode_elem_sep", "String", "getLocalFileOwner", "concode_elem_sep", "void", "createStorageDirPath", "concode_elem_sep", "void", "changeLocalFileToFullPermission", "concode_elem_sep", "void", "changeLocalFileGroup", "concode_elem_sep", "String", "getLocalFileGroup", "concode_elem_sep", "void", "createDir", "concode_elem_sep", "boolean", "exists", "concode_elem_sep", "void", "createBlockPath", "concode_elem_sep", "void", "changeLocalFilePermission", "concode_elem_sep", "void", "deletePathRecursively"]}
{"code": "void function ( ) { server . stop ( ) ; }", "nl": "pausa o servidor concode_field_sep Server server concode_elem_sep GerenciadorFila gerenciadorFila concode_elem_sep GerenciadorChat gerenciadorChat concode_elem_sep DBConnector comunicador concode_elem_sep GerenciadorPartida gerenciadorPartida concode_elem_sep GerenciadorUsuario gerenciadorUsuario concode_field_sep void setGerenciadorFila concode_elem_sep Server getServer concode_elem_sep void setGerenciadorChat concode_elem_sep GerenciadorFila getGerenciadorFila concode_elem_sep void iniciar concode_elem_sep DBConnector getComunicador concode_elem_sep void registrar concode_elem_sep void setServer concode_elem_sep GerenciadorChat getGerenciadorChat concode_elem_sep GerenciadorPartida getGerenciadorPartida concode_elem_sep void setComunicador concode_elem_sep void setGerenciadorPartida concode_elem_sep void setGerenciadorUsuario concode_elem_sep GerenciadorUsuario getGerenciadorUsuario", "code_tokens": ["void", "function", "(", ")", "{", "server", ".", "stop", "(", ")", ";", "}"], "nl_tokens": ["pausa", "o", "servidor", "concode_field_sep", "Server", "server", "concode_elem_sep", "GerenciadorFila", "gerenciadorFila", "concode_elem_sep", "GerenciadorChat", "gerenciadorChat", "concode_elem_sep", "DBConnector", "comunicador", "concode_elem_sep", "GerenciadorPartida", "gerenciadorPartida", "concode_elem_sep", "GerenciadorUsuario", "gerenciadorUsuario", "concode_field_sep", "void", "setGerenciadorFila", "concode_elem_sep", "Server", "getServer", "concode_elem_sep", "void", "setGerenciadorChat", "concode_elem_sep", "GerenciadorFila", "getGerenciadorFila", "concode_elem_sep", "void", "iniciar", "concode_elem_sep", "DBConnector", "getComunicador", "concode_elem_sep", "void", "registrar", "concode_elem_sep", "void", "setServer", "concode_elem_sep", "GerenciadorChat", "getGerenciadorChat", "concode_elem_sep", "GerenciadorPartida", "getGerenciadorPartida", "concode_elem_sep", "void", "setComunicador", "concode_elem_sep", "void", "setGerenciadorPartida", "concode_elem_sep", "void", "setGerenciadorUsuario", "concode_elem_sep", "GerenciadorUsuario", "getGerenciadorUsuario"]}
{"code": "void function ( int arg0 ) { this . bufferedImageType = arg0 ; }", "nl": "sets the type for the bufferedimage used as output for this renderer ; must be one of the values from java.awt.image.bufferedimage allowed in that class ' constructor as a type argument . see docs forthe type parameter in java.awt.image.bufferedimage #bufferedimage int , int , int . defaults to rgb with no support for transparency . the type is used when the image is first created , so to change the default type do so before calling #getimage . concode_field_sep String sourceDocument concode_elem_sep SharedContext sharedContext concode_elem_sep int DEFAULT_DOTS_PER_PIXEL concode_elem_sep Java2DOutputDevice outputDevice concode_elem_sep Map renderingHints concode_elem_sep int NO_HEIGHT concode_elem_sep boolean rendered concode_elem_sep Box root concode_elem_sep float dotsPerPoint concode_elem_sep int DEFAULT_IMAGE_TYPE concode_elem_sep int bufferedImageType concode_elem_sep int width concode_elem_sep Document doc concode_elem_sep BufferedImage outputImage concode_elem_sep int DEFAULT_HEIGHT concode_elem_sep String sourceDocumentBase concode_elem_sep int DEFAULT_DOTS_PER_POINT concode_elem_sep int height concode_field_sep Document loadDocument concode_elem_sep void layout concode_elem_sep void init concode_elem_sep BufferedImage createBufferedImage concode_elem_sep void setDocument concode_elem_sep boolean isHover concode_elem_sep boolean isFocus concode_elem_sep void setRenderingHints concode_elem_sep boolean isActive concode_elem_sep SharedContext getSharedContext concode_elem_sep BufferedImage getImage concode_elem_sep LayoutContext newLayoutContext", "code_tokens": ["void", "function", "(", "int", "arg0", ")", "{", "this", ".", "bufferedImageType", "=", "arg0", ";", "}"], "nl_tokens": ["sets", "the", "type", "for", "the", "bufferedimage", "used", "as", "output", "for", "this", "renderer", ";", "must", "be", "one", "of", "the", "values", "from", "java", ".", "awt", ".", "image", ".", "bufferedimage", "allowed", "in", "that", "class", "'", "constructor", "as", "a", "type", "argument", ".", "see", "docs", "forthe", "type", "parameter", "in", "java", ".", "awt", ".", "image", ".", "bufferedimage", "#bufferedimage int , int , int . defaults to rgb with no support for transparency . the type is used when the image is first created , so to change the default type do so before calling #getimage . concode_field_sep String sourceDocument concode_elem_sep SharedContext sharedContext concode_elem_sep int DEFAULT_DOTS_PER_PIXEL concode_elem_sep Java2DOutputDevice outputDevice concode_elem_sep Map renderingHints concode_elem_sep int NO_HEIGHT concode_elem_sep boolean rendered concode_elem_sep Box root concode_elem_sep float dotsPerPoint concode_elem_sep int DEFAULT_IMAGE_TYPE concode_elem_sep int bufferedImageType concode_elem_sep int width concode_elem_sep Document doc concode_elem_sep BufferedImage outputImage concode_elem_sep int DEFAULT_HEIGHT concode_elem_sep String sourceDocumentBase concode_elem_sep int DEFAULT_DOTS_PER_POINT concode_elem_sep int height concode_field_sep Document loadDocument concode_elem_sep void layout concode_elem_sep void init concode_elem_sep BufferedImage createBufferedImage concode_elem_sep void setDocument concode_elem_sep boolean isHover concode_elem_sep boolean isFocus concode_elem_sep void setRenderingHints concode_elem_sep boolean isActive concode_elem_sep SharedContext getSharedContext concode_elem_sep BufferedImage getImage concode_elem_sep LayoutContext newLayoutContext"]}
{"code": "void function ( ) { Map < String , Long > loc0 = ImmutableMap . of ( \"srini_string\" , 5000L , \"srini_string\" , 60000L ) ; Assert . assertEquals ( loc0 , mBlockStoreMeta . getCapacityBytesOnTiers ( ) ) ; }", "nl": "tests the blockstoremeta #getcapacitybytesontiers method . concode_field_sep long COMMITTED_BLOCKS_NUM concode_elem_sep long TEST_SESSION_ID concode_elem_sep BlockStoreMeta mBlockStoreMeta concode_elem_sep BlockStoreMeta mBlockStoreMetaFull concode_elem_sep long TEST_BLOCK_SIZE concode_elem_sep BlockMetadataManager mMetadataManager concode_elem_sep TemporaryFolder mTestFolder concode_field_sep void getUsedBytesOnTiers concode_elem_sep void before concode_elem_sep void getCapacityBytesOnDirs concode_elem_sep void getUsedBytes concode_elem_sep void getNumberOfBlocks concode_elem_sep void getCapacityBytes concode_elem_sep void getUsedBytesOnDirs concode_elem_sep void getBlockList", "code_tokens": ["void", "function", "(", ")", "{", "Map", "<", "String", ",", "Long", ">", "loc0", "=", "ImmutableMap", ".", "of", "(", "\"srini_string\"", ",", "5000", "L", ",", "\"srini_string\"", ",", "60000", "L", ")", ";", "Assert", ".", "assertEquals", "(", "loc0", ",", "mBlockStoreMeta", ".", "getCapacityBytesOnTiers", "(", ")", ")", ";", "}"], "nl_tokens": ["tests", "the", "blockstoremeta", "#getcapacitybytesontiers method . concode_field_sep long COMMITTED_BLOCKS_NUM concode_elem_sep long TEST_SESSION_ID concode_elem_sep BlockStoreMeta mBlockStoreMeta concode_elem_sep BlockStoreMeta mBlockStoreMetaFull concode_elem_sep long TEST_BLOCK_SIZE concode_elem_sep BlockMetadataManager mMetadataManager concode_elem_sep TemporaryFolder mTestFolder concode_field_sep void getUsedBytesOnTiers concode_elem_sep void before concode_elem_sep void getCapacityBytesOnDirs concode_elem_sep void getUsedBytes concode_elem_sep void getNumberOfBlocks concode_elem_sep void getCapacityBytes concode_elem_sep void getUsedBytesOnDirs concode_elem_sep void getBlockList"]}
{"code": "DishCollection function ( DishCollection arg0 ) { log . debug ( \"srini_string\" , arg0 ) ; DishCollection loc0 = dishCollectionRepository . save ( arg0 ) ; return loc0 ; }", "nl": "save a dishcollection . concode_field_sep DishCollectionRepository dishCollectionRepository concode_elem_sep Logger log concode_field_sep DishCollection findOneByName concode_elem_sep DishCollection findOne concode_elem_sep Page<DishCollection> findAll concode_elem_sep void delete", "code_tokens": ["DishCollection", "function", "(", "DishCollection", "arg0", ")", "{", "log", ".", "debug", "(", "\"srini_string\"", ",", "arg0", ")", ";", "DishCollection", "loc0", "=", "dishCollectionRepository", ".", "save", "(", "arg0", ")", ";", "return", "loc0", ";", "}"], "nl_tokens": ["save", "a", "dishcollection", ".", "concode_field_sep", "DishCollectionRepository", "dishCollectionRepository", "concode_elem_sep", "Logger", "log", "concode_field_sep", "DishCollection", "findOneByName", "concode_elem_sep", "DishCollection", "findOne", "concode_elem_sep", "Page", "<", "DishCollection", ">", "findAll", "concode_elem_sep", "void", "delete"]}
{"code": "CertificateChainInfo function ( ) { return chain ; }", "nl": "gets the value of the chain property . concode_field_sep CertificateChainInfo chain concode_field_sep void setChain", "code_tokens": ["CertificateChainInfo", "function", "(", ")", "{", "return", "chain", ";", "}"], "nl_tokens": ["gets", "the", "value", "of", "the", "chain", "property", ".", "concode_field_sep", "CertificateChainInfo", "chain", "concode_field_sep", "void", "setChain"]}
{"code": "int function ( ) { return priority ; }", "nl": "ideally this should be configurable . for the moment , hard code the priority . concode_field_sep int DEFAULT_PRIORITY concode_elem_sep String BASIC_AUTH_HEADER concode_elem_sep Log log concode_elem_sep int priority concode_elem_sep Map<String,String> properties concode_field_sep boolean canHandle concode_elem_sep void setProperties concode_elem_sep void setDefaultPriority concode_elem_sep boolean isAuthenticated concode_elem_sep void setPriority", "code_tokens": ["int", "function", "(", ")", "{", "return", "priority", ";", "}"], "nl_tokens": ["ideally", "this", "should", "be", "configurable", ".", "for", "the", "moment", ",", "hard", "code", "the", "priority", ".", "concode_field_sep", "int", "DEFAULT_PRIORITY", "concode_elem_sep", "String", "BASIC_AUTH_HEADER", "concode_elem_sep", "Log", "log", "concode_elem_sep", "int", "priority", "concode_elem_sep", "Map", "<", "String", ",", "String", ">", "properties", "concode_field_sep", "boolean", "canHandle", "concode_elem_sep", "void", "setProperties", "concode_elem_sep", "void", "setDefaultPriority", "concode_elem_sep", "boolean", "isAuthenticated", "concode_elem_sep", "void", "setPriority"]}
{"code": "long function ( K arg0 , long arg1 , LongBinaryOperator arg2 ) { checkNotNull ( arg2 ) ; return getAndUpdate ( arg0 , oldValue -> arg2 . applyAsLong ( oldValue , arg1 ) ) ; }", "nl": "updates the value currently associated with key by combining it with x via the specified accumulator function , returning the old value . the previous value associated with key or zero , if there is none is passed as the first argumentto accumulatorfunction , and x is passed as the second argument . concode_field_sep Map<K,Long> asMap concode_elem_sep ConcurrentHashMap<K,Long> map concode_field_sep long getAndIncrement concode_elem_sep long incrementAndGet concode_elem_sep Map<K,Long> createAsMap concode_elem_sep Map<K,Long> asMap concode_elem_sep boolean removeIfZero concode_elem_sep boolean replace concode_elem_sep long decrementAndGet concode_elem_sep long updateAndGet concode_elem_sep long sum concode_elem_sep long put concode_elem_sep long remove concode_elem_sep boolean remove concode_elem_sep void removeAllZeros concode_elem_sep long get concode_elem_sep void putAll concode_elem_sep AtomicLongMap<K> create concode_elem_sep AtomicLongMap<K> create concode_elem_sep long getAndAdd concode_elem_sep long accumulateAndGet concode_elem_sep boolean containsKey concode_elem_sep boolean isEmpty concode_elem_sep void clear concode_elem_sep int size concode_elem_sep long addAndGet concode_elem_sep String toString concode_elem_sep long getAndUpdate concode_elem_sep long getAndDecrement concode_elem_sep long putIfAbsent", "code_tokens": ["long", "function", "(", "K", "arg0", ",", "long", "arg1", ",", "LongBinaryOperator", "arg2", ")", "{", "checkNotNull", "(", "arg2", ")", ";", "return", "getAndUpdate", "(", "arg0", ",", "oldValue", "->", "arg2", ".", "applyAsLong", "(", "oldValue", ",", "arg1", ")", ")", ";", "}"], "nl_tokens": ["updates", "the", "value", "currently", "associated", "with", "key", "by", "combining", "it", "with", "x", "via", "the", "specified", "accumulator", "function", ",", "returning", "the", "old", "value", ".", "the", "previous", "value", "associated", "with", "key", "or", "zero", ",", "if", "there", "is", "none", "is", "passed", "as", "the", "first", "argumentto", "accumulatorfunction", ",", "and", "x", "is", "passed", "as", "the", "second", "argument", ".", "concode_field_sep", "Map", "<", "K", ",", "Long", ">", "asMap", "concode_elem_sep", "ConcurrentHashMap", "<", "K", ",", "Long", ">", "map", "concode_field_sep", "long", "getAndIncrement", "concode_elem_sep", "long", "incrementAndGet", "concode_elem_sep", "Map", "<", "K", ",", "Long", ">", "createAsMap", "concode_elem_sep", "Map", "<", "K", ",", "Long", ">", "asMap", "concode_elem_sep", "boolean", "removeIfZero", "concode_elem_sep", "boolean", "replace", "concode_elem_sep", "long", "decrementAndGet", "concode_elem_sep", "long", "updateAndGet", "concode_elem_sep", "long", "sum", "concode_elem_sep", "long", "put", "concode_elem_sep", "long", "remove", "concode_elem_sep", "boolean", "remove", "concode_elem_sep", "void", "removeAllZeros", "concode_elem_sep", "long", "get", "concode_elem_sep", "void", "putAll", "concode_elem_sep", "AtomicLongMap", "<", "K", ">", "create", "concode_elem_sep", "AtomicLongMap", "<", "K", ">", "create", "concode_elem_sep", "long", "getAndAdd", "concode_elem_sep", "long", "accumulateAndGet", "concode_elem_sep", "boolean", "containsKey", "concode_elem_sep", "boolean", "isEmpty", "concode_elem_sep", "void", "clear", "concode_elem_sep", "int", "size", "concode_elem_sep", "long", "addAndGet", "concode_elem_sep", "String", "toString", "concode_elem_sep", "long", "getAndUpdate", "concode_elem_sep", "long", "getAndDecrement", "concode_elem_sep", "long", "putIfAbsent"]}
{"code": "void function ( THashSet < String > arg0 ) { mBlacklist . addAll ( arg0 ) ; }", "nl": "add blacklist to this hosts file concode_field_sep boolean mParseWhitelist concode_elem_sep THashMap<String,String> mRedirectionList concode_elem_sep Matcher mHostsParserMatcher concode_elem_sep THashSet<String> mWhitelist concode_elem_sep THashSet<String> mBlacklist concode_elem_sep Pattern mHostsParserPattern concode_elem_sep boolean mParseRedirections concode_field_sep void addWhitelist concode_elem_sep void addRedirectionList concode_elem_sep THashSet<String> getBlacklist concode_elem_sep THashSet<String> getWhitelist concode_elem_sep THashMap<String,String> getRedirectionList concode_elem_sep void parse concode_elem_sep void compileList", "code_tokens": ["void", "function", "(", "THashSet", "<", "String", ">", "arg0", ")", "{", "mBlacklist", ".", "addAll", "(", "arg0", ")", ";", "}"], "nl_tokens": ["add", "blacklist", "to", "this", "hosts", "file", "concode_field_sep", "boolean", "mParseWhitelist", "concode_elem_sep", "THashMap", "<", "String", ",", "String", ">", "mRedirectionList", "concode_elem_sep", "Matcher", "mHostsParserMatcher", "concode_elem_sep", "THashSet", "<", "String", ">", "mWhitelist", "concode_elem_sep", "THashSet", "<", "String", ">", "mBlacklist", "concode_elem_sep", "Pattern", "mHostsParserPattern", "concode_elem_sep", "boolean", "mParseRedirections", "concode_field_sep", "void", "addWhitelist", "concode_elem_sep", "void", "addRedirectionList", "concode_elem_sep", "THashSet", "<", "String", ">", "getBlacklist", "concode_elem_sep", "THashSet", "<", "String", ">", "getWhitelist", "concode_elem_sep", "THashMap", "<", "String", ",", "String", ">", "getRedirectionList", "concode_elem_sep", "void", "parse", "concode_elem_sep", "void", "compileList"]}
{"code": "boolean function ( ) { return settings . getBoolean ( Keys . git . enableGitServlet , true ) || ( settings . getInteger ( Keys . git . daemonPort , 0 ) > 0 ) || ( settings . getInteger ( Keys . git . sshPort , 0 ) > 0 ) ; }", "nl": "determine if this gitblit instance is actively serving git repositories or if it is merely a repository viewer . concode_field_sep IStoredSettings settings concode_elem_sep ServerStatus serverStatus concode_elem_sep Logger logger concode_elem_sep File baseFolder concode_elem_sep TimeZone timezone concode_elem_sep ServerSettings settingsModel concode_field_sep boolean isDebugMode concode_elem_sep IStoredSettings getSettings concode_elem_sep RuntimeManager start concode_elem_sep void logTimezone concode_elem_sep File getFileOrFolder concode_elem_sep File getFileOrFolder concode_elem_sep boolean updateSettings concode_elem_sep ServerStatus getStatus concode_elem_sep ServerSettings getSettingsModel concode_elem_sep void setBaseFolder concode_elem_sep RuntimeManager stop concode_elem_sep TimeZone getTimezone concode_elem_sep Date getBootDate concode_elem_sep File getBaseFolder", "code_tokens": ["boolean", "function", "(", ")", "{", "return", "settings", ".", "getBoolean", "(", "Keys", ".", "git", ".", "enableGitServlet", ",", "true", ")", "|", "|", "(", "settings", ".", "getInteger", "(", "Keys", ".", "git", ".", "daemonPort", ",", "0", ")", ">", "0", ")", "|", "|", "(", "settings", ".", "getInteger", "(", "Keys", ".", "git", ".", "sshPort", ",", "0", ")", ">", "0", ")", ";", "}"], "nl_tokens": ["determine", "if", "this", "gitblit", "instance", "is", "actively", "serving", "git", "repositories", "or", "if", "it", "is", "merely", "a", "repository", "viewer", ".", "concode_field_sep", "IStoredSettings", "settings", "concode_elem_sep", "ServerStatus", "serverStatus", "concode_elem_sep", "Logger", "logger", "concode_elem_sep", "File", "baseFolder", "concode_elem_sep", "TimeZone", "timezone", "concode_elem_sep", "ServerSettings", "settingsModel", "concode_field_sep", "boolean", "isDebugMode", "concode_elem_sep", "IStoredSettings", "getSettings", "concode_elem_sep", "RuntimeManager", "start", "concode_elem_sep", "void", "logTimezone", "concode_elem_sep", "File", "getFileOrFolder", "concode_elem_sep", "File", "getFileOrFolder", "concode_elem_sep", "boolean", "updateSettings", "concode_elem_sep", "ServerStatus", "getStatus", "concode_elem_sep", "ServerSettings", "getSettingsModel", "concode_elem_sep", "void", "setBaseFolder", "concode_elem_sep", "RuntimeManager", "stop", "concode_elem_sep", "TimeZone", "getTimezone", "concode_elem_sep", "Date", "getBootDate", "concode_elem_sep", "File", "getBaseFolder"]}
{"code": "int function ( ConfigurationKey arg0 , int arg1 ) { return config . getInteger ( arg0 , arg1 ) ; }", "nl": "returns the numeric value of a configuration property . concode_field_sep String URL_SAVED concode_elem_sep String FILE_SAVED concode_elem_sep String URL_LOADED concode_elem_sep ConfigurationHandler config concode_elem_sep String FILE_LOADED concode_field_sep boolean save concode_elem_sep boolean save concode_elem_sep void setInteger concode_elem_sep double getDouble concode_elem_sep double getDouble concode_elem_sep String getString concode_elem_sep String getString concode_elem_sep void removeListener concode_elem_sep void removeListener concode_elem_sep IConfigurationFactory getFactory concode_elem_sep void setDouble concode_elem_sep ConfigurationKey makeKey concode_elem_sep ConfigurationKey makeKey concode_elem_sep ConfigurationKey makeKey concode_elem_sep ConfigurationKey makeKey concode_elem_sep ConfigurationKey makeKey concode_elem_sep ConfigurationKey makeKey concode_elem_sep void setString concode_elem_sep boolean load concode_elem_sep boolean load concode_elem_sep boolean load concode_elem_sep void removeKey concode_elem_sep ConfigurationHandler getConfigurationHandler concode_elem_sep boolean getBoolean concode_elem_sep boolean getBoolean concode_elem_sep void setBoolean concode_elem_sep void addListener concode_elem_sep void addListener", "code_tokens": ["int", "function", "(", "ConfigurationKey", "arg0", ",", "int", "arg1", ")", "{", "return", "config", ".", "getInteger", "(", "arg0", ",", "arg1", ")", ";", "}"], "nl_tokens": ["returns", "the", "numeric", "value", "of", "a", "configuration", "property", ".", "concode_field_sep", "String", "URL_SAVED", "concode_elem_sep", "String", "FILE_SAVED", "concode_elem_sep", "String", "URL_LOADED", "concode_elem_sep", "ConfigurationHandler", "config", "concode_elem_sep", "String", "FILE_LOADED", "concode_field_sep", "boolean", "save", "concode_elem_sep", "boolean", "save", "concode_elem_sep", "void", "setInteger", "concode_elem_sep", "double", "getDouble", "concode_elem_sep", "double", "getDouble", "concode_elem_sep", "String", "getString", "concode_elem_sep", "String", "getString", "concode_elem_sep", "void", "removeListener", "concode_elem_sep", "void", "removeListener", "concode_elem_sep", "IConfigurationFactory", "getFactory", "concode_elem_sep", "void", "setDouble", "concode_elem_sep", "ConfigurationKey", "makeKey", "concode_elem_sep", "ConfigurationKey", "makeKey", "concode_elem_sep", "ConfigurationKey", "makeKey", "concode_elem_sep", "ConfigurationKey", "makeKey", "concode_elem_sep", "ConfigurationKey", "makeKey", "concode_elem_sep", "ConfigurationKey", "makeKey", "concode_elem_sep", "void", "setString", "concode_elem_sep", "boolean", "load", "concode_elem_sep", "boolean", "load", "concode_elem_sep", "boolean", "load", "concode_elem_sep", "void", "removeKey", "concode_elem_sep", "ConfigurationHandler", "getConfigurationHandler", "concode_elem_sep", "boolean", "getBoolean", "concode_elem_sep", "boolean", "getBoolean", "concode_elem_sep", "void", "setBoolean", "concode_elem_sep", "void", "addListener", "concode_elem_sep", "void", "addListener"]}
{"code": "boolean function ( ActivityRequest arg0 ) { if ( arg0 == null ) { return false ; } if ( arg0 . getDelayerFileAttributesExtractorStrategy ( ) == null ) { return false ; } if ( arg0 . getFeedId ( ) == null ) { return false ; } return arg0 . getConfigProperties ( ) != null ; }", "nl": "validate the incoming request for mandatory parameters . concode_field_sep IFetcherRunRecorderService fetcherRunRecorderServiceImpl concode_elem_sep IFetcherWorkAreaService fetcherWorkAreaServiceImpl concode_elem_sep Logger logger concode_field_sep void createDelayeredWorkareas concode_elem_sep void populatePclFetcherWorkAreaDefaults concode_elem_sep ActivityResponse perform concode_elem_sep void validateConfiguration concode_elem_sep void performDelayering", "code_tokens": ["boolean", "function", "(", "ActivityRequest", "arg0", ")", "{", "if", "(", "arg0", "==", "null", ")", "{", "return", "false", ";", "}", "if", "(", "arg0", ".", "getDelayerFileAttributesExtractorStrategy", "(", ")", "==", "null", ")", "{", "return", "false", ";", "}", "if", "(", "arg0", ".", "getFeedId", "(", ")", "==", "null", ")", "{", "return", "false", ";", "}", "return", "arg0", ".", "getConfigProperties", "(", ")", "!=", "null", ";", "}"], "nl_tokens": ["validate", "the", "incoming", "request", "for", "mandatory", "parameters", ".", "concode_field_sep", "IFetcherRunRecorderService", "fetcherRunRecorderServiceImpl", "concode_elem_sep", "IFetcherWorkAreaService", "fetcherWorkAreaServiceImpl", "concode_elem_sep", "Logger", "logger", "concode_field_sep", "void", "createDelayeredWorkareas", "concode_elem_sep", "void", "populatePclFetcherWorkAreaDefaults", "concode_elem_sep", "ActivityResponse", "perform", "concode_elem_sep", "void", "validateConfiguration", "concode_elem_sep", "void", "performDelayering"]}
{"code": "void function ( ) { instrumentation = null ; }", "nl": "destroy the instrumentation service . concode_field_sep String CONF_LOGGING_INTERVAL concode_elem_sep String JVM_INSTRUMENTATION_GROUP concode_elem_sep XLog log concode_elem_sep Instrumentation instrumentation concode_elem_sep String CONF_PREFIX concode_field_sep void init concode_elem_sep Class<? extends Service> getInterface concode_elem_sep Instrumentation get concode_elem_sep String mapToString", "code_tokens": ["void", "function", "(", ")", "{", "instrumentation", "=", "null", ";", "}"], "nl_tokens": ["destroy", "the", "instrumentation", "service", ".", "concode_field_sep", "String", "CONF_LOGGING_INTERVAL", "concode_elem_sep", "String", "JVM_INSTRUMENTATION_GROUP", "concode_elem_sep", "XLog", "log", "concode_elem_sep", "Instrumentation", "instrumentation", "concode_elem_sep", "String", "CONF_PREFIX", "concode_field_sep", "void", "init", "concode_elem_sep", "Class", "<", "?", "extends", "Service", ">", "getInterface", "concode_elem_sep", "Instrumentation", "get", "concode_elem_sep", "String", "mapToString"]}
{"code": "void function ( AudioManager arg0 , RemoteControlClientCompat arg1 ) { if ( ! sHasRemoteControlAPIs ) { return ; } arg0 . registerRemoteControlClient ( ( RemoteControlClient ) arg1 . getActualRemoteControlClientObject ( ) ) ; }", "nl": "registers the instance of remotecontrolclient with the audiomanager . concode_field_sep boolean sHasRemoteControlAPIs concode_field_sep void unregisterRemoteControlClient", "code_tokens": ["void", "function", "(", "AudioManager", "arg0", ",", "RemoteControlClientCompat", "arg1", ")", "{", "if", "(", "!", "sHasRemoteControlAPIs", ")", "{", "return", ";", "}", "arg0", ".", "registerRemoteControlClient", "(", "(", "RemoteControlClient", ")", "arg1", ".", "getActualRemoteControlClientObject", "(", ")", ")", ";", "}"], "nl_tokens": ["registers", "the", "instance", "of", "remotecontrolclient", "with", "the", "audiomanager", ".", "concode_field_sep", "boolean", "sHasRemoteControlAPIs", "concode_field_sep", "void", "unregisterRemoteControlClient"]}
{"code": "boolean function ( int arg0 ) { double loc0 = Math . abs ( diag [ arg0 ] ) + Math . abs ( diag [ arg0 + 1 ] ) ; return ( Math . abs ( off [ arg0 ] ) <= loc0 * UtilEjml . EPS ) ; }", "nl": "checks to see if the specified off diagonal element is zero using a relative metric . concode_field_sep double c concode_elem_sep EigenvalueSmall eigenSmall concode_elem_sep int numSplits concode_elem_sep int numExceptional concode_elem_sep double bulge concode_elem_sep int steps concode_elem_sep int N concode_elem_sep double c2 concode_elem_sep double cs concode_elem_sep DenseMatrix64F Q concode_elem_sep int splits[] concode_elem_sep Random rand concode_elem_sep double s concode_elem_sep double diag[] concode_elem_sep int x1 concode_elem_sep int x2 concode_elem_sep double off[] concode_elem_sep int lastExceptional concode_elem_sep double s2 concode_field_sep double computeWilkinsonShift concode_elem_sep void eigenvalue2by2 concode_elem_sep boolean nextSplit concode_elem_sep void createBulge concode_elem_sep double[] copyDiag concode_elem_sep void incrementSteps concode_elem_sep void computeRotation concode_elem_sep void printMatrix concode_elem_sep double[] swapOff concode_elem_sep void createBulge2by2 concode_elem_sep void setQ concode_elem_sep void removeBulge concode_elem_sep double[] copyEigenvalues concode_elem_sep void removeBulgeEnd concode_elem_sep void init concode_elem_sep double computeShift concode_elem_sep double[] swapDiag concode_elem_sep void exceptionalShift concode_elem_sep void setSubmatrix concode_elem_sep int getMatrixSize concode_elem_sep void updateQ concode_elem_sep double[] copyOff concode_elem_sep void resetSteps concode_elem_sep void reset concode_elem_sep void performImplicitSingleStep", "code_tokens": ["boolean", "function", "(", "int", "arg0", ")", "{", "double", "loc0", "=", "Math", ".", "abs", "(", "diag", "[", "arg0", "]", ")", "+", "Math", ".", "abs", "(", "diag", "[", "arg0", "+", "1", "]", ")", ";", "return", "(", "Math", ".", "abs", "(", "off", "[", "arg0", "]", ")", "<=", "loc0", "*", "UtilEjml", ".", "EPS", ")", ";", "}"], "nl_tokens": ["checks", "to", "see", "if", "the", "specified", "off", "diagonal", "element", "is", "zero", "using", "a", "relative", "metric", ".", "concode_field_sep", "double", "c", "concode_elem_sep", "EigenvalueSmall", "eigenSmall", "concode_elem_sep", "int", "numSplits", "concode_elem_sep", "int", "numExceptional", "concode_elem_sep", "double", "bulge", "concode_elem_sep", "int", "steps", "concode_elem_sep", "int", "N", "concode_elem_sep", "double", "c2", "concode_elem_sep", "double", "cs", "concode_elem_sep", "DenseMatrix64F", "Q", "concode_elem_sep", "int", "splits", "[", "]", "concode_elem_sep", "Random", "rand", "concode_elem_sep", "double", "s", "concode_elem_sep", "double", "diag", "[", "]", "concode_elem_sep", "int", "x1", "concode_elem_sep", "int", "x2", "concode_elem_sep", "double", "off", "[", "]", "concode_elem_sep", "int", "lastExceptional", "concode_elem_sep", "double", "s2", "concode_field_sep", "double", "computeWilkinsonShift", "concode_elem_sep", "void", "eigenvalue2by2", "concode_elem_sep", "boolean", "nextSplit", "concode_elem_sep", "void", "createBulge", "concode_elem_sep", "double", "[", "]", "copyDiag", "concode_elem_sep", "void", "incrementSteps", "concode_elem_sep", "void", "computeRotation", "concode_elem_sep", "void", "printMatrix", "concode_elem_sep", "double", "[", "]", "swapOff", "concode_elem_sep", "void", "createBulge2by2", "concode_elem_sep", "void", "setQ", "concode_elem_sep", "void", "removeBulge", "concode_elem_sep", "double", "[", "]", "copyEigenvalues", "concode_elem_sep", "void", "removeBulgeEnd", "concode_elem_sep", "void", "init", "concode_elem_sep", "double", "computeShift", "concode_elem_sep", "double", "[", "]", "swapDiag", "concode_elem_sep", "void", "exceptionalShift", "concode_elem_sep", "void", "setSubmatrix", "concode_elem_sep", "int", "getMatrixSize", "concode_elem_sep", "void", "updateQ", "concode_elem_sep", "double", "[", "]", "copyOff", "concode_elem_sep", "void", "resetSteps", "concode_elem_sep", "void", "reset", "concode_elem_sep", "void", "performImplicitSingleStep"]}
{"code": "String function ( ) { return runtimeDir ; }", "nl": "return the runtime directory of the oozie instance . the directory is created under tmp and it is always a new directory per services initialization . concode_field_sep String OOZIE_HOME_DIR concode_elem_sep String CONF_SYSTEM_ID concode_elem_sep String systemId concode_elem_sep Services SERVICES concode_elem_sep String CONF_SERVICE_CLASSES concode_elem_sep String CONF_SYSTEM_MODE concode_elem_sep Configuration conf concode_elem_sep Map<Class<? extends Service>,Service> services concode_elem_sep String oozieHome concode_elem_sep String CONF_DELETE_RUNTIME_DIR concode_elem_sep String CONF_SERVICE_EXT_CLASSES concode_elem_sep SYSTEM_MODE systemMode concode_elem_sep String runtimeDir concode_elem_sep int MAX_SYSTEM_ID_LEN concode_field_sep void init concode_elem_sep void setService concode_elem_sep String getSystemId concode_elem_sep void setServiceInternal concode_elem_sep Configuration getConf concode_elem_sep void setOozieHome concode_elem_sep SYSTEM_MODE getSystemMode concode_elem_sep void setSystemMode concode_elem_sep T get concode_elem_sep Services get concode_elem_sep void destroy concode_elem_sep String createRuntimeDir concode_elem_sep String getOozieHome", "code_tokens": ["String", "function", "(", ")", "{", "return", "runtimeDir", ";", "}"], "nl_tokens": ["return", "the", "runtime", "directory", "of", "the", "oozie", "instance", ".", "the", "directory", "is", "created", "under", "tmp", "and", "it", "is", "always", "a", "new", "directory", "per", "services", "initialization", ".", "concode_field_sep", "String", "OOZIE_HOME_DIR", "concode_elem_sep", "String", "CONF_SYSTEM_ID", "concode_elem_sep", "String", "systemId", "concode_elem_sep", "Services", "SERVICES", "concode_elem_sep", "String", "CONF_SERVICE_CLASSES", "concode_elem_sep", "String", "CONF_SYSTEM_MODE", "concode_elem_sep", "Configuration", "conf", "concode_elem_sep", "Map", "<", "Class", "<", "?", "extends", "Service", ">", ",", "Service", ">", "services", "concode_elem_sep", "String", "oozieHome", "concode_elem_sep", "String", "CONF_DELETE_RUNTIME_DIR", "concode_elem_sep", "String", "CONF_SERVICE_EXT_CLASSES", "concode_elem_sep", "SYSTEM_MODE", "systemMode", "concode_elem_sep", "String", "runtimeDir", "concode_elem_sep", "int", "MAX_SYSTEM_ID_LEN", "concode_field_sep", "void", "init", "concode_elem_sep", "void", "setService", "concode_elem_sep", "String", "getSystemId", "concode_elem_sep", "void", "setServiceInternal", "concode_elem_sep", "Configuration", "getConf", "concode_elem_sep", "void", "setOozieHome", "concode_elem_sep", "SYSTEM_MODE", "getSystemMode", "concode_elem_sep", "void", "setSystemMode", "concode_elem_sep", "T", "get", "concode_elem_sep", "Services", "get", "concode_elem_sep", "void", "destroy", "concode_elem_sep", "String", "createRuntimeDir", "concode_elem_sep", "String", "getOozieHome"]}
{"code": "void function ( ) { mPlainSaslServer = new PlainSaslServer ( new MockCallbackHandler ( ) ) ; }", "nl": "sets up the server before a test runs . concode_field_sep byte sSEPARATOR concode_elem_sep ExpectedException mThrown concode_elem_sep PlainSaslServer mPlainSaslServer concode_field_sep void authenticationNotComplete concode_elem_sep void unauthorizedCallback concode_elem_sep void userPasswordReceive concode_elem_sep void passwordIsNotSet concode_elem_sep void userIsNotSet concode_elem_sep void handle concode_elem_sep void handle concode_elem_sep byte[] getUserInfo", "code_tokens": ["void", "function", "(", ")", "{", "mPlainSaslServer", "=", "new", "PlainSaslServer", "(", "new", "MockCallbackHandler", "(", ")", ")", ";", "}"], "nl_tokens": ["sets", "up", "the", "server", "before", "a", "test", "runs", ".", "concode_field_sep", "byte", "sSEPARATOR", "concode_elem_sep", "ExpectedException", "mThrown", "concode_elem_sep", "PlainSaslServer", "mPlainSaslServer", "concode_field_sep", "void", "authenticationNotComplete", "concode_elem_sep", "void", "unauthorizedCallback", "concode_elem_sep", "void", "userPasswordReceive", "concode_elem_sep", "void", "passwordIsNotSet", "concode_elem_sep", "void", "userIsNotSet", "concode_elem_sep", "void", "handle", "concode_elem_sep", "void", "handle", "concode_elem_sep", "byte", "[", "]", "getUserInfo"]}
{"code": "String function ( ) { return this . isActive ; }", "nl": "gets the checks if is active . concode_field_sep long serialVersionUID concode_elem_sep String isSystemDerived concode_elem_sep String isActive concode_elem_sep BigDecimal predecessorId concode_elem_sep String srcFileName concode_elem_sep BigDecimal successorId concode_elem_sep BigDecimal feedId concode_elem_sep String checksum concode_elem_sep String transmissionDatasetId concode_elem_sep String comments concode_elem_sep String inactivationReasonType concode_elem_sep String isFormatValid concode_elem_sep long dataUnitId concode_elem_sep Timestamp receiptDate concode_elem_sep String srcUniqueFileName concode_elem_sep Timestamp createdDate concode_elem_sep Long dataSetId concode_elem_sep BigDecimal fileSize concode_elem_sep String destFileName concode_elem_sep String loadedInCats concode_elem_sep String checksumType concode_elem_sep Timestamp modifiedDate concode_elem_sep BigDecimal runId concode_elem_sep String isPrepopulated concode_elem_sep String isBulk concode_elem_sep String isUpdate concode_elem_sep String receiptDateType concode_elem_sep String status concode_field_sep void setIsSystemDerived concode_elem_sep void setIsPrepopulated concode_elem_sep String getStatus concode_elem_sep String getIsUpdate concode_elem_sep long getDataUnitId concode_elem_sep BigDecimal getFileSize concode_elem_sep void setInactivationReasonType concode_elem_sep void setDataUnitId concode_elem_sep String getComments concode_elem_sep Timestamp getCreatedDate concode_elem_sep void setFileSize concode_elem_sep BigDecimal getPredecessorId concode_elem_sep void setIsUpdate concode_elem_sep String getReceiptDateType concode_elem_sep BigDecimal getFeedId concode_elem_sep void setReceiptDate concode_elem_sep Timestamp getModifiedDate concode_elem_sep void setSuccessorId concode_elem_sep void setDestFileName concode_elem_sep void setIsBulk concode_elem_sep String getIsFormatValid concode_elem_sep void setDataSetId concode_elem_sep void setIsActive concode_elem_sep void setChecksumType concode_elem_sep void setFeedId concode_elem_sep String getInactivationReasonType concode_elem_sep String getSrcUniqueFileName concode_elem_sep Long getDataSetId concode_elem_sep void setReceiptDateType concode_elem_sep BigDecimal getRunId concode_elem_sep void setSrcFileName concode_elem_sep String getChecksumType concode_elem_sep String getSrcFileName concode_elem_sep String getChecksum concode_elem_sep String getDestFileName concode_elem_sep Timestamp getReceiptDate concode_elem_sep void setTransmissionDatasetId concode_elem_sep String getTransmissionDatasetId concode_elem_sep void setComments concode_elem_sep String getLoadedInCats concode_elem_sep BigDecimal getSuccessorId concode_elem_sep void setLoadedInCats concode_elem_sep String getIsPrepopulated concode_elem_sep void setSrcUniqueFileName concode_elem_sep void setChecksum concode_elem_sep void setIsFormatValid concode_elem_sep String getIsBulk concode_elem_sep void setRunId concode_elem_sep void setStatus concode_elem_sep void setModifiedDate concode_elem_sep void setCreatedDate concode_elem_sep void setPredecessorId concode_elem_sep String getIsSystemDerived", "code_tokens": ["String", "function", "(", ")", "{", "return", "this", ".", "isActive", ";", "}"], "nl_tokens": ["gets", "the", "checks", "if", "is", "active", ".", "concode_field_sep", "long", "serialVersionUID", "concode_elem_sep", "String", "isSystemDerived", "concode_elem_sep", "String", "isActive", "concode_elem_sep", "BigDecimal", "predecessorId", "concode_elem_sep", "String", "srcFileName", "concode_elem_sep", "BigDecimal", "successorId", "concode_elem_sep", "BigDecimal", "feedId", "concode_elem_sep", "String", "checksum", "concode_elem_sep", "String", "transmissionDatasetId", "concode_elem_sep", "String", "comments", "concode_elem_sep", "String", "inactivationReasonType", "concode_elem_sep", "String", "isFormatValid", "concode_elem_sep", "long", "dataUnitId", "concode_elem_sep", "Timestamp", "receiptDate", "concode_elem_sep", "String", "srcUniqueFileName", "concode_elem_sep", "Timestamp", "createdDate", "concode_elem_sep", "Long", "dataSetId", "concode_elem_sep", "BigDecimal", "fileSize", "concode_elem_sep", "String", "destFileName", "concode_elem_sep", "String", "loadedInCats", "concode_elem_sep", "String", "checksumType", "concode_elem_sep", "Timestamp", "modifiedDate", "concode_elem_sep", "BigDecimal", "runId", "concode_elem_sep", "String", "isPrepopulated", "concode_elem_sep", "String", "isBulk", "concode_elem_sep", "String", "isUpdate", "concode_elem_sep", "String", "receiptDateType", "concode_elem_sep", "String", "status", "concode_field_sep", "void", "setIsSystemDerived", "concode_elem_sep", "void", "setIsPrepopulated", "concode_elem_sep", "String", "getStatus", "concode_elem_sep", "String", "getIsUpdate", "concode_elem_sep", "long", "getDataUnitId", "concode_elem_sep", "BigDecimal", "getFileSize", "concode_elem_sep", "void", "setInactivationReasonType", "concode_elem_sep", "void", "setDataUnitId", "concode_elem_sep", "String", "getComments", "concode_elem_sep", "Timestamp", "getCreatedDate", "concode_elem_sep", "void", "setFileSize", "concode_elem_sep", "BigDecimal", "getPredecessorId", "concode_elem_sep", "void", "setIsUpdate", "concode_elem_sep", "String", "getReceiptDateType", "concode_elem_sep", "BigDecimal", "getFeedId", "concode_elem_sep", "void", "setReceiptDate", "concode_elem_sep", "Timestamp", "getModifiedDate", "concode_elem_sep", "void", "setSuccessorId", "concode_elem_sep", "void", "setDestFileName", "concode_elem_sep", "void", "setIsBulk", "concode_elem_sep", "String", "getIsFormatValid", "concode_elem_sep", "void", "setDataSetId", "concode_elem_sep", "void", "setIsActive", "concode_elem_sep", "void", "setChecksumType", "concode_elem_sep", "void", "setFeedId", "concode_elem_sep", "String", "getInactivationReasonType", "concode_elem_sep", "String", "getSrcUniqueFileName", "concode_elem_sep", "Long", "getDataSetId", "concode_elem_sep", "void", "setReceiptDateType", "concode_elem_sep", "BigDecimal", "getRunId", "concode_elem_sep", "void", "setSrcFileName", "concode_elem_sep", "String", "getChecksumType", "concode_elem_sep", "String", "getSrcFileName", "concode_elem_sep", "String", "getChecksum", "concode_elem_sep", "String", "getDestFileName", "concode_elem_sep", "Timestamp", "getReceiptDate", "concode_elem_sep", "void", "setTransmissionDatasetId", "concode_elem_sep", "String", "getTransmissionDatasetId", "concode_elem_sep", "void", "setComments", "concode_elem_sep", "String", "getLoadedInCats", "concode_elem_sep", "BigDecimal", "getSuccessorId", "concode_elem_sep", "void", "setLoadedInCats", "concode_elem_sep", "String", "getIsPrepopulated", "concode_elem_sep", "void", "setSrcUniqueFileName", "concode_elem_sep", "void", "setChecksum", "concode_elem_sep", "void", "setIsFormatValid", "concode_elem_sep", "String", "getIsBulk", "concode_elem_sep", "void", "setRunId", "concode_elem_sep", "void", "setStatus", "concode_elem_sep", "void", "setModifiedDate", "concode_elem_sep", "void", "setCreatedDate", "concode_elem_sep", "void", "setPredecessorId", "concode_elem_sep", "String", "getIsSystemDerived"]}
{"code": "int function ( Object arg0 ) { int loc0 = _prime ; int loc1 = hashCode ( arg0 ) % loc0 ; final Object [ ] loc2 = _keys ; while ( true ) { Object loc3 = loc2 [ loc1 ] ; if ( loc3 == null ) { return NULL ; } else if ( loc3 == arg0 ) { return _values [ loc1 ] ; } loc1 = ( loc1 + 1 ) % loc0 ; } }", "nl": "puts a new value in the property table with the appropriate flags concode_field_sep int _size concode_elem_sep int[] _values concode_elem_sep int _prime concode_elem_sep int NULL concode_elem_sep Object[] _keys concode_elem_sep int[] PRIMES concode_field_sep int size concode_elem_sep int hashCode concode_elem_sep void clear concode_elem_sep void resize concode_elem_sep String toString concode_elem_sep int put concode_elem_sep int getBiggestPrime", "code_tokens": ["int", "function", "(", "Object", "arg0", ")", "{", "int", "loc0", "=", "_prime", ";", "int", "loc1", "=", "hashCode", "(", "arg0", ")", "%", "loc0", ";", "final", "Object", "[", "]", "loc2", "=", "_keys", ";", "while", "(", "true", ")", "{", "Object", "loc3", "=", "loc2", "[", "loc1", "]", ";", "if", "(", "loc3", "==", "null", ")", "{", "return", "NULL", ";", "}", "else", "if", "(", "loc3", "==", "arg0", ")", "{", "return", "_values", "[", "loc1", "]", ";", "}", "loc1", "=", "(", "loc1", "+", "1", ")", "%", "loc0", ";", "}", "}"], "nl_tokens": ["puts", "a", "new", "value", "in", "the", "property", "table", "with", "the", "appropriate", "flags", "concode_field_sep", "int", "_size", "concode_elem_sep", "int", "[", "]", "_values", "concode_elem_sep", "int", "_prime", "concode_elem_sep", "int", "NULL", "concode_elem_sep", "Object", "[", "]", "_keys", "concode_elem_sep", "int", "[", "]", "PRIMES", "concode_field_sep", "int", "size", "concode_elem_sep", "int", "hashCode", "concode_elem_sep", "void", "clear", "concode_elem_sep", "void", "resize", "concode_elem_sep", "String", "toString", "concode_elem_sep", "int", "put", "concode_elem_sep", "int", "getBiggestPrime"]}
{"code": "void function ( ) { LogManager . shutdown ( ) ; XLog . Info . reset ( ) ; XLogStreamer . Filter . reset ( ) ; }", "nl": "destroy the log service . concode_field_sep String USER concode_elem_sep int oozieLogRotation concode_elem_sep String OOZIE_LOG_DIR concode_elem_sep XLog log concode_elem_sep String GROUP concode_elem_sep boolean logOverWS concode_elem_sep String LOG4J_FILE concode_elem_sep String STARTUP_MESSAGE concode_elem_sep String LOG4J_RELOAD concode_elem_sep String log4jFileName concode_elem_sep String DEFAULT_RELOAD_INTERVAL concode_elem_sep String oozieLogName concode_elem_sep long interval concode_elem_sep boolean fromClasspath concode_elem_sep String INSTRUMENTATION_GROUP concode_elem_sep String oozieLogPath concode_elem_sep String DEFAULT_LOG4J_PROPERTIES concode_field_sep void init concode_elem_sep Class<? extends Service> getInterface concode_elem_sep boolean getFromClasspath concode_elem_sep void extractInfoForLogWebService concode_elem_sep void instrument concode_elem_sep void streamLog concode_elem_sep String getLog4jProperties", "code_tokens": ["void", "function", "(", ")", "{", "LogManager", ".", "shutdown", "(", ")", ";", "XLog", ".", "Info", ".", "reset", "(", ")", ";", "XLogStreamer", ".", "Filter", ".", "reset", "(", ")", ";", "}"], "nl_tokens": ["destroy", "the", "log", "service", ".", "concode_field_sep", "String", "USER", "concode_elem_sep", "int", "oozieLogRotation", "concode_elem_sep", "String", "OOZIE_LOG_DIR", "concode_elem_sep", "XLog", "log", "concode_elem_sep", "String", "GROUP", "concode_elem_sep", "boolean", "logOverWS", "concode_elem_sep", "String", "LOG4J_FILE", "concode_elem_sep", "String", "STARTUP_MESSAGE", "concode_elem_sep", "String", "LOG4J_RELOAD", "concode_elem_sep", "String", "log4jFileName", "concode_elem_sep", "String", "DEFAULT_RELOAD_INTERVAL", "concode_elem_sep", "String", "oozieLogName", "concode_elem_sep", "long", "interval", "concode_elem_sep", "boolean", "fromClasspath", "concode_elem_sep", "String", "INSTRUMENTATION_GROUP", "concode_elem_sep", "String", "oozieLogPath", "concode_elem_sep", "String", "DEFAULT_LOG4J_PROPERTIES", "concode_field_sep", "void", "init", "concode_elem_sep", "Class", "<", "?", "extends", "Service", ">", "getInterface", "concode_elem_sep", "boolean", "getFromClasspath", "concode_elem_sep", "void", "extractInfoForLogWebService", "concode_elem_sep", "void", "instrument", "concode_elem_sep", "void", "streamLog", "concode_elem_sep", "String", "getLog4jProperties"]}
{"code": "String function ( Table arg0 , DBType arg1 ) { return Schema . generateCreateTableScript ( arg0 , arg1 , TABLE_COLUMNS . get ( arg0 ) ) ; }", "nl": "generates the create table sql statement concode_field_sep int length concode_elem_sep String OOZIE_VERSION concode_elem_sep Map<Table,List<Column>> TABLE_COLUMNS concode_elem_sep Column column concode_elem_sep boolean isPrimaryKey concode_elem_sep Class<?> type concode_elem_sep String oozieDbName concode_elem_sep Table table concode_field_sep String generateInsertVersionScript concode_elem_sep String getOozieVersion concode_elem_sep void setOozieDbName concode_elem_sep String getName concode_elem_sep Column column concode_elem_sep boolean isPrimaryKey concode_elem_sep String asLabel concode_elem_sep Class<?> getType concode_elem_sep String getValidationQuery concode_elem_sep int getLength concode_elem_sep String toString concode_elem_sep String toString concode_elem_sep Table table concode_elem_sep String columnName", "code_tokens": ["String", "function", "(", "Table", "arg0", ",", "DBType", "arg1", ")", "{", "return", "Schema", ".", "generateCreateTableScript", "(", "arg0", ",", "arg1", ",", "TABLE_COLUMNS", ".", "get", "(", "arg0", ")", ")", ";", "}"], "nl_tokens": ["generates", "the", "create", "table", "sql", "statement", "concode_field_sep", "int", "length", "concode_elem_sep", "String", "OOZIE_VERSION", "concode_elem_sep", "Map", "<", "Table", ",", "List", "<", "Column", ">>", "TABLE_COLUMNS", "concode_elem_sep", "Column", "column", "concode_elem_sep", "boolean", "isPrimaryKey", "concode_elem_sep", "Class", "<", "?", ">", "type", "concode_elem_sep", "String", "oozieDbName", "concode_elem_sep", "Table", "table", "concode_field_sep", "String", "generateInsertVersionScript", "concode_elem_sep", "String", "getOozieVersion", "concode_elem_sep", "void", "setOozieDbName", "concode_elem_sep", "String", "getName", "concode_elem_sep", "Column", "column", "concode_elem_sep", "boolean", "isPrimaryKey", "concode_elem_sep", "String", "asLabel", "concode_elem_sep", "Class", "<", "?", ">", "getType", "concode_elem_sep", "String", "getValidationQuery", "concode_elem_sep", "int", "getLength", "concode_elem_sep", "String", "toString", "concode_elem_sep", "String", "toString", "concode_elem_sep", "Table", "table", "concode_elem_sep", "String", "columnName"]}
{"code": "void function ( ) { assertEquals ( Units . METER , mwv . getSpeedUnit ( ) ) ; }", "nl": "test method for net.sf.marineapi.nmea.parser.mwvparser #getspeedunit . concode_field_sep String EXAMPLE concode_elem_sep MWVSentence mwv concode_field_sep void testSetNegativeSpeed concode_elem_sep void testSetInvalidSpeedUnit concode_elem_sep void testIsTrue concode_elem_sep void testMWVParserTalkerId concode_elem_sep void testSetStatus concode_elem_sep void testSetAngle concode_elem_sep void testSetSpeedUnit concode_elem_sep void testSetNegativeAngle concode_elem_sep void testGetAngle concode_elem_sep void testSetTrue concode_elem_sep void testSetAngleOutOfRange concode_elem_sep void setUp concode_elem_sep void testGetSpeed concode_elem_sep void testGetStatus concode_elem_sep void testSetSpeed", "code_tokens": ["void", "function", "(", ")", "{", "assertEquals", "(", "Units", ".", "METER", ",", "mwv", ".", "getSpeedUnit", "(", ")", ")", ";", "}"], "nl_tokens": ["test", "method", "for", "net", ".", "sf", ".", "marineapi", ".", "nmea", ".", "parser", ".", "mwvparser", "#getspeedunit . concode_field_sep String EXAMPLE concode_elem_sep MWVSentence mwv concode_field_sep void testSetNegativeSpeed concode_elem_sep void testSetInvalidSpeedUnit concode_elem_sep void testIsTrue concode_elem_sep void testMWVParserTalkerId concode_elem_sep void testSetStatus concode_elem_sep void testSetAngle concode_elem_sep void testSetSpeedUnit concode_elem_sep void testSetNegativeAngle concode_elem_sep void testGetAngle concode_elem_sep void testSetTrue concode_elem_sep void testSetAngleOutOfRange concode_elem_sep void setUp concode_elem_sep void testGetSpeed concode_elem_sep void testGetStatus concode_elem_sep void testSetSpeed"]}
{"code": "void function ( int arg0 , int arg1 , int arg2 , int arg3 ) { matrixItemUtility [ arg0 ] [ arg1 ] = arg2 ; matrixItemRemainingUtility [ arg0 ] [ arg1 ] = arg3 ; }", "nl": "register item in the matrix concode_field_sep int swu concode_elem_sep int matrixItemRemainingUtility[][] concode_elem_sep int matrixItemUtility[][] concode_elem_sep int[] itemNames concode_field_sep String toString", "code_tokens": ["void", "function", "(", "int", "arg0", ",", "int", "arg1", ",", "int", "arg2", ",", "int", "arg3", ")", "{", "matrixItemUtility", "[", "arg0", "]", "[", "arg1", "]", "=", "arg2", ";", "matrixItemRemainingUtility", "[", "arg0", "]", "[", "arg1", "]", "=", "arg3", ";", "}"], "nl_tokens": ["register", "item", "in", "the", "matrix", "concode_field_sep", "int", "swu", "concode_elem_sep", "int", "matrixItemRemainingUtility", "[", "]", "[", "]", "concode_elem_sep", "int", "matrixItemUtility", "[", "]", "[", "]", "concode_elem_sep", "int", "[", "]", "itemNames", "concode_field_sep", "String", "toString"]}
{"code": "void function ( ) { assertTrue ( rmc . getVariation ( ) < 0 ) ; assertEquals ( CompassPoint . EAST , rmc . getDirectionOfVariation ( ) ) ; }", "nl": "test method for net.sf.marineapi.nmea.parser.rmcparser #getdirectionofvariation . concode_field_sep String EXAMPLE concode_elem_sep RMCParser rmc concode_elem_sep RMCParser empty concode_field_sep void testSetFaaModeWhenOmitted concode_elem_sep void testSetDirectionOfVariationWithInvalidDirection concode_elem_sep void testGetCorrectedCourse concode_elem_sep void testGetDataStatus concode_elem_sep void testConstructor concode_elem_sep void testGetTime concode_elem_sep void testSetCourse concode_elem_sep void testSetFaaMode concode_elem_sep void testSetVariation concode_elem_sep void setUp concode_elem_sep void testGetMonth concode_elem_sep void testGetCourse concode_elem_sep void testSetDate concode_elem_sep void testGetYear concode_elem_sep void testSetDataStatus concode_elem_sep void testGetDate concode_elem_sep void testGetMagneticVariation concode_elem_sep void testSetPosition concode_elem_sep void testGetPosition concode_elem_sep void testSetDirectionOfVariation concode_elem_sep void testSetTime concode_elem_sep void testGetDay concode_elem_sep void testGetSpeed concode_elem_sep void testGetFaaMode concode_elem_sep void testSetSpeed", "code_tokens": ["void", "function", "(", ")", "{", "assertTrue", "(", "rmc", ".", "getVariation", "(", ")", "<", "0", ")", ";", "assertEquals", "(", "CompassPoint", ".", "EAST", ",", "rmc", ".", "getDirectionOfVariation", "(", ")", ")", ";", "}"], "nl_tokens": ["test", "method", "for", "net", ".", "sf", ".", "marineapi", ".", "nmea", ".", "parser", ".", "rmcparser", "#getdirectionofvariation . concode_field_sep String EXAMPLE concode_elem_sep RMCParser rmc concode_elem_sep RMCParser empty concode_field_sep void testSetFaaModeWhenOmitted concode_elem_sep void testSetDirectionOfVariationWithInvalidDirection concode_elem_sep void testGetCorrectedCourse concode_elem_sep void testGetDataStatus concode_elem_sep void testConstructor concode_elem_sep void testGetTime concode_elem_sep void testSetCourse concode_elem_sep void testSetFaaMode concode_elem_sep void testSetVariation concode_elem_sep void setUp concode_elem_sep void testGetMonth concode_elem_sep void testGetCourse concode_elem_sep void testSetDate concode_elem_sep void testGetYear concode_elem_sep void testSetDataStatus concode_elem_sep void testGetDate concode_elem_sep void testGetMagneticVariation concode_elem_sep void testSetPosition concode_elem_sep void testGetPosition concode_elem_sep void testSetDirectionOfVariation concode_elem_sep void testSetTime concode_elem_sep void testGetDay concode_elem_sep void testGetSpeed concode_elem_sep void testGetFaaMode concode_elem_sep void testSetSpeed"]}
{"code": "long function ( ) { return issuedAt ; }", "nl": "returns the time in seconds when this token was issued at concode_field_sep long issuedAt concode_elem_sep List<OAuthPermission> scopes concode_elem_sep UserSubject subject concode_elem_sep Client client concode_elem_sep boolean preAuthorized concode_elem_sep String tokenString concode_elem_sep long lifetime concode_elem_sep String tokenSecret concode_field_sep void setScopes concode_elem_sep UserSubject getSubject concode_elem_sep void setPreAuthorized concode_elem_sep void setSubject concode_elem_sep String getTokenKey concode_elem_sep boolean isPreAuthorized concode_elem_sep long getLifetime concode_elem_sep Client getClient concode_elem_sep String getTokenSecret concode_elem_sep List<OAuthPermission> getScopes", "code_tokens": ["long", "function", "(", ")", "{", "return", "issuedAt", ";", "}"], "nl_tokens": ["returns", "the", "time", "in", "seconds", "when", "this", "token", "was", "issued", "at", "concode_field_sep", "long", "issuedAt", "concode_elem_sep", "List", "<", "OAuthPermission", ">", "scopes", "concode_elem_sep", "UserSubject", "subject", "concode_elem_sep", "Client", "client", "concode_elem_sep", "boolean", "preAuthorized", "concode_elem_sep", "String", "tokenString", "concode_elem_sep", "long", "lifetime", "concode_elem_sep", "String", "tokenSecret", "concode_field_sep", "void", "setScopes", "concode_elem_sep", "UserSubject", "getSubject", "concode_elem_sep", "void", "setPreAuthorized", "concode_elem_sep", "void", "setSubject", "concode_elem_sep", "String", "getTokenKey", "concode_elem_sep", "boolean", "isPreAuthorized", "concode_elem_sep", "long", "getLifetime", "concode_elem_sep", "Client", "getClient", "concode_elem_sep", "String", "getTokenSecret", "concode_elem_sep", "List", "<", "OAuthPermission", ">", "getScopes"]}
{"code": "void function ( List < RSSItem > arg0 ) { this . _items = arg0 ; }", "nl": "all set methods concode_field_sep String _language concode_elem_sep String _link concode_elem_sep String _rss_link concode_elem_sep String _title concode_elem_sep String _image concode_elem_sep List<RSSItem> _items concode_elem_sep String _description concode_field_sep void set_image concode_elem_sep List<RSSItem> getItems concode_elem_sep String getLink concode_elem_sep String getLanguage concode_elem_sep String getTitle concode_elem_sep String get_image concode_elem_sep String getDescription concode_elem_sep String getRSSLink", "code_tokens": ["void", "function", "(", "List", "<", "RSSItem", ">", "arg0", ")", "{", "this", ".", "_items", "=", "arg0", ";", "}"], "nl_tokens": ["all", "set", "methods", "concode_field_sep", "String", "_language", "concode_elem_sep", "String", "_link", "concode_elem_sep", "String", "_rss_link", "concode_elem_sep", "String", "_title", "concode_elem_sep", "String", "_image", "concode_elem_sep", "List", "<", "RSSItem", ">", "_items", "concode_elem_sep", "String", "_description", "concode_field_sep", "void", "set_image", "concode_elem_sep", "List", "<", "RSSItem", ">", "getItems", "concode_elem_sep", "String", "getLink", "concode_elem_sep", "String", "getLanguage", "concode_elem_sep", "String", "getTitle", "concode_elem_sep", "String", "get_image", "concode_elem_sep", "String", "getDescription", "concode_elem_sep", "String", "getRSSLink"]}
{"code": "long function ( ) { return packetMagic ; }", "nl": "the header bytes that identify the start of a packet on this network . concode_field_sep int INTERVAL concode_elem_sep String ID_UNITTESTNET concode_elem_sep long MAX_COINS concode_elem_sep int p2shHeader concode_elem_sep int PROTOCOL_VERSION concode_elem_sep BigInteger maxTarget concode_elem_sep int TARGET_SPACING concode_elem_sep String[] dnsSeeds concode_elem_sep String id concode_elem_sep int spendableCoinbaseDepth concode_elem_sep int dumpedPrivateKeyHeader concode_elem_sep int targetTimespan concode_elem_sep int TARGET_TIMESPAN concode_elem_sep String PAYMENT_PROTOCOL_ID_MAINNET concode_elem_sep int addressHeader concode_elem_sep Coin MAX_MONEY concode_elem_sep int bip32HeaderPriv concode_elem_sep byte[] alertSigningKey concode_elem_sep int[] acceptableAddressCodes concode_elem_sep int bip32HeaderPub concode_elem_sep String ID_MAINNET concode_elem_sep long packetMagic concode_elem_sep byte[] SATOSHI_KEY concode_elem_sep Block genesisBlock concode_elem_sep String PAYMENT_PROTOCOL_ID_TESTNET concode_elem_sep int subsidyDecreaseBlockCount concode_elem_sep int port concode_elem_sep String ID_TESTNET concode_elem_sep Map<Integer,Sha256Hash> checkpoints concode_elem_sep int interval concode_elem_sep String ID_REGTEST concode_elem_sep int BIP16_ENFORCE_TIME concode_field_sep NetworkParameters regTests concode_elem_sep boolean allowEmptyPeerChain concode_elem_sep int getDumpedPrivateKeyHeader concode_elem_sep NetworkParameters testNet2 concode_elem_sep int getBip32HeaderPub concode_elem_sep int getBip32HeaderPriv concode_elem_sep NetworkParameters testNet3 concode_elem_sep NetworkParameters unitTests concode_elem_sep String getId concode_elem_sep String getPaymentProtocolId concode_elem_sep int getAddressHeader concode_elem_sep int[] getAcceptableAddressCodes concode_elem_sep NetworkParameters prodNet concode_elem_sep NetworkParameters fromID concode_elem_sep int getTargetTimespan concode_elem_sep String[] getDnsSeeds concode_elem_sep int hashCode concode_elem_sep int getSpendableCoinbaseDepth concode_elem_sep NetworkParameters testNet concode_elem_sep boolean isCheckpoint concode_elem_sep int getP2SHHeader concode_elem_sep int getInterval concode_elem_sep Block getGenesisBlock concode_elem_sep int getSubsidyDecreaseBlockCount concode_elem_sep Block createGenesis concode_elem_sep BigInteger getMaxTarget concode_elem_sep int getPort concode_elem_sep byte[] getAlertSigningKey concode_elem_sep boolean equals concode_elem_sep boolean passesCheckpoint concode_elem_sep NetworkParameters fromPmtProtocolID", "code_tokens": ["long", "function", "(", ")", "{", "return", "packetMagic", ";", "}"], "nl_tokens": ["the", "header", "bytes", "that", "identify", "the", "start", "of", "a", "packet", "on", "this", "network", ".", "concode_field_sep", "int", "INTERVAL", "concode_elem_sep", "String", "ID_UNITTESTNET", "concode_elem_sep", "long", "MAX_COINS", "concode_elem_sep", "int", "p2shHeader", "concode_elem_sep", "int", "PROTOCOL_VERSION", "concode_elem_sep", "BigInteger", "maxTarget", "concode_elem_sep", "int", "TARGET_SPACING", "concode_elem_sep", "String", "[", "]", "dnsSeeds", "concode_elem_sep", "String", "id", "concode_elem_sep", "int", "spendableCoinbaseDepth", "concode_elem_sep", "int", "dumpedPrivateKeyHeader", "concode_elem_sep", "int", "targetTimespan", "concode_elem_sep", "int", "TARGET_TIMESPAN", "concode_elem_sep", "String", "PAYMENT_PROTOCOL_ID_MAINNET", "concode_elem_sep", "int", "addressHeader", "concode_elem_sep", "Coin", "MAX_MONEY", "concode_elem_sep", "int", "bip32HeaderPriv", "concode_elem_sep", "byte", "[", "]", "alertSigningKey", "concode_elem_sep", "int", "[", "]", "acceptableAddressCodes", "concode_elem_sep", "int", "bip32HeaderPub", "concode_elem_sep", "String", "ID_MAINNET", "concode_elem_sep", "long", "packetMagic", "concode_elem_sep", "byte", "[", "]", "SATOSHI_KEY", "concode_elem_sep", "Block", "genesisBlock", "concode_elem_sep", "String", "PAYMENT_PROTOCOL_ID_TESTNET", "concode_elem_sep", "int", "subsidyDecreaseBlockCount", "concode_elem_sep", "int", "port", "concode_elem_sep", "String", "ID_TESTNET", "concode_elem_sep", "Map", "<", "Integer", ",", "Sha256Hash", ">", "checkpoints", "concode_elem_sep", "int", "interval", "concode_elem_sep", "String", "ID_REGTEST", "concode_elem_sep", "int", "BIP16_ENFORCE_TIME", "concode_field_sep", "NetworkParameters", "regTests", "concode_elem_sep", "boolean", "allowEmptyPeerChain", "concode_elem_sep", "int", "getDumpedPrivateKeyHeader", "concode_elem_sep", "NetworkParameters", "testNet2", "concode_elem_sep", "int", "getBip32HeaderPub", "concode_elem_sep", "int", "getBip32HeaderPriv", "concode_elem_sep", "NetworkParameters", "testNet3", "concode_elem_sep", "NetworkParameters", "unitTests", "concode_elem_sep", "String", "getId", "concode_elem_sep", "String", "getPaymentProtocolId", "concode_elem_sep", "int", "getAddressHeader", "concode_elem_sep", "int", "[", "]", "getAcceptableAddressCodes", "concode_elem_sep", "NetworkParameters", "prodNet", "concode_elem_sep", "NetworkParameters", "fromID", "concode_elem_sep", "int", "getTargetTimespan", "concode_elem_sep", "String", "[", "]", "getDnsSeeds", "concode_elem_sep", "int", "hashCode", "concode_elem_sep", "int", "getSpendableCoinbaseDepth", "concode_elem_sep", "NetworkParameters", "testNet", "concode_elem_sep", "boolean", "isCheckpoint", "concode_elem_sep", "int", "getP2SHHeader", "concode_elem_sep", "int", "getInterval", "concode_elem_sep", "Block", "getGenesisBlock", "concode_elem_sep", "int", "getSubsidyDecreaseBlockCount", "concode_elem_sep", "Block", "createGenesis", "concode_elem_sep", "BigInteger", "getMaxTarget", "concode_elem_sep", "int", "getPort", "concode_elem_sep", "byte", "[", "]", "getAlertSigningKey", "concode_elem_sep", "boolean", "equals", "concode_elem_sep", "boolean", "passesCheckpoint", "concode_elem_sep", "NetworkParameters", "fromPmtProtocolID"]}
{"code": "GenericJSONBuilder function ( String arg0 ) { user_id = arg0 ; return this ; }", "nl": "not required concode_field_sep double lat concode_elem_sep String id_str concode_elem_sep String screen_name concode_elem_sep String place_name concode_elem_sep String image concode_elem_sep String user_name concode_elem_sep double lng concode_elem_sep Date created_at concode_elem_sep int loc_radius concode_elem_sep String user_id concode_elem_sep String text concode_elem_sep ArrayList<String> extras concode_field_sep GenericJSONBuilder setIDstr concode_elem_sep GenericJSONBuilder setPlaceName concode_elem_sep GenericJSONBuilder addText concode_elem_sep GenericJSONBuilder addField concode_elem_sep void insert concode_elem_sep GenericJSONBuilder setCoordinateRadius concode_elem_sep GenericJSONBuilder setAuthor concode_elem_sep GenericJSONBuilder builder concode_elem_sep GenericJSONBuilder setCoordinate concode_elem_sep GenericJSONBuilder setCreatedTime concode_elem_sep void persist concode_elem_sep String buildFieldJSON concode_elem_sep GenericJSONBuilder setImage", "code_tokens": ["GenericJSONBuilder", "function", "(", "String", "arg0", ")", "{", "user_id", "=", "arg0", ";", "return", "this", ";", "}"], "nl_tokens": ["not", "required", "concode_field_sep", "double", "lat", "concode_elem_sep", "String", "id_str", "concode_elem_sep", "String", "screen_name", "concode_elem_sep", "String", "place_name", "concode_elem_sep", "String", "image", "concode_elem_sep", "String", "user_name", "concode_elem_sep", "double", "lng", "concode_elem_sep", "Date", "created_at", "concode_elem_sep", "int", "loc_radius", "concode_elem_sep", "String", "user_id", "concode_elem_sep", "String", "text", "concode_elem_sep", "ArrayList", "<", "String", ">", "extras", "concode_field_sep", "GenericJSONBuilder", "setIDstr", "concode_elem_sep", "GenericJSONBuilder", "setPlaceName", "concode_elem_sep", "GenericJSONBuilder", "addText", "concode_elem_sep", "GenericJSONBuilder", "addField", "concode_elem_sep", "void", "insert", "concode_elem_sep", "GenericJSONBuilder", "setCoordinateRadius", "concode_elem_sep", "GenericJSONBuilder", "setAuthor", "concode_elem_sep", "GenericJSONBuilder", "builder", "concode_elem_sep", "GenericJSONBuilder", "setCoordinate", "concode_elem_sep", "GenericJSONBuilder", "setCreatedTime", "concode_elem_sep", "void", "persist", "concode_elem_sep", "String", "buildFieldJSON", "concode_elem_sep", "GenericJSONBuilder", "setImage"]}
{"code": "void function ( Exception arg0 , String arg1 ) { if ( sIsLogEnabled ) { Log . e ( sApplicationTag , getContent ( getCurrentStackTraceElement ( ) ) + \"srini_string\" + arg0 . getMessage ( ) + \"srini_string\" + arg0 . getStackTrace ( ) + \"srini_string\" + arg1 ) ; arg0 . printStackTrace ( ) ; } }", "nl": "send an error log message . concode_field_sep String TAG_CONTENT_PRINT concode_elem_sep boolean sIsLogEnabled concode_elem_sep String sApplicationTag concode_field_sep StackTraceElement getCurrentStackTraceElement concode_elem_sep String getTagContentPrint concode_elem_sep void d concode_elem_sep void d concode_elem_sep void d concode_elem_sep String getContent concode_elem_sep void i concode_elem_sep void i concode_elem_sep String getsApplicationTag concode_elem_sep void setsIsLogEnabled concode_elem_sep boolean issIsLogEnabled concode_elem_sep void trace concode_elem_sep void v concode_elem_sep void w concode_elem_sep void w concode_elem_sep String getContents concode_elem_sep void traceStack concode_elem_sep void traceStack concode_elem_sep void setsApplicationTag", "code_tokens": ["void", "function", "(", "Exception", "arg0", ",", "String", "arg1", ")", "{", "if", "(", "sIsLogEnabled", ")", "{", "Log", ".", "e", "(", "sApplicationTag", ",", "getContent", "(", "getCurrentStackTraceElement", "(", ")", ")", "+", "\"srini_string\"", "+", "arg0", ".", "getMessage", "(", ")", "+", "\"srini_string\"", "+", "arg0", ".", "getStackTrace", "(", ")", "+", "\"srini_string\"", "+", "arg1", ")", ";", "arg0", ".", "printStackTrace", "(", ")", ";", "}", "}"], "nl_tokens": ["send", "an", "error", "log", "message", ".", "concode_field_sep", "String", "TAG_CONTENT_PRINT", "concode_elem_sep", "boolean", "sIsLogEnabled", "concode_elem_sep", "String", "sApplicationTag", "concode_field_sep", "StackTraceElement", "getCurrentStackTraceElement", "concode_elem_sep", "String", "getTagContentPrint", "concode_elem_sep", "void", "d", "concode_elem_sep", "void", "d", "concode_elem_sep", "void", "d", "concode_elem_sep", "String", "getContent", "concode_elem_sep", "void", "i", "concode_elem_sep", "void", "i", "concode_elem_sep", "String", "getsApplicationTag", "concode_elem_sep", "void", "setsIsLogEnabled", "concode_elem_sep", "boolean", "issIsLogEnabled", "concode_elem_sep", "void", "trace", "concode_elem_sep", "void", "v", "concode_elem_sep", "void", "w", "concode_elem_sep", "void", "w", "concode_elem_sep", "String", "getContents", "concode_elem_sep", "void", "traceStack", "concode_elem_sep", "void", "traceStack", "concode_elem_sep", "void", "setsApplicationTag"]}
{"code": "int function ( ) { return ( bytes [ 31 ] & 0xFF ) | ( ( bytes [ 30 ] & 0xFF ) << 8 ) | ( ( bytes [ 29 ] & 0xFF ) << 16 ) | ( ( bytes [ 28 ] & 0xFF ) << 24 ) ; }", "nl": "hash code of the byte array as calculated by arrays #hashcode . note the difference between a sha256 secure bytes and the type of quick/dirty bytes used by the java hashcode method which is designed for use in bytes tables . concode_field_sep Sha256Hash ZERO_HASH concode_elem_sep byte[] bytes concode_field_sep Sha256Hash createDouble concode_elem_sep Sha256Hash hashFileContents concode_elem_sep boolean equals concode_elem_sep Sha256Hash create concode_elem_sep BigInteger toBigInteger concode_elem_sep String toString concode_elem_sep Sha256Hash duplicate concode_elem_sep int compareTo concode_elem_sep byte[] getBytes", "code_tokens": ["int", "function", "(", ")", "{", "return", "(", "bytes", "[", "31", "]", "&", "0xFF", ")", "|", "(", "(", "bytes", "[", "30", "]", "&", "0xFF", ")", "<<", "8", ")", "|", "(", "(", "bytes", "[", "29", "]", "&", "0xFF", ")", "<<", "16", ")", "|", "(", "(", "bytes", "[", "28", "]", "&", "0xFF", ")", "<<", "24", ")", ";", "}"], "nl_tokens": ["hash", "code", "of", "the", "byte", "array", "as", "calculated", "by", "arrays", "#hashcode . note the difference between a sha256 secure bytes and the type of quick/dirty bytes used by the java hashcode method which is designed for use in bytes tables . concode_field_sep Sha256Hash ZERO_HASH concode_elem_sep byte[] bytes concode_field_sep Sha256Hash createDouble concode_elem_sep Sha256Hash hashFileContents concode_elem_sep boolean equals concode_elem_sep Sha256Hash create concode_elem_sep BigInteger toBigInteger concode_elem_sep String toString concode_elem_sep Sha256Hash duplicate concode_elem_sep int compareTo concode_elem_sep byte[] getBytes"]}
{"code": "java . lang . Object function ( ) { try { return forName ( literalName ) ; } catch ( java . lang . IllegalArgumentException loc0 ) { throw new java . io . InvalidObjectException ( loc0 . getMessage ( ) ) ; } }", "nl": "resolves serialized instance of enumeration value . concode_field_sep ScopeKindEnum SK_CLASSIFIER concode_elem_sep java.util.List typeName concode_elem_sep ScopeKindEnum SK_INSTANCE concode_elem_sep java.lang.String literalName concode_field_sep ScopeKind forName concode_elem_sep java.util.List refTypeName concode_elem_sep int hashCode concode_elem_sep boolean equals concode_elem_sep java.lang.String toString", "code_tokens": ["java", ".", "lang", ".", "Object", "function", "(", ")", "{", "try", "{", "return", "forName", "(", "literalName", ")", ";", "}", "catch", "(", "java", ".", "lang", ".", "IllegalArgumentException", "loc0", ")", "{", "throw", "new", "java", ".", "io", ".", "InvalidObjectException", "(", "loc0", ".", "getMessage", "(", ")", ")", ";", "}", "}"], "nl_tokens": ["resolves", "serialized", "instance", "of", "enumeration", "value", ".", "concode_field_sep", "ScopeKindEnum", "SK_CLASSIFIER", "concode_elem_sep", "java", ".", "util", ".", "List", "typeName", "concode_elem_sep", "ScopeKindEnum", "SK_INSTANCE", "concode_elem_sep", "java", ".", "lang", ".", "String", "literalName", "concode_field_sep", "ScopeKind", "forName", "concode_elem_sep", "java", ".", "util", ".", "List", "refTypeName", "concode_elem_sep", "int", "hashCode", "concode_elem_sep", "boolean", "equals", "concode_elem_sep", "java", ".", "lang", ".", "String", "toString"]}
{"code": "byte function ( ByteBuffer arg0 ) { byte [ ] loc0 = BufferUtils . newByteArrayFromByteBuffer ( arg0 ) ; return fingerprintHash ( loc0 ) ; }", "nl": "hashes a key in bytebuffer into a non-zero , one byte fingerprint . concode_field_sep int mKeyCount concode_elem_sep int BUCKET_SIZE_BYTES concode_elem_sep ByteBuffer mBuf concode_elem_sep int INDEX_HASHER_SEED concode_elem_sep int FINGERPRINT_HASHER_SEED concode_elem_sep HashFunction FINGERPRINT_HASHER concode_elem_sep HashFunction INDEX_HASHER concode_elem_sep ByteBuffer mHashTableBuf concode_elem_sep int MAX_PROBES concode_elem_sep int mNumBuckets concode_field_sep int keyCount concode_elem_sep Iterator<ByteBuffer> keyIterator concode_elem_sep int bucketOffset concode_elem_sep LinearProbingIndex createEmptyIndex concode_elem_sep LinearProbingIndex loadFromByteArray concode_elem_sep int byteCount concode_elem_sep ByteBuffer get concode_elem_sep int indexHash concode_elem_sep int indexHash concode_elem_sep ByteBuffer nextKey concode_elem_sep boolean put concode_elem_sep byte[] getBytes", "code_tokens": ["byte", "function", "(", "ByteBuffer", "arg0", ")", "{", "byte", "[", "]", "loc0", "=", "BufferUtils", ".", "newByteArrayFromByteBuffer", "(", "arg0", ")", ";", "return", "fingerprintHash", "(", "loc0", ")", ";", "}"], "nl_tokens": ["hashes", "a", "key", "in", "bytebuffer", "into", "a", "non", "-", "zero", ",", "one", "byte", "fingerprint", ".", "concode_field_sep", "int", "mKeyCount", "concode_elem_sep", "int", "BUCKET_SIZE_BYTES", "concode_elem_sep", "ByteBuffer", "mBuf", "concode_elem_sep", "int", "INDEX_HASHER_SEED", "concode_elem_sep", "int", "FINGERPRINT_HASHER_SEED", "concode_elem_sep", "HashFunction", "FINGERPRINT_HASHER", "concode_elem_sep", "HashFunction", "INDEX_HASHER", "concode_elem_sep", "ByteBuffer", "mHashTableBuf", "concode_elem_sep", "int", "MAX_PROBES", "concode_elem_sep", "int", "mNumBuckets", "concode_field_sep", "int", "keyCount", "concode_elem_sep", "Iterator", "<", "ByteBuffer", ">", "keyIterator", "concode_elem_sep", "int", "bucketOffset", "concode_elem_sep", "LinearProbingIndex", "createEmptyIndex", "concode_elem_sep", "LinearProbingIndex", "loadFromByteArray", "concode_elem_sep", "int", "byteCount", "concode_elem_sep", "ByteBuffer", "get", "concode_elem_sep", "int", "indexHash", "concode_elem_sep", "int", "indexHash", "concode_elem_sep", "ByteBuffer", "nextKey", "concode_elem_sep", "boolean", "put", "concode_elem_sep", "byte", "[", "]", "getBytes"]}
{"code": "boolean function ( Fiat arg0 ) { return compareTo ( arg0 ) < 0 ; }", "nl": "returns true if the monetary value represented by this instance is less than that of the given other coin , otherwise false . concode_field_sep MonetaryFormat FRIENDLY_FORMAT concode_elem_sep MonetaryFormat PLAIN_FORMAT concode_elem_sep int SMALLEST_UNIT_EXPONENT concode_elem_sep long value concode_elem_sep String currencyCode concode_field_sep Fiat add concode_elem_sep int signum concode_elem_sep boolean isNegative concode_elem_sep String getCurrencyCode concode_elem_sep Fiat valueOf concode_elem_sep Fiat subtract concode_elem_sep boolean isGreaterThan concode_elem_sep boolean isPositive concode_elem_sep int smallestUnitExponent concode_elem_sep String toPlainString concode_elem_sep int compareTo concode_elem_sep long longValue concode_elem_sep long getValue concode_elem_sep String toFriendlyString concode_elem_sep Fiat[] divideAndRemainder concode_elem_sep Fiat negate concode_elem_sep int hashCode concode_elem_sep boolean equals concode_elem_sep boolean isZero concode_elem_sep Fiat divide concode_elem_sep long divide concode_elem_sep String toString concode_elem_sep Fiat multiply concode_elem_sep Fiat parseFiat", "code_tokens": ["boolean", "function", "(", "Fiat", "arg0", ")", "{", "return", "compareTo", "(", "arg0", ")", "<", "0", ";", "}"], "nl_tokens": ["returns", "true", "if", "the", "monetary", "value", "represented", "by", "this", "instance", "is", "less", "than", "that", "of", "the", "given", "other", "coin", ",", "otherwise", "false", ".", "concode_field_sep", "MonetaryFormat", "FRIENDLY_FORMAT", "concode_elem_sep", "MonetaryFormat", "PLAIN_FORMAT", "concode_elem_sep", "int", "SMALLEST_UNIT_EXPONENT", "concode_elem_sep", "long", "value", "concode_elem_sep", "String", "currencyCode", "concode_field_sep", "Fiat", "add", "concode_elem_sep", "int", "signum", "concode_elem_sep", "boolean", "isNegative", "concode_elem_sep", "String", "getCurrencyCode", "concode_elem_sep", "Fiat", "valueOf", "concode_elem_sep", "Fiat", "subtract", "concode_elem_sep", "boolean", "isGreaterThan", "concode_elem_sep", "boolean", "isPositive", "concode_elem_sep", "int", "smallestUnitExponent", "concode_elem_sep", "String", "toPlainString", "concode_elem_sep", "int", "compareTo", "concode_elem_sep", "long", "longValue", "concode_elem_sep", "long", "getValue", "concode_elem_sep", "String", "toFriendlyString", "concode_elem_sep", "Fiat", "[", "]", "divideAndRemainder", "concode_elem_sep", "Fiat", "negate", "concode_elem_sep", "int", "hashCode", "concode_elem_sep", "boolean", "equals", "concode_elem_sep", "boolean", "isZero", "concode_elem_sep", "Fiat", "divide", "concode_elem_sep", "long", "divide", "concode_elem_sep", "String", "toString", "concode_elem_sep", "Fiat", "multiply", "concode_elem_sep", "Fiat", "parseFiat"]}
{"code": "ConfigSetupType function ( String arg0 ) { try { return valueOf ( arg0 . toUpperCase ( ) ) ; } catch ( IllegalArgumentException loc0 ) { FetcherTesterRestSvcManager . LOGGER . error ( \"srini_string\" , loc0 ) ; throw new FetcherTesterServiceException ( \"srini_string\" + arg0 , loc0 ) ; } }", "nl": "from string . concode_field_sep PlaceHolder placeHolder concode_field_sep ConfigSetUpDTO configSetUp concode_elem_sep PubFilesOperationResp destFileExists concode_elem_sep ItemList<FeedConfigResponse> runFeeds concode_elem_sep RestCallStatus runFeed concode_elem_sep PubFilesOperationResp execShellCommand concode_elem_sep AppVersionDTO getAppVersion concode_elem_sep PubFilesOperationResp seedFilesSetUp", "code_tokens": ["ConfigSetupType", "function", "(", "String", "arg0", ")", "{", "try", "{", "return", "valueOf", "(", "arg0", ".", "toUpperCase", "(", ")", ")", ";", "}", "catch", "(", "IllegalArgumentException", "loc0", ")", "{", "FetcherTesterRestSvcManager", ".", "LOGGER", ".", "error", "(", "\"srini_string\"", ",", "loc0", ")", ";", "throw", "new", "FetcherTesterServiceException", "(", "\"srini_string\"", "+", "arg0", ",", "loc0", ")", ";", "}", "}"], "nl_tokens": ["from", "string", ".", "concode_field_sep", "PlaceHolder", "placeHolder", "concode_field_sep", "ConfigSetUpDTO", "configSetUp", "concode_elem_sep", "PubFilesOperationResp", "destFileExists", "concode_elem_sep", "ItemList", "<", "FeedConfigResponse", ">", "runFeeds", "concode_elem_sep", "RestCallStatus", "runFeed", "concode_elem_sep", "PubFilesOperationResp", "execShellCommand", "concode_elem_sep", "AppVersionDTO", "getAppVersion", "concode_elem_sep", "PubFilesOperationResp", "seedFilesSetUp"]}
{"code": "MemoryLogger function ( ) { return instance ; }", "nl": "method to obtain the only instance of this class concode_field_sep double maxMemory concode_elem_sep MemoryLogger instance concode_field_sep void checkMemory concode_elem_sep double getMaxMemory concode_elem_sep void reset", "code_tokens": ["MemoryLogger", "function", "(", ")", "{", "return", "instance", ";", "}"], "nl_tokens": ["method", "to", "obtain", "the", "only", "instance", "of", "this", "class", "concode_field_sep", "double", "maxMemory", "concode_elem_sep", "MemoryLogger", "instance", "concode_field_sep", "void", "checkMemory", "concode_elem_sep", "double", "getMaxMemory", "concode_elem_sep", "void", "reset"]}
{"code": "void function ( boolean arg0 ) { this . validateUseKey = arg0 ; }", "nl": "set whether to validate a client public key or certificate presented as part of a usekey element . if this is set to true the default , the public key must be trusted by the signature crypto of the sts . concode_field_sep Object encryptionCryptoProperties concode_elem_sep Bus bus concode_elem_sep Crypto signatureCrypto concode_elem_sep SignatureProperties signatureProperties concode_elem_sep Logger LOG concode_elem_sep String issuer concode_elem_sep EncryptionProperties encryptionProperties concode_elem_sep CallbackHandler callbackHandler concode_elem_sep List<Relationship> relationships concode_elem_sep boolean validateUseKey concode_elem_sep RelationshipResolver relationshipResolver concode_elem_sep String callbackHandlerClass concode_elem_sep String signatureUsername concode_elem_sep Crypto encryptionCrypto concode_elem_sep SAMLRealmCodec samlRealmCodec concode_elem_sep String encryptionUsername concode_elem_sep Object signatureCryptoProperties concode_elem_sep IdentityMapper identityMapper concode_elem_sep RealmParser realmParser concode_field_sep RelationshipResolver getRelationshipResolver concode_elem_sep Bus getBus concode_elem_sep void setSamlRealmCodec concode_elem_sep ResourceManager getResourceManager concode_elem_sep void setSignaturePropertiesFile concode_elem_sep void setCallbackHandler concode_elem_sep void setEncryptionProperties concode_elem_sep EncryptionProperties getEncryptionProperties concode_elem_sep boolean isValidateUseKey concode_elem_sep void setSignatureUsername concode_elem_sep List<Relationship> getRelationships concode_elem_sep SAMLRealmCodec getSamlRealmCodec concode_elem_sep String getEncryptionUsername concode_elem_sep void setIdentityMapper concode_elem_sep void setEncryptionPropertiesFile concode_elem_sep void setEncryptionUsername concode_elem_sep void setCallbackHandlerClass concode_elem_sep Crypto getEncryptionCrypto concode_elem_sep void setRelationships concode_elem_sep SignatureProperties getSignatureProperties concode_elem_sep void setSignatureProperties concode_elem_sep void setRealmParser concode_elem_sep String getIssuer concode_elem_sep void setSignatureCryptoProperties concode_elem_sep void setSignatureCrypto concode_elem_sep IdentityMapper getIdentityMapper concode_elem_sep void configureProperties concode_elem_sep void setEncryptionCrypto concode_elem_sep RealmParser getRealmParser concode_elem_sep String getSignatureUsername concode_elem_sep Crypto getSignatureCrypto concode_elem_sep void setIssuer concode_elem_sep CallbackHandler getCallbackHandler concode_elem_sep void setEncryptionCryptoProperties concode_elem_sep void setBus", "code_tokens": ["void", "function", "(", "boolean", "arg0", ")", "{", "this", ".", "validateUseKey", "=", "arg0", ";", "}"], "nl_tokens": ["set", "whether", "to", "validate", "a", "client", "public", "key", "or", "certificate", "presented", "as", "part", "of", "a", "usekey", "element", ".", "if", "this", "is", "set", "to", "true", "the", "default", ",", "the", "public", "key", "must", "be", "trusted", "by", "the", "signature", "crypto", "of", "the", "sts", ".", "concode_field_sep", "Object", "encryptionCryptoProperties", "concode_elem_sep", "Bus", "bus", "concode_elem_sep", "Crypto", "signatureCrypto", "concode_elem_sep", "SignatureProperties", "signatureProperties", "concode_elem_sep", "Logger", "LOG", "concode_elem_sep", "String", "issuer", "concode_elem_sep", "EncryptionProperties", "encryptionProperties", "concode_elem_sep", "CallbackHandler", "callbackHandler", "concode_elem_sep", "List", "<", "Relationship", ">", "relationships", "concode_elem_sep", "boolean", "validateUseKey", "concode_elem_sep", "RelationshipResolver", "relationshipResolver", "concode_elem_sep", "String", "callbackHandlerClass", "concode_elem_sep", "String", "signatureUsername", "concode_elem_sep", "Crypto", "encryptionCrypto", "concode_elem_sep", "SAMLRealmCodec", "samlRealmCodec", "concode_elem_sep", "String", "encryptionUsername", "concode_elem_sep", "Object", "signatureCryptoProperties", "concode_elem_sep", "IdentityMapper", "identityMapper", "concode_elem_sep", "RealmParser", "realmParser", "concode_field_sep", "RelationshipResolver", "getRelationshipResolver", "concode_elem_sep", "Bus", "getBus", "concode_elem_sep", "void", "setSamlRealmCodec", "concode_elem_sep", "ResourceManager", "getResourceManager", "concode_elem_sep", "void", "setSignaturePropertiesFile", "concode_elem_sep", "void", "setCallbackHandler", "concode_elem_sep", "void", "setEncryptionProperties", "concode_elem_sep", "EncryptionProperties", "getEncryptionProperties", "concode_elem_sep", "boolean", "isValidateUseKey", "concode_elem_sep", "void", "setSignatureUsername", "concode_elem_sep", "List", "<", "Relationship", ">", "getRelationships", "concode_elem_sep", "SAMLRealmCodec", "getSamlRealmCodec", "concode_elem_sep", "String", "getEncryptionUsername", "concode_elem_sep", "void", "setIdentityMapper", "concode_elem_sep", "void", "setEncryptionPropertiesFile", "concode_elem_sep", "void", "setEncryptionUsername", "concode_elem_sep", "void", "setCallbackHandlerClass", "concode_elem_sep", "Crypto", "getEncryptionCrypto", "concode_elem_sep", "void", "setRelationships", "concode_elem_sep", "SignatureProperties", "getSignatureProperties", "concode_elem_sep", "void", "setSignatureProperties", "concode_elem_sep", "void", "setRealmParser", "concode_elem_sep", "String", "getIssuer", "concode_elem_sep", "void", "setSignatureCryptoProperties", "concode_elem_sep", "void", "setSignatureCrypto", "concode_elem_sep", "IdentityMapper", "getIdentityMapper", "concode_elem_sep", "void", "configureProperties", "concode_elem_sep", "void", "setEncryptionCrypto", "concode_elem_sep", "RealmParser", "getRealmParser", "concode_elem_sep", "String", "getSignatureUsername", "concode_elem_sep", "Crypto", "getSignatureCrypto", "concode_elem_sep", "void", "setIssuer", "concode_elem_sep", "CallbackHandler", "getCallbackHandler", "concode_elem_sep", "void", "setEncryptionCryptoProperties", "concode_elem_sep", "void", "setBus"]}
{"code": "Map < String , String > function ( ) { Map < String , String > loc0 = new LinkedHashMap < String , String > ( ) ; for ( String loc1 : getStrings ( ) ) { String [ ] loc2 = loc1 . split ( \"srini_string\" , 2 ) ; String loc3 = loc2 [ 0 ] ; String loc4 = loc2 [ 1 ] ; loc0 . put ( loc3 , loc4 ) ; } return loc0 ; }", "nl": "returns a map of strings from the current value . concode_field_sep boolean spaceDelimited concode_elem_sep String SINCE concode_elem_sep String defaultValue concode_elem_sep boolean caseSensitive concode_elem_sep String SPACE_DELIMITED concode_elem_sep String description concode_elem_sep long serialVersionUID concode_elem_sep String RESTART_REQUIRED concode_elem_sep boolean restartRequired concode_elem_sep String name concode_elem_sep String CASE_SENSITIVE concode_elem_sep String currentValue concode_elem_sep String since concode_field_sep char getChar concode_elem_sep boolean getBoolean concode_elem_sep int getInteger concode_elem_sep String getString concode_elem_sep boolean isDefaultValue concode_elem_sep List<String> getStrings concode_elem_sep List<String> getStrings", "code_tokens": ["Map", "<", "String", ",", "String", ">", "function", "(", ")", "{", "Map", "<", "String", ",", "String", ">", "loc0", "=", "new", "LinkedHashMap", "<", "String", ",", "String", ">", "(", ")", ";", "for", "(", "String", "loc1", ":", "getStrings", "(", ")", ")", "{", "String", "[", "]", "loc2", "=", "loc1", ".", "split", "(", "\"srini_string\"", ",", "2", ")", ";", "String", "loc3", "=", "loc2", "[", "0", "]", ";", "String", "loc4", "=", "loc2", "[", "1", "]", ";", "loc0", ".", "put", "(", "loc3", ",", "loc4", ")", ";", "}", "return", "loc0", ";", "}"], "nl_tokens": ["returns", "a", "map", "of", "strings", "from", "the", "current", "value", ".", "concode_field_sep", "boolean", "spaceDelimited", "concode_elem_sep", "String", "SINCE", "concode_elem_sep", "String", "defaultValue", "concode_elem_sep", "boolean", "caseSensitive", "concode_elem_sep", "String", "SPACE_DELIMITED", "concode_elem_sep", "String", "description", "concode_elem_sep", "long", "serialVersionUID", "concode_elem_sep", "String", "RESTART_REQUIRED", "concode_elem_sep", "boolean", "restartRequired", "concode_elem_sep", "String", "name", "concode_elem_sep", "String", "CASE_SENSITIVE", "concode_elem_sep", "String", "currentValue", "concode_elem_sep", "String", "since", "concode_field_sep", "char", "getChar", "concode_elem_sep", "boolean", "getBoolean", "concode_elem_sep", "int", "getInteger", "concode_elem_sep", "String", "getString", "concode_elem_sep", "boolean", "isDefaultValue", "concode_elem_sep", "List", "<", "String", ">", "getStrings", "concode_elem_sep", "List", "<", "String", ">", "getStrings"]}
{"code": "BrowseOffersResponse . Return . OfferData . OfferMedia . OfferImage . Entry . Value function ( ) { return new BrowseOffersResponse . Return . OfferData . OfferMedia . OfferImage . Entry . Value ( ) ; }", "nl": "create an instance of browseoffersresponse.return.offerdata.offermedia.offerimage.entry.value concode_field_sep PlaceHolder placeHolder concode_field_sep BrowseOffersResponse.Return.OfferData.Seo createBrowseOffersResponseReturnOfferDataSeo concode_elem_sep BrowseOffersResponse.Return.OfferData.Geo.Region.Country.State createBrowseOffersResponseReturnOfferDataGeoRegionCountryState concode_elem_sep BrowseOffersResponse.Return.OfferData.OfferMedia createBrowseOffersResponseReturnOfferDataOfferMedia concode_elem_sep BrowseOffersResponse createBrowseOffersResponse concode_elem_sep BrowseOffersResponse.Return.OfferData.Geo.Region.Country createBrowseOffersResponseReturnOfferDataGeoRegionCountry concode_elem_sep BrowseOffersResponse.Return createBrowseOffersResponseReturn concode_elem_sep BrowseOffersResponse.Return.OfferData createBrowseOffersResponseReturnOfferData concode_elem_sep BrowseOffersResponse.Return.OfferData.Merchant createBrowseOffersResponseReturnOfferDataMerchant concode_elem_sep BrowseOffersResponse.Return.OfferData.OfferMedia.OfferImage.Entry createBrowseOffersResponseReturnOfferDataOfferMediaOfferImageEntry concode_elem_sep BrowseOffersResponse.Return.OfferData.OfferMedia.OfferImage createBrowseOffersResponseReturnOfferDataOfferMediaOfferImage concode_elem_sep BrowseOffersResponse.Return.OfferData.OfferMedia.OfferImage.Entry.Value.Item createBrowseOffersResponseReturnOfferDataOfferMediaOfferImageEntryValueItem concode_elem_sep BrowseOffersResponse.Return.OfferData.Geo createBrowseOffersResponseReturnOfferDataGeo concode_elem_sep BrowseOffersResponse.Return.OfferData.Geo.Region createBrowseOffersResponseReturnOfferDataGeoRegion", "code_tokens": ["BrowseOffersResponse", ".", "Return", ".", "OfferData", ".", "OfferMedia", ".", "OfferImage", ".", "Entry", ".", "Value", "function", "(", ")", "{", "return", "new", "BrowseOffersResponse", ".", "Return", ".", "OfferData", ".", "OfferMedia", ".", "OfferImage", ".", "Entry", ".", "Value", "(", ")", ";", "}"], "nl_tokens": ["create", "an", "instance", "of", "browseoffersresponse", ".", "return", ".", "offerdata", ".", "offermedia", ".", "offerimage", ".", "entry", ".", "value", "concode_field_sep", "PlaceHolder", "placeHolder", "concode_field_sep", "BrowseOffersResponse", ".", "Return", ".", "OfferData", ".", "Seo", "createBrowseOffersResponseReturnOfferDataSeo", "concode_elem_sep", "BrowseOffersResponse", ".", "Return", ".", "OfferData", ".", "Geo", ".", "Region", ".", "Country", ".", "State", "createBrowseOffersResponseReturnOfferDataGeoRegionCountryState", "concode_elem_sep", "BrowseOffersResponse", ".", "Return", ".", "OfferData", ".", "OfferMedia", "createBrowseOffersResponseReturnOfferDataOfferMedia", "concode_elem_sep", "BrowseOffersResponse", "createBrowseOffersResponse", "concode_elem_sep", "BrowseOffersResponse", ".", "Return", ".", "OfferData", ".", "Geo", ".", "Region", ".", "Country", "createBrowseOffersResponseReturnOfferDataGeoRegionCountry", "concode_elem_sep", "BrowseOffersResponse", ".", "Return", "createBrowseOffersResponseReturn", "concode_elem_sep", "BrowseOffersResponse", ".", "Return", ".", "OfferData", "createBrowseOffersResponseReturnOfferData", "concode_elem_sep", "BrowseOffersResponse", ".", "Return", ".", "OfferData", ".", "Merchant", "createBrowseOffersResponseReturnOfferDataMerchant", "concode_elem_sep", "BrowseOffersResponse", ".", "Return", ".", "OfferData", ".", "OfferMedia", ".", "OfferImage", ".", "Entry", "createBrowseOffersResponseReturnOfferDataOfferMediaOfferImageEntry", "concode_elem_sep", "BrowseOffersResponse", ".", "Return", ".", "OfferData", ".", "OfferMedia", ".", "OfferImage", "createBrowseOffersResponseReturnOfferDataOfferMediaOfferImage", "concode_elem_sep", "BrowseOffersResponse", ".", "Return", ".", "OfferData", ".", "OfferMedia", ".", "OfferImage", ".", "Entry", ".", "Value", ".", "Item", "createBrowseOffersResponseReturnOfferDataOfferMediaOfferImageEntryValueItem", "concode_elem_sep", "BrowseOffersResponse", ".", "Return", ".", "OfferData", ".", "Geo", "createBrowseOffersResponseReturnOfferDataGeo", "concode_elem_sep", "BrowseOffersResponse", ".", "Return", ".", "OfferData", ".", "Geo", ".", "Region", "createBrowseOffersResponseReturnOfferDataGeoRegion"]}
{"code": "int function ( ReceiverLossListEntry arg0 ) { return ( int ) ( sequenceNumber - arg0 . sequenceNumber ) ; }", "nl": "order by increasing sequence number concode_field_sep long sequenceNumber concode_elem_sep long lastFeedbacktime concode_elem_sep long k concode_field_sep void feedback concode_elem_sep long getSequenceNumber concode_elem_sep long getK concode_elem_sep int hashCode concode_elem_sep boolean equals concode_elem_sep String toString concode_elem_sep long getLastFeedbackTime", "code_tokens": ["int", "function", "(", "ReceiverLossListEntry", "arg0", ")", "{", "return", "(", "int", ")", "(", "sequenceNumber", "-", "arg0", ".", "sequenceNumber", ")", ";", "}"], "nl_tokens": ["order", "by", "increasing", "sequence", "number", "concode_field_sep", "long", "sequenceNumber", "concode_elem_sep", "long", "lastFeedbacktime", "concode_elem_sep", "long", "k", "concode_field_sep", "void", "feedback", "concode_elem_sep", "long", "getSequenceNumber", "concode_elem_sep", "long", "getK", "concode_elem_sep", "int", "hashCode", "concode_elem_sep", "boolean", "equals", "concode_elem_sep", "String", "toString", "concode_elem_sep", "long", "getLastFeedbackTime"]}
{"code": "void function ( int arg0 ) { state . unicodeAlternateSkipCount = arg0 ; }", "nl": "set the number of bytes to skip after a unicode character . concode_field_sep IParserEventHandler handler concode_elem_sep IParserEvent GROUP_END concode_elem_sep IParserEvent GROUP_START concode_elem_sep IParserEvent DOCUMENT_START concode_elem_sep Deque<IParserEventHandler> handlerStack concode_elem_sep Map<Integer,String> m_fontEncodings concode_elem_sep Deque<ParserState> stack concode_elem_sep IParserEvent DOCUMENT_END concode_elem_sep ParserState state concode_elem_sep int skipBytes concode_field_sep void processCharacter concode_elem_sep void processUpr concode_elem_sep void handleEvent concode_elem_sep void processDocumentEnd concode_elem_sep void processGroupEnd concode_elem_sep void processCommand concode_elem_sep void parse concode_elem_sep void processCharacterBytes concode_elem_sep void processString concode_elem_sep void processDocumentStart concode_elem_sep void handleCommand concode_elem_sep void processGroupStart concode_elem_sep void processFont concode_elem_sep void processEncoding concode_elem_sep void processUnicode concode_elem_sep String currentEncoding concode_elem_sep void processBinaryBytes concode_elem_sep void processFontCharset", "code_tokens": ["void", "function", "(", "int", "arg0", ")", "{", "state", ".", "unicodeAlternateSkipCount", "=", "arg0", ";", "}"], "nl_tokens": ["set", "the", "number", "of", "bytes", "to", "skip", "after", "a", "unicode", "character", ".", "concode_field_sep", "IParserEventHandler", "handler", "concode_elem_sep", "IParserEvent", "GROUP_END", "concode_elem_sep", "IParserEvent", "GROUP_START", "concode_elem_sep", "IParserEvent", "DOCUMENT_START", "concode_elem_sep", "Deque", "<", "IParserEventHandler", ">", "handlerStack", "concode_elem_sep", "Map", "<", "Integer", ",", "String", ">", "m_fontEncodings", "concode_elem_sep", "Deque", "<", "ParserState", ">", "stack", "concode_elem_sep", "IParserEvent", "DOCUMENT_END", "concode_elem_sep", "ParserState", "state", "concode_elem_sep", "int", "skipBytes", "concode_field_sep", "void", "processCharacter", "concode_elem_sep", "void", "processUpr", "concode_elem_sep", "void", "handleEvent", "concode_elem_sep", "void", "processDocumentEnd", "concode_elem_sep", "void", "processGroupEnd", "concode_elem_sep", "void", "processCommand", "concode_elem_sep", "void", "parse", "concode_elem_sep", "void", "processCharacterBytes", "concode_elem_sep", "void", "processString", "concode_elem_sep", "void", "processDocumentStart", "concode_elem_sep", "void", "handleCommand", "concode_elem_sep", "void", "processGroupStart", "concode_elem_sep", "void", "processFont", "concode_elem_sep", "void", "processEncoding", "concode_elem_sep", "void", "processUnicode", "concode_elem_sep", "String", "currentEncoding", "concode_elem_sep", "void", "processBinaryBytes", "concode_elem_sep", "void", "processFontCharset"]}
{"code": "void function ( ) { rmc . setMode ( FaaMode . SIMULATED ) ; assertEquals ( FaaMode . SIMULATED , rmc . getMode ( ) ) ; rmc . setMode ( FaaMode . ESTIMATED ) ; assertEquals ( FaaMode . ESTIMATED , rmc . getMode ( ) ) ; }", "nl": "test method for net.sf.marineapi.nmea.parser.rmcparser #setfaamode . concode_field_sep String EXAMPLE concode_elem_sep RMCParser rmc concode_elem_sep RMCParser empty concode_field_sep void testSetFaaModeWhenOmitted concode_elem_sep void testSetDirectionOfVariationWithInvalidDirection concode_elem_sep void testGetCorrectedCourse concode_elem_sep void testGetDataStatus concode_elem_sep void testConstructor concode_elem_sep void testGetTime concode_elem_sep void testSetCourse concode_elem_sep void testSetVariation concode_elem_sep void setUp concode_elem_sep void testGetMonth concode_elem_sep void testGetCourse concode_elem_sep void testSetDate concode_elem_sep void testGetYear concode_elem_sep void testSetDataStatus concode_elem_sep void testGetDirectionOfVariation concode_elem_sep void testGetDate concode_elem_sep void testGetMagneticVariation concode_elem_sep void testSetPosition concode_elem_sep void testGetPosition concode_elem_sep void testSetDirectionOfVariation concode_elem_sep void testSetTime concode_elem_sep void testGetDay concode_elem_sep void testGetSpeed concode_elem_sep void testGetFaaMode concode_elem_sep void testSetSpeed", "code_tokens": ["void", "function", "(", ")", "{", "rmc", ".", "setMode", "(", "FaaMode", ".", "SIMULATED", ")", ";", "assertEquals", "(", "FaaMode", ".", "SIMULATED", ",", "rmc", ".", "getMode", "(", ")", ")", ";", "rmc", ".", "setMode", "(", "FaaMode", ".", "ESTIMATED", ")", ";", "assertEquals", "(", "FaaMode", ".", "ESTIMATED", ",", "rmc", ".", "getMode", "(", ")", ")", ";", "}"], "nl_tokens": ["test", "method", "for", "net", ".", "sf", ".", "marineapi", ".", "nmea", ".", "parser", ".", "rmcparser", "#setfaamode . concode_field_sep String EXAMPLE concode_elem_sep RMCParser rmc concode_elem_sep RMCParser empty concode_field_sep void testSetFaaModeWhenOmitted concode_elem_sep void testSetDirectionOfVariationWithInvalidDirection concode_elem_sep void testGetCorrectedCourse concode_elem_sep void testGetDataStatus concode_elem_sep void testConstructor concode_elem_sep void testGetTime concode_elem_sep void testSetCourse concode_elem_sep void testSetVariation concode_elem_sep void setUp concode_elem_sep void testGetMonth concode_elem_sep void testGetCourse concode_elem_sep void testSetDate concode_elem_sep void testGetYear concode_elem_sep void testSetDataStatus concode_elem_sep void testGetDirectionOfVariation concode_elem_sep void testGetDate concode_elem_sep void testGetMagneticVariation concode_elem_sep void testSetPosition concode_elem_sep void testGetPosition concode_elem_sep void testSetDirectionOfVariation concode_elem_sep void testSetTime concode_elem_sep void testGetDay concode_elem_sep void testGetSpeed concode_elem_sep void testGetFaaMode concode_elem_sep void testSetSpeed"]}
{"code": "void function ( int arg0 ) { if ( arg0 < - 13 || arg0 > 13 ) { throw new IllegalArgumentException ( \"srini_string\" ) ; } this . offsetHours = arg0 ; }", "nl": "set time zone offset hours . concode_field_sep int offsetHours concode_elem_sep int offsetMinutes concode_elem_sep double seconds concode_elem_sep int minutes concode_elem_sep int hour concode_elem_sep String TIME_PATTERN concode_field_sep int getOffsetHours concode_elem_sep Date toDate concode_elem_sep String toISO8601 concode_elem_sep void setMinutes concode_elem_sep void setHour concode_elem_sep long getMilliseconds concode_elem_sep void setOffsetMinutes concode_elem_sep int getMinutes concode_elem_sep double getSeconds concode_elem_sep int hashCode concode_elem_sep void setSeconds concode_elem_sep boolean equals concode_elem_sep int getOffsetMinutes concode_elem_sep int getHour concode_elem_sep String toString concode_elem_sep void setTime", "code_tokens": ["void", "function", "(", "int", "arg0", ")", "{", "if", "(", "arg0", "<", "-", "13", "|", "|", "arg0", ">", "13", ")", "{", "throw", "new", "IllegalArgumentException", "(", "\"srini_string\"", ")", ";", "}", "this", ".", "offsetHours", "=", "arg0", ";", "}"], "nl_tokens": ["set", "time", "zone", "offset", "hours", ".", "concode_field_sep", "int", "offsetHours", "concode_elem_sep", "int", "offsetMinutes", "concode_elem_sep", "double", "seconds", "concode_elem_sep", "int", "minutes", "concode_elem_sep", "int", "hour", "concode_elem_sep", "String", "TIME_PATTERN", "concode_field_sep", "int", "getOffsetHours", "concode_elem_sep", "Date", "toDate", "concode_elem_sep", "String", "toISO8601", "concode_elem_sep", "void", "setMinutes", "concode_elem_sep", "void", "setHour", "concode_elem_sep", "long", "getMilliseconds", "concode_elem_sep", "void", "setOffsetMinutes", "concode_elem_sep", "int", "getMinutes", "concode_elem_sep", "double", "getSeconds", "concode_elem_sep", "int", "hashCode", "concode_elem_sep", "void", "setSeconds", "concode_elem_sep", "boolean", "equals", "concode_elem_sep", "int", "getOffsetMinutes", "concode_elem_sep", "int", "getHour", "concode_elem_sep", "String", "toString", "concode_elem_sep", "void", "setTime"]}
{"code": "void function ( ) { super . finalize ( ) ; connection . close ( ) ; }", "nl": "destructor cleans up . concode_field_sep String defaultPass concode_elem_sep Object lockObject concode_elem_sep String defaultHost concode_elem_sep String defaultUser concode_elem_sep boolean defaultSsl concode_elem_sep boolean ssl concode_elem_sep OutputStream sout concode_elem_sep Map callCache concode_elem_sep String password concode_elem_sep int port concode_elem_sep String rpcToken concode_elem_sep String host concode_elem_sep InputStream sin concode_elem_sep boolean disableDb concode_elem_sep Socket connection concode_elem_sep int defaultPort concode_elem_sep String username concode_field_sep void disconnect concode_elem_sep Object cacheExecute concode_elem_sep Object execute concode_elem_sep Object readResp concode_elem_sep void reconnect concode_elem_sep void writeCall concode_elem_sep void setup concode_elem_sep String toString concode_elem_sep Task startRpcConn concode_elem_sep RpcConnection getConn concode_elem_sep byte[] getData concode_elem_sep void connect concode_elem_sep Object exec", "code_tokens": ["void", "function", "(", ")", "{", "super", ".", "finalize", "(", ")", ";", "connection", ".", "close", "(", ")", ";", "}"], "nl_tokens": ["destructor", "cleans", "up", ".", "concode_field_sep", "String", "defaultPass", "concode_elem_sep", "Object", "lockObject", "concode_elem_sep", "String", "defaultHost", "concode_elem_sep", "String", "defaultUser", "concode_elem_sep", "boolean", "defaultSsl", "concode_elem_sep", "boolean", "ssl", "concode_elem_sep", "OutputStream", "sout", "concode_elem_sep", "Map", "callCache", "concode_elem_sep", "String", "password", "concode_elem_sep", "int", "port", "concode_elem_sep", "String", "rpcToken", "concode_elem_sep", "String", "host", "concode_elem_sep", "InputStream", "sin", "concode_elem_sep", "boolean", "disableDb", "concode_elem_sep", "Socket", "connection", "concode_elem_sep", "int", "defaultPort", "concode_elem_sep", "String", "username", "concode_field_sep", "void", "disconnect", "concode_elem_sep", "Object", "cacheExecute", "concode_elem_sep", "Object", "execute", "concode_elem_sep", "Object", "readResp", "concode_elem_sep", "void", "reconnect", "concode_elem_sep", "void", "writeCall", "concode_elem_sep", "void", "setup", "concode_elem_sep", "String", "toString", "concode_elem_sep", "Task", "startRpcConn", "concode_elem_sep", "RpcConnection", "getConn", "concode_elem_sep", "byte", "[", "]", "getData", "concode_elem_sep", "void", "connect", "concode_elem_sep", "Object", "exec"]}
{"code": "boolean function ( boolean arg0 ) { if ( ! StringUtils . isEmpty ( currentValue ) ) { return Boolean . parseBoolean ( currentValue . trim ( ) ) ; } return arg0 ; }", "nl": "returns the boolean value for the currentvalue . if the currentvalue can not be interpreted as a boolean , the defaultvalue is returned . concode_field_sep boolean spaceDelimited concode_elem_sep String SINCE concode_elem_sep String defaultValue concode_elem_sep boolean caseSensitive concode_elem_sep String SPACE_DELIMITED concode_elem_sep String description concode_elem_sep long serialVersionUID concode_elem_sep String RESTART_REQUIRED concode_elem_sep boolean restartRequired concode_elem_sep String name concode_elem_sep String CASE_SENSITIVE concode_elem_sep String currentValue concode_elem_sep String since concode_field_sep char getChar concode_elem_sep int getInteger concode_elem_sep String getString concode_elem_sep Map<String,String> getMap concode_elem_sep boolean isDefaultValue concode_elem_sep List<String> getStrings concode_elem_sep List<String> getStrings", "code_tokens": ["boolean", "function", "(", "boolean", "arg0", ")", "{", "if", "(", "!", "StringUtils", ".", "isEmpty", "(", "currentValue", ")", ")", "{", "return", "Boolean", ".", "parseBoolean", "(", "currentValue", ".", "trim", "(", ")", ")", ";", "}", "return", "arg0", ";", "}"], "nl_tokens": ["returns", "the", "boolean", "value", "for", "the", "currentvalue", ".", "if", "the", "currentvalue", "can", "not", "be", "interpreted", "as", "a", "boolean", ",", "the", "defaultvalue", "is", "returned", ".", "concode_field_sep", "boolean", "spaceDelimited", "concode_elem_sep", "String", "SINCE", "concode_elem_sep", "String", "defaultValue", "concode_elem_sep", "boolean", "caseSensitive", "concode_elem_sep", "String", "SPACE_DELIMITED", "concode_elem_sep", "String", "description", "concode_elem_sep", "long", "serialVersionUID", "concode_elem_sep", "String", "RESTART_REQUIRED", "concode_elem_sep", "boolean", "restartRequired", "concode_elem_sep", "String", "name", "concode_elem_sep", "String", "CASE_SENSITIVE", "concode_elem_sep", "String", "currentValue", "concode_elem_sep", "String", "since", "concode_field_sep", "char", "getChar", "concode_elem_sep", "int", "getInteger", "concode_elem_sep", "String", "getString", "concode_elem_sep", "Map", "<", "String", ",", "String", ">", "getMap", "concode_elem_sep", "boolean", "isDefaultValue", "concode_elem_sep", "List", "<", "String", ">", "getStrings", "concode_elem_sep", "List", "<", "String", ">", "getStrings"]}
{"code": "Filters function ( ) { return this . filters ; }", "nl": "get the filters concode_field_sep ActionType actionType concode_elem_sep String data concode_elem_sep ArrayList<String> suggestions concode_elem_sep String to concode_elem_sep Filters filters concode_elem_sep Creator<GameRequestContent> CREATOR concode_elem_sep String message concode_elem_sep String title concode_elem_sep String objectId concode_field_sep ActionType getActionType concode_elem_sep Builder readFrom concode_elem_sep Builder readFrom concode_elem_sep Builder setData concode_elem_sep String getMessage concode_elem_sep GameRequestContent[] newArray concode_elem_sep Builder setTitle concode_elem_sep String getTo concode_elem_sep GameRequestContent createFromParcel concode_elem_sep Builder setObjectId concode_elem_sep Builder setMessage concode_elem_sep int describeContents concode_elem_sep String getObjectId concode_elem_sep ArrayList<String> getSuggestions concode_elem_sep String getTitle concode_elem_sep Builder setActionType concode_elem_sep GameRequestContent build concode_elem_sep Builder setFilters concode_elem_sep Builder setTo concode_elem_sep Builder setSuggestions concode_elem_sep void writeToParcel concode_elem_sep String getData", "code_tokens": ["Filters", "function", "(", ")", "{", "return", "this", ".", "filters", ";", "}"], "nl_tokens": ["get", "the", "filters", "concode_field_sep", "ActionType", "actionType", "concode_elem_sep", "String", "data", "concode_elem_sep", "ArrayList", "<", "String", ">", "suggestions", "concode_elem_sep", "String", "to", "concode_elem_sep", "Filters", "filters", "concode_elem_sep", "Creator", "<", "GameRequestContent", ">", "CREATOR", "concode_elem_sep", "String", "message", "concode_elem_sep", "String", "title", "concode_elem_sep", "String", "objectId", "concode_field_sep", "ActionType", "getActionType", "concode_elem_sep", "Builder", "readFrom", "concode_elem_sep", "Builder", "readFrom", "concode_elem_sep", "Builder", "setData", "concode_elem_sep", "String", "getMessage", "concode_elem_sep", "GameRequestContent", "[", "]", "newArray", "concode_elem_sep", "Builder", "setTitle", "concode_elem_sep", "String", "getTo", "concode_elem_sep", "GameRequestContent", "createFromParcel", "concode_elem_sep", "Builder", "setObjectId", "concode_elem_sep", "Builder", "setMessage", "concode_elem_sep", "int", "describeContents", "concode_elem_sep", "String", "getObjectId", "concode_elem_sep", "ArrayList", "<", "String", ">", "getSuggestions", "concode_elem_sep", "String", "getTitle", "concode_elem_sep", "Builder", "setActionType", "concode_elem_sep", "GameRequestContent", "build", "concode_elem_sep", "Builder", "setFilters", "concode_elem_sep", "Builder", "setTo", "concode_elem_sep", "Builder", "setSuggestions", "concode_elem_sep", "void", "writeToParcel", "concode_elem_sep", "String", "getData"]}
{"code": "void function ( Object [ ] arg0 ) { notEmpty ( arg0 , \"srini_string\" ) ; }", "nl": "assert that an array has elements ; that is , it must not be null and must have at least one element.assert.notempty array ; concode_field_sep PlaceHolder placeHolder concode_field_sep void isTrue concode_elem_sep void isTrue concode_elem_sep void isAssignable concode_elem_sep void isAssignable concode_elem_sep void notNull concode_elem_sep void notNull concode_elem_sep void isNull concode_elem_sep void isNull concode_elem_sep void noNullElements concode_elem_sep void noNullElements concode_elem_sep void isInstanceOf concode_elem_sep void isInstanceOf concode_elem_sep void state concode_elem_sep void state", "code_tokens": ["void", "function", "(", "Object", "[", "]", "arg0", ")", "{", "notEmpty", "(", "arg0", ",", "\"srini_string\"", ")", ";", "}"], "nl_tokens": ["assert", "that", "an", "array", "has", "elements", ";", "that", "is", ",", "it", "must", "not", "be", "null", "and", "must", "have", "at", "least", "one", "element", ".", "assert", ".", "notempty", "array", ";", "concode_field_sep", "PlaceHolder", "placeHolder", "concode_field_sep", "void", "isTrue", "concode_elem_sep", "void", "isTrue", "concode_elem_sep", "void", "isAssignable", "concode_elem_sep", "void", "isAssignable", "concode_elem_sep", "void", "notNull", "concode_elem_sep", "void", "notNull", "concode_elem_sep", "void", "isNull", "concode_elem_sep", "void", "isNull", "concode_elem_sep", "void", "noNullElements", "concode_elem_sep", "void", "noNullElements", "concode_elem_sep", "void", "isInstanceOf", "concode_elem_sep", "void", "isInstanceOf", "concode_elem_sep", "void", "state", "concode_elem_sep", "void", "state"]}
{"code": "PasswordCredentials function ( ) { return passwordCredentials ; }", "nl": "gets the value of the passwordcredentials property . concode_field_sep CertificateCredentials certificateCredentials concode_elem_sep UserValidation user concode_elem_sep PasswordCredentials passwordCredentials concode_elem_sep Token token concode_field_sep void setToken concode_elem_sep Token getToken concode_elem_sep UserValidation getUser concode_elem_sep void setPasswordCredentials concode_elem_sep CertificateCredentials getCertificateCredentials concode_elem_sep void setCertificateCredentials concode_elem_sep void setUser", "code_tokens": ["PasswordCredentials", "function", "(", ")", "{", "return", "passwordCredentials", ";", "}"], "nl_tokens": ["gets", "the", "value", "of", "the", "passwordcredentials", "property", ".", "concode_field_sep", "CertificateCredentials", "certificateCredentials", "concode_elem_sep", "UserValidation", "user", "concode_elem_sep", "PasswordCredentials", "passwordCredentials", "concode_elem_sep", "Token", "token", "concode_field_sep", "void", "setToken", "concode_elem_sep", "Token", "getToken", "concode_elem_sep", "UserValidation", "getUser", "concode_elem_sep", "void", "setPasswordCredentials", "concode_elem_sep", "CertificateCredentials", "getCertificateCredentials", "concode_elem_sep", "void", "setCertificateCredentials", "concode_elem_sep", "void", "setUser"]}
{"code": "Map < Class < ? > , String > function ( ) { Map < Class < ? > , String > loc0 = new HashMap < > ( ) ; loc0 . putAll ( PRIMITIVE_TYPE_NAMES . asInverseWithShortName ( ) ) ; loc0 . putAll ( TYPES_BY_NAME . asInverseWithShortName ( ) ) ; return loc0 ; }", "nl": "return a map of all the short names of classes we maintain mappings for . the names are keyed by the classes themselves . concode_field_sep TypeMap PRIMITIVE_TYPE_NAMES concode_elem_sep TypeMap TYPES_BY_NAME concode_elem_sep Map<Class<?>,String> SHORT_NAMES_BY_TYPE concode_elem_sep Class<?>[] EMPTY_CLASS_ARRAY concode_field_sep Class<?> getPrimitiveTypeFor concode_elem_sep Map<String,List<Method>> asMethodGroupsByTypeName concode_elem_sep Map<Class<?>,String> getClassShortNames concode_elem_sep Method methodFor concode_elem_sep Class<?> getTypeFor concode_elem_sep String asShortestName concode_elem_sep String withoutPackageName", "code_tokens": ["Map", "<", "Class", "<", "?", ">", ",", "String", ">", "function", "(", ")", "{", "Map", "<", "Class", "<", "?", ">", ",", "String", ">", "loc0", "=", "new", "HashMap", "<", ">", "(", ")", ";", "loc0", ".", "putAll", "(", "PRIMITIVE_TYPE_NAMES", ".", "asInverseWithShortName", "(", ")", ")", ";", "loc0", ".", "putAll", "(", "TYPES_BY_NAME", ".", "asInverseWithShortName", "(", ")", ")", ";", "return", "loc0", ";", "}"], "nl_tokens": ["return", "a", "map", "of", "all", "the", "short", "names", "of", "classes", "we", "maintain", "mappings", "for", ".", "the", "names", "are", "keyed", "by", "the", "classes", "themselves", ".", "concode_field_sep", "TypeMap", "PRIMITIVE_TYPE_NAMES", "concode_elem_sep", "TypeMap", "TYPES_BY_NAME", "concode_elem_sep", "Map", "<", "Class", "<", "?", ">", ",", "String", ">", "SHORT_NAMES_BY_TYPE", "concode_elem_sep", "Class", "<", "?", ">", "[", "]", "EMPTY_CLASS_ARRAY", "concode_field_sep", "Class", "<", "?", ">", "getPrimitiveTypeFor", "concode_elem_sep", "Map", "<", "String", ",", "List", "<", "Method", ">>", "asMethodGroupsByTypeName", "concode_elem_sep", "Map", "<", "Class", "<", "?", ">", ",", "String", ">", "getClassShortNames", "concode_elem_sep", "Method", "methodFor", "concode_elem_sep", "Class", "<", "?", ">", "getTypeFor", "concode_elem_sep", "String", "asShortestName", "concode_elem_sep", "String", "withoutPackageName"]}
{"code": "int function ( ) { return offset ; }", "nl": "gets the offset of the data stored in this datagram packet . concode_field_sep byte[] data concode_elem_sep int offset concode_elem_sep int length concode_elem_sep ServiceID serviceID concode_elem_sep int capacity concode_elem_sep InetAddress address concode_field_sep void setServiceID concode_elem_sep ServiceID getServiceID concode_elem_sep void setLengthOnly concode_elem_sep void setLength concode_elem_sep void setAddress concode_elem_sep void setData concode_elem_sep void setData concode_elem_sep SocketAddress getSocketAddress concode_elem_sep int getLength concode_elem_sep InetAddress getAddress concode_elem_sep void setSocketAddress concode_elem_sep byte[] getData concode_elem_sep int getCapacity", "code_tokens": ["int", "function", "(", ")", "{", "return", "offset", ";", "}"], "nl_tokens": ["gets", "the", "offset", "of", "the", "data", "stored", "in", "this", "datagram", "packet", ".", "concode_field_sep", "byte", "[", "]", "data", "concode_elem_sep", "int", "offset", "concode_elem_sep", "int", "length", "concode_elem_sep", "ServiceID", "serviceID", "concode_elem_sep", "int", "capacity", "concode_elem_sep", "InetAddress", "address", "concode_field_sep", "void", "setServiceID", "concode_elem_sep", "ServiceID", "getServiceID", "concode_elem_sep", "void", "setLengthOnly", "concode_elem_sep", "void", "setLength", "concode_elem_sep", "void", "setAddress", "concode_elem_sep", "void", "setData", "concode_elem_sep", "void", "setData", "concode_elem_sep", "SocketAddress", "getSocketAddress", "concode_elem_sep", "int", "getLength", "concode_elem_sep", "InetAddress", "getAddress", "concode_elem_sep", "void", "setSocketAddress", "concode_elem_sep", "byte", "[", "]", "getData", "concode_elem_sep", "int", "getCapacity"]}
{"code": "String function ( ) { return mAlias ; }", "nl": "the alias associated with this certificate . concode_field_sep X509Certificate mCert concode_elem_sep String mAlias concode_elem_sep String mSubjectSecondary concode_elem_sep String mSubjectPrimary concode_elem_sep String mString concode_field_sep String getSubjectPrimary concode_elem_sep X509Certificate getCertificate concode_elem_sep List<String> getSubjectAltNames concode_elem_sep String toString concode_elem_sep int compareTo concode_elem_sep String getSubjectSecondary", "code_tokens": ["String", "function", "(", ")", "{", "return", "mAlias", ";", "}"], "nl_tokens": ["the", "alias", "associated", "with", "this", "certificate", ".", "concode_field_sep", "X509Certificate", "mCert", "concode_elem_sep", "String", "mAlias", "concode_elem_sep", "String", "mSubjectSecondary", "concode_elem_sep", "String", "mSubjectPrimary", "concode_elem_sep", "String", "mString", "concode_field_sep", "String", "getSubjectPrimary", "concode_elem_sep", "X509Certificate", "getCertificate", "concode_elem_sep", "List", "<", "String", ">", "getSubjectAltNames", "concode_elem_sep", "String", "toString", "concode_elem_sep", "int", "compareTo", "concode_elem_sep", "String", "getSubjectSecondary"]}
{"code": "void function ( ) { clientSession . getSocket ( ) . flush ( ) ; }", "nl": "flush outstanding data and make sure it is acknowledged concode_field_sep org.slf4j.Logger logger concode_elem_sep UDPEndPoint clientEndpoint concode_elem_sep ClientSession clientSession concode_field_sep void sendBlocking concode_elem_sep int read concode_elem_sep UDTStatistics getStatistics concode_elem_sep Socket getSocket concode_elem_sep OutputStream getOutputStream concode_elem_sep UDPEndPoint getEndpoint concode_elem_sep void send concode_elem_sep InputStream getInputStream concode_elem_sep void connect concode_elem_sep void connect concode_elem_sep void shutdown", "code_tokens": ["void", "function", "(", ")", "{", "clientSession", ".", "getSocket", "(", ")", ".", "flush", "(", ")", ";", "}"], "nl_tokens": ["flush", "outstanding", "data", "and", "make", "sure", "it", "is", "acknowledged", "concode_field_sep", "org", ".", "slf4j", ".", "Logger", "logger", "concode_elem_sep", "UDPEndPoint", "clientEndpoint", "concode_elem_sep", "ClientSession", "clientSession", "concode_field_sep", "void", "sendBlocking", "concode_elem_sep", "int", "read", "concode_elem_sep", "UDTStatistics", "getStatistics", "concode_elem_sep", "Socket", "getSocket", "concode_elem_sep", "OutputStream", "getOutputStream", "concode_elem_sep", "UDPEndPoint", "getEndpoint", "concode_elem_sep", "void", "send", "concode_elem_sep", "InputStream", "getInputStream", "concode_elem_sep", "void", "connect", "concode_elem_sep", "void", "connect", "concode_elem_sep", "void", "shutdown"]}
{"code": "AuthenticationHolderEntity function ( ) { return authenticationHolder ; }", "nl": "the authentication in place when this token was created . concode_field_sep String QUERY_BY_VALUE concode_elem_sep String code concode_elem_sep String QUERY_EXPIRATION_BY_DATE concode_elem_sep String PARAM_DATE concode_elem_sep AuthenticationHolderEntity authenticationHolder concode_elem_sep Date expiration concode_elem_sep Long id concode_field_sep Date getExpiration concode_elem_sep void setCode concode_elem_sep void setId concode_elem_sep Long getId concode_elem_sep void setAuthenticationHolder concode_elem_sep void setExpiration concode_elem_sep String getCode", "code_tokens": ["AuthenticationHolderEntity", "function", "(", ")", "{", "return", "authenticationHolder", ";", "}"], "nl_tokens": ["the", "authentication", "in", "place", "when", "this", "token", "was", "created", ".", "concode_field_sep", "String", "QUERY_BY_VALUE", "concode_elem_sep", "String", "code", "concode_elem_sep", "String", "QUERY_EXPIRATION_BY_DATE", "concode_elem_sep", "String", "PARAM_DATE", "concode_elem_sep", "AuthenticationHolderEntity", "authenticationHolder", "concode_elem_sep", "Date", "expiration", "concode_elem_sep", "Long", "id", "concode_field_sep", "Date", "getExpiration", "concode_elem_sep", "void", "setCode", "concode_elem_sep", "void", "setId", "concode_elem_sep", "Long", "getId", "concode_elem_sep", "void", "setAuthenticationHolder", "concode_elem_sep", "void", "setExpiration", "concode_elem_sep", "String", "getCode"]}
{"code": "JSONWriter function ( ) { beforeValue ( ) ; mWriter . write ( JSON . LSQUARE ) ; mStack . push ( mState ) ; mState = new State ( ARRAY ) ; return this ; }", "nl": "array begin . concode_field_sep Writer mWriter concode_elem_sep String[] CONTROL_CHAR_MAP concode_elem_sep byte ARRAY concode_elem_sep byte OBJECT_VALUE concode_elem_sep int itemCount concode_elem_sep byte type concode_elem_sep byte UNKNOWN concode_elem_sep byte OBJECT concode_elem_sep State mState concode_elem_sep Stack<State> mStack concode_field_sep JSONWriter valueBoolean concode_elem_sep JSONWriter valueNull concode_elem_sep JSONWriter objectItem concode_elem_sep void beforeValue concode_elem_sep JSONWriter objectBegin concode_elem_sep JSONWriter objectEnd concode_elem_sep JSONWriter valueInt concode_elem_sep JSONWriter arrayEnd concode_elem_sep JSONWriter valueFloat concode_elem_sep JSONWriter valueString concode_elem_sep JSONWriter valueLong concode_elem_sep JSONWriter valueDouble concode_elem_sep String escape concode_elem_sep void beforeObjectItem", "code_tokens": ["JSONWriter", "function", "(", ")", "{", "beforeValue", "(", ")", ";", "mWriter", ".", "write", "(", "JSON", ".", "LSQUARE", ")", ";", "mStack", ".", "push", "(", "mState", ")", ";", "mState", "=", "new", "State", "(", "ARRAY", ")", ";", "return", "this", ";", "}"], "nl_tokens": ["array", "begin", ".", "concode_field_sep", "Writer", "mWriter", "concode_elem_sep", "String", "[", "]", "CONTROL_CHAR_MAP", "concode_elem_sep", "byte", "ARRAY", "concode_elem_sep", "byte", "OBJECT_VALUE", "concode_elem_sep", "int", "itemCount", "concode_elem_sep", "byte", "type", "concode_elem_sep", "byte", "UNKNOWN", "concode_elem_sep", "byte", "OBJECT", "concode_elem_sep", "State", "mState", "concode_elem_sep", "Stack", "<", "State", ">", "mStack", "concode_field_sep", "JSONWriter", "valueBoolean", "concode_elem_sep", "JSONWriter", "valueNull", "concode_elem_sep", "JSONWriter", "objectItem", "concode_elem_sep", "void", "beforeValue", "concode_elem_sep", "JSONWriter", "objectBegin", "concode_elem_sep", "JSONWriter", "objectEnd", "concode_elem_sep", "JSONWriter", "valueInt", "concode_elem_sep", "JSONWriter", "arrayEnd", "concode_elem_sep", "JSONWriter", "valueFloat", "concode_elem_sep", "JSONWriter", "valueString", "concode_elem_sep", "JSONWriter", "valueLong", "concode_elem_sep", "JSONWriter", "valueDouble", "concode_elem_sep", "String", "escape", "concode_elem_sep", "void", "beforeObjectItem"]}
{"code": "void function ( ) { this . map = ShadowStruggles . getInstance ( ) . getTiledMap ( mapName ) ; this . tileLayer = ( TiledMapTileLayer ) map . getLayers ( ) . get ( tileLayerString ) ; }", "nl": "retrieves the tiledmap and the current layer using the mapname and tilelayer attributes . concode_field_sep TiledMapTileLayer tileLayer concode_elem_sep String objectLayer concode_elem_sep String mapName concode_elem_sep boolean visited[][] concode_elem_sep TiledMap map concode_elem_sep String tileLayerString concode_field_sep void read concode_elem_sep void pathFinderVisited concode_elem_sep TiledMap getMap concode_elem_sep EventInGame getTouchingEvent concode_elem_sep int getHeightInTiles concode_elem_sep TiledMapTileLayer getTileLayer concode_elem_sep boolean blocked concode_elem_sep boolean blocked concode_elem_sep boolean checkTileCollision concode_elem_sep String getMapName concode_elem_sep boolean triggerEvent concode_elem_sep boolean touchEvent concode_elem_sep float getCost concode_elem_sep int getWidthInTiles concode_elem_sep String getObjectLayer concode_elem_sep void write concode_elem_sep void runAutomaticEvents", "code_tokens": ["void", "function", "(", ")", "{", "this", ".", "map", "=", "ShadowStruggles", ".", "getInstance", "(", ")", ".", "getTiledMap", "(", "mapName", ")", ";", "this", ".", "tileLayer", "=", "(", "TiledMapTileLayer", ")", "map", ".", "getLayers", "(", ")", ".", "get", "(", "tileLayerString", ")", ";", "}"], "nl_tokens": ["retrieves", "the", "tiledmap", "and", "the", "current", "layer", "using", "the", "mapname", "and", "tilelayer", "attributes", ".", "concode_field_sep", "TiledMapTileLayer", "tileLayer", "concode_elem_sep", "String", "objectLayer", "concode_elem_sep", "String", "mapName", "concode_elem_sep", "boolean", "visited", "[", "]", "[", "]", "concode_elem_sep", "TiledMap", "map", "concode_elem_sep", "String", "tileLayerString", "concode_field_sep", "void", "read", "concode_elem_sep", "void", "pathFinderVisited", "concode_elem_sep", "TiledMap", "getMap", "concode_elem_sep", "EventInGame", "getTouchingEvent", "concode_elem_sep", "int", "getHeightInTiles", "concode_elem_sep", "TiledMapTileLayer", "getTileLayer", "concode_elem_sep", "boolean", "blocked", "concode_elem_sep", "boolean", "blocked", "concode_elem_sep", "boolean", "checkTileCollision", "concode_elem_sep", "String", "getMapName", "concode_elem_sep", "boolean", "triggerEvent", "concode_elem_sep", "boolean", "touchEvent", "concode_elem_sep", "float", "getCost", "concode_elem_sep", "int", "getWidthInTiles", "concode_elem_sep", "String", "getObjectLayer", "concode_elem_sep", "void", "write", "concode_elem_sep", "void", "runAutomaticEvents"]}
{"code": "String function ( int arg0 , String [ ] arg1 ) { try { if ( arg1 [ arg0 ] . length ( ) == 0 ) { return NA_STRING ; } else { return arg1 [ arg0 ] ; } } catch ( ArrayIndexOutOfBoundsException loc0 ) { return NA_STRING ; } }", "nl": "if field is not found in header or data line , or is empty , it just returns empty field value `` na '' . concode_field_sep long NA_LONG concode_elem_sep String NA_STRING concode_elem_sep int NA_INT concode_elem_sep float NA_FLOAT concode_field_sep Float getPartPercentage concode_elem_sep Float getPartFloat concode_elem_sep String adjustDataLine concode_elem_sep Long getPartLong concode_elem_sep Float getPartFloat2 concode_elem_sep String getPartStringAllowEmpty concode_elem_sep Integer getPartInt", "code_tokens": ["String", "function", "(", "int", "arg0", ",", "String", "[", "]", "arg1", ")", "{", "try", "{", "if", "(", "arg1", "[", "arg0", "]", ".", "length", "(", ")", "==", "0", ")", "{", "return", "NA_STRING", ";", "}", "else", "{", "return", "arg1", "[", "arg0", "]", ";", "}", "}", "catch", "(", "ArrayIndexOutOfBoundsException", "loc0", ")", "{", "return", "NA_STRING", ";", "}", "}"], "nl_tokens": ["if", "field", "is", "not", "found", "in", "header", "or", "data", "line", ",", "or", "is", "empty", ",", "it", "just", "returns", "empty", "field", "value", "`", "`", "na", "''", ".", "concode_field_sep", "long", "NA_LONG", "concode_elem_sep", "String", "NA_STRING", "concode_elem_sep", "int", "NA_INT", "concode_elem_sep", "float", "NA_FLOAT", "concode_field_sep", "Float", "getPartPercentage", "concode_elem_sep", "Float", "getPartFloat", "concode_elem_sep", "String", "adjustDataLine", "concode_elem_sep", "Long", "getPartLong", "concode_elem_sep", "Float", "getPartFloat2", "concode_elem_sep", "String", "getPartStringAllowEmpty", "concode_elem_sep", "Integer", "getPartInt"]}
{"code": "void function ( ) { Mode loc0 = new Mode ( Mode . getDefault ( ) ) ; Assert . assertEquals ( Mode . Bits . ALL , loc0 . getOwnerBits ( ) ) ; Assert . assertEquals ( Mode . Bits . ALL , loc0 . getGroupBits ( ) ) ; Assert . assertEquals ( Mode . Bits . ALL , loc0 . getOtherBits ( ) ) ; Assert . assertEquals ( 0777 , loc0 . toShort ( ) ) ; }", "nl": "tests the mode #mode mode constructor . concode_field_sep ExpectedException mThrown concode_field_sep void umaskExceedLength concode_elem_sep void setOwnerBits concode_elem_sep void umask concode_elem_sep void fromShort concode_elem_sep void equals concode_elem_sep void setGroupBits concode_elem_sep void toStringTest concode_elem_sep void setOtherBits concode_elem_sep void after concode_elem_sep void umaskNotInteger concode_elem_sep void toShort concode_elem_sep void createNoAccess", "code_tokens": ["void", "function", "(", ")", "{", "Mode", "loc0", "=", "new", "Mode", "(", "Mode", ".", "getDefault", "(", ")", ")", ";", "Assert", ".", "assertEquals", "(", "Mode", ".", "Bits", ".", "ALL", ",", "loc0", ".", "getOwnerBits", "(", ")", ")", ";", "Assert", ".", "assertEquals", "(", "Mode", ".", "Bits", ".", "ALL", ",", "loc0", ".", "getGroupBits", "(", ")", ")", ";", "Assert", ".", "assertEquals", "(", "Mode", ".", "Bits", ".", "ALL", ",", "loc0", ".", "getOtherBits", "(", ")", ")", ";", "Assert", ".", "assertEquals", "(", "0", "777", ",", "loc0", ".", "toShort", "(", ")", ")", ";", "}"], "nl_tokens": ["tests", "the", "mode", "#mode mode constructor . concode_field_sep ExpectedException mThrown concode_field_sep void umaskExceedLength concode_elem_sep void setOwnerBits concode_elem_sep void umask concode_elem_sep void fromShort concode_elem_sep void equals concode_elem_sep void setGroupBits concode_elem_sep void toStringTest concode_elem_sep void setOtherBits concode_elem_sep void after concode_elem_sep void umaskNotInteger concode_elem_sep void toShort concode_elem_sep void createNoAccess"]}
{"code": "String function ( ) { return \"srini_string\" + \"srini_string\" + \"srini_string\" + \"srini_string\" + \"srini_string\" ; }", "nl": "gets the elementstylingorder attribute of the selector class concode_field_sep int CHILD_AXIS concode_elem_sep int HOVER_PSEUDOCLASS concode_elem_sep int selectorID concode_elem_sep Selector siblingSelector concode_elem_sep String _name concode_elem_sep int _axis concode_elem_sep int FOCUS_PSEUDOCLASS concode_elem_sep int _pc concode_elem_sep int ACTIVE_PSEUDOCLASS concode_elem_sep int selectorCount concode_elem_sep int DESCENDANT_AXIS concode_elem_sep int VISITED_PSEUDOCLASS concode_elem_sep Ruleset _parent concode_elem_sep int IMMEDIATE_SIBLING_AXIS concode_elem_sep int _specificityD concode_elem_sep String _pe concode_elem_sep int _specificityC concode_elem_sep int _specificityB concode_elem_sep Selector chainedSelector concode_elem_sep int _pos concode_elem_sep String _namespaceURI concode_elem_sep java.util.List conditions concode_field_sep void setName concode_elem_sep void addClassCondition concode_elem_sep void addAttributeSubstringCondition concode_elem_sep void addNthChildCondition concode_elem_sep void setPseudoElement concode_elem_sep void addAttributeMatchesListCondition concode_elem_sep void addAttributeEqualsCondition concode_elem_sep void addCondition concode_elem_sep void addEvenChildCondition concode_elem_sep void addIDCondition concode_elem_sep void addAttributePrefixCondition concode_elem_sep void setPos concode_elem_sep void addLinkCondition concode_elem_sep void addLastChildCondition concode_elem_sep boolean matchesDynamic concode_elem_sep void addLangCondition concode_elem_sep void setChainedSelector concode_elem_sep void setNamespaceURI concode_elem_sep int getSpecificityD concode_elem_sep void addUnsupportedCondition concode_elem_sep int getSpecificityC concode_elem_sep Selector getChainedSelector concode_elem_sep int getSpecificityB concode_elem_sep void setParent concode_elem_sep void addAttributeExistsCondition concode_elem_sep void addFirstChildCondition concode_elem_sep void setSiblingSelector concode_elem_sep void addAttributeSuffixCondition concode_elem_sep int getSelectorID concode_elem_sep int getAxis concode_elem_sep void setAxis concode_elem_sep void addAttributeMatchesFirstPartCondition concode_elem_sep String getPseudoElement concode_elem_sep Ruleset getRuleset concode_elem_sep boolean matches concode_elem_sep void addOddChildCondition concode_elem_sep void setPseudoClass concode_elem_sep boolean isPseudoClass concode_elem_sep String getOrder concode_elem_sep Object getAppropriateSibling concode_elem_sep void setSpecificityB concode_elem_sep void setSpecificityC concode_elem_sep void setSpecificityD", "code_tokens": ["String", "function", "(", ")", "{", "return", "\"srini_string\"", "+", "\"srini_string\"", "+", "\"srini_string\"", "+", "\"srini_string\"", "+", "\"srini_string\"", ";", "}"], "nl_tokens": ["gets", "the", "elementstylingorder", "attribute", "of", "the", "selector", "class", "concode_field_sep", "int", "CHILD_AXIS", "concode_elem_sep", "int", "HOVER_PSEUDOCLASS", "concode_elem_sep", "int", "selectorID", "concode_elem_sep", "Selector", "siblingSelector", "concode_elem_sep", "String", "_name", "concode_elem_sep", "int", "_axis", "concode_elem_sep", "int", "FOCUS_PSEUDOCLASS", "concode_elem_sep", "int", "_pc", "concode_elem_sep", "int", "ACTIVE_PSEUDOCLASS", "concode_elem_sep", "int", "selectorCount", "concode_elem_sep", "int", "DESCENDANT_AXIS", "concode_elem_sep", "int", "VISITED_PSEUDOCLASS", "concode_elem_sep", "Ruleset", "_parent", "concode_elem_sep", "int", "IMMEDIATE_SIBLING_AXIS", "concode_elem_sep", "int", "_specificityD", "concode_elem_sep", "String", "_pe", "concode_elem_sep", "int", "_specificityC", "concode_elem_sep", "int", "_specificityB", "concode_elem_sep", "Selector", "chainedSelector", "concode_elem_sep", "int", "_pos", "concode_elem_sep", "String", "_namespaceURI", "concode_elem_sep", "java", ".", "util", ".", "List", "conditions", "concode_field_sep", "void", "setName", "concode_elem_sep", "void", "addClassCondition", "concode_elem_sep", "void", "addAttributeSubstringCondition", "concode_elem_sep", "void", "addNthChildCondition", "concode_elem_sep", "void", "setPseudoElement", "concode_elem_sep", "void", "addAttributeMatchesListCondition", "concode_elem_sep", "void", "addAttributeEqualsCondition", "concode_elem_sep", "void", "addCondition", "concode_elem_sep", "void", "addEvenChildCondition", "concode_elem_sep", "void", "addIDCondition", "concode_elem_sep", "void", "addAttributePrefixCondition", "concode_elem_sep", "void", "setPos", "concode_elem_sep", "void", "addLinkCondition", "concode_elem_sep", "void", "addLastChildCondition", "concode_elem_sep", "boolean", "matchesDynamic", "concode_elem_sep", "void", "addLangCondition", "concode_elem_sep", "void", "setChainedSelector", "concode_elem_sep", "void", "setNamespaceURI", "concode_elem_sep", "int", "getSpecificityD", "concode_elem_sep", "void", "addUnsupportedCondition", "concode_elem_sep", "int", "getSpecificityC", "concode_elem_sep", "Selector", "getChainedSelector", "concode_elem_sep", "int", "getSpecificityB", "concode_elem_sep", "void", "setParent", "concode_elem_sep", "void", "addAttributeExistsCondition", "concode_elem_sep", "void", "addFirstChildCondition", "concode_elem_sep", "void", "setSiblingSelector", "concode_elem_sep", "void", "addAttributeSuffixCondition", "concode_elem_sep", "int", "getSelectorID", "concode_elem_sep", "int", "getAxis", "concode_elem_sep", "void", "setAxis", "concode_elem_sep", "void", "addAttributeMatchesFirstPartCondition", "concode_elem_sep", "String", "getPseudoElement", "concode_elem_sep", "Ruleset", "getRuleset", "concode_elem_sep", "boolean", "matches", "concode_elem_sep", "void", "addOddChildCondition", "concode_elem_sep", "void", "setPseudoClass", "concode_elem_sep", "boolean", "isPseudoClass", "concode_elem_sep", "String", "getOrder", "concode_elem_sep", "Object", "getAppropriateSibling", "concode_elem_sep", "void", "setSpecificityB", "concode_elem_sep", "void", "setSpecificityC", "concode_elem_sep", "void", "setSpecificityD"]}
{"code": "MetadataEditorCompat function ( int arg0 , Bitmap arg1 ) { if ( HAS_REMOTE_CONTROL_APIS ) { ( ( RemoteControlClient . MetadataEditor ) mActualMetadataEditor ) . putBitmap ( arg0 , arg1 ) ; } return this ; }", "nl": "sets the album / artwork picture to be displayed on the remote control . concode_field_sep boolean HAS_REMOTE_CONTROL_APIS concode_elem_sep Object mActualMetadataEditor concode_elem_sep int METADATA_KEY_ARTWORK concode_elem_sep Object mActualRemoteControlClient concode_field_sep void setPlaybackState concode_elem_sep void apply concode_elem_sep void removeFromMediaRouter concode_elem_sep MetadataEditorCompat putString concode_elem_sep void clear concode_elem_sep void addToMediaRouter concode_elem_sep Object getActualRemoteControlClientObject concode_elem_sep MetadataEditorCompat putLong concode_elem_sep MetadataEditorCompat editMetadata concode_elem_sep void setTransportControlFlags", "code_tokens": ["MetadataEditorCompat", "function", "(", "int", "arg0", ",", "Bitmap", "arg1", ")", "{", "if", "(", "HAS_REMOTE_CONTROL_APIS", ")", "{", "(", "(", "RemoteControlClient", ".", "MetadataEditor", ")", "mActualMetadataEditor", ")", ".", "putBitmap", "(", "arg0", ",", "arg1", ")", ";", "}", "return", "this", ";", "}"], "nl_tokens": ["sets", "the", "album", "/", "artwork", "picture", "to", "be", "displayed", "on", "the", "remote", "control", ".", "concode_field_sep", "boolean", "HAS_REMOTE_CONTROL_APIS", "concode_elem_sep", "Object", "mActualMetadataEditor", "concode_elem_sep", "int", "METADATA_KEY_ARTWORK", "concode_elem_sep", "Object", "mActualRemoteControlClient", "concode_field_sep", "void", "setPlaybackState", "concode_elem_sep", "void", "apply", "concode_elem_sep", "void", "removeFromMediaRouter", "concode_elem_sep", "MetadataEditorCompat", "putString", "concode_elem_sep", "void", "clear", "concode_elem_sep", "void", "addToMediaRouter", "concode_elem_sep", "Object", "getActualRemoteControlClientObject", "concode_elem_sep", "MetadataEditorCompat", "putLong", "concode_elem_sep", "MetadataEditorCompat", "editMetadata", "concode_elem_sep", "void", "setTransportControlFlags"]}
{"code": "float function ( int arg0 ) { return originLat - arg0 / dotsPerDeg ; }", "nl": "computes the corresponding latitude for a given view y coordinate . concode_field_sep float unitsPerInch concode_elem_sep float dotsPerInch concode_elem_sep float originLat concode_elem_sep float dotsPerDeg concode_elem_sep float originLon concode_elem_sep float lonCorr concode_field_sep float getDotsPerDeg concode_elem_sep void adjustTransformation concode_elem_sep void setScreenResolution concode_elem_sep void adjust concode_elem_sep int x concode_elem_sep int y concode_elem_sep float getDotsPerUnit concode_elem_sep void zoom concode_elem_sep float lon concode_elem_sep float computeScale", "code_tokens": ["float", "function", "(", "int", "arg0", ")", "{", "return", "originLat", "-", "arg0", "/", "dotsPerDeg", ";", "}"], "nl_tokens": ["computes", "the", "corresponding", "latitude", "for", "a", "given", "view", "y", "coordinate", ".", "concode_field_sep", "float", "unitsPerInch", "concode_elem_sep", "float", "dotsPerInch", "concode_elem_sep", "float", "originLat", "concode_elem_sep", "float", "dotsPerDeg", "concode_elem_sep", "float", "originLon", "concode_elem_sep", "float", "lonCorr", "concode_field_sep", "float", "getDotsPerDeg", "concode_elem_sep", "void", "adjustTransformation", "concode_elem_sep", "void", "setScreenResolution", "concode_elem_sep", "void", "adjust", "concode_elem_sep", "int", "x", "concode_elem_sep", "int", "y", "concode_elem_sep", "float", "getDotsPerUnit", "concode_elem_sep", "void", "zoom", "concode_elem_sep", "float", "lon", "concode_elem_sep", "float", "computeScale"]}
{"code": "int function ( ) { setInputMode ( ) ; return this . buffer . remaining ( ) ; }", "nl": "returns available capacity of this buffer . concode_field_sep int mode concode_elem_sep ByteBuffer buffer concode_elem_sep ByteBufferAllocator allocator concode_elem_sep int OUTPUT_MODE concode_elem_sep int INPUT_MODE concode_field_sep void expandCapacity concode_elem_sep void setOutputMode concode_elem_sep void expand concode_elem_sep void setInputMode concode_elem_sep boolean hasData concode_elem_sep int length concode_elem_sep void clear concode_elem_sep String toString concode_elem_sep int getMode concode_elem_sep void ensureCapacity concode_elem_sep int capacity", "code_tokens": ["int", "function", "(", ")", "{", "setInputMode", "(", ")", ";", "return", "this", ".", "buffer", ".", "remaining", "(", ")", ";", "}"], "nl_tokens": ["returns", "available", "capacity", "of", "this", "buffer", ".", "concode_field_sep", "int", "mode", "concode_elem_sep", "ByteBuffer", "buffer", "concode_elem_sep", "ByteBufferAllocator", "allocator", "concode_elem_sep", "int", "OUTPUT_MODE", "concode_elem_sep", "int", "INPUT_MODE", "concode_field_sep", "void", "expandCapacity", "concode_elem_sep", "void", "setOutputMode", "concode_elem_sep", "void", "expand", "concode_elem_sep", "void", "setInputMode", "concode_elem_sep", "boolean", "hasData", "concode_elem_sep", "int", "length", "concode_elem_sep", "void", "clear", "concode_elem_sep", "String", "toString", "concode_elem_sep", "int", "getMode", "concode_elem_sep", "void", "ensureCapacity", "concode_elem_sep", "int", "capacity"]}
{"code": "void function ( ) { long loc0 = 1 ; long loc1 = IdUtils . createFileId ( loc0 ) ; Assert . assertNotEquals ( - 1 , loc1 ) ; }", "nl": "tests if output of idutils #createfileid long is valid . concode_field_sep PlaceHolder placeHolder concode_field_sep void getRandomNonNegativeLong concode_elem_sep void createRpcId", "code_tokens": ["void", "function", "(", ")", "{", "long", "loc0", "=", "1", ";", "long", "loc1", "=", "IdUtils", ".", "createFileId", "(", "loc0", ")", ";", "Assert", ".", "assertNotEquals", "(", "-", "1", ",", "loc1", ")", ";", "}"], "nl_tokens": ["tests", "if", "output", "of", "idutils", "#createfileid long is valid . concode_field_sep PlaceHolder placeHolder concode_field_sep void getRandomNonNegativeLong concode_elem_sep void createRpcId"]}
{"code": "Date function ( ) { String loc0 = \"srini_string\" ; if ( this . request . getHeader ( loc0 ) == null ) return null ; return new Date ( this . request . getDateHeader ( loc0 ) ) ; }", "nl": "check if the client requested a date-based conditional operation . concode_field_sep int status concode_elem_sep int INFINITY concode_elem_sep HttpServletRequest request concode_elem_sep URI base concode_elem_sep HttpServletResponse response concode_field_sep URI lookup concode_elem_sep int getDepth concode_elem_sep InputStream read concode_elem_sep String getNormalizedPath concode_elem_sep URI getDestination concode_elem_sep String getMethod concode_elem_sep int getStatus concode_elem_sep boolean hasRequestBody concode_elem_sep void setStatus concode_elem_sep void setHeader concode_elem_sep boolean getOverwrite concode_elem_sep String getOriginalPath concode_elem_sep void setContentType concode_elem_sep OutputStream write concode_elem_sep PrintWriter write", "code_tokens": ["Date", "function", "(", ")", "{", "String", "loc0", "=", "\"srini_string\"", ";", "if", "(", "this", ".", "request", ".", "getHeader", "(", "loc0", ")", "==", "null", ")", "return", "null", ";", "return", "new", "Date", "(", "this", ".", "request", ".", "getDateHeader", "(", "loc0", ")", ")", ";", "}"], "nl_tokens": ["check", "if", "the", "client", "requested", "a", "date", "-", "based", "conditional", "operation", ".", "concode_field_sep", "int", "status", "concode_elem_sep", "int", "INFINITY", "concode_elem_sep", "HttpServletRequest", "request", "concode_elem_sep", "URI", "base", "concode_elem_sep", "HttpServletResponse", "response", "concode_field_sep", "URI", "lookup", "concode_elem_sep", "int", "getDepth", "concode_elem_sep", "InputStream", "read", "concode_elem_sep", "String", "getNormalizedPath", "concode_elem_sep", "URI", "getDestination", "concode_elem_sep", "String", "getMethod", "concode_elem_sep", "int", "getStatus", "concode_elem_sep", "boolean", "hasRequestBody", "concode_elem_sep", "void", "setStatus", "concode_elem_sep", "void", "setHeader", "concode_elem_sep", "boolean", "getOverwrite", "concode_elem_sep", "String", "getOriginalPath", "concode_elem_sep", "void", "setContentType", "concode_elem_sep", "OutputStream", "write", "concode_elem_sep", "PrintWriter", "write"]}
{"code": "void function ( Map < String , ThreadingParameters > arg0 ) { threadingParametersMap = arg0 ; }", "nl": "this call sets the threadingparameters for a jettyhttpserverengine concode_field_sep Logger LOG concode_elem_sep Bus bus concode_elem_sep Container.Listener mBeanContainer concode_elem_sep ConcurrentHashMap<Integer,JettyHTTPServerEngine> portMap concode_elem_sep ThreadingParameters fallbackThreadingParameters concode_elem_sep int FALLBACK_THREADING_PARAMS_KEY concode_elem_sep Map<String,ThreadingParameters> threadingParametersMap concode_elem_sep Map<String,TLSServerParameters> tlsParametersMap concode_elem_sep BusLifeCycleManager lifeCycleManager concode_field_sep void setTlsServerParametersMap concode_elem_sep MBeanServer getMBeanServer concode_elem_sep Bus getBus concode_elem_sep JettyHTTPServerEngine retrieveJettyHTTPServerEngine concode_elem_sep void setEnginesList concode_elem_sep void initComplete concode_elem_sep void initComplete concode_elem_sep void destroyForPort concode_elem_sep Map<String,ThreadingParameters> getThreadingParametersMap concode_elem_sep boolean isJetty8 concode_elem_sep void postShutdown concode_elem_sep void postShutdown concode_elem_sep Container.Listener getMBeanContainer concode_elem_sep JettyHTTPServerEngine getOrCreate concode_elem_sep Map<String,TLSServerParameters> getTlsServerParametersMap concode_elem_sep JettyHTTPServerEngine createJettyHTTPServerEngine concode_elem_sep JettyHTTPServerEngine createJettyHTTPServerEngine concode_elem_sep void setBus concode_elem_sep void preShutdown concode_elem_sep void preShutdown concode_elem_sep void setTLSServerParametersForPort concode_elem_sep void setTLSServerParametersForPort", "code_tokens": ["void", "function", "(", "Map", "<", "String", ",", "ThreadingParameters", ">", "arg0", ")", "{", "threadingParametersMap", "=", "arg0", ";", "}"], "nl_tokens": ["this", "call", "sets", "the", "threadingparameters", "for", "a", "jettyhttpserverengine", "concode_field_sep", "Logger", "LOG", "concode_elem_sep", "Bus", "bus", "concode_elem_sep", "Container", ".", "Listener", "mBeanContainer", "concode_elem_sep", "ConcurrentHashMap", "<", "Integer", ",", "JettyHTTPServerEngine", ">", "portMap", "concode_elem_sep", "ThreadingParameters", "fallbackThreadingParameters", "concode_elem_sep", "int", "FALLBACK_THREADING_PARAMS_KEY", "concode_elem_sep", "Map", "<", "String", ",", "ThreadingParameters", ">", "threadingParametersMap", "concode_elem_sep", "Map", "<", "String", ",", "TLSServerParameters", ">", "tlsParametersMap", "concode_elem_sep", "BusLifeCycleManager", "lifeCycleManager", "concode_field_sep", "void", "setTlsServerParametersMap", "concode_elem_sep", "MBeanServer", "getMBeanServer", "concode_elem_sep", "Bus", "getBus", "concode_elem_sep", "JettyHTTPServerEngine", "retrieveJettyHTTPServerEngine", "concode_elem_sep", "void", "setEnginesList", "concode_elem_sep", "void", "initComplete", "concode_elem_sep", "void", "initComplete", "concode_elem_sep", "void", "destroyForPort", "concode_elem_sep", "Map", "<", "String", ",", "ThreadingParameters", ">", "getThreadingParametersMap", "concode_elem_sep", "boolean", "isJetty8", "concode_elem_sep", "void", "postShutdown", "concode_elem_sep", "void", "postShutdown", "concode_elem_sep", "Container", ".", "Listener", "getMBeanContainer", "concode_elem_sep", "JettyHTTPServerEngine", "getOrCreate", "concode_elem_sep", "Map", "<", "String", ",", "TLSServerParameters", ">", "getTlsServerParametersMap", "concode_elem_sep", "JettyHTTPServerEngine", "createJettyHTTPServerEngine", "concode_elem_sep", "JettyHTTPServerEngine", "createJettyHTTPServerEngine", "concode_elem_sep", "void", "setBus", "concode_elem_sep", "void", "preShutdown", "concode_elem_sep", "void", "preShutdown", "concode_elem_sep", "void", "setTLSServerParametersForPort", "concode_elem_sep", "void", "setTLSServerParametersForPort"]}
{"code": "boolean function ( byte arg0 ) { return HTTP_CONTROLS [ arg0 ] ; }", "nl": "determines whether a specified us-ascii character is an http control character concode_field_sep byte QS concode_elem_sep byte CR concode_elem_sep byte COLON concode_elem_sep byte HT concode_elem_sep byte FOWARD_SLASH concode_elem_sep byte PERCENT concode_elem_sep byte LF concode_elem_sep String US_ASCII_CHARSET_NAME concode_elem_sep byte BACK_SLASH concode_elem_sep byte AMP concode_elem_sep byte COMMA concode_elem_sep int[] HEX_DEC concode_elem_sep byte PLUS concode_elem_sep boolean[] HTTP_CONTROLS concode_elem_sep byte SEMI_COLON concode_elem_sep byte[] CRLF_BYTES concode_elem_sep byte SPACE concode_elem_sep String DEFAULT_CHARACTER_ENCODING concode_elem_sep byte EQUALS concode_elem_sep byte QUOTE concode_elem_sep boolean[] HTTP_SEPARATORS concode_field_sep int hexAsciiToDecimal concode_elem_sep void appendCRLF concode_elem_sep void pushBack concode_elem_sep void appendString concode_elem_sep boolean isHttpSeparator concode_elem_sep boolean isHex concode_elem_sep byte[] getAsciiBytes concode_elem_sep boolean isWhiteSpace", "code_tokens": ["boolean", "function", "(", "byte", "arg0", ")", "{", "return", "HTTP_CONTROLS", "[", "arg0", "]", ";", "}"], "nl_tokens": ["determines", "whether", "a", "specified", "us", "-", "ascii", "character", "is", "an", "http", "control", "character", "concode_field_sep", "byte", "QS", "concode_elem_sep", "byte", "CR", "concode_elem_sep", "byte", "COLON", "concode_elem_sep", "byte", "HT", "concode_elem_sep", "byte", "FOWARD_SLASH", "concode_elem_sep", "byte", "PERCENT", "concode_elem_sep", "byte", "LF", "concode_elem_sep", "String", "US_ASCII_CHARSET_NAME", "concode_elem_sep", "byte", "BACK_SLASH", "concode_elem_sep", "byte", "AMP", "concode_elem_sep", "byte", "COMMA", "concode_elem_sep", "int", "[", "]", "HEX_DEC", "concode_elem_sep", "byte", "PLUS", "concode_elem_sep", "boolean", "[", "]", "HTTP_CONTROLS", "concode_elem_sep", "byte", "SEMI_COLON", "concode_elem_sep", "byte", "[", "]", "CRLF_BYTES", "concode_elem_sep", "byte", "SPACE", "concode_elem_sep", "String", "DEFAULT_CHARACTER_ENCODING", "concode_elem_sep", "byte", "EQUALS", "concode_elem_sep", "byte", "QUOTE", "concode_elem_sep", "boolean", "[", "]", "HTTP_SEPARATORS", "concode_field_sep", "int", "hexAsciiToDecimal", "concode_elem_sep", "void", "appendCRLF", "concode_elem_sep", "void", "pushBack", "concode_elem_sep", "void", "appendString", "concode_elem_sep", "boolean", "isHttpSeparator", "concode_elem_sep", "boolean", "isHex", "concode_elem_sep", "byte", "[", "]", "getAsciiBytes", "concode_elem_sep", "boolean", "isWhiteSpace"]}
{"code": "void function ( ) { }", "nl": "this method is called before the connection is disconnected . implementations should add any additional operations before the connection is disconnected . concode_field_sep Pattern FRAME_SIZE_EXCEPTION_PATTERN concode_elem_sep boolean mConnected concode_elem_sep TProtocol mProtocol concode_elem_sep String mMode concode_elem_sep long mServiceVersion concode_elem_sep InetSocketAddress mAddress concode_elem_sep TransportProvider mTransportProvider concode_elem_sep Logger LOG concode_elem_sep int RPC_MAX_NUM_RETRY concode_elem_sep boolean mClosed concode_field_sep void disconnect concode_elem_sep void afterDisconnect concode_elem_sep void afterConnect concode_elem_sep void checkVersion concode_elem_sep String getServiceName concode_elem_sep boolean isConnected concode_elem_sep AlluxioService.Client getClient concode_elem_sep V call concode_elem_sep V call concode_elem_sep V retryRPC concode_elem_sep V retryRPC concode_elem_sep long getServiceVersion concode_elem_sep void resetConnection concode_elem_sep InetSocketAddress getAddress concode_elem_sep void close concode_elem_sep void connect", "code_tokens": ["void", "function", "(", ")", "{", "}"], "nl_tokens": ["this", "method", "is", "called", "before", "the", "connection", "is", "disconnected", ".", "implementations", "should", "add", "any", "additional", "operations", "before", "the", "connection", "is", "disconnected", ".", "concode_field_sep", "Pattern", "FRAME_SIZE_EXCEPTION_PATTERN", "concode_elem_sep", "boolean", "mConnected", "concode_elem_sep", "TProtocol", "mProtocol", "concode_elem_sep", "String", "mMode", "concode_elem_sep", "long", "mServiceVersion", "concode_elem_sep", "InetSocketAddress", "mAddress", "concode_elem_sep", "TransportProvider", "mTransportProvider", "concode_elem_sep", "Logger", "LOG", "concode_elem_sep", "int", "RPC_MAX_NUM_RETRY", "concode_elem_sep", "boolean", "mClosed", "concode_field_sep", "void", "disconnect", "concode_elem_sep", "void", "afterDisconnect", "concode_elem_sep", "void", "afterConnect", "concode_elem_sep", "void", "checkVersion", "concode_elem_sep", "String", "getServiceName", "concode_elem_sep", "boolean", "isConnected", "concode_elem_sep", "AlluxioService", ".", "Client", "getClient", "concode_elem_sep", "V", "call", "concode_elem_sep", "V", "call", "concode_elem_sep", "V", "retryRPC", "concode_elem_sep", "V", "retryRPC", "concode_elem_sep", "long", "getServiceVersion", "concode_elem_sep", "void", "resetConnection", "concode_elem_sep", "InetSocketAddress", "getAddress", "concode_elem_sep", "void", "close", "concode_elem_sep", "void", "connect"]}
{"code": "String [ ] function ( ) { return dnsSeeds ; }", "nl": "returns dns names that when resolved , give ip addresses of active peers . concode_field_sep int INTERVAL concode_elem_sep String ID_UNITTESTNET concode_elem_sep long MAX_COINS concode_elem_sep int p2shHeader concode_elem_sep int PROTOCOL_VERSION concode_elem_sep BigInteger maxTarget concode_elem_sep int TARGET_SPACING concode_elem_sep String[] dnsSeeds concode_elem_sep String id concode_elem_sep int spendableCoinbaseDepth concode_elem_sep int dumpedPrivateKeyHeader concode_elem_sep int targetTimespan concode_elem_sep int TARGET_TIMESPAN concode_elem_sep String PAYMENT_PROTOCOL_ID_MAINNET concode_elem_sep int addressHeader concode_elem_sep Coin MAX_MONEY concode_elem_sep int bip32HeaderPriv concode_elem_sep byte[] alertSigningKey concode_elem_sep int[] acceptableAddressCodes concode_elem_sep int bip32HeaderPub concode_elem_sep String ID_MAINNET concode_elem_sep long packetMagic concode_elem_sep byte[] SATOSHI_KEY concode_elem_sep Block genesisBlock concode_elem_sep String PAYMENT_PROTOCOL_ID_TESTNET concode_elem_sep int subsidyDecreaseBlockCount concode_elem_sep int port concode_elem_sep String ID_TESTNET concode_elem_sep Map<Integer,Sha256Hash> checkpoints concode_elem_sep int interval concode_elem_sep String ID_REGTEST concode_elem_sep int BIP16_ENFORCE_TIME concode_field_sep NetworkParameters regTests concode_elem_sep boolean allowEmptyPeerChain concode_elem_sep int getDumpedPrivateKeyHeader concode_elem_sep NetworkParameters testNet2 concode_elem_sep int getBip32HeaderPub concode_elem_sep int getBip32HeaderPriv concode_elem_sep NetworkParameters testNet3 concode_elem_sep NetworkParameters unitTests concode_elem_sep String getId concode_elem_sep String getPaymentProtocolId concode_elem_sep int getAddressHeader concode_elem_sep int[] getAcceptableAddressCodes concode_elem_sep NetworkParameters prodNet concode_elem_sep NetworkParameters fromID concode_elem_sep int getTargetTimespan concode_elem_sep int hashCode concode_elem_sep int getSpendableCoinbaseDepth concode_elem_sep NetworkParameters testNet concode_elem_sep boolean isCheckpoint concode_elem_sep int getP2SHHeader concode_elem_sep int getInterval concode_elem_sep Block getGenesisBlock concode_elem_sep int getSubsidyDecreaseBlockCount concode_elem_sep Block createGenesis concode_elem_sep BigInteger getMaxTarget concode_elem_sep long getPacketMagic concode_elem_sep int getPort concode_elem_sep byte[] getAlertSigningKey concode_elem_sep boolean equals concode_elem_sep boolean passesCheckpoint concode_elem_sep NetworkParameters fromPmtProtocolID", "code_tokens": ["String", "[", "]", "function", "(", ")", "{", "return", "dnsSeeds", ";", "}"], "nl_tokens": ["returns", "dns", "names", "that", "when", "resolved", ",", "give", "ip", "addresses", "of", "active", "peers", ".", "concode_field_sep", "int", "INTERVAL", "concode_elem_sep", "String", "ID_UNITTESTNET", "concode_elem_sep", "long", "MAX_COINS", "concode_elem_sep", "int", "p2shHeader", "concode_elem_sep", "int", "PROTOCOL_VERSION", "concode_elem_sep", "BigInteger", "maxTarget", "concode_elem_sep", "int", "TARGET_SPACING", "concode_elem_sep", "String", "[", "]", "dnsSeeds", "concode_elem_sep", "String", "id", "concode_elem_sep", "int", "spendableCoinbaseDepth", "concode_elem_sep", "int", "dumpedPrivateKeyHeader", "concode_elem_sep", "int", "targetTimespan", "concode_elem_sep", "int", "TARGET_TIMESPAN", "concode_elem_sep", "String", "PAYMENT_PROTOCOL_ID_MAINNET", "concode_elem_sep", "int", "addressHeader", "concode_elem_sep", "Coin", "MAX_MONEY", "concode_elem_sep", "int", "bip32HeaderPriv", "concode_elem_sep", "byte", "[", "]", "alertSigningKey", "concode_elem_sep", "int", "[", "]", "acceptableAddressCodes", "concode_elem_sep", "int", "bip32HeaderPub", "concode_elem_sep", "String", "ID_MAINNET", "concode_elem_sep", "long", "packetMagic", "concode_elem_sep", "byte", "[", "]", "SATOSHI_KEY", "concode_elem_sep", "Block", "genesisBlock", "concode_elem_sep", "String", "PAYMENT_PROTOCOL_ID_TESTNET", "concode_elem_sep", "int", "subsidyDecreaseBlockCount", "concode_elem_sep", "int", "port", "concode_elem_sep", "String", "ID_TESTNET", "concode_elem_sep", "Map", "<", "Integer", ",", "Sha256Hash", ">", "checkpoints", "concode_elem_sep", "int", "interval", "concode_elem_sep", "String", "ID_REGTEST", "concode_elem_sep", "int", "BIP16_ENFORCE_TIME", "concode_field_sep", "NetworkParameters", "regTests", "concode_elem_sep", "boolean", "allowEmptyPeerChain", "concode_elem_sep", "int", "getDumpedPrivateKeyHeader", "concode_elem_sep", "NetworkParameters", "testNet2", "concode_elem_sep", "int", "getBip32HeaderPub", "concode_elem_sep", "int", "getBip32HeaderPriv", "concode_elem_sep", "NetworkParameters", "testNet3", "concode_elem_sep", "NetworkParameters", "unitTests", "concode_elem_sep", "String", "getId", "concode_elem_sep", "String", "getPaymentProtocolId", "concode_elem_sep", "int", "getAddressHeader", "concode_elem_sep", "int", "[", "]", "getAcceptableAddressCodes", "concode_elem_sep", "NetworkParameters", "prodNet", "concode_elem_sep", "NetworkParameters", "fromID", "concode_elem_sep", "int", "getTargetTimespan", "concode_elem_sep", "int", "hashCode", "concode_elem_sep", "int", "getSpendableCoinbaseDepth", "concode_elem_sep", "NetworkParameters", "testNet", "concode_elem_sep", "boolean", "isCheckpoint", "concode_elem_sep", "int", "getP2SHHeader", "concode_elem_sep", "int", "getInterval", "concode_elem_sep", "Block", "getGenesisBlock", "concode_elem_sep", "int", "getSubsidyDecreaseBlockCount", "concode_elem_sep", "Block", "createGenesis", "concode_elem_sep", "BigInteger", "getMaxTarget", "concode_elem_sep", "long", "getPacketMagic", "concode_elem_sep", "int", "getPort", "concode_elem_sep", "byte", "[", "]", "getAlertSigningKey", "concode_elem_sep", "boolean", "equals", "concode_elem_sep", "boolean", "passesCheckpoint", "concode_elem_sep", "NetworkParameters", "fromPmtProtocolID"]}
{"code": "void function ( Hessian2StreamingInput arg0 ) { }", "nl": "frees a hessian 2.0 deserializer concode_field_sep SerializerFactory _serializerFactory concode_elem_sep SerializerFactory _defaultSerializerFactory concode_elem_sep Logger log concode_elem_sep HessianFreeList<HessianInput> _freeHessianInput concode_elem_sep HessianFreeList<HessianOutput> _freeHessianOutput concode_elem_sep HessianFreeList<Hessian2Input> _freeHessian2Input concode_elem_sep HessianFreeList<Hessian2Output> _freeHessian2Output concode_field_sep Hessian2Input createHessian2Input concode_elem_sep Hessian2Output createHessian2Output concode_elem_sep Hessian2StreamingOutput createHessian2StreamingOutput concode_elem_sep void freeHessian2StreamingOutput concode_elem_sep void setSerializerFactory concode_elem_sep OutputStream createHessian2DebugOutput concode_elem_sep SerializerFactory getSerializerFactory concode_elem_sep Hessian2StreamingInput createHessian2StreamingInput concode_elem_sep void freeHessian2Output concode_elem_sep HessianOutput createHessianOutput concode_elem_sep HessianInput createHessianInput concode_elem_sep void freeHessian2Input", "code_tokens": ["void", "function", "(", "Hessian2StreamingInput", "arg0", ")", "{", "}"], "nl_tokens": ["frees", "a", "hessian", "2.0", "deserializer", "concode_field_sep", "SerializerFactory", "_serializerFactory", "concode_elem_sep", "SerializerFactory", "_defaultSerializerFactory", "concode_elem_sep", "Logger", "log", "concode_elem_sep", "HessianFreeList", "<", "HessianInput", ">", "_freeHessianInput", "concode_elem_sep", "HessianFreeList", "<", "HessianOutput", ">", "_freeHessianOutput", "concode_elem_sep", "HessianFreeList", "<", "Hessian2Input", ">", "_freeHessian2Input", "concode_elem_sep", "HessianFreeList", "<", "Hessian2Output", ">", "_freeHessian2Output", "concode_field_sep", "Hessian2Input", "createHessian2Input", "concode_elem_sep", "Hessian2Output", "createHessian2Output", "concode_elem_sep", "Hessian2StreamingOutput", "createHessian2StreamingOutput", "concode_elem_sep", "void", "freeHessian2StreamingOutput", "concode_elem_sep", "void", "setSerializerFactory", "concode_elem_sep", "OutputStream", "createHessian2DebugOutput", "concode_elem_sep", "SerializerFactory", "getSerializerFactory", "concode_elem_sep", "Hessian2StreamingInput", "createHessian2StreamingInput", "concode_elem_sep", "void", "freeHessian2Output", "concode_elem_sep", "HessianOutput", "createHessianOutput", "concode_elem_sep", "HessianInput", "createHessianInput", "concode_elem_sep", "void", "freeHessian2Input"]}
{"code": "boolean function ( MotionEvent arg0 ) { return ! view . onlyPenInput || ( view . onlyPenInput && ! Hardware . isPenEvent ( arg0 ) ) ; }", "nl": "whether to use the motionevent as finger touch concode_field_sep HandwriterView view concode_elem_sep RectF mRectF concode_elem_sep Rect mRect concode_field_sep boolean getOnlyPenInput concode_elem_sep float getScaledPenThickness concode_elem_sep boolean onTouchEvent concode_elem_sep Page getPage concode_elem_sep boolean getDoubleTapWhileWriting concode_elem_sep boolean getMoveGestureWhileWriting concode_elem_sep void drawPinchZoomPreview concode_elem_sep void destroy concode_elem_sep Transformation pinchZoomTransform concode_elem_sep void draw concode_elem_sep boolean useForWriting concode_elem_sep void redraw concode_elem_sep float pinchZoomScaleFactor concode_elem_sep void interrupt concode_elem_sep Context getContext concode_elem_sep int getMoveGestureMinDistance", "code_tokens": ["boolean", "function", "(", "MotionEvent", "arg0", ")", "{", "return", "!", "view", ".", "onlyPenInput", "|", "|", "(", "view", ".", "onlyPenInput", "&", "&", "!", "Hardware", ".", "isPenEvent", "(", "arg0", ")", ")", ";", "}"], "nl_tokens": ["whether", "to", "use", "the", "motionevent", "as", "finger", "touch", "concode_field_sep", "HandwriterView", "view", "concode_elem_sep", "RectF", "mRectF", "concode_elem_sep", "Rect", "mRect", "concode_field_sep", "boolean", "getOnlyPenInput", "concode_elem_sep", "float", "getScaledPenThickness", "concode_elem_sep", "boolean", "onTouchEvent", "concode_elem_sep", "Page", "getPage", "concode_elem_sep", "boolean", "getDoubleTapWhileWriting", "concode_elem_sep", "boolean", "getMoveGestureWhileWriting", "concode_elem_sep", "void", "drawPinchZoomPreview", "concode_elem_sep", "void", "destroy", "concode_elem_sep", "Transformation", "pinchZoomTransform", "concode_elem_sep", "void", "draw", "concode_elem_sep", "boolean", "useForWriting", "concode_elem_sep", "void", "redraw", "concode_elem_sep", "float", "pinchZoomScaleFactor", "concode_elem_sep", "void", "interrupt", "concode_elem_sep", "Context", "getContext", "concode_elem_sep", "int", "getMoveGestureMinDistance"]}
{"code": "WritableMap function ( @ Nullable String arg0 , String arg1 ) { WritableMap loc0 = Arguments . createMap ( ) ; loc0 . putString ( \"srini_string\" , arg1 ) ; if ( arg0 != null ) { loc0 . putString ( \"srini_string\" , arg0 ) ; } return loc0 ; }", "nl": "create error object to be passed back to the js callback . concode_field_sep PlaceHolder placeHolder concode_field_sep WritableMap getInvalidValueError concode_elem_sep WritableMap getDBError concode_elem_sep WritableMap getInvalidKeyError", "code_tokens": ["WritableMap", "function", "(", "@", "Nullable", "String", "arg0", ",", "String", "arg1", ")", "{", "WritableMap", "loc0", "=", "Arguments", ".", "createMap", "(", ")", ";", "loc0", ".", "putString", "(", "\"srini_string\"", ",", "arg1", ")", ";", "if", "(", "arg0", "!=", "null", ")", "{", "loc0", ".", "putString", "(", "\"srini_string\"", ",", "arg0", ")", ";", "}", "return", "loc0", ";", "}"], "nl_tokens": ["create", "error", "object", "to", "be", "passed", "back", "to", "the", "js", "callback", ".", "concode_field_sep", "PlaceHolder", "placeHolder", "concode_field_sep", "WritableMap", "getInvalidValueError", "concode_elem_sep", "WritableMap", "getDBError", "concode_elem_sep", "WritableMap", "getInvalidKeyError"]}
{"code": "int function ( int arg0 , int arg1 ) { return ( int ) ( toLong ( arg0 ) / toLong ( arg1 ) ) ; }", "nl": "returns dividend / divisor , where the dividend and divisor are treated as unsigned 32-bit quantities . concode_field_sep long INT_MASK concode_field_sep int compare concode_elem_sep int compare concode_elem_sep int saturatedCast concode_elem_sep long toLong concode_elem_sep int max concode_elem_sep int decode concode_elem_sep int parseUnsignedInt concode_elem_sep int parseUnsignedInt concode_elem_sep int min concode_elem_sep Comparator<int[]> lexicographicalComparator concode_elem_sep int checkedCast concode_elem_sep String toString concode_elem_sep String toString concode_elem_sep String toString concode_elem_sep String join concode_elem_sep int flip concode_elem_sep int remainder", "code_tokens": ["int", "function", "(", "int", "arg0", ",", "int", "arg1", ")", "{", "return", "(", "int", ")", "(", "toLong", "(", "arg0", ")", "/", "toLong", "(", "arg1", ")", ")", ";", "}"], "nl_tokens": ["returns", "dividend", "/", "divisor", ",", "where", "the", "dividend", "and", "divisor", "are", "treated", "as", "unsigned", "32", "-", "bit", "quantities", ".", "concode_field_sep", "long", "INT_MASK", "concode_field_sep", "int", "compare", "concode_elem_sep", "int", "compare", "concode_elem_sep", "int", "saturatedCast", "concode_elem_sep", "long", "toLong", "concode_elem_sep", "int", "max", "concode_elem_sep", "int", "decode", "concode_elem_sep", "int", "parseUnsignedInt", "concode_elem_sep", "int", "parseUnsignedInt", "concode_elem_sep", "int", "min", "concode_elem_sep", "Comparator", "<", "int", "[", "]", ">", "lexicographicalComparator", "concode_elem_sep", "int", "checkedCast", "concode_elem_sep", "String", "toString", "concode_elem_sep", "String", "toString", "concode_elem_sep", "String", "toString", "concode_elem_sep", "String", "join", "concode_elem_sep", "int", "flip", "concode_elem_sep", "int", "remainder"]}
{"code": "String function ( MediaInfo arg0 , int arg1 ) { Uri loc0 = getImageUri ( arg0 , arg1 ) ; if ( loc0 != null ) { return loc0 . toString ( ) ; } return null ; }", "nl": "returns the url of an image for the mediainfo at the given index . index should be anumber between 0 and n-1 where n is the number of images for that given item . concode_field_sep String KEY_CONTENT_TYPE concode_elem_sep String KEY_TRACK_ID concode_elem_sep String KEY_TRACKS_DATA concode_elem_sep String KEY_CUSTOM_DATA concode_elem_sep String KEY_TRACK_LANGUAGE concode_elem_sep String KEY_STREAM_TYPE concode_elem_sep String KEY_TRACK_CONTENT_ID concode_elem_sep String KEY_IMAGES concode_elem_sep String TAG concode_elem_sep String KEY_TRACK_TYPE concode_elem_sep String KEY_TRACK_NAME concode_elem_sep String KEY_URL concode_elem_sep String KEY_TRACK_SUBTYPE concode_elem_sep String KEY_TRACK_CUSTOM_DATA concode_elem_sep String KEY_STREAM_DURATION concode_elem_sep boolean IS_KITKAT_OR_ABOVE concode_field_sep String formatMillis concode_elem_sep Bundle mediaInfoToBundle concode_elem_sep String getWifiSsid concode_elem_sep MediaInfo bundleToMediaInfo concode_elem_sep void showToast concode_elem_sep Uri getImageUri concode_elem_sep boolean checkGooglePlayServices concode_elem_sep int convertDpToPixel concode_elem_sep Bitmap scaleAndCenterCropBitmap", "code_tokens": ["String", "function", "(", "MediaInfo", "arg0", ",", "int", "arg1", ")", "{", "Uri", "loc0", "=", "getImageUri", "(", "arg0", ",", "arg1", ")", ";", "if", "(", "loc0", "!=", "null", ")", "{", "return", "loc0", ".", "toString", "(", ")", ";", "}", "return", "null", ";", "}"], "nl_tokens": ["returns", "the", "url", "of", "an", "image", "for", "the", "mediainfo", "at", "the", "given", "index", ".", "index", "should", "be", "anumber", "between", "0", "and", "n", "-", "1", "where", "n", "is", "the", "number", "of", "images", "for", "that", "given", "item", ".", "concode_field_sep", "String", "KEY_CONTENT_TYPE", "concode_elem_sep", "String", "KEY_TRACK_ID", "concode_elem_sep", "String", "KEY_TRACKS_DATA", "concode_elem_sep", "String", "KEY_CUSTOM_DATA", "concode_elem_sep", "String", "KEY_TRACK_LANGUAGE", "concode_elem_sep", "String", "KEY_STREAM_TYPE", "concode_elem_sep", "String", "KEY_TRACK_CONTENT_ID", "concode_elem_sep", "String", "KEY_IMAGES", "concode_elem_sep", "String", "TAG", "concode_elem_sep", "String", "KEY_TRACK_TYPE", "concode_elem_sep", "String", "KEY_TRACK_NAME", "concode_elem_sep", "String", "KEY_URL", "concode_elem_sep", "String", "KEY_TRACK_SUBTYPE", "concode_elem_sep", "String", "KEY_TRACK_CUSTOM_DATA", "concode_elem_sep", "String", "KEY_STREAM_DURATION", "concode_elem_sep", "boolean", "IS_KITKAT_OR_ABOVE", "concode_field_sep", "String", "formatMillis", "concode_elem_sep", "Bundle", "mediaInfoToBundle", "concode_elem_sep", "String", "getWifiSsid", "concode_elem_sep", "MediaInfo", "bundleToMediaInfo", "concode_elem_sep", "void", "showToast", "concode_elem_sep", "Uri", "getImageUri", "concode_elem_sep", "boolean", "checkGooglePlayServices", "concode_elem_sep", "int", "convertDpToPixel", "concode_elem_sep", "Bitmap", "scaleAndCenterCropBitmap"]}
{"code": "void function ( ErrorQueue arg0 ) { Report . arg0 = arg0 ; }", "nl": "set the error queue . concode_field_sep String types concode_elem_sep String verbose concode_elem_sep Map<String,Integer> reportTopics concode_elem_sep String dataflow concode_elem_sep Stack<String> should_report concode_elem_sep String frontend concode_elem_sep String imports concode_elem_sep ErrorQueue eq concode_elem_sep String loader concode_elem_sep String time concode_elem_sep String debug concode_elem_sep String cfg concode_elem_sep String context concode_elem_sep String visit concode_elem_sep String resolver concode_elem_sep Collection<String> topics concode_elem_sep String serialize concode_elem_sep boolean noReporting concode_elem_sep String errors concode_field_sep boolean should_report concode_elem_sep boolean should_report concode_elem_sep boolean should_report concode_elem_sep int level concode_elem_sep void pushTopic concode_elem_sep void popTopic concode_elem_sep void addTopic concode_elem_sep ErrorQueue getQueue concode_elem_sep void report concode_elem_sep void report concode_elem_sep void setTopic", "code_tokens": ["void", "function", "(", "ErrorQueue", "arg0", ")", "{", "Report", ".", "arg0", "=", "arg0", ";", "}"], "nl_tokens": ["set", "the", "error", "queue", ".", "concode_field_sep", "String", "types", "concode_elem_sep", "String", "verbose", "concode_elem_sep", "Map", "<", "String", ",", "Integer", ">", "reportTopics", "concode_elem_sep", "String", "dataflow", "concode_elem_sep", "Stack", "<", "String", ">", "should_report", "concode_elem_sep", "String", "frontend", "concode_elem_sep", "String", "imports", "concode_elem_sep", "ErrorQueue", "eq", "concode_elem_sep", "String", "loader", "concode_elem_sep", "String", "time", "concode_elem_sep", "String", "debug", "concode_elem_sep", "String", "cfg", "concode_elem_sep", "String", "context", "concode_elem_sep", "String", "visit", "concode_elem_sep", "String", "resolver", "concode_elem_sep", "Collection", "<", "String", ">", "topics", "concode_elem_sep", "String", "serialize", "concode_elem_sep", "boolean", "noReporting", "concode_elem_sep", "String", "errors", "concode_field_sep", "boolean", "should_report", "concode_elem_sep", "boolean", "should_report", "concode_elem_sep", "boolean", "should_report", "concode_elem_sep", "int", "level", "concode_elem_sep", "void", "pushTopic", "concode_elem_sep", "void", "popTopic", "concode_elem_sep", "void", "addTopic", "concode_elem_sep", "ErrorQueue", "getQueue", "concode_elem_sep", "void", "report", "concode_elem_sep", "void", "report", "concode_elem_sep", "void", "setTopic"]}
{"code": "int function ( ) { return url . hashCode ( ) ; }", "nl": "defines the hashcode . concode_field_sep String type concode_elem_sep String url concode_field_sep String getURL concode_elem_sep String getType concode_elem_sep boolean equals concode_elem_sep String toString concode_elem_sep void setURL", "code_tokens": ["int", "function", "(", ")", "{", "return", "url", ".", "hashCode", "(", ")", ";", "}"], "nl_tokens": ["defines", "the", "hashcode", ".", "concode_field_sep", "String", "type", "concode_elem_sep", "String", "url", "concode_field_sep", "String", "getURL", "concode_elem_sep", "String", "getType", "concode_elem_sep", "boolean", "equals", "concode_elem_sep", "String", "toString", "concode_elem_sep", "void", "setURL"]}
{"code": "void function ( byte [ ] arg0 ) { try { if ( arg0 . length != 0 ) { writer . writeStartElement ( \"srini_string\" ) ; writer . writeCharacters ( new String ( arg0 ) ) ; writer . writeEndElement ( ) ; } } catch ( XMLStreamException loc0 ) { throw new RuntimeException ( loc0 ) ; } }", "nl": "write character bytes - note that we cheat , we just convert them directly to a string for output with no regard to the encoding . concode_field_sep XMLStreamWriter writer concode_field_sep void processGroupStart concode_elem_sep void processDocumentEnd concode_elem_sep void processGroupEnd concode_elem_sep void processCommand concode_elem_sep void processString concode_elem_sep void processDocumentStart concode_elem_sep void processBinaryBytes", "code_tokens": ["void", "function", "(", "byte", "[", "]", "arg0", ")", "{", "try", "{", "if", "(", "arg0", ".", "length", "!=", "0", ")", "{", "writer", ".", "writeStartElement", "(", "\"srini_string\"", ")", ";", "writer", ".", "writeCharacters", "(", "new", "String", "(", "arg0", ")", ")", ";", "writer", ".", "writeEndElement", "(", ")", ";", "}", "}", "catch", "(", "XMLStreamException", "loc0", ")", "{", "throw", "new", "RuntimeException", "(", "loc0", ")", ";", "}", "}"], "nl_tokens": ["write", "character", "bytes", "-", "note", "that", "we", "cheat", ",", "we", "just", "convert", "them", "directly", "to", "a", "string", "for", "output", "with", "no", "regard", "to", "the", "encoding", ".", "concode_field_sep", "XMLStreamWriter", "writer", "concode_field_sep", "void", "processGroupStart", "concode_elem_sep", "void", "processDocumentEnd", "concode_elem_sep", "void", "processGroupEnd", "concode_elem_sep", "void", "processCommand", "concode_elem_sep", "void", "processString", "concode_elem_sep", "void", "processDocumentStart", "concode_elem_sep", "void", "processBinaryBytes"]}
{"code": "void function ( ) { int loc0 = 0 ; try { instance . setDay ( loc0 ) ; fail ( \"srini_string\" ) ; } catch ( IllegalArgumentException loc1 ) { } loc0 = 32 ; try { instance . setDay ( loc0 ) ; fail ( \"srini_string\" ) ; } catch ( IllegalArgumentException loc1 ) { } }", "nl": "test method for net.sf.marineapi.nmea.util.date #setday int . concode_field_sep Date instance concode_elem_sep GregorianCalendar cal concode_field_sep void testConstructorWithString concode_elem_sep void testSetMonth concode_elem_sep void testSetYearThreeDigits concode_elem_sep void testConstructor concode_elem_sep void testToStringFourDigitYear concode_elem_sep void testEqualsAfterInit concode_elem_sep void testEqualsWrongType concode_elem_sep void testSetYearTwoDigit concode_elem_sep void testEqualsWhenChanged concode_elem_sep void testToISO8601WithTime concode_elem_sep void setUp concode_elem_sep void testGetMonth concode_elem_sep void testEqualsItself concode_elem_sep void testSetYearNegative concode_elem_sep void testConstructorWithValues concode_elem_sep void testGetYear concode_elem_sep void testToISO8601WithTimeAndZeroZone concode_elem_sep void testToISO8601FourDigitYear concode_elem_sep void testSetDay concode_elem_sep void testSetYearFourDigit concode_elem_sep void testToStringTwoDigitYear concode_elem_sep void testToISO8601WithTimeAndPositiveOffset concode_elem_sep void testToISO8601TwoDigitYear concode_elem_sep void testSetYearFiveDigits concode_elem_sep void testToISO8601WithTimeAndNegativeOffset concode_elem_sep void testGetDay concode_elem_sep void testSetMonthOutOfBounds", "code_tokens": ["void", "function", "(", ")", "{", "int", "loc0", "=", "0", ";", "try", "{", "instance", ".", "setDay", "(", "loc0", ")", ";", "fail", "(", "\"srini_string\"", ")", ";", "}", "catch", "(", "IllegalArgumentException", "loc1", ")", "{", "}", "loc0", "=", "32", ";", "try", "{", "instance", ".", "setDay", "(", "loc0", ")", ";", "fail", "(", "\"srini_string\"", ")", ";", "}", "catch", "(", "IllegalArgumentException", "loc1", ")", "{", "}", "}"], "nl_tokens": ["test", "method", "for", "net", ".", "sf", ".", "marineapi", ".", "nmea", ".", "util", ".", "date", "#setday int . concode_field_sep Date instance concode_elem_sep GregorianCalendar cal concode_field_sep void testConstructorWithString concode_elem_sep void testSetMonth concode_elem_sep void testSetYearThreeDigits concode_elem_sep void testConstructor concode_elem_sep void testToStringFourDigitYear concode_elem_sep void testEqualsAfterInit concode_elem_sep void testEqualsWrongType concode_elem_sep void testSetYearTwoDigit concode_elem_sep void testEqualsWhenChanged concode_elem_sep void testToISO8601WithTime concode_elem_sep void setUp concode_elem_sep void testGetMonth concode_elem_sep void testEqualsItself concode_elem_sep void testSetYearNegative concode_elem_sep void testConstructorWithValues concode_elem_sep void testGetYear concode_elem_sep void testToISO8601WithTimeAndZeroZone concode_elem_sep void testToISO8601FourDigitYear concode_elem_sep void testSetDay concode_elem_sep void testSetYearFourDigit concode_elem_sep void testToStringTwoDigitYear concode_elem_sep void testToISO8601WithTimeAndPositiveOffset concode_elem_sep void testToISO8601TwoDigitYear concode_elem_sep void testSetYearFiveDigits concode_elem_sep void testToISO8601WithTimeAndNegativeOffset concode_elem_sep void testGetDay concode_elem_sep void testSetMonthOutOfBounds"]}
{"code": "int function ( ) { return RECORD_SIZE * numHeaders + FILE_PROLOGUE_BYTES ; }", "nl": "returns the size in bytes of the file that is used to store the chain with the current parameters . concode_field_sep Logger log concode_elem_sep ReentrantLock lock concode_elem_sep StoredBlock lastChainHead concode_elem_sep NetworkParameters params concode_elem_sep String HEADER_MAGIC concode_elem_sep int RECORD_SIZE concode_elem_sep int FILE_PROLOGUE_BYTES concode_elem_sep LinkedHashMap<Sha256Hash,Object> notFoundCache concode_elem_sep int DEFAULT_NUM_HEADERS concode_elem_sep int numHeaders concode_elem_sep Object notFoundMarker concode_elem_sep FileLock fileLock concode_elem_sep RandomAccessFile randomAccessFile concode_elem_sep MappedByteBuffer buffer concode_elem_sep LinkedHashMap<Sha256Hash,StoredBlock> blockCache concode_field_sep boolean removeEldestEntry concode_elem_sep boolean removeEldestEntry concode_elem_sep void setRingCursor concode_elem_sep StoredBlock getChainHead concode_elem_sep void setChainHead concode_elem_sep StoredBlock get concode_elem_sep int getRingCursor concode_elem_sep void initNewStore concode_elem_sep void close concode_elem_sep void put", "code_tokens": ["int", "function", "(", ")", "{", "return", "RECORD_SIZE", "*", "numHeaders", "+", "FILE_PROLOGUE_BYTES", ";", "}"], "nl_tokens": ["returns", "the", "size", "in", "bytes", "of", "the", "file", "that", "is", "used", "to", "store", "the", "chain", "with", "the", "current", "parameters", ".", "concode_field_sep", "Logger", "log", "concode_elem_sep", "ReentrantLock", "lock", "concode_elem_sep", "StoredBlock", "lastChainHead", "concode_elem_sep", "NetworkParameters", "params", "concode_elem_sep", "String", "HEADER_MAGIC", "concode_elem_sep", "int", "RECORD_SIZE", "concode_elem_sep", "int", "FILE_PROLOGUE_BYTES", "concode_elem_sep", "LinkedHashMap", "<", "Sha256Hash", ",", "Object", ">", "notFoundCache", "concode_elem_sep", "int", "DEFAULT_NUM_HEADERS", "concode_elem_sep", "int", "numHeaders", "concode_elem_sep", "Object", "notFoundMarker", "concode_elem_sep", "FileLock", "fileLock", "concode_elem_sep", "RandomAccessFile", "randomAccessFile", "concode_elem_sep", "MappedByteBuffer", "buffer", "concode_elem_sep", "LinkedHashMap", "<", "Sha256Hash", ",", "StoredBlock", ">", "blockCache", "concode_field_sep", "boolean", "removeEldestEntry", "concode_elem_sep", "boolean", "removeEldestEntry", "concode_elem_sep", "void", "setRingCursor", "concode_elem_sep", "StoredBlock", "getChainHead", "concode_elem_sep", "void", "setChainHead", "concode_elem_sep", "StoredBlock", "get", "concode_elem_sep", "int", "getRingCursor", "concode_elem_sep", "void", "initNewStore", "concode_elem_sep", "void", "close", "concode_elem_sep", "void", "put"]}
{"code": "void function ( long arg0 , int arg1 , ServiceInfoStat [ ] arg2 ) { }", "nl": "called as a result of a previous service removal request . concode_field_sep int RETVAL_MALFORMED concode_elem_sep int RETVAL_OK concode_elem_sep int RETVAL_ERROR concode_elem_sep int RETVAL_NOENTRY concode_field_sep void onServiceRegistration concode_elem_sep void onServiceAdd concode_elem_sep void onServiceUnregistration concode_elem_sep void onServiceDelayed concode_elem_sep void onServiceModify concode_elem_sep void onFlowStatUpdate concode_elem_sep String getRetvalString concode_elem_sep void onServiceGet", "code_tokens": ["void", "function", "(", "long", "arg0", ",", "int", "arg1", ",", "ServiceInfoStat", "[", "]", "arg2", ")", "{", "}"], "nl_tokens": ["called", "as", "a", "result", "of", "a", "previous", "service", "removal", "request", ".", "concode_field_sep", "int", "RETVAL_MALFORMED", "concode_elem_sep", "int", "RETVAL_OK", "concode_elem_sep", "int", "RETVAL_ERROR", "concode_elem_sep", "int", "RETVAL_NOENTRY", "concode_field_sep", "void", "onServiceRegistration", "concode_elem_sep", "void", "onServiceAdd", "concode_elem_sep", "void", "onServiceUnregistration", "concode_elem_sep", "void", "onServiceDelayed", "concode_elem_sep", "void", "onServiceModify", "concode_elem_sep", "void", "onFlowStatUpdate", "concode_elem_sep", "String", "getRetvalString", "concode_elem_sep", "void", "onServiceGet"]}
{"code": "Script function ( List < TransactionSignature > arg0 ) { List < byte [ ] > loc0 = new ArrayList < byte [ ] > ( arg0 . size ( ) ) ; for ( TransactionSignature loc1 : arg0 ) { loc0 . add ( loc1 . encodeToBitcoin ( ) ) ; } return createMultiSigInputScriptBytes ( loc0 , null ) ; }", "nl": "create a program that satisfies an op_checkmultisig program . concode_field_sep List<ScriptChunk> chunks concode_field_sep ScriptBuilder op concode_elem_sep ScriptBuilder op concode_elem_sep Script updateScriptWithSignature concode_elem_sep Script createOpReturnScript concode_elem_sep ScriptBuilder data concode_elem_sep ScriptBuilder data concode_elem_sep Script createMultiSigInputScriptBytes concode_elem_sep Script createMultiSigInputScriptBytes concode_elem_sep ScriptBuilder smallNum concode_elem_sep ScriptBuilder smallNum concode_elem_sep Script createRedeemScript concode_elem_sep ScriptBuilder addChunk concode_elem_sep ScriptBuilder addChunk concode_elem_sep Script createInputScript concode_elem_sep Script createInputScript concode_elem_sep Script createOutputScript concode_elem_sep Script createOutputScript concode_elem_sep Script createMultiSigOutputScript concode_elem_sep Script build concode_elem_sep Script createP2SHMultiSigInputScript concode_elem_sep Script createP2SHOutputScript concode_elem_sep Script createP2SHOutputScript concode_elem_sep Script createP2SHOutputScript", "code_tokens": ["Script", "function", "(", "List", "<", "TransactionSignature", ">", "arg0", ")", "{", "List", "<", "byte", "[", "]", ">", "loc0", "=", "new", "ArrayList", "<", "byte", "[", "]", ">", "(", "arg0", ".", "size", "(", ")", ")", ";", "for", "(", "TransactionSignature", "loc1", ":", "arg0", ")", "{", "loc0", ".", "add", "(", "loc1", ".", "encodeToBitcoin", "(", ")", ")", ";", "}", "return", "createMultiSigInputScriptBytes", "(", "loc0", ",", "null", ")", ";", "}"], "nl_tokens": ["create", "a", "program", "that", "satisfies", "an", "op_checkmultisig", "program", ".", "concode_field_sep", "List", "<", "ScriptChunk", ">", "chunks", "concode_field_sep", "ScriptBuilder", "op", "concode_elem_sep", "ScriptBuilder", "op", "concode_elem_sep", "Script", "updateScriptWithSignature", "concode_elem_sep", "Script", "createOpReturnScript", "concode_elem_sep", "ScriptBuilder", "data", "concode_elem_sep", "ScriptBuilder", "data", "concode_elem_sep", "Script", "createMultiSigInputScriptBytes", "concode_elem_sep", "Script", "createMultiSigInputScriptBytes", "concode_elem_sep", "ScriptBuilder", "smallNum", "concode_elem_sep", "ScriptBuilder", "smallNum", "concode_elem_sep", "Script", "createRedeemScript", "concode_elem_sep", "ScriptBuilder", "addChunk", "concode_elem_sep", "ScriptBuilder", "addChunk", "concode_elem_sep", "Script", "createInputScript", "concode_elem_sep", "Script", "createInputScript", "concode_elem_sep", "Script", "createOutputScript", "concode_elem_sep", "Script", "createOutputScript", "concode_elem_sep", "Script", "createMultiSigOutputScript", "concode_elem_sep", "Script", "build", "concode_elem_sep", "Script", "createP2SHMultiSigInputScript", "concode_elem_sep", "Script", "createP2SHOutputScript", "concode_elem_sep", "Script", "createP2SHOutputScript", "concode_elem_sep", "Script", "createP2SHOutputScript"]}
{"code": "void function ( AuthType arg0 ) { if ( arg0 != AuthType . SIMPLE && arg0 != AuthType . CUSTOM ) { throw new UnsupportedOperationException ( \"srini_string\" + arg0 . getAuthName ( ) + \"srini_string\" ) ; } }", "nl": "checks whether alluxio is running in secure mode , such as authtype #simple , authtype #kerberos , authtype #custom . concode_field_sep User sLoginUser concode_field_sep User get concode_elem_sep User login", "code_tokens": ["void", "function", "(", "AuthType", "arg0", ")", "{", "if", "(", "arg0", "!=", "AuthType", ".", "SIMPLE", "&", "&", "arg0", "!=", "AuthType", ".", "CUSTOM", ")", "{", "throw", "new", "UnsupportedOperationException", "(", "\"srini_string\"", "+", "arg0", ".", "getAuthName", "(", ")", "+", "\"srini_string\"", ")", ";", "}", "}"], "nl_tokens": ["checks", "whether", "alluxio", "is", "running", "in", "secure", "mode", ",", "such", "as", "authtype", "#simple , authtype #kerberos , authtype #custom . concode_field_sep User sLoginUser concode_field_sep User get concode_elem_sep User login"]}
{"code": "String function ( ) { return getWorkflow ( ) . getGroup ( ) ; }", "nl": "return the job owner group name . concode_field_sep String WORKFLOW concode_elem_sep String ACTION_TRACKER_URI concode_elem_sep String LAST_ACTION_IN_ERROR concode_elem_sep String ACTION_PROTO_CONF concode_elem_sep String ACTION_DATA concode_elem_sep String ACTION_EXTERNAL_STATUS concode_elem_sep String ACTION_ERROR_CODE concode_elem_sep String ACTION_EXTERNAL_ID concode_elem_sep String ACTION concode_elem_sep String ACTION_ERROR_MESSAGE concode_field_sep int wf_run concode_elem_sep WorkflowJobBean getWorkflow concode_elem_sep String getActionVar concode_elem_sep String wf_callback concode_elem_sep void setActionInfo concode_elem_sep String wf_conf concode_elem_sep String wf_actionExternalStatus concode_elem_sep WorkflowActionBean getAction concode_elem_sep String wf_actionExternalId concode_elem_sep Configuration getProtoActionConf concode_elem_sep String wf_transition concode_elem_sep String wf_lastErrorNode concode_elem_sep String wf_appPath concode_elem_sep String wf_errorCode concode_elem_sep void configureEvaluator concode_elem_sep String wf_id concode_elem_sep String wf_actionTrackerUri concode_elem_sep Map<String,String> wf_actionData concode_elem_sep String wf_name concode_elem_sep String wf_errorMessage concode_elem_sep String wf_user", "code_tokens": ["String", "function", "(", ")", "{", "return", "getWorkflow", "(", ")", ".", "getGroup", "(", ")", ";", "}"], "nl_tokens": ["return", "the", "job", "owner", "group", "name", ".", "concode_field_sep", "String", "WORKFLOW", "concode_elem_sep", "String", "ACTION_TRACKER_URI", "concode_elem_sep", "String", "LAST_ACTION_IN_ERROR", "concode_elem_sep", "String", "ACTION_PROTO_CONF", "concode_elem_sep", "String", "ACTION_DATA", "concode_elem_sep", "String", "ACTION_EXTERNAL_STATUS", "concode_elem_sep", "String", "ACTION_ERROR_CODE", "concode_elem_sep", "String", "ACTION_EXTERNAL_ID", "concode_elem_sep", "String", "ACTION", "concode_elem_sep", "String", "ACTION_ERROR_MESSAGE", "concode_field_sep", "int", "wf_run", "concode_elem_sep", "WorkflowJobBean", "getWorkflow", "concode_elem_sep", "String", "getActionVar", "concode_elem_sep", "String", "wf_callback", "concode_elem_sep", "void", "setActionInfo", "concode_elem_sep", "String", "wf_conf", "concode_elem_sep", "String", "wf_actionExternalStatus", "concode_elem_sep", "WorkflowActionBean", "getAction", "concode_elem_sep", "String", "wf_actionExternalId", "concode_elem_sep", "Configuration", "getProtoActionConf", "concode_elem_sep", "String", "wf_transition", "concode_elem_sep", "String", "wf_lastErrorNode", "concode_elem_sep", "String", "wf_appPath", "concode_elem_sep", "String", "wf_errorCode", "concode_elem_sep", "void", "configureEvaluator", "concode_elem_sep", "String", "wf_id", "concode_elem_sep", "String", "wf_actionTrackerUri", "concode_elem_sep", "Map", "<", "String", ",", "String", ">", "wf_actionData", "concode_elem_sep", "String", "wf_name", "concode_elem_sep", "String", "wf_errorMessage", "concode_elem_sep", "String", "wf_user"]}
{"code": "Class < ? extends Service > function ( ) { return SchedulerService . class ; }", "nl": "return the public interface for scheduler service . concode_field_sep ScheduledExecutorService scheduler concode_elem_sep String SCHEDULER_THREADS concode_elem_sep XLog log concode_elem_sep long millis concode_elem_sep String CONF_PREFIX concode_field_sep void init concode_elem_sep void schedule concode_elem_sep void schedule concode_elem_sep void destroy concode_elem_sep ScheduledExecutorService getScheduler concode_elem_sep long getMillis", "code_tokens": ["Class", "<", "?", "extends", "Service", ">", "function", "(", ")", "{", "return", "SchedulerService", ".", "class", ";", "}"], "nl_tokens": ["return", "the", "public", "interface", "for", "scheduler", "service", ".", "concode_field_sep", "ScheduledExecutorService", "scheduler", "concode_elem_sep", "String", "SCHEDULER_THREADS", "concode_elem_sep", "XLog", "log", "concode_elem_sep", "long", "millis", "concode_elem_sep", "String", "CONF_PREFIX", "concode_field_sep", "void", "init", "concode_elem_sep", "void", "schedule", "concode_elem_sep", "void", "schedule", "concode_elem_sep", "void", "destroy", "concode_elem_sep", "ScheduledExecutorService", "getScheduler", "concode_elem_sep", "long", "getMillis"]}
{"code": "void function ( ) { assertEquals ( 7.0 , ttm . getSpeed ( ) , 0.001 ) ; }", "nl": "test method for net.sf.marineapi.nmea.parser.ttmparser #getspeed . concode_field_sep String EXAMPLE concode_elem_sep TTMParser ttm concode_elem_sep TTMParser empty concode_field_sep void testGetAcquisitionType concode_elem_sep void testGetDistance concode_elem_sep void testSetStatus concode_elem_sep void testSetNumber concode_elem_sep void testSetDistanceOfCPA concode_elem_sep void testConstructor concode_elem_sep void testGetTime concode_elem_sep void testSetCourse concode_elem_sep void testGetName concode_elem_sep void testGetNumber concode_elem_sep void testGetDistanceOfCPA concode_elem_sep void setUp concode_elem_sep void testGetCourse concode_elem_sep void testSetReferenceTrue concode_elem_sep void testSetReferenceFalse concode_elem_sep void testSetAcquisitionType concode_elem_sep void testSetBearing concode_elem_sep void testGetBearing concode_elem_sep void testSetDistance concode_elem_sep void testSetTimeToCPA concode_elem_sep void testSetTime concode_elem_sep void testGetStatus concode_elem_sep void testGetTimeToCPA concode_elem_sep void testSetName concode_elem_sep void testSetSpeed", "code_tokens": ["void", "function", "(", ")", "{", "assertEquals", "(", "7.0", ",", "ttm", ".", "getSpeed", "(", ")", ",", "0.001", ")", ";", "}"], "nl_tokens": ["test", "method", "for", "net", ".", "sf", ".", "marineapi", ".", "nmea", ".", "parser", ".", "ttmparser", "#getspeed . concode_field_sep String EXAMPLE concode_elem_sep TTMParser ttm concode_elem_sep TTMParser empty concode_field_sep void testGetAcquisitionType concode_elem_sep void testGetDistance concode_elem_sep void testSetStatus concode_elem_sep void testSetNumber concode_elem_sep void testSetDistanceOfCPA concode_elem_sep void testConstructor concode_elem_sep void testGetTime concode_elem_sep void testSetCourse concode_elem_sep void testGetName concode_elem_sep void testGetNumber concode_elem_sep void testGetDistanceOfCPA concode_elem_sep void setUp concode_elem_sep void testGetCourse concode_elem_sep void testSetReferenceTrue concode_elem_sep void testSetReferenceFalse concode_elem_sep void testSetAcquisitionType concode_elem_sep void testSetBearing concode_elem_sep void testGetBearing concode_elem_sep void testSetDistance concode_elem_sep void testSetTimeToCPA concode_elem_sep void testSetTime concode_elem_sep void testGetStatus concode_elem_sep void testGetTimeToCPA concode_elem_sep void testSetName concode_elem_sep void testSetSpeed"]}
{"code": "String function ( String arg0 ) { int loc0 = arg0 . lastIndexOf ( '.' ) ; return loc0 >= 0 ? arg0 . substring ( 0 , loc0 ) : \"srini_string\" ; }", "nl": "given the name for a class , returns the portion which appears to constitute the package -- i.e. , all characters up to but not including the last dot , or no characters if the name has no dot . concode_field_sep PlaceHolder placeHolder concode_field_sep String nth concode_elem_sep String getFirstComponent concode_elem_sep String getShortNameComponent concode_elem_sep boolean isNameShort concode_elem_sep String escape concode_elem_sep String escape concode_elem_sep String escape concode_elem_sep String escape concode_elem_sep String unicodeEscape concode_elem_sep String unicodeEscape concode_elem_sep String removeFirstComponent", "code_tokens": ["String", "function", "(", "String", "arg0", ")", "{", "int", "loc0", "=", "arg0", ".", "lastIndexOf", "(", "'.'", ")", ";", "return", "loc0", ">=", "0", "?", "arg0", ".", "substring", "(", "0", ",", "loc0", ")", ":", "\"srini_string\"", ";", "}"], "nl_tokens": ["given", "the", "name", "for", "a", "class", ",", "returns", "the", "portion", "which", "appears", "to", "constitute", "the", "package", "-", "-", "i", ".", "e", ".", ",", "all", "characters", "up", "to", "but", "not", "including", "the", "last", "dot", ",", "or", "no", "characters", "if", "the", "name", "has", "no", "dot", ".", "concode_field_sep", "PlaceHolder", "placeHolder", "concode_field_sep", "String", "nth", "concode_elem_sep", "String", "getFirstComponent", "concode_elem_sep", "String", "getShortNameComponent", "concode_elem_sep", "boolean", "isNameShort", "concode_elem_sep", "String", "escape", "concode_elem_sep", "String", "escape", "concode_elem_sep", "String", "escape", "concode_elem_sep", "String", "escape", "concode_elem_sep", "String", "unicodeEscape", "concode_elem_sep", "String", "unicodeEscape", "concode_elem_sep", "String", "removeFirstComponent"]}
{"code": "String function ( ) { return csr ; }", "nl": "gets the value of the csr property . concode_field_sep byte[] projectSecret concode_elem_sep String csr concode_elem_sep String project concode_field_sep void setCsr concode_elem_sep byte[] getProjectSecret concode_elem_sep void setProject concode_elem_sep void setProjectSecret concode_elem_sep String getProject", "code_tokens": ["String", "function", "(", ")", "{", "return", "csr", ";", "}"], "nl_tokens": ["gets", "the", "value", "of", "the", "csr", "property", ".", "concode_field_sep", "byte", "[", "]", "projectSecret", "concode_elem_sep", "String", "csr", "concode_elem_sep", "String", "project", "concode_field_sep", "void", "setCsr", "concode_elem_sep", "byte", "[", "]", "getProjectSecret", "concode_elem_sep", "void", "setProject", "concode_elem_sep", "void", "setProjectSecret", "concode_elem_sep", "String", "getProject"]}
{"code": "void function ( String arg0 ) { javax . swing . JOptionPane . showMessageDialog ( null , arg0 , appName , JOptionPane . INFORMATION_MESSAGE ) ; }", "nl": "popup an info to the user ex : `` process complete . '' concode_field_sep String appName concode_elem_sep Logger logger concode_field_sep void setLogger concode_elem_sep void popupError concode_elem_sep void warning concode_elem_sep void error concode_elem_sep void error concode_elem_sep void error concode_elem_sep void error", "code_tokens": ["void", "function", "(", "String", "arg0", ")", "{", "javax", ".", "swing", ".", "JOptionPane", ".", "showMessageDialog", "(", "null", ",", "arg0", ",", "appName", ",", "JOptionPane", ".", "INFORMATION_MESSAGE", ")", ";", "}"], "nl_tokens": ["popup", "an", "info", "to", "the", "user", "ex", ":", "`", "`", "process", "complete", ".", "''", "concode_field_sep", "String", "appName", "concode_elem_sep", "Logger", "logger", "concode_field_sep", "void", "setLogger", "concode_elem_sep", "void", "popupError", "concode_elem_sep", "void", "warning", "concode_elem_sep", "void", "error", "concode_elem_sep", "void", "error", "concode_elem_sep", "void", "error", "concode_elem_sep", "void", "error"]}
{"code": "String function ( String arg0 ) { String loc0 = arg0 . replaceAll ( \"srini_string\" , \"srini_string\" ) ; String loc1 = loc0 . replaceAll ( \"srini_string\" , \"srini_string\" ) ; return loc1 ; }", "nl": "removes all punctuation marks from a post concode_field_sep int VocabularySize concode_elem_sep int CountofWordsInTwenties concode_elem_sep int CountofWordsInThirties concode_elem_sep StopWord stopWord concode_elem_sep int CountofWordsInTeens concode_field_sep void updateNaiveBayesMapForSinglePost concode_elem_sep int getCountofWordsInTeens concode_elem_sep void setCountofWordsInThirties concode_elem_sep HashMap<String,HashMap<String,Integer>> trainNaiveBayes concode_elem_sep void updateClassWordCount concode_elem_sep void setVocabularySize concode_elem_sep void setCountofWordsInTwenties concode_elem_sep int getVocabularySize concode_elem_sep String[] cleanPost concode_elem_sep void setCountofWordsInTeens concode_elem_sep int getCountofWordsInTwenties concode_elem_sep int getCountofWordsInThirties concode_elem_sep void updateNaiveBayesMap", "code_tokens": ["String", "function", "(", "String", "arg0", ")", "{", "String", "loc0", "=", "arg0", ".", "replaceAll", "(", "\"srini_string\"", ",", "\"srini_string\"", ")", ";", "String", "loc1", "=", "loc0", ".", "replaceAll", "(", "\"srini_string\"", ",", "\"srini_string\"", ")", ";", "return", "loc1", ";", "}"], "nl_tokens": ["removes", "all", "punctuation", "marks", "from", "a", "post", "concode_field_sep", "int", "VocabularySize", "concode_elem_sep", "int", "CountofWordsInTwenties", "concode_elem_sep", "int", "CountofWordsInThirties", "concode_elem_sep", "StopWord", "stopWord", "concode_elem_sep", "int", "CountofWordsInTeens", "concode_field_sep", "void", "updateNaiveBayesMapForSinglePost", "concode_elem_sep", "int", "getCountofWordsInTeens", "concode_elem_sep", "void", "setCountofWordsInThirties", "concode_elem_sep", "HashMap", "<", "String", ",", "HashMap", "<", "String", ",", "Integer", ">>", "trainNaiveBayes", "concode_elem_sep", "void", "updateClassWordCount", "concode_elem_sep", "void", "setVocabularySize", "concode_elem_sep", "void", "setCountofWordsInTwenties", "concode_elem_sep", "int", "getVocabularySize", "concode_elem_sep", "String", "[", "]", "cleanPost", "concode_elem_sep", "void", "setCountofWordsInTeens", "concode_elem_sep", "int", "getCountofWordsInTwenties", "concode_elem_sep", "int", "getCountofWordsInThirties", "concode_elem_sep", "void", "updateNaiveBayesMap"]}
{"code": "void function ( ) { handleEvent ( GROUP_END ) ; state = stack . pop ( ) ; }", "nl": "handle event from the rawrtfparser . concode_field_sep IParserEventHandler handler concode_elem_sep IParserEvent GROUP_END concode_elem_sep IParserEvent GROUP_START concode_elem_sep IParserEvent DOCUMENT_START concode_elem_sep Deque<IParserEventHandler> handlerStack concode_elem_sep Map<Integer,String> m_fontEncodings concode_elem_sep Deque<ParserState> stack concode_elem_sep IParserEvent DOCUMENT_END concode_elem_sep ParserState state concode_elem_sep int skipBytes concode_field_sep void processCharacter concode_elem_sep void processUpr concode_elem_sep void handleEvent concode_elem_sep void processDocumentEnd concode_elem_sep void processCommand concode_elem_sep void parse concode_elem_sep void processCharacterBytes concode_elem_sep void processString concode_elem_sep void processDocumentStart concode_elem_sep void processUnicodeAlternateSkipCount concode_elem_sep void handleCommand concode_elem_sep void processGroupStart concode_elem_sep void processFont concode_elem_sep void processEncoding concode_elem_sep void processUnicode concode_elem_sep String currentEncoding concode_elem_sep void processBinaryBytes concode_elem_sep void processFontCharset", "code_tokens": ["void", "function", "(", ")", "{", "handleEvent", "(", "GROUP_END", ")", ";", "state", "=", "stack", ".", "pop", "(", ")", ";", "}"], "nl_tokens": ["handle", "event", "from", "the", "rawrtfparser", ".", "concode_field_sep", "IParserEventHandler", "handler", "concode_elem_sep", "IParserEvent", "GROUP_END", "concode_elem_sep", "IParserEvent", "GROUP_START", "concode_elem_sep", "IParserEvent", "DOCUMENT_START", "concode_elem_sep", "Deque", "<", "IParserEventHandler", ">", "handlerStack", "concode_elem_sep", "Map", "<", "Integer", ",", "String", ">", "m_fontEncodings", "concode_elem_sep", "Deque", "<", "ParserState", ">", "stack", "concode_elem_sep", "IParserEvent", "DOCUMENT_END", "concode_elem_sep", "ParserState", "state", "concode_elem_sep", "int", "skipBytes", "concode_field_sep", "void", "processCharacter", "concode_elem_sep", "void", "processUpr", "concode_elem_sep", "void", "handleEvent", "concode_elem_sep", "void", "processDocumentEnd", "concode_elem_sep", "void", "processCommand", "concode_elem_sep", "void", "parse", "concode_elem_sep", "void", "processCharacterBytes", "concode_elem_sep", "void", "processString", "concode_elem_sep", "void", "processDocumentStart", "concode_elem_sep", "void", "processUnicodeAlternateSkipCount", "concode_elem_sep", "void", "handleCommand", "concode_elem_sep", "void", "processGroupStart", "concode_elem_sep", "void", "processFont", "concode_elem_sep", "void", "processEncoding", "concode_elem_sep", "void", "processUnicode", "concode_elem_sep", "String", "currentEncoding", "concode_elem_sep", "void", "processBinaryBytes", "concode_elem_sep", "void", "processFontCharset"]}
{"code": "void function ( String arg0 ) { this . iconPath = arg0 ; }", "nl": "set icon path concode_field_sep int bigIcon concode_elem_sep String emojiText concode_elem_sep int icon concode_elem_sep String name concode_elem_sep Type type concode_elem_sep String iconPath concode_elem_sep String identityCode concode_elem_sep String bigIconPath concode_field_sep void setName concode_elem_sep String getName concode_elem_sep String getIconPath concode_elem_sep int getBigIcon concode_elem_sep void setBigIcon concode_elem_sep void setType concode_elem_sep void setIdentityCode concode_elem_sep int getIcon concode_elem_sep String getEmojiText concode_elem_sep String getBigIconPath concode_elem_sep void setIcon concode_elem_sep void setBigIconPath concode_elem_sep void setEmojiText concode_elem_sep Type getType concode_elem_sep String getIdentityCode concode_elem_sep String newEmojiText", "code_tokens": ["void", "function", "(", "String", "arg0", ")", "{", "this", ".", "iconPath", "=", "arg0", ";", "}"], "nl_tokens": ["set", "icon", "path", "concode_field_sep", "int", "bigIcon", "concode_elem_sep", "String", "emojiText", "concode_elem_sep", "int", "icon", "concode_elem_sep", "String", "name", "concode_elem_sep", "Type", "type", "concode_elem_sep", "String", "iconPath", "concode_elem_sep", "String", "identityCode", "concode_elem_sep", "String", "bigIconPath", "concode_field_sep", "void", "setName", "concode_elem_sep", "String", "getName", "concode_elem_sep", "String", "getIconPath", "concode_elem_sep", "int", "getBigIcon", "concode_elem_sep", "void", "setBigIcon", "concode_elem_sep", "void", "setType", "concode_elem_sep", "void", "setIdentityCode", "concode_elem_sep", "int", "getIcon", "concode_elem_sep", "String", "getEmojiText", "concode_elem_sep", "String", "getBigIconPath", "concode_elem_sep", "void", "setIcon", "concode_elem_sep", "void", "setBigIconPath", "concode_elem_sep", "void", "setEmojiText", "concode_elem_sep", "Type", "getType", "concode_elem_sep", "String", "getIdentityCode", "concode_elem_sep", "String", "newEmojiText"]}
{"code": "boolean function ( Collection < UserModel > arg0 ) { return userService . updateUserModels ( arg0 ) ; }", "nl": "updates/writes all specified user objects . concode_field_sep IStoredSettings settings concode_elem_sep Map<String,String> legacyBackingServices concode_elem_sep IRuntimeManager runtimeManager concode_elem_sep Logger logger concode_elem_sep IUserService userService concode_field_sep boolean deleteRepositoryRole concode_elem_sep List<String> getAllUsernames concode_elem_sep List<UserModel> getAllUsers concode_elem_sep UserModel getUserModel concode_elem_sep UserModel getUserModel concode_elem_sep boolean updateUserModel concode_elem_sep boolean updateUserModel concode_elem_sep TeamModel getTeamModel concode_elem_sep boolean updateTeamModel concode_elem_sep boolean updateTeamModel concode_elem_sep boolean isInternalAccount concode_elem_sep List<String> getTeamNamesForRepositoryRole concode_elem_sep boolean deleteTeam concode_elem_sep List<String> getUsernamesForRepositoryRole concode_elem_sep boolean deleteTeamModel concode_elem_sep UserManager start concode_elem_sep void setUserService concode_elem_sep IUserService createUserService concode_elem_sep List<TeamModel> getAllTeams concode_elem_sep String getCookie concode_elem_sep boolean deleteUserModel concode_elem_sep UserManager stop concode_elem_sep boolean deleteUser concode_elem_sep void setup concode_elem_sep boolean renameRepositoryRole concode_elem_sep List<String> getAllTeamNames concode_elem_sep boolean updateTeamModels", "code_tokens": ["boolean", "function", "(", "Collection", "<", "UserModel", ">", "arg0", ")", "{", "return", "userService", ".", "updateUserModels", "(", "arg0", ")", ";", "}"], "nl_tokens": ["updates", "/", "writes", "all", "specified", "user", "objects", ".", "concode_field_sep", "IStoredSettings", "settings", "concode_elem_sep", "Map", "<", "String", ",", "String", ">", "legacyBackingServices", "concode_elem_sep", "IRuntimeManager", "runtimeManager", "concode_elem_sep", "Logger", "logger", "concode_elem_sep", "IUserService", "userService", "concode_field_sep", "boolean", "deleteRepositoryRole", "concode_elem_sep", "List", "<", "String", ">", "getAllUsernames", "concode_elem_sep", "List", "<", "UserModel", ">", "getAllUsers", "concode_elem_sep", "UserModel", "getUserModel", "concode_elem_sep", "UserModel", "getUserModel", "concode_elem_sep", "boolean", "updateUserModel", "concode_elem_sep", "boolean", "updateUserModel", "concode_elem_sep", "TeamModel", "getTeamModel", "concode_elem_sep", "boolean", "updateTeamModel", "concode_elem_sep", "boolean", "updateTeamModel", "concode_elem_sep", "boolean", "isInternalAccount", "concode_elem_sep", "List", "<", "String", ">", "getTeamNamesForRepositoryRole", "concode_elem_sep", "boolean", "deleteTeam", "concode_elem_sep", "List", "<", "String", ">", "getUsernamesForRepositoryRole", "concode_elem_sep", "boolean", "deleteTeamModel", "concode_elem_sep", "UserManager", "start", "concode_elem_sep", "void", "setUserService", "concode_elem_sep", "IUserService", "createUserService", "concode_elem_sep", "List", "<", "TeamModel", ">", "getAllTeams", "concode_elem_sep", "String", "getCookie", "concode_elem_sep", "boolean", "deleteUserModel", "concode_elem_sep", "UserManager", "stop", "concode_elem_sep", "boolean", "deleteUser", "concode_elem_sep", "void", "setup", "concode_elem_sep", "boolean", "renameRepositoryRole", "concode_elem_sep", "List", "<", "String", ">", "getAllTeamNames", "concode_elem_sep", "boolean", "updateTeamModels"]}
{"code": "boolean function ( ) { return loggingEnabled ; }", "nl": "whether logging is on or off . concode_field_sep String CONFIG concode_elem_sep String MATCH concode_elem_sep String RENDER concode_elem_sep String CSS_PARSE concode_elem_sep List LOGGER_NAMES concode_elem_sep String EXCEPTION concode_elem_sep boolean loggingEnabled concode_elem_sep String XML_ENTITIES concode_elem_sep String JUNIT concode_elem_sep String INIT concode_elem_sep XRLogger loggerImpl concode_elem_sep String LOAD concode_elem_sep String LAYOUT concode_elem_sep String GENERAL concode_elem_sep String CASCADE concode_elem_sep boolean initPending concode_field_sep void exception concode_elem_sep void exception concode_elem_sep XRLogger getLoggerImpl concode_elem_sep void init concode_elem_sep void init concode_elem_sep void init concode_elem_sep void init concode_elem_sep void junit concode_elem_sep void junit concode_elem_sep void junit concode_elem_sep List listRegisteredLoggers concode_elem_sep void cssParse concode_elem_sep void cssParse concode_elem_sep void cssParse concode_elem_sep void log concode_elem_sep void log concode_elem_sep void cascade concode_elem_sep void cascade concode_elem_sep void cascade concode_elem_sep void match concode_elem_sep void match concode_elem_sep void match concode_elem_sep void main concode_elem_sep String registerLoggerByName concode_elem_sep void setLevel concode_elem_sep void layout concode_elem_sep void layout concode_elem_sep void layout concode_elem_sep void setLoggingEnabled concode_elem_sep void general concode_elem_sep void general concode_elem_sep void general concode_elem_sep void load concode_elem_sep void load concode_elem_sep void load concode_elem_sep void setLoggerImpl concode_elem_sep void render concode_elem_sep void render concode_elem_sep void render concode_elem_sep void xmlEntities concode_elem_sep void xmlEntities concode_elem_sep void xmlEntities", "code_tokens": ["boolean", "function", "(", ")", "{", "return", "loggingEnabled", ";", "}"], "nl_tokens": ["whether", "logging", "is", "on", "or", "off", ".", "concode_field_sep", "String", "CONFIG", "concode_elem_sep", "String", "MATCH", "concode_elem_sep", "String", "RENDER", "concode_elem_sep", "String", "CSS_PARSE", "concode_elem_sep", "List", "LOGGER_NAMES", "concode_elem_sep", "String", "EXCEPTION", "concode_elem_sep", "boolean", "loggingEnabled", "concode_elem_sep", "String", "XML_ENTITIES", "concode_elem_sep", "String", "JUNIT", "concode_elem_sep", "String", "INIT", "concode_elem_sep", "XRLogger", "loggerImpl", "concode_elem_sep", "String", "LOAD", "concode_elem_sep", "String", "LAYOUT", "concode_elem_sep", "String", "GENERAL", "concode_elem_sep", "String", "CASCADE", "concode_elem_sep", "boolean", "initPending", "concode_field_sep", "void", "exception", "concode_elem_sep", "void", "exception", "concode_elem_sep", "XRLogger", "getLoggerImpl", "concode_elem_sep", "void", "init", "concode_elem_sep", "void", "init", "concode_elem_sep", "void", "init", "concode_elem_sep", "void", "init", "concode_elem_sep", "void", "junit", "concode_elem_sep", "void", "junit", "concode_elem_sep", "void", "junit", "concode_elem_sep", "List", "listRegisteredLoggers", "concode_elem_sep", "void", "cssParse", "concode_elem_sep", "void", "cssParse", "concode_elem_sep", "void", "cssParse", "concode_elem_sep", "void", "log", "concode_elem_sep", "void", "log", "concode_elem_sep", "void", "cascade", "concode_elem_sep", "void", "cascade", "concode_elem_sep", "void", "cascade", "concode_elem_sep", "void", "match", "concode_elem_sep", "void", "match", "concode_elem_sep", "void", "match", "concode_elem_sep", "void", "main", "concode_elem_sep", "String", "registerLoggerByName", "concode_elem_sep", "void", "setLevel", "concode_elem_sep", "void", "layout", "concode_elem_sep", "void", "layout", "concode_elem_sep", "void", "layout", "concode_elem_sep", "void", "setLoggingEnabled", "concode_elem_sep", "void", "general", "concode_elem_sep", "void", "general", "concode_elem_sep", "void", "general", "concode_elem_sep", "void", "load", "concode_elem_sep", "void", "load", "concode_elem_sep", "void", "load", "concode_elem_sep", "void", "setLoggerImpl", "concode_elem_sep", "void", "render", "concode_elem_sep", "void", "render", "concode_elem_sep", "void", "render", "concode_elem_sep", "void", "xmlEntities", "concode_elem_sep", "void", "xmlEntities", "concode_elem_sep", "void", "xmlEntities"]}
{"code": "void function ( ) { PermissionTicket loc0 = permissionService . createTicket ( rs1 , scopes1 ) ; assertNotNull ( loc0 . getTicket ( ) ) ; }", "nl": "test method for org.mitre.uma.service.impl.defaultpermissionservice #createticket org.mitre.uma.model.resourceset , java.util.set . concode_field_sep Set<String> scopes2 concode_elem_sep PermissionRepository permissionRepository concode_elem_sep Set<String> scopes1 concode_elem_sep String rs2Owner concode_elem_sep Long rs1Id concode_elem_sep ResourceSet rs2 concode_elem_sep ResourceSet rs1 concode_elem_sep DefaultPermissionService permissionService concode_elem_sep String rs1Name concode_elem_sep SystemScopeService scopeService concode_elem_sep String rs1Owner concode_elem_sep Long rs2Id concode_elem_sep String rs2Name concode_field_sep void prepare concode_elem_sep void testCreate_scopeMismatch concode_elem_sep void testCreate_uuid concode_elem_sep void testCreate_differentTicketsSameClient concode_elem_sep void testCreate_differentTicketsDifferentClient", "code_tokens": ["void", "function", "(", ")", "{", "PermissionTicket", "loc0", "=", "permissionService", ".", "createTicket", "(", "rs1", ",", "scopes1", ")", ";", "assertNotNull", "(", "loc0", ".", "getTicket", "(", ")", ")", ";", "}"], "nl_tokens": ["test", "method", "for", "org", ".", "mitre", ".", "uma", ".", "service", ".", "impl", ".", "defaultpermissionservice", "#createticket org.mitre.uma.model.resourceset , java.util.set . concode_field_sep Set<String> scopes2 concode_elem_sep PermissionRepository permissionRepository concode_elem_sep Set<String> scopes1 concode_elem_sep String rs2Owner concode_elem_sep Long rs1Id concode_elem_sep ResourceSet rs2 concode_elem_sep ResourceSet rs1 concode_elem_sep DefaultPermissionService permissionService concode_elem_sep String rs1Name concode_elem_sep SystemScopeService scopeService concode_elem_sep String rs1Owner concode_elem_sep Long rs2Id concode_elem_sep String rs2Name concode_field_sep void prepare concode_elem_sep void testCreate_scopeMismatch concode_elem_sep void testCreate_uuid concode_elem_sep void testCreate_differentTicketsSameClient concode_elem_sep void testCreate_differentTicketsDifferentClient"]}
{"code": "FederationProposal function ( String arg0 ) { List < FederationProposal > loc0 = getPendingFederationProposals ( ) ; for ( FederationProposal loc1 : loc0 ) { if ( loc1 . arg0 . equals ( arg0 ) ) { return loc1 ; } } return null ; }", "nl": "returns the proposal identified by the supplied token . concode_field_sep Map<String,FederationModel> federationPullResults concode_elem_sep INotificationManager notificationManager concode_elem_sep IStoredSettings settings concode_elem_sep List<FederationModel> federationRegistrations concode_elem_sep IRuntimeManager runtimeManager concode_elem_sep Logger logger concode_elem_sep IRepositoryManager repositoryManager concode_field_sep boolean deletePendingFederationProposal concode_elem_sep UserModel authenticate concode_elem_sep FederationModel getFederationRegistration concode_elem_sep UserModel getFederationUser concode_elem_sep boolean acknowledgeFederationStatus concode_elem_sep List<FederationProposal> getPendingFederationProposals concode_elem_sep List<FederationModel> getFederationResultRegistrations concode_elem_sep FederationManager start concode_elem_sep boolean canFederate concode_elem_sep Map<String,RepositoryModel> getRepositories concode_elem_sep FederationManager stop concode_elem_sep List<FederationSet> getFederationSets concode_elem_sep File getProposalsFolder concode_elem_sep boolean submitFederationProposal concode_elem_sep String getFederationToken concode_elem_sep String getFederationToken concode_elem_sep FederationProposal createFederationProposal concode_elem_sep List<FederationModel> getFederationRegistrations concode_elem_sep List<String> getFederationTokens concode_elem_sep boolean validateFederationRequest", "code_tokens": ["FederationProposal", "function", "(", "String", "arg0", ")", "{", "List", "<", "FederationProposal", ">", "loc0", "=", "getPendingFederationProposals", "(", ")", ";", "for", "(", "FederationProposal", "loc1", ":", "loc0", ")", "{", "if", "(", "loc1", ".", "arg0", ".", "equals", "(", "arg0", ")", ")", "{", "return", "loc1", ";", "}", "}", "return", "null", ";", "}"], "nl_tokens": ["returns", "the", "proposal", "identified", "by", "the", "supplied", "token", ".", "concode_field_sep", "Map", "<", "String", ",", "FederationModel", ">", "federationPullResults", "concode_elem_sep", "INotificationManager", "notificationManager", "concode_elem_sep", "IStoredSettings", "settings", "concode_elem_sep", "List", "<", "FederationModel", ">", "federationRegistrations", "concode_elem_sep", "IRuntimeManager", "runtimeManager", "concode_elem_sep", "Logger", "logger", "concode_elem_sep", "IRepositoryManager", "repositoryManager", "concode_field_sep", "boolean", "deletePendingFederationProposal", "concode_elem_sep", "UserModel", "authenticate", "concode_elem_sep", "FederationModel", "getFederationRegistration", "concode_elem_sep", "UserModel", "getFederationUser", "concode_elem_sep", "boolean", "acknowledgeFederationStatus", "concode_elem_sep", "List", "<", "FederationProposal", ">", "getPendingFederationProposals", "concode_elem_sep", "List", "<", "FederationModel", ">", "getFederationResultRegistrations", "concode_elem_sep", "FederationManager", "start", "concode_elem_sep", "boolean", "canFederate", "concode_elem_sep", "Map", "<", "String", ",", "RepositoryModel", ">", "getRepositories", "concode_elem_sep", "FederationManager", "stop", "concode_elem_sep", "List", "<", "FederationSet", ">", "getFederationSets", "concode_elem_sep", "File", "getProposalsFolder", "concode_elem_sep", "boolean", "submitFederationProposal", "concode_elem_sep", "String", "getFederationToken", "concode_elem_sep", "String", "getFederationToken", "concode_elem_sep", "FederationProposal", "createFederationProposal", "concode_elem_sep", "List", "<", "FederationModel", ">", "getFederationRegistrations", "concode_elem_sep", "List", "<", "String", ">", "getFederationTokens", "concode_elem_sep", "boolean", "validateFederationRequest"]}
{"code": "Verb function ( ) { return Verb . POST ; }", "nl": "returns the verb for the access token endpoint defaults to post concode_field_sep PlaceHolder placeHolder concode_field_sep TimestampService getTimestampService concode_elem_sep AccessTokenExtractor getAccessTokenExtractor concode_elem_sep String getAccessTokenEndpoint concode_elem_sep OAuthService createService concode_elem_sep String getAuthorizationUrl concode_elem_sep SignatureService getSignatureService concode_elem_sep BaseStringExtractor getBaseStringExtractor concode_elem_sep String getRequestTokenEndpoint concode_elem_sep RequestTokenExtractor getRequestTokenExtractor concode_elem_sep Verb getRequestTokenVerb concode_elem_sep HeaderExtractor getHeaderExtractor", "code_tokens": ["Verb", "function", "(", ")", "{", "return", "Verb", ".", "POST", ";", "}"], "nl_tokens": ["returns", "the", "verb", "for", "the", "access", "token", "endpoint", "defaults", "to", "post", "concode_field_sep", "PlaceHolder", "placeHolder", "concode_field_sep", "TimestampService", "getTimestampService", "concode_elem_sep", "AccessTokenExtractor", "getAccessTokenExtractor", "concode_elem_sep", "String", "getAccessTokenEndpoint", "concode_elem_sep", "OAuthService", "createService", "concode_elem_sep", "String", "getAuthorizationUrl", "concode_elem_sep", "SignatureService", "getSignatureService", "concode_elem_sep", "BaseStringExtractor", "getBaseStringExtractor", "concode_elem_sep", "String", "getRequestTokenEndpoint", "concode_elem_sep", "RequestTokenExtractor", "getRequestTokenExtractor", "concode_elem_sep", "Verb", "getRequestTokenVerb", "concode_elem_sep", "HeaderExtractor", "getHeaderExtractor"]}
{"code": "String function ( ) { String loc0 = mUri . getPath ( ) ; int loc1 = loc0 . lastIndexOf ( SEPARATOR ) ; return loc0 . substring ( loc1 + 1 ) ; }", "nl": "gets the final component of the alluxiouri . concode_field_sep String SEPARATOR concode_elem_sep long serialVersionUID concode_elem_sep String CUR_DIR concode_elem_sep String WILDCARD concode_elem_sep URI mUri concode_elem_sep AlluxioURI EMPTY_URI concode_field_sep AlluxioURI getParent concode_elem_sep int getDepth concode_elem_sep String getScheme concode_elem_sep boolean isRoot concode_elem_sep boolean isPathAbsolute concode_elem_sep boolean containsWildcard concode_elem_sep int compareTo concode_elem_sep String getAuthority concode_elem_sep boolean hasScheme concode_elem_sep int getPort concode_elem_sep String getLeadingPath concode_elem_sep int hashCode concode_elem_sep boolean hasWindowsDrive concode_elem_sep boolean equals concode_elem_sep String getPath concode_elem_sep boolean isAbsolute concode_elem_sep Map<String,String> getQueryMap concode_elem_sep String toString concode_elem_sep AlluxioURI join concode_elem_sep AlluxioURI join concode_elem_sep String normalizePath concode_elem_sep String getHost concode_elem_sep boolean hasAuthority", "code_tokens": ["String", "function", "(", ")", "{", "String", "loc0", "=", "mUri", ".", "getPath", "(", ")", ";", "int", "loc1", "=", "loc0", ".", "lastIndexOf", "(", "SEPARATOR", ")", ";", "return", "loc0", ".", "substring", "(", "loc1", "+", "1", ")", ";", "}"], "nl_tokens": ["gets", "the", "final", "component", "of", "the", "alluxiouri", ".", "concode_field_sep", "String", "SEPARATOR", "concode_elem_sep", "long", "serialVersionUID", "concode_elem_sep", "String", "CUR_DIR", "concode_elem_sep", "String", "WILDCARD", "concode_elem_sep", "URI", "mUri", "concode_elem_sep", "AlluxioURI", "EMPTY_URI", "concode_field_sep", "AlluxioURI", "getParent", "concode_elem_sep", "int", "getDepth", "concode_elem_sep", "String", "getScheme", "concode_elem_sep", "boolean", "isRoot", "concode_elem_sep", "boolean", "isPathAbsolute", "concode_elem_sep", "boolean", "containsWildcard", "concode_elem_sep", "int", "compareTo", "concode_elem_sep", "String", "getAuthority", "concode_elem_sep", "boolean", "hasScheme", "concode_elem_sep", "int", "getPort", "concode_elem_sep", "String", "getLeadingPath", "concode_elem_sep", "int", "hashCode", "concode_elem_sep", "boolean", "hasWindowsDrive", "concode_elem_sep", "boolean", "equals", "concode_elem_sep", "String", "getPath", "concode_elem_sep", "boolean", "isAbsolute", "concode_elem_sep", "Map", "<", "String", ",", "String", ">", "getQueryMap", "concode_elem_sep", "String", "toString", "concode_elem_sep", "AlluxioURI", "join", "concode_elem_sep", "AlluxioURI", "join", "concode_elem_sep", "String", "normalizePath", "concode_elem_sep", "String", "getHost", "concode_elem_sep", "boolean", "hasAuthority"]}
{"code": "boolean function ( ) { assert _dot_pos <= _the_production . rhs_length ( ) ; return _dot_pos == _the_production . rhs_length ( ) ; }", "nl": "is the dot at the end of the production ? concode_field_sep production _the_production concode_elem_sep int _core_hash_cache concode_elem_sep symbol _symbol_after_dot concode_elem_sep int _dot_pos concode_field_sep lr_item_core shift_core concode_elem_sep symbol symbol_after_dot concode_elem_sep int obj_hash concode_elem_sep String to_simple_string concode_elem_sep int dot_pos concode_elem_sep int hashCode concode_elem_sep boolean equals concode_elem_sep boolean equals concode_elem_sep String toString concode_elem_sep non_terminal dot_before_nt concode_elem_sep production the_production concode_elem_sep int core_hashCode concode_elem_sep boolean core_equals", "code_tokens": ["boolean", "function", "(", ")", "{", "assert", "_dot_pos", "<=", "_the_production", ".", "rhs_length", "(", ")", ";", "return", "_dot_pos", "==", "_the_production", ".", "rhs_length", "(", ")", ";", "}"], "nl_tokens": ["is", "the", "dot", "at", "the", "end", "of", "the", "production", "?", "concode_field_sep", "production", "_the_production", "concode_elem_sep", "int", "_core_hash_cache", "concode_elem_sep", "symbol", "_symbol_after_dot", "concode_elem_sep", "int", "_dot_pos", "concode_field_sep", "lr_item_core", "shift_core", "concode_elem_sep", "symbol", "symbol_after_dot", "concode_elem_sep", "int", "obj_hash", "concode_elem_sep", "String", "to_simple_string", "concode_elem_sep", "int", "dot_pos", "concode_elem_sep", "int", "hashCode", "concode_elem_sep", "boolean", "equals", "concode_elem_sep", "boolean", "equals", "concode_elem_sep", "String", "toString", "concode_elem_sep", "non_terminal", "dot_before_nt", "concode_elem_sep", "production", "the_production", "concode_elem_sep", "int", "core_hashCode", "concode_elem_sep", "boolean", "core_equals"]}
{"code": "void function ( String arg0 ) { this . checksum = arg0 ; }", "nl": "sets the checksum . concode_field_sep String comments concode_elem_sep String inactivationReasonType concode_elem_sep Timestamp receiptDate concode_elem_sep String isActive concode_elem_sep BigDecimal predecessorId concode_elem_sep String srcFileName concode_elem_sep long serialVersionUID concode_elem_sep String srcUniqueFileName concode_elem_sep BigDecimal successorId concode_elem_sep Timestamp createdDate concode_elem_sep List<PCLDataUnitEntity> pclDataUnits concode_elem_sep long dataSetId concode_elem_sep BigDecimal feedId concode_elem_sep BigDecimal fileSize concode_elem_sep String destFileName concode_elem_sep String checksum concode_elem_sep String checksumType concode_elem_sep Timestamp modifiedDate concode_elem_sep BigDecimal runId concode_elem_sep String isPrepopulated concode_elem_sep String isUpdate concode_elem_sep String receiptDateType concode_elem_sep String status concode_field_sep void setFeedId concode_elem_sep String getInactivationReasonType concode_elem_sep String getSrcUniqueFileName concode_elem_sep long getDataSetId concode_elem_sep void setReceiptDateType concode_elem_sep void setIsPrepopulated concode_elem_sep BigDecimal getRunId concode_elem_sep void setSrcFileName concode_elem_sep String getChecksumType concode_elem_sep String getSrcFileName concode_elem_sep String getChecksum concode_elem_sep String getStatus concode_elem_sep String getDestFileName concode_elem_sep String getIsUpdate concode_elem_sep BigDecimal getFileSize concode_elem_sep List<PCLDataUnitEntity> getPclDataUnits concode_elem_sep void setPclDataUnits concode_elem_sep void setInactivationReasonType concode_elem_sep Timestamp getReceiptDate concode_elem_sep String getComments concode_elem_sep Timestamp getCreatedDate concode_elem_sep void setComments concode_elem_sep PCLDataUnitEntity removePclDataUnit concode_elem_sep BigDecimal getSuccessorId concode_elem_sep String getIsPrepopulated concode_elem_sep void setSrcUniqueFileName concode_elem_sep void setFileSize concode_elem_sep BigDecimal getPredecessorId concode_elem_sep void setIsUpdate concode_elem_sep String getReceiptDateType concode_elem_sep BigDecimal getFeedId concode_elem_sep void setRunId concode_elem_sep void setReceiptDate concode_elem_sep void setStatus concode_elem_sep Timestamp getModifiedDate concode_elem_sep String getIsActive concode_elem_sep void setSuccessorId concode_elem_sep void setDestFileName concode_elem_sep PCLDataUnitEntity addPclDataUnit concode_elem_sep void setModifiedDate concode_elem_sep void setCreatedDate concode_elem_sep void setDataSetId concode_elem_sep void setPredecessorId concode_elem_sep void setIsActive concode_elem_sep void setChecksumType", "code_tokens": ["void", "function", "(", "String", "arg0", ")", "{", "this", ".", "checksum", "=", "arg0", ";", "}"], "nl_tokens": ["sets", "the", "checksum", ".", "concode_field_sep", "String", "comments", "concode_elem_sep", "String", "inactivationReasonType", "concode_elem_sep", "Timestamp", "receiptDate", "concode_elem_sep", "String", "isActive", "concode_elem_sep", "BigDecimal", "predecessorId", "concode_elem_sep", "String", "srcFileName", "concode_elem_sep", "long", "serialVersionUID", "concode_elem_sep", "String", "srcUniqueFileName", "concode_elem_sep", "BigDecimal", "successorId", "concode_elem_sep", "Timestamp", "createdDate", "concode_elem_sep", "List", "<", "PCLDataUnitEntity", ">", "pclDataUnits", "concode_elem_sep", "long", "dataSetId", "concode_elem_sep", "BigDecimal", "feedId", "concode_elem_sep", "BigDecimal", "fileSize", "concode_elem_sep", "String", "destFileName", "concode_elem_sep", "String", "checksum", "concode_elem_sep", "String", "checksumType", "concode_elem_sep", "Timestamp", "modifiedDate", "concode_elem_sep", "BigDecimal", "runId", "concode_elem_sep", "String", "isPrepopulated", "concode_elem_sep", "String", "isUpdate", "concode_elem_sep", "String", "receiptDateType", "concode_elem_sep", "String", "status", "concode_field_sep", "void", "setFeedId", "concode_elem_sep", "String", "getInactivationReasonType", "concode_elem_sep", "String", "getSrcUniqueFileName", "concode_elem_sep", "long", "getDataSetId", "concode_elem_sep", "void", "setReceiptDateType", "concode_elem_sep", "void", "setIsPrepopulated", "concode_elem_sep", "BigDecimal", "getRunId", "concode_elem_sep", "void", "setSrcFileName", "concode_elem_sep", "String", "getChecksumType", "concode_elem_sep", "String", "getSrcFileName", "concode_elem_sep", "String", "getChecksum", "concode_elem_sep", "String", "getStatus", "concode_elem_sep", "String", "getDestFileName", "concode_elem_sep", "String", "getIsUpdate", "concode_elem_sep", "BigDecimal", "getFileSize", "concode_elem_sep", "List", "<", "PCLDataUnitEntity", ">", "getPclDataUnits", "concode_elem_sep", "void", "setPclDataUnits", "concode_elem_sep", "void", "setInactivationReasonType", "concode_elem_sep", "Timestamp", "getReceiptDate", "concode_elem_sep", "String", "getComments", "concode_elem_sep", "Timestamp", "getCreatedDate", "concode_elem_sep", "void", "setComments", "concode_elem_sep", "PCLDataUnitEntity", "removePclDataUnit", "concode_elem_sep", "BigDecimal", "getSuccessorId", "concode_elem_sep", "String", "getIsPrepopulated", "concode_elem_sep", "void", "setSrcUniqueFileName", "concode_elem_sep", "void", "setFileSize", "concode_elem_sep", "BigDecimal", "getPredecessorId", "concode_elem_sep", "void", "setIsUpdate", "concode_elem_sep", "String", "getReceiptDateType", "concode_elem_sep", "BigDecimal", "getFeedId", "concode_elem_sep", "void", "setRunId", "concode_elem_sep", "void", "setReceiptDate", "concode_elem_sep", "void", "setStatus", "concode_elem_sep", "Timestamp", "getModifiedDate", "concode_elem_sep", "String", "getIsActive", "concode_elem_sep", "void", "setSuccessorId", "concode_elem_sep", "void", "setDestFileName", "concode_elem_sep", "PCLDataUnitEntity", "addPclDataUnit", "concode_elem_sep", "void", "setModifiedDate", "concode_elem_sep", "void", "setCreatedDate", "concode_elem_sep", "void", "setDataSetId", "concode_elem_sep", "void", "setPredecessorId", "concode_elem_sep", "void", "setIsActive", "concode_elem_sep", "void", "setChecksumType"]}
{"code": "void function ( ) { mGenerator . setNextContainerId ( TEST_ID ) ; Assert . assertEquals ( TEST_ID , mGenerator . getNewContainerId ( ) ) ; Assert . assertEquals ( TEST_ID + 1 , mGenerator . getNewContainerId ( ) ) ; Assert . assertEquals ( TEST_ID + 2 , mGenerator . getNewContainerId ( ) ) ; }", "nl": "tests the blockcontaineridgenerator #setnextcontainerid long method . concode_field_sep long TEST_ID concode_elem_sep BlockContainerIdGenerator mGenerator concode_field_sep void getNewContainerId concode_elem_sep void before", "code_tokens": ["void", "function", "(", ")", "{", "mGenerator", ".", "setNextContainerId", "(", "TEST_ID", ")", ";", "Assert", ".", "assertEquals", "(", "TEST_ID", ",", "mGenerator", ".", "getNewContainerId", "(", ")", ")", ";", "Assert", ".", "assertEquals", "(", "TEST_ID", "+", "1", ",", "mGenerator", ".", "getNewContainerId", "(", ")", ")", ";", "Assert", ".", "assertEquals", "(", "TEST_ID", "+", "2", ",", "mGenerator", ".", "getNewContainerId", "(", ")", ")", ";", "}"], "nl_tokens": ["tests", "the", "blockcontaineridgenerator", "#setnextcontainerid long method . concode_field_sep long TEST_ID concode_elem_sep BlockContainerIdGenerator mGenerator concode_field_sep void getNewContainerId concode_elem_sep void before"]}
{"code": "File function ( ) { File loc0 = null ; try { loc0 = File . createTempFile ( \"srini_string\" , null ) ; loc0 . delete ( ) ; if ( ! loc0 . mkdir ( ) ) { return null ; } return loc0 ; } catch ( IOException loc1 ) { LOG . error ( \"srini_string\" , loc1 ) ; return null ; } }", "nl": "create a temporary directory . concode_field_sep Logger LOG concode_field_sep void act concode_elem_sep void traverseDir concode_elem_sep Collection<SourceUnit> readAllFiles concode_elem_sep Collection<String> readFileNames concode_elem_sep void deleteDir", "code_tokens": ["File", "function", "(", ")", "{", "File", "loc0", "=", "null", ";", "try", "{", "loc0", "=", "File", ".", "createTempFile", "(", "\"srini_string\"", ",", "null", ")", ";", "loc0", ".", "delete", "(", ")", ";", "if", "(", "!", "loc0", ".", "mkdir", "(", ")", ")", "{", "return", "null", ";", "}", "return", "loc0", ";", "}", "catch", "(", "IOException", "loc1", ")", "{", "LOG", ".", "error", "(", "\"srini_string\"", ",", "loc1", ")", ";", "return", "null", ";", "}", "}"], "nl_tokens": ["create", "a", "temporary", "directory", ".", "concode_field_sep", "Logger", "LOG", "concode_field_sep", "void", "act", "concode_elem_sep", "void", "traverseDir", "concode_elem_sep", "Collection", "<", "SourceUnit", ">", "readAllFiles", "concode_elem_sep", "Collection", "<", "String", ">", "readFileNames", "concode_elem_sep", "void", "deleteDir"]}
{"code": "void function ( ) { for ( SentenceListener loc0 : getSentenceListeners ( ) ) { try { loc0 . readingStopped ( ) ; } catch ( Exception loc1 ) { LOGGER . log ( Level . WARNING , LOG_MSG , loc1 ) ; } } }", "nl": "notifies all listeners that data reading has stopped . concode_field_sep String LOG_MSG concode_elem_sep String DISPATCH_ALL concode_elem_sep DataReader reader concode_elem_sep DataListener dataListener concode_elem_sep ConcurrentMap<String,List<SentenceListener>> listeners concode_elem_sep int pauseTimeout concode_elem_sep ExceptionListener exceptionListener concode_elem_sep Thread thread concode_elem_sep Logger LOGGER concode_elem_sep int DEFAULT_TIMEOUT concode_field_sep void fireReadingPaused concode_elem_sep void fireDataEvent concode_elem_sep ExceptionListener getExceptionListener concode_elem_sep void setPauseTimeout concode_elem_sep void start concode_elem_sep void removeSentenceListener concode_elem_sep void registerListener concode_elem_sep List<SentenceListener> getSentenceListeners concode_elem_sep void handleException concode_elem_sep void setDataListener concode_elem_sep void stop concode_elem_sep void setInputStream concode_elem_sep void fireReadingStarted concode_elem_sep void fireSentenceEvent concode_elem_sep void addSentenceListener concode_elem_sep void addSentenceListener concode_elem_sep void addSentenceListener concode_elem_sep int getPauseTimeout concode_elem_sep void setExceptionListener concode_elem_sep void setDatagramSocket", "code_tokens": ["void", "function", "(", ")", "{", "for", "(", "SentenceListener", "loc0", ":", "getSentenceListeners", "(", ")", ")", "{", "try", "{", "loc0", ".", "readingStopped", "(", ")", ";", "}", "catch", "(", "Exception", "loc1", ")", "{", "LOGGER", ".", "log", "(", "Level", ".", "WARNING", ",", "LOG_MSG", ",", "loc1", ")", ";", "}", "}", "}"], "nl_tokens": ["notifies", "all", "listeners", "that", "data", "reading", "has", "stopped", ".", "concode_field_sep", "String", "LOG_MSG", "concode_elem_sep", "String", "DISPATCH_ALL", "concode_elem_sep", "DataReader", "reader", "concode_elem_sep", "DataListener", "dataListener", "concode_elem_sep", "ConcurrentMap", "<", "String", ",", "List", "<", "SentenceListener", ">>", "listeners", "concode_elem_sep", "int", "pauseTimeout", "concode_elem_sep", "ExceptionListener", "exceptionListener", "concode_elem_sep", "Thread", "thread", "concode_elem_sep", "Logger", "LOGGER", "concode_elem_sep", "int", "DEFAULT_TIMEOUT", "concode_field_sep", "void", "fireReadingPaused", "concode_elem_sep", "void", "fireDataEvent", "concode_elem_sep", "ExceptionListener", "getExceptionListener", "concode_elem_sep", "void", "setPauseTimeout", "concode_elem_sep", "void", "start", "concode_elem_sep", "void", "removeSentenceListener", "concode_elem_sep", "void", "registerListener", "concode_elem_sep", "List", "<", "SentenceListener", ">", "getSentenceListeners", "concode_elem_sep", "void", "handleException", "concode_elem_sep", "void", "setDataListener", "concode_elem_sep", "void", "stop", "concode_elem_sep", "void", "setInputStream", "concode_elem_sep", "void", "fireReadingStarted", "concode_elem_sep", "void", "fireSentenceEvent", "concode_elem_sep", "void", "addSentenceListener", "concode_elem_sep", "void", "addSentenceListener", "concode_elem_sep", "void", "addSentenceListener", "concode_elem_sep", "int", "getPauseTimeout", "concode_elem_sep", "void", "setExceptionListener", "concode_elem_sep", "void", "setDatagramSocket"]}
{"code": "int function ( ) { if ( items != null ) { return items . size ( ) ; } return 0 ; }", "nl": "size . concode_field_sep Integer count concode_elem_sep long serialVersionUID concode_elem_sep Integer totalCount concode_elem_sep List<T> items concode_field_sep void addItem concode_elem_sep void setTotalCount concode_elem_sep List<T> getItems concode_elem_sep int hashCode concode_elem_sep void setItems concode_elem_sep boolean equals concode_elem_sep void addList concode_elem_sep Integer getTotalCount concode_elem_sep String toString concode_elem_sep Integer getCount", "code_tokens": ["int", "function", "(", ")", "{", "if", "(", "items", "!=", "null", ")", "{", "return", "items", ".", "size", "(", ")", ";", "}", "return", "0", ";", "}"], "nl_tokens": ["size", ".", "concode_field_sep", "Integer", "count", "concode_elem_sep", "long", "serialVersionUID", "concode_elem_sep", "Integer", "totalCount", "concode_elem_sep", "List", "<", "T", ">", "items", "concode_field_sep", "void", "addItem", "concode_elem_sep", "void", "setTotalCount", "concode_elem_sep", "List", "<", "T", ">", "getItems", "concode_elem_sep", "int", "hashCode", "concode_elem_sep", "void", "setItems", "concode_elem_sep", "boolean", "equals", "concode_elem_sep", "void", "addList", "concode_elem_sep", "Integer", "getTotalCount", "concode_elem_sep", "String", "toString", "concode_elem_sep", "Integer", "getCount"]}
{"code": "boolean function ( ) { return isAuthenticationEnabled ( ) && isAuthorizationEnabled ( ) ; }", "nl": "checks if security is enabled . concode_field_sep PlaceHolder placeHolder concode_field_sep boolean isAuthorizationEnabled concode_elem_sep boolean isAuthenticationEnabled", "code_tokens": ["boolean", "function", "(", ")", "{", "return", "isAuthenticationEnabled", "(", ")", "&", "&", "isAuthorizationEnabled", "(", ")", ";", "}"], "nl_tokens": ["checks", "if", "security", "is", "enabled", ".", "concode_field_sep", "PlaceHolder", "placeHolder", "concode_field_sep", "boolean", "isAuthorizationEnabled", "concode_elem_sep", "boolean", "isAuthenticationEnabled"]}
{"code": "void function ( ) { setMaxLocks ( 1 ) ; final BlockLockManager loc0 = new BlockLockManager ( ) ; long loc1 = loc0 . lockBlock ( TEST_SESSION_ID , 1 , BlockLockType . READ ) ; loc0 . lockBlock ( TEST_SESSION_ID , 1 , BlockLockType . READ ) ; loc0 . unlockBlock ( loc1 ) ; lockExpectingHang ( loc0 , 2 ) ; }", "nl": "tests that block locks are not returned to the pool when they are still in use . concode_field_sep BlockLockManager mLockManager concode_elem_sep long TEST_BLOCK_ID concode_elem_sep ExpectedException mThrown concode_elem_sep long TEST_SESSION_ID concode_elem_sep TemporaryFolder mFolder concode_field_sep void lockAcrossSessions concode_elem_sep void stress concode_elem_sep void validateLockIdWithNoRecord concode_elem_sep void unlockNonExistingLock concode_elem_sep void before concode_elem_sep void reuseLock concode_elem_sep void readBlocksWrite concode_elem_sep void validateLockIdWithWrongBlockId concode_elem_sep void setMaxLocks concode_elem_sep void lockExpectingHang concode_elem_sep void lockBlock concode_elem_sep void grabManyLocks concode_elem_sep void validateLockIdWithWrongSessionId concode_elem_sep void cleanupSession concode_elem_sep void after", "code_tokens": ["void", "function", "(", ")", "{", "setMaxLocks", "(", "1", ")", ";", "final", "BlockLockManager", "loc0", "=", "new", "BlockLockManager", "(", ")", ";", "long", "loc1", "=", "loc0", ".", "lockBlock", "(", "TEST_SESSION_ID", ",", "1", ",", "BlockLockType", ".", "READ", ")", ";", "loc0", ".", "lockBlock", "(", "TEST_SESSION_ID", ",", "1", ",", "BlockLockType", ".", "READ", ")", ";", "loc0", ".", "unlockBlock", "(", "loc1", ")", ";", "lockExpectingHang", "(", "loc0", ",", "2", ")", ";", "}"], "nl_tokens": ["tests", "that", "block", "locks", "are", "not", "returned", "to", "the", "pool", "when", "they", "are", "still", "in", "use", ".", "concode_field_sep", "BlockLockManager", "mLockManager", "concode_elem_sep", "long", "TEST_BLOCK_ID", "concode_elem_sep", "ExpectedException", "mThrown", "concode_elem_sep", "long", "TEST_SESSION_ID", "concode_elem_sep", "TemporaryFolder", "mFolder", "concode_field_sep", "void", "lockAcrossSessions", "concode_elem_sep", "void", "stress", "concode_elem_sep", "void", "validateLockIdWithNoRecord", "concode_elem_sep", "void", "unlockNonExistingLock", "concode_elem_sep", "void", "before", "concode_elem_sep", "void", "reuseLock", "concode_elem_sep", "void", "readBlocksWrite", "concode_elem_sep", "void", "validateLockIdWithWrongBlockId", "concode_elem_sep", "void", "setMaxLocks", "concode_elem_sep", "void", "lockExpectingHang", "concode_elem_sep", "void", "lockBlock", "concode_elem_sep", "void", "grabManyLocks", "concode_elem_sep", "void", "validateLockIdWithWrongSessionId", "concode_elem_sep", "void", "cleanupSession", "concode_elem_sep", "void", "after"]}
{"code": "void function ( int arg0 ) { this . value = arg0 ; }", "nl": "sets the value of the internal integer . concode_field_sep int value concode_field_sep void add concode_elem_sep int getValue concode_elem_sep void dec concode_elem_sep String toString concode_elem_sep int compareTo concode_elem_sep void inc", "code_tokens": ["void", "function", "(", "int", "arg0", ")", "{", "this", ".", "value", "=", "arg0", ";", "}"], "nl_tokens": ["sets", "the", "value", "of", "the", "internal", "integer", ".", "concode_field_sep", "int", "value", "concode_field_sep", "void", "add", "concode_elem_sep", "int", "getValue", "concode_elem_sep", "void", "dec", "concode_elem_sep", "String", "toString", "concode_elem_sep", "int", "compareTo", "concode_elem_sep", "void", "inc"]}
{"code": "boolean function ( ) { return allNodes . size ( ) == 0 ; }", "nl": "checks with heap is empty or not concode_field_sep Map<T,Integer> nodePosition concode_elem_sep List<Node> allNodes concode_elem_sep int weight concode_elem_sep T key concode_field_sep void add concode_elem_sep T min concode_elem_sep void printPositionMap concode_elem_sep void swap concode_elem_sep void updatePositionMap concode_elem_sep Integer getWeight concode_elem_sep Node extractMinNode concode_elem_sep void printHeap concode_elem_sep void main concode_elem_sep T extractMin concode_elem_sep void decrease concode_elem_sep boolean containsData", "code_tokens": ["boolean", "function", "(", ")", "{", "return", "allNodes", ".", "size", "(", ")", "==", "0", ";", "}"], "nl_tokens": ["checks", "with", "heap", "is", "empty", "or", "not", "concode_field_sep", "Map", "<", "T", ",", "Integer", ">", "nodePosition", "concode_elem_sep", "List", "<", "Node", ">", "allNodes", "concode_elem_sep", "int", "weight", "concode_elem_sep", "T", "key", "concode_field_sep", "void", "add", "concode_elem_sep", "T", "min", "concode_elem_sep", "void", "printPositionMap", "concode_elem_sep", "void", "swap", "concode_elem_sep", "void", "updatePositionMap", "concode_elem_sep", "Integer", "getWeight", "concode_elem_sep", "Node", "extractMinNode", "concode_elem_sep", "void", "printHeap", "concode_elem_sep", "void", "main", "concode_elem_sep", "T", "extractMin", "concode_elem_sep", "void", "decrease", "concode_elem_sep", "boolean", "containsData"]}
{"code": "long function ( ) { return this . value ; }", "nl": "returns the number of satoshis of this monetary value . it 's deprecated in favour of accessing #value directly . concode_field_sep MonetaryFormat FRIENDLY_FORMAT concode_elem_sep MonetaryFormat PLAIN_FORMAT concode_elem_sep int SMALLEST_UNIT_EXPONENT concode_elem_sep long value concode_elem_sep String currencyCode concode_field_sep Fiat add concode_elem_sep int signum concode_elem_sep boolean isNegative concode_elem_sep boolean isLessThan concode_elem_sep String getCurrencyCode concode_elem_sep Fiat valueOf concode_elem_sep Fiat subtract concode_elem_sep boolean isGreaterThan concode_elem_sep boolean isPositive concode_elem_sep int smallestUnitExponent concode_elem_sep String toPlainString concode_elem_sep int compareTo concode_elem_sep long getValue concode_elem_sep String toFriendlyString concode_elem_sep Fiat[] divideAndRemainder concode_elem_sep Fiat negate concode_elem_sep int hashCode concode_elem_sep boolean equals concode_elem_sep boolean isZero concode_elem_sep Fiat divide concode_elem_sep long divide concode_elem_sep String toString concode_elem_sep Fiat multiply concode_elem_sep Fiat parseFiat", "code_tokens": ["long", "function", "(", ")", "{", "return", "this", ".", "value", ";", "}"], "nl_tokens": ["returns", "the", "number", "of", "satoshis", "of", "this", "monetary", "value", ".", "it", "'", "s", "deprecated", "in", "favour", "of", "accessing", "#value directly . concode_field_sep MonetaryFormat FRIENDLY_FORMAT concode_elem_sep MonetaryFormat PLAIN_FORMAT concode_elem_sep int SMALLEST_UNIT_EXPONENT concode_elem_sep long value concode_elem_sep String currencyCode concode_field_sep Fiat add concode_elem_sep int signum concode_elem_sep boolean isNegative concode_elem_sep boolean isLessThan concode_elem_sep String getCurrencyCode concode_elem_sep Fiat valueOf concode_elem_sep Fiat subtract concode_elem_sep boolean isGreaterThan concode_elem_sep boolean isPositive concode_elem_sep int smallestUnitExponent concode_elem_sep String toPlainString concode_elem_sep int compareTo concode_elem_sep long getValue concode_elem_sep String toFriendlyString concode_elem_sep Fiat[] divideAndRemainder concode_elem_sep Fiat negate concode_elem_sep int hashCode concode_elem_sep boolean equals concode_elem_sep boolean isZero concode_elem_sep Fiat divide concode_elem_sep long divide concode_elem_sep String toString concode_elem_sep Fiat multiply concode_elem_sep Fiat parseFiat"]}
{"code": "boolean function ( Map < K , V > arg0 ) { return ( arg0 == null || arg0 . size ( ) == 0 ) ; }", "nl": "is null or its size is 0 isempty null = true ; isempty = true ; isempty 1 , 2 = false ; concode_field_sep String DEFAULT_KEY_AND_VALUE_PAIR_SEPARATOR concode_elem_sep String DEFAULT_KEY_AND_VALUE_SEPARATOR concode_field_sep K getKeyByValue concode_elem_sep boolean putMapNotNullKeyAndValue concode_elem_sep Map<String,String> parseKeyAndValueToMap concode_elem_sep Map<String,String> parseKeyAndValueToMap concode_elem_sep Map<String,String> parseKeyAndValueToMap concode_elem_sep String toJson concode_elem_sep Boolean mapObjectContainName concode_elem_sep boolean putMapNotEmptyKeyAndValue concode_elem_sep boolean putMapNotEmptyKeyAndValue concode_elem_sep boolean putMapNotNullKey concode_elem_sep Boolean mapContainName concode_elem_sep Boolean mapStringContainName concode_elem_sep boolean putMapNotEmptyKey concode_elem_sep boolean putMapNotEmptyKeyObject", "code_tokens": ["boolean", "function", "(", "Map", "<", "K", ",", "V", ">", "arg0", ")", "{", "return", "(", "arg0", "==", "null", "|", "|", "arg0", ".", "size", "(", ")", "==", "0", ")", ";", "}"], "nl_tokens": ["is", "null", "or", "its", "size", "is", "0", "isempty", "null", "=", "true", ";", "isempty", "=", "true", ";", "isempty", "1", ",", "2", "=", "false", ";", "concode_field_sep", "String", "DEFAULT_KEY_AND_VALUE_PAIR_SEPARATOR", "concode_elem_sep", "String", "DEFAULT_KEY_AND_VALUE_SEPARATOR", "concode_field_sep", "K", "getKeyByValue", "concode_elem_sep", "boolean", "putMapNotNullKeyAndValue", "concode_elem_sep", "Map", "<", "String", ",", "String", ">", "parseKeyAndValueToMap", "concode_elem_sep", "Map", "<", "String", ",", "String", ">", "parseKeyAndValueToMap", "concode_elem_sep", "Map", "<", "String", ",", "String", ">", "parseKeyAndValueToMap", "concode_elem_sep", "String", "toJson", "concode_elem_sep", "Boolean", "mapObjectContainName", "concode_elem_sep", "boolean", "putMapNotEmptyKeyAndValue", "concode_elem_sep", "boolean", "putMapNotEmptyKeyAndValue", "concode_elem_sep", "boolean", "putMapNotNullKey", "concode_elem_sep", "Boolean", "mapContainName", "concode_elem_sep", "Boolean", "mapStringContainName", "concode_elem_sep", "boolean", "putMapNotEmptyKey", "concode_elem_sep", "boolean", "putMapNotEmptyKeyObject"]}
{"code": "Bitmap function ( Bitmap arg0 ) { Bitmap loc0 = Bitmap . createScaledBitmap ( arg0 , getDims ( ) [ 0 ] , getDims ( ) [ 1 ] , true ) ; return loc0 ; }", "nl": "rescales the image to ideal with and height concode_field_sep PlaceHolder placeHolder concode_field_sep Bitmap StringToBitMap concode_elem_sep void erase concode_elem_sep Bitmap getMorph concode_elem_sep boolean isGood concode_elem_sep Intent shareImage concode_elem_sep Bitmap decodeSampledBitmapFromResource concode_elem_sep String BitMapToString concode_elem_sep Bitmap rescaleThumb concode_elem_sep Bitmap rescaleThumb concode_elem_sep void fakeMove concode_elem_sep boolean hasBackground concode_elem_sep TextView createMessage concode_elem_sep Intent getEmail concode_elem_sep Uri getImageUri concode_elem_sep void switchDims concode_elem_sep int calculateInSampleSize concode_elem_sep boolean hasForeground concode_elem_sep int[] getDims", "code_tokens": ["Bitmap", "function", "(", "Bitmap", "arg0", ")", "{", "Bitmap", "loc0", "=", "Bitmap", ".", "createScaledBitmap", "(", "arg0", ",", "getDims", "(", ")", "[", "0", "]", ",", "getDims", "(", ")", "[", "1", "]", ",", "true", ")", ";", "return", "loc0", ";", "}"], "nl_tokens": ["rescales", "the", "image", "to", "ideal", "with", "and", "height", "concode_field_sep", "PlaceHolder", "placeHolder", "concode_field_sep", "Bitmap", "StringToBitMap", "concode_elem_sep", "void", "erase", "concode_elem_sep", "Bitmap", "getMorph", "concode_elem_sep", "boolean", "isGood", "concode_elem_sep", "Intent", "shareImage", "concode_elem_sep", "Bitmap", "decodeSampledBitmapFromResource", "concode_elem_sep", "String", "BitMapToString", "concode_elem_sep", "Bitmap", "rescaleThumb", "concode_elem_sep", "Bitmap", "rescaleThumb", "concode_elem_sep", "void", "fakeMove", "concode_elem_sep", "boolean", "hasBackground", "concode_elem_sep", "TextView", "createMessage", "concode_elem_sep", "Intent", "getEmail", "concode_elem_sep", "Uri", "getImageUri", "concode_elem_sep", "void", "switchDims", "concode_elem_sep", "int", "calculateInSampleSize", "concode_elem_sep", "boolean", "hasForeground", "concode_elem_sep", "int", "[", "]", "getDims"]}
{"code": "Map < String , Object > function ( ) { return responseContext ; }", "nl": "get the map of properties which affect the responses only . these additional properties may be optionally set after a proxy or webclient has been created . concode_field_sep ConduitSelector conduitSelector concode_elem_sep Map<String,Object> requestContext concode_elem_sep Bus bus concode_elem_sep List<Interceptor<? extends Message>> inInterceptors concode_elem_sep long synchronousTimeout concode_elem_sep List<Interceptor<? extends Message>> outInterceptors concode_elem_sep Logger LOG concode_elem_sep List<Interceptor<? extends Message>> inFault concode_elem_sep Map<String,Object> responseContext concode_elem_sep List<Interceptor<? extends Message>> outFault concode_field_sep Bus getBus concode_elem_sep List<Interceptor<? extends Message>> getOutFaultInterceptors concode_elem_sep Endpoint getEndpoint concode_elem_sep long getSynchronousTimeout concode_elem_sep void setConduitSelector concode_elem_sep void setOutInterceptors concode_elem_sep List<Interceptor<? extends Message>> getInInterceptors concode_elem_sep boolean isResponseExpectedForOneway concode_elem_sep void setOutFaultInterceptors concode_elem_sep HTTPConduit getHttpConduit concode_elem_sep Conduit getConduit concode_elem_sep void setSynchronousTimeout concode_elem_sep ConduitSelector getConduitSelector concode_elem_sep List<Interceptor<? extends Message>> getInFaultInterceptors concode_elem_sep List<Interceptor<? extends Message>> getOutInterceptors concode_elem_sep void setInInterceptors concode_elem_sep Map<String,Object> getRequestContext concode_elem_sep void setInFaultInterceptors concode_elem_sep void setBus concode_elem_sep void prepareConduitSelector", "code_tokens": ["Map", "<", "String", ",", "Object", ">", "function", "(", ")", "{", "return", "responseContext", ";", "}"], "nl_tokens": ["get", "the", "map", "of", "properties", "which", "affect", "the", "responses", "only", ".", "these", "additional", "properties", "may", "be", "optionally", "set", "after", "a", "proxy", "or", "webclient", "has", "been", "created", ".", "concode_field_sep", "ConduitSelector", "conduitSelector", "concode_elem_sep", "Map", "<", "String", ",", "Object", ">", "requestContext", "concode_elem_sep", "Bus", "bus", "concode_elem_sep", "List", "<", "Interceptor", "<", "?", "extends", "Message", ">>", "inInterceptors", "concode_elem_sep", "long", "synchronousTimeout", "concode_elem_sep", "List", "<", "Interceptor", "<", "?", "extends", "Message", ">>", "outInterceptors", "concode_elem_sep", "Logger", "LOG", "concode_elem_sep", "List", "<", "Interceptor", "<", "?", "extends", "Message", ">>", "inFault", "concode_elem_sep", "Map", "<", "String", ",", "Object", ">", "responseContext", "concode_elem_sep", "List", "<", "Interceptor", "<", "?", "extends", "Message", ">>", "outFault", "concode_field_sep", "Bus", "getBus", "concode_elem_sep", "List", "<", "Interceptor", "<", "?", "extends", "Message", ">>", "getOutFaultInterceptors", "concode_elem_sep", "Endpoint", "getEndpoint", "concode_elem_sep", "long", "getSynchronousTimeout", "concode_elem_sep", "void", "setConduitSelector", "concode_elem_sep", "void", "setOutInterceptors", "concode_elem_sep", "List", "<", "Interceptor", "<", "?", "extends", "Message", ">>", "getInInterceptors", "concode_elem_sep", "boolean", "isResponseExpectedForOneway", "concode_elem_sep", "void", "setOutFaultInterceptors", "concode_elem_sep", "HTTPConduit", "getHttpConduit", "concode_elem_sep", "Conduit", "getConduit", "concode_elem_sep", "void", "setSynchronousTimeout", "concode_elem_sep", "ConduitSelector", "getConduitSelector", "concode_elem_sep", "List", "<", "Interceptor", "<", "?", "extends", "Message", ">>", "getInFaultInterceptors", "concode_elem_sep", "List", "<", "Interceptor", "<", "?", "extends", "Message", ">>", "getOutInterceptors", "concode_elem_sep", "void", "setInInterceptors", "concode_elem_sep", "Map", "<", "String", ",", "Object", ">", "getRequestContext", "concode_elem_sep", "void", "setInFaultInterceptors", "concode_elem_sep", "void", "setBus", "concode_elem_sep", "void", "prepareConduitSelector"]}
{"code": "void function ( @ ModelAttribute Schedule arg0 ) { repository . save ( arg0 ) ; }", "nl": "create schedule concode_field_sep ScheduleRepository repository concode_field_sep void updateSchedule concode_elem_sep void removeSchedule", "code_tokens": ["void", "function", "(", "@", "ModelAttribute", "Schedule", "arg0", ")", "{", "repository", ".", "save", "(", "arg0", ")", ";", "}"], "nl_tokens": ["create", "schedule", "concode_field_sep", "ScheduleRepository", "repository", "concode_field_sep", "void", "updateSchedule", "concode_elem_sep", "void", "removeSchedule"]}
{"code": "String function ( String arg0 ) { return getList ( arg0 ) . get ( 0 ) ; }", "nl": "used to read only single data concode_field_sep String DATA_SEPARATOR concode_elem_sep Object report concode_elem_sep String ILLEGAL_DATAPATH concode_elem_sep String MAP_SEPARATOR concode_elem_sep String NO_DATA_FOUND concode_field_sep Set<String> getSet concode_elem_sep void loadRowToReport concode_elem_sep List<String> getList concode_elem_sep Map<String,Integer> initializeColumnIndex concode_elem_sep String getCellToStringValue concode_elem_sep HSSFSheet getSheet concode_elem_sep void initializeReport concode_elem_sep String translateAsterix", "code_tokens": ["String", "function", "(", "String", "arg0", ")", "{", "return", "getList", "(", "arg0", ")", ".", "get", "(", "0", ")", ";", "}"], "nl_tokens": ["used", "to", "read", "only", "single", "data", "concode_field_sep", "String", "DATA_SEPARATOR", "concode_elem_sep", "Object", "report", "concode_elem_sep", "String", "ILLEGAL_DATAPATH", "concode_elem_sep", "String", "MAP_SEPARATOR", "concode_elem_sep", "String", "NO_DATA_FOUND", "concode_field_sep", "Set", "<", "String", ">", "getSet", "concode_elem_sep", "void", "loadRowToReport", "concode_elem_sep", "List", "<", "String", ">", "getList", "concode_elem_sep", "Map", "<", "String", ",", "Integer", ">", "initializeColumnIndex", "concode_elem_sep", "String", "getCellToStringValue", "concode_elem_sep", "HSSFSheet", "getSheet", "concode_elem_sep", "void", "initializeReport", "concode_elem_sep", "String", "translateAsterix"]}
{"code": "HexDigest function ( ) { return HexDigest . createFromDigestBytes ( getDigestBytes ( ) ) ; }", "nl": "calculate the digest value of all data processed up until this point and convert the digest into a hexdigest object . concode_field_sep String TOR_DIGEST256_ALGORITHM concode_elem_sep int TOR_DIGEST256_SIZE concode_elem_sep int TOR_DIGEST_SIZE concode_elem_sep MessageDigest digestInstance concode_elem_sep boolean isDigest256 concode_elem_sep String TOR_DIGEST_ALGORITHM concode_field_sep MessageDigest createDigestInstance concode_elem_sep byte[] getDigestBytes concode_elem_sep void update concode_elem_sep void update concode_elem_sep void update concode_elem_sep byte[] peekDigest concode_elem_sep boolean isDigest256", "code_tokens": ["HexDigest", "function", "(", ")", "{", "return", "HexDigest", ".", "createFromDigestBytes", "(", "getDigestBytes", "(", ")", ")", ";", "}"], "nl_tokens": ["calculate", "the", "digest", "value", "of", "all", "data", "processed", "up", "until", "this", "point", "and", "convert", "the", "digest", "into", "a", "hexdigest", "object", ".", "concode_field_sep", "String", "TOR_DIGEST256_ALGORITHM", "concode_elem_sep", "int", "TOR_DIGEST256_SIZE", "concode_elem_sep", "int", "TOR_DIGEST_SIZE", "concode_elem_sep", "MessageDigest", "digestInstance", "concode_elem_sep", "boolean", "isDigest256", "concode_elem_sep", "String", "TOR_DIGEST_ALGORITHM", "concode_field_sep", "MessageDigest", "createDigestInstance", "concode_elem_sep", "byte", "[", "]", "getDigestBytes", "concode_elem_sep", "void", "update", "concode_elem_sep", "void", "update", "concode_elem_sep", "void", "update", "concode_elem_sep", "byte", "[", "]", "peekDigest", "concode_elem_sep", "boolean", "isDigest256"]}
{"code": "void function ( Node arg0 ) { List < Node > loc0 = nodeNameToNodes . get ( arg0 . toString ( ) ) ; if ( loc0 != null ) { loc0 . add ( arg0 ) ; } }", "nl": "index a single node for visitation by rules . concode_field_sep Map<RuleSet,List<Rule>> ruleSetRules concode_elem_sep Map<String,List<Node>> nodeNameToNodes concode_field_sep void add concode_elem_sep void visitAll concode_elem_sep void clear concode_elem_sep void indexNodes concode_elem_sep void visit concode_elem_sep void initialize", "code_tokens": ["void", "function", "(", "Node", "arg0", ")", "{", "List", "<", "Node", ">", "loc0", "=", "nodeNameToNodes", ".", "get", "(", "arg0", ".", "toString", "(", ")", ")", ";", "if", "(", "loc0", "!=", "null", ")", "{", "loc0", ".", "add", "(", "arg0", ")", ";", "}", "}"], "nl_tokens": ["index", "a", "single", "node", "for", "visitation", "by", "rules", ".", "concode_field_sep", "Map", "<", "RuleSet", ",", "List", "<", "Rule", ">>", "ruleSetRules", "concode_elem_sep", "Map", "<", "String", ",", "List", "<", "Node", ">>", "nodeNameToNodes", "concode_field_sep", "void", "add", "concode_elem_sep", "void", "visitAll", "concode_elem_sep", "void", "clear", "concode_elem_sep", "void", "indexNodes", "concode_elem_sep", "void", "visit", "concode_elem_sep", "void", "initialize"]}
{"code": "void function ( Map < String , List < String >> arg0 ) { for ( String loc0 : arg0 . keySet ( ) ) { SortedSet < String > loc1 = get ( loc0 ) ; if ( loc1 == null ) { loc1 = new TreeSet < String > ( ) ; put ( loc0 , loc1 ) ; } loc1 . addAll ( arg0 . get ( loc0 ) ) ; } }", "nl": "convenience method to merge a map > . concode_field_sep TreeMap<String,SortedSet<String>> wrappedMap concode_field_sep String getAsQueryString concode_elem_sep Set<java.util.Map.Entry<String,SortedSet<String>>> entrySet concode_elem_sep boolean containsKey concode_elem_sep Collection<SortedSet<String>> values concode_elem_sep boolean isEmpty concode_elem_sep void clear concode_elem_sep SortedSet<String> put concode_elem_sep SortedSet<String> put concode_elem_sep String put concode_elem_sep String put concode_elem_sep boolean containsValue concode_elem_sep SortedSet<String> remove concode_elem_sep int size concode_elem_sep String getFirst concode_elem_sep String getFirst concode_elem_sep void putAll concode_elem_sep void putAll concode_elem_sep void putAll concode_elem_sep SortedSet<String> get concode_elem_sep String getAsHeaderElement concode_elem_sep Set<String> keySet concode_elem_sep String putNull", "code_tokens": ["void", "function", "(", "Map", "<", "String", ",", "List", "<", "String", ">>", "arg0", ")", "{", "for", "(", "String", "loc0", ":", "arg0", ".", "keySet", "(", ")", ")", "{", "SortedSet", "<", "String", ">", "loc1", "=", "get", "(", "loc0", ")", ";", "if", "(", "loc1", "==", "null", ")", "{", "loc1", "=", "new", "TreeSet", "<", "String", ">", "(", ")", ";", "put", "(", "loc0", ",", "loc1", ")", ";", "}", "loc1", ".", "addAll", "(", "arg0", ".", "get", "(", "loc0", ")", ")", ";", "}", "}"], "nl_tokens": ["convenience", "method", "to", "merge", "a", "map", ">", ".", "concode_field_sep", "TreeMap", "<", "String", ",", "SortedSet", "<", "String", ">>", "wrappedMap", "concode_field_sep", "String", "getAsQueryString", "concode_elem_sep", "Set", "<", "java", ".", "util", ".", "Map", ".", "Entry", "<", "String", ",", "SortedSet", "<", "String", ">>", ">", "entrySet", "concode_elem_sep", "boolean", "containsKey", "concode_elem_sep", "Collection", "<", "SortedSet", "<", "String", ">>", "values", "concode_elem_sep", "boolean", "isEmpty", "concode_elem_sep", "void", "clear", "concode_elem_sep", "SortedSet", "<", "String", ">", "put", "concode_elem_sep", "SortedSet", "<", "String", ">", "put", "concode_elem_sep", "String", "put", "concode_elem_sep", "String", "put", "concode_elem_sep", "boolean", "containsValue", "concode_elem_sep", "SortedSet", "<", "String", ">", "remove", "concode_elem_sep", "int", "size", "concode_elem_sep", "String", "getFirst", "concode_elem_sep", "String", "getFirst", "concode_elem_sep", "void", "putAll", "concode_elem_sep", "void", "putAll", "concode_elem_sep", "void", "putAll", "concode_elem_sep", "SortedSet", "<", "String", ">", "get", "concode_elem_sep", "String", "getAsHeaderElement", "concode_elem_sep", "Set", "<", "String", ">", "keySet", "concode_elem_sep", "String", "putNull"]}
{"code": "char [ ] function ( final byte [ ] arg0 ) { final int loc0 = arg0 . length ; final char [ ] loc1 = new char [ loc0 << 1 ] ; for ( int loc2 = 0 , loc3 = 0 ; loc2 < loc0 ; loc2 ++ ) { loc1 [ loc3 ++ ] = CHARS [ ( 0xF0 & arg0 [ loc2 ] ) >>> 4 ] ; loc1 [ loc3 ++ ] = CHARS [ 0x0F & arg0 [ loc2 ] ] ; } return loc1 ; }", "nl": "encode given data as lower case hex chars . concode_field_sep char[] CHARS concode_field_sep String sha1", "code_tokens": ["char", "[", "]", "function", "(", "final", "byte", "[", "]", "arg0", ")", "{", "final", "int", "loc0", "=", "arg0", ".", "length", ";", "final", "char", "[", "]", "loc1", "=", "new", "char", "[", "loc0", "<<", "1", "]", ";", "for", "(", "int", "loc2", "=", "0", ",", "loc3", "=", "0", ";", "loc2", "<", "loc0", ";", "loc2", "+", "+", ")", "{", "loc1", "[", "loc3", "+", "+", "]", "=", "CHARS", "[", "(", "0xF0", "&", "arg0", "[", "loc2", "]", ")", ">>", ">", "4", "]", ";", "loc1", "[", "loc3", "+", "+", "]", "=", "CHARS", "[", "0x0F", "&", "arg0", "[", "loc2", "]", "]", ";", "}", "return", "loc1", ";", "}"], "nl_tokens": ["encode", "given", "data", "as", "lower", "case", "hex", "chars", ".", "concode_field_sep", "char", "[", "]", "CHARS", "concode_field_sep", "String", "sha1"]}
{"code": "String function ( byte [ ] arg0 , String arg1 ) { try { return new String ( arg0 , arg1 ) ; } catch ( UnsupportedEncodingException loc0 ) { throw new RuntimeException ( \"srini_string\" = \"srini_string\" ) ; } }", "nl": "use this function instead of new string byte , string to avoid surprises from non-standard default encodings . concode_field_sep Charset UTF8_CHARSET concode_elem_sep int DEFAULT_BUFFER_SIZE concode_field_sep byte[] readBytesFromStream concode_elem_sep ByteArrayInputStream loadIntoBAIS concode_elem_sep boolean isEmpty concode_elem_sep String toString concode_elem_sep String toString concode_elem_sep String toString concode_elem_sep String toString concode_elem_sep String toString concode_elem_sep String toString concode_elem_sep void consume concode_elem_sep void consume concode_elem_sep int copy concode_elem_sep int copy concode_elem_sep void copy concode_elem_sep void copyAtLeast concode_elem_sep void transferTo concode_elem_sep boolean isEof concode_elem_sep int copyAndCloseInput concode_elem_sep int copyAndCloseInput concode_elem_sep void copyAndCloseInput concode_elem_sep void copyAndCloseInput concode_elem_sep String readStringFromStream", "code_tokens": ["String", "function", "(", "byte", "[", "]", "arg0", ",", "String", "arg1", ")", "{", "try", "{", "return", "new", "String", "(", "arg0", ",", "arg1", ")", ";", "}", "catch", "(", "UnsupportedEncodingException", "loc0", ")", "{", "throw", "new", "RuntimeException", "(", "\"srini_string\"", "=", "\"srini_string\"", ")", ";", "}", "}"], "nl_tokens": ["use", "this", "function", "instead", "of", "new", "string", "byte", ",", "string", "to", "avoid", "surprises", "from", "non", "-", "standard", "default", "encodings", ".", "concode_field_sep", "Charset", "UTF8_CHARSET", "concode_elem_sep", "int", "DEFAULT_BUFFER_SIZE", "concode_field_sep", "byte", "[", "]", "readBytesFromStream", "concode_elem_sep", "ByteArrayInputStream", "loadIntoBAIS", "concode_elem_sep", "boolean", "isEmpty", "concode_elem_sep", "String", "toString", "concode_elem_sep", "String", "toString", "concode_elem_sep", "String", "toString", "concode_elem_sep", "String", "toString", "concode_elem_sep", "String", "toString", "concode_elem_sep", "String", "toString", "concode_elem_sep", "void", "consume", "concode_elem_sep", "void", "consume", "concode_elem_sep", "int", "copy", "concode_elem_sep", "int", "copy", "concode_elem_sep", "void", "copy", "concode_elem_sep", "void", "copyAtLeast", "concode_elem_sep", "void", "transferTo", "concode_elem_sep", "boolean", "isEof", "concode_elem_sep", "int", "copyAndCloseInput", "concode_elem_sep", "int", "copyAndCloseInput", "concode_elem_sep", "void", "copyAndCloseInput", "concode_elem_sep", "void", "copyAndCloseInput", "concode_elem_sep", "String", "readStringFromStream"]}
{"code": "void function ( Map < String , Object > arg0 ) { this . headers = arg0 ; }", "nl": "set all headers for the message concode_field_sep Map<String,Object> headers concode_elem_sep byte body[] concode_elem_sep long deliveryTag concode_elem_sep String replyTo concode_elem_sep String contentEncoding concode_elem_sep String messageId concode_elem_sep String correlationId concode_elem_sep String soapAction concode_elem_sep String contentType concode_field_sep String getCorrelationId concode_elem_sep String getContentEncoding concode_elem_sep Map<String,Object> getHeaders concode_elem_sep byte[] getBody concode_elem_sep String getReplyTo concode_elem_sep void setCorrelationId concode_elem_sep void setContentEncoding concode_elem_sep long getDeliveryTag concode_elem_sep void setMessageId concode_elem_sep void setSoapAction concode_elem_sep void setBody concode_elem_sep String getMessageId concode_elem_sep void setReplyTo concode_elem_sep void setDeliveryTag concode_elem_sep String getContentType concode_elem_sep void setContentType concode_elem_sep String getSoapAction", "code_tokens": ["void", "function", "(", "Map", "<", "String", ",", "Object", ">", "arg0", ")", "{", "this", ".", "headers", "=", "arg0", ";", "}"], "nl_tokens": ["set", "all", "headers", "for", "the", "message", "concode_field_sep", "Map", "<", "String", ",", "Object", ">", "headers", "concode_elem_sep", "byte", "body", "[", "]", "concode_elem_sep", "long", "deliveryTag", "concode_elem_sep", "String", "replyTo", "concode_elem_sep", "String", "contentEncoding", "concode_elem_sep", "String", "messageId", "concode_elem_sep", "String", "correlationId", "concode_elem_sep", "String", "soapAction", "concode_elem_sep", "String", "contentType", "concode_field_sep", "String", "getCorrelationId", "concode_elem_sep", "String", "getContentEncoding", "concode_elem_sep", "Map", "<", "String", ",", "Object", ">", "getHeaders", "concode_elem_sep", "byte", "[", "]", "getBody", "concode_elem_sep", "String", "getReplyTo", "concode_elem_sep", "void", "setCorrelationId", "concode_elem_sep", "void", "setContentEncoding", "concode_elem_sep", "long", "getDeliveryTag", "concode_elem_sep", "void", "setMessageId", "concode_elem_sep", "void", "setSoapAction", "concode_elem_sep", "void", "setBody", "concode_elem_sep", "String", "getMessageId", "concode_elem_sep", "void", "setReplyTo", "concode_elem_sep", "void", "setDeliveryTag", "concode_elem_sep", "String", "getContentType", "concode_elem_sep", "void", "setContentType", "concode_elem_sep", "String", "getSoapAction"]}
{"code": "List < T > function ( T arg0 , T arg1 ) { List < T > loc0 = new ArrayList < > ( 2 ) ; loc0 . add ( arg0 ) ; loc0 . add ( arg1 ) ; return loc0 ; }", "nl": "return a list containing o1 and o2 . concode_field_sep PlaceHolder placeHolder concode_field_sep List<T> add concode_elem_sep T firstOrElse concode_elem_sep boolean equals concode_elem_sep List<T> nonNullList concode_elem_sep List<U> map concode_elem_sep Iterator<Pair<T,T>> pairs", "code_tokens": ["List", "<", "T", ">", "function", "(", "T", "arg0", ",", "T", "arg1", ")", "{", "List", "<", "T", ">", "loc0", "=", "new", "ArrayList", "<", ">", "(", "2", ")", ";", "loc0", ".", "add", "(", "arg0", ")", ";", "loc0", ".", "add", "(", "arg1", ")", ";", "return", "loc0", ";", "}"], "nl_tokens": ["return", "a", "list", "containing", "o1", "and", "o2", ".", "concode_field_sep", "PlaceHolder", "placeHolder", "concode_field_sep", "List", "<", "T", ">", "add", "concode_elem_sep", "T", "firstOrElse", "concode_elem_sep", "boolean", "equals", "concode_elem_sep", "List", "<", "T", ">", "nonNullList", "concode_elem_sep", "List", "<", "U", ">", "map", "concode_elem_sep", "Iterator", "<", "Pair", "<", "T", ",", "T", ">>", "pairs"]}
{"code": "String function ( ) { return pclFeedId ; }", "nl": "gets the pcl feed id . concode_field_sep String pclFeedId concode_elem_sep String errorCode concode_elem_sep String regFeedId concode_elem_sep String errorMsg concode_field_sep void setErrorMsg concode_elem_sep String getErrorCode concode_elem_sep String getRegFeedId concode_elem_sep void setPclFeedId concode_elem_sep String toString concode_elem_sep void setErrorCode concode_elem_sep void setRegFeedId concode_elem_sep String getErrorMsg", "code_tokens": ["String", "function", "(", ")", "{", "return", "pclFeedId", ";", "}"], "nl_tokens": ["gets", "the", "pcl", "feed", "id", ".", "concode_field_sep", "String", "pclFeedId", "concode_elem_sep", "String", "errorCode", "concode_elem_sep", "String", "regFeedId", "concode_elem_sep", "String", "errorMsg", "concode_field_sep", "void", "setErrorMsg", "concode_elem_sep", "String", "getErrorCode", "concode_elem_sep", "String", "getRegFeedId", "concode_elem_sep", "void", "setPclFeedId", "concode_elem_sep", "String", "toString", "concode_elem_sep", "void", "setErrorCode", "concode_elem_sep", "void", "setRegFeedId", "concode_elem_sep", "String", "getErrorMsg"]}
{"code": "void function ( ) { step -- ; if ( step < 0 ) step = 0 ; undoAction ( step ) ; if ( item != null ) item . changed ( ) ; }", "nl": "step back . concode_field_sep int step concode_elem_sep List<JPanel> panels concode_elem_sep boolean started concode_elem_sep boolean finished concode_elem_sep WizardItem item concode_field_sep void next concode_elem_sep void removePanel concode_elem_sep JPanel getCurrentPanel concode_elem_sep boolean canGoBack concode_elem_sep boolean canFinish concode_elem_sep int getStep concode_elem_sep JPanel makePanel concode_elem_sep int getNumSteps concode_elem_sep boolean isStarted concode_elem_sep void setToDoItem concode_elem_sep boolean isFinished concode_elem_sep void undoAction concode_elem_sep void undoAction concode_elem_sep int getProgress concode_elem_sep WizardItem getToDoItem concode_elem_sep boolean canGoNext concode_elem_sep void finish concode_elem_sep JPanel getPanel concode_elem_sep void doAction concode_elem_sep void doAction", "code_tokens": ["void", "function", "(", ")", "{", "step", "-", "-", ";", "if", "(", "step", "<", "0", ")", "step", "=", "0", ";", "undoAction", "(", "step", ")", ";", "if", "(", "item", "!=", "null", ")", "item", ".", "changed", "(", ")", ";", "}"], "nl_tokens": ["step", "back", ".", "concode_field_sep", "int", "step", "concode_elem_sep", "List", "<", "JPanel", ">", "panels", "concode_elem_sep", "boolean", "started", "concode_elem_sep", "boolean", "finished", "concode_elem_sep", "WizardItem", "item", "concode_field_sep", "void", "next", "concode_elem_sep", "void", "removePanel", "concode_elem_sep", "JPanel", "getCurrentPanel", "concode_elem_sep", "boolean", "canGoBack", "concode_elem_sep", "boolean", "canFinish", "concode_elem_sep", "int", "getStep", "concode_elem_sep", "JPanel", "makePanel", "concode_elem_sep", "int", "getNumSteps", "concode_elem_sep", "boolean", "isStarted", "concode_elem_sep", "void", "setToDoItem", "concode_elem_sep", "boolean", "isFinished", "concode_elem_sep", "void", "undoAction", "concode_elem_sep", "void", "undoAction", "concode_elem_sep", "int", "getProgress", "concode_elem_sep", "WizardItem", "getToDoItem", "concode_elem_sep", "boolean", "canGoNext", "concode_elem_sep", "void", "finish", "concode_elem_sep", "JPanel", "getPanel", "concode_elem_sep", "void", "doAction", "concode_elem_sep", "void", "doAction"]}
{"code": "void function ( Long arg0 ) { this . dataSetId = arg0 ; }", "nl": "sets the data set id . concode_field_sep long serialVersionUID concode_elem_sep String isSystemDerived concode_elem_sep String isActive concode_elem_sep BigDecimal predecessorId concode_elem_sep String srcFileName concode_elem_sep BigDecimal successorId concode_elem_sep BigDecimal feedId concode_elem_sep String checksum concode_elem_sep String transmissionDatasetId concode_elem_sep String comments concode_elem_sep String inactivationReasonType concode_elem_sep String isFormatValid concode_elem_sep long dataUnitId concode_elem_sep Timestamp receiptDate concode_elem_sep String srcUniqueFileName concode_elem_sep Timestamp createdDate concode_elem_sep Long dataSetId concode_elem_sep BigDecimal fileSize concode_elem_sep String destFileName concode_elem_sep String loadedInCats concode_elem_sep String checksumType concode_elem_sep Timestamp modifiedDate concode_elem_sep BigDecimal runId concode_elem_sep String isPrepopulated concode_elem_sep String isBulk concode_elem_sep String isUpdate concode_elem_sep String receiptDateType concode_elem_sep String status concode_field_sep void setIsSystemDerived concode_elem_sep void setIsPrepopulated concode_elem_sep String getStatus concode_elem_sep String getIsUpdate concode_elem_sep long getDataUnitId concode_elem_sep BigDecimal getFileSize concode_elem_sep void setInactivationReasonType concode_elem_sep void setDataUnitId concode_elem_sep String getComments concode_elem_sep Timestamp getCreatedDate concode_elem_sep void setFileSize concode_elem_sep BigDecimal getPredecessorId concode_elem_sep void setIsUpdate concode_elem_sep String getReceiptDateType concode_elem_sep BigDecimal getFeedId concode_elem_sep void setReceiptDate concode_elem_sep Timestamp getModifiedDate concode_elem_sep void setSuccessorId concode_elem_sep void setDestFileName concode_elem_sep void setIsBulk concode_elem_sep String getIsFormatValid concode_elem_sep void setIsActive concode_elem_sep void setChecksumType concode_elem_sep void setFeedId concode_elem_sep String getInactivationReasonType concode_elem_sep String getSrcUniqueFileName concode_elem_sep Long getDataSetId concode_elem_sep void setReceiptDateType concode_elem_sep BigDecimal getRunId concode_elem_sep void setSrcFileName concode_elem_sep String getChecksumType concode_elem_sep String getSrcFileName concode_elem_sep String getChecksum concode_elem_sep String getDestFileName concode_elem_sep Timestamp getReceiptDate concode_elem_sep void setTransmissionDatasetId concode_elem_sep String getTransmissionDatasetId concode_elem_sep void setComments concode_elem_sep String getLoadedInCats concode_elem_sep BigDecimal getSuccessorId concode_elem_sep void setLoadedInCats concode_elem_sep String getIsPrepopulated concode_elem_sep void setSrcUniqueFileName concode_elem_sep void setChecksum concode_elem_sep void setIsFormatValid concode_elem_sep String getIsBulk concode_elem_sep void setRunId concode_elem_sep void setStatus concode_elem_sep String getIsActive concode_elem_sep void setModifiedDate concode_elem_sep void setCreatedDate concode_elem_sep void setPredecessorId concode_elem_sep String getIsSystemDerived", "code_tokens": ["void", "function", "(", "Long", "arg0", ")", "{", "this", ".", "dataSetId", "=", "arg0", ";", "}"], "nl_tokens": ["sets", "the", "data", "set", "id", ".", "concode_field_sep", "long", "serialVersionUID", "concode_elem_sep", "String", "isSystemDerived", "concode_elem_sep", "String", "isActive", "concode_elem_sep", "BigDecimal", "predecessorId", "concode_elem_sep", "String", "srcFileName", "concode_elem_sep", "BigDecimal", "successorId", "concode_elem_sep", "BigDecimal", "feedId", "concode_elem_sep", "String", "checksum", "concode_elem_sep", "String", "transmissionDatasetId", "concode_elem_sep", "String", "comments", "concode_elem_sep", "String", "inactivationReasonType", "concode_elem_sep", "String", "isFormatValid", "concode_elem_sep", "long", "dataUnitId", "concode_elem_sep", "Timestamp", "receiptDate", "concode_elem_sep", "String", "srcUniqueFileName", "concode_elem_sep", "Timestamp", "createdDate", "concode_elem_sep", "Long", "dataSetId", "concode_elem_sep", "BigDecimal", "fileSize", "concode_elem_sep", "String", "destFileName", "concode_elem_sep", "String", "loadedInCats", "concode_elem_sep", "String", "checksumType", "concode_elem_sep", "Timestamp", "modifiedDate", "concode_elem_sep", "BigDecimal", "runId", "concode_elem_sep", "String", "isPrepopulated", "concode_elem_sep", "String", "isBulk", "concode_elem_sep", "String", "isUpdate", "concode_elem_sep", "String", "receiptDateType", "concode_elem_sep", "String", "status", "concode_field_sep", "void", "setIsSystemDerived", "concode_elem_sep", "void", "setIsPrepopulated", "concode_elem_sep", "String", "getStatus", "concode_elem_sep", "String", "getIsUpdate", "concode_elem_sep", "long", "getDataUnitId", "concode_elem_sep", "BigDecimal", "getFileSize", "concode_elem_sep", "void", "setInactivationReasonType", "concode_elem_sep", "void", "setDataUnitId", "concode_elem_sep", "String", "getComments", "concode_elem_sep", "Timestamp", "getCreatedDate", "concode_elem_sep", "void", "setFileSize", "concode_elem_sep", "BigDecimal", "getPredecessorId", "concode_elem_sep", "void", "setIsUpdate", "concode_elem_sep", "String", "getReceiptDateType", "concode_elem_sep", "BigDecimal", "getFeedId", "concode_elem_sep", "void", "setReceiptDate", "concode_elem_sep", "Timestamp", "getModifiedDate", "concode_elem_sep", "void", "setSuccessorId", "concode_elem_sep", "void", "setDestFileName", "concode_elem_sep", "void", "setIsBulk", "concode_elem_sep", "String", "getIsFormatValid", "concode_elem_sep", "void", "setIsActive", "concode_elem_sep", "void", "setChecksumType", "concode_elem_sep", "void", "setFeedId", "concode_elem_sep", "String", "getInactivationReasonType", "concode_elem_sep", "String", "getSrcUniqueFileName", "concode_elem_sep", "Long", "getDataSetId", "concode_elem_sep", "void", "setReceiptDateType", "concode_elem_sep", "BigDecimal", "getRunId", "concode_elem_sep", "void", "setSrcFileName", "concode_elem_sep", "String", "getChecksumType", "concode_elem_sep", "String", "getSrcFileName", "concode_elem_sep", "String", "getChecksum", "concode_elem_sep", "String", "getDestFileName", "concode_elem_sep", "Timestamp", "getReceiptDate", "concode_elem_sep", "void", "setTransmissionDatasetId", "concode_elem_sep", "String", "getTransmissionDatasetId", "concode_elem_sep", "void", "setComments", "concode_elem_sep", "String", "getLoadedInCats", "concode_elem_sep", "BigDecimal", "getSuccessorId", "concode_elem_sep", "void", "setLoadedInCats", "concode_elem_sep", "String", "getIsPrepopulated", "concode_elem_sep", "void", "setSrcUniqueFileName", "concode_elem_sep", "void", "setChecksum", "concode_elem_sep", "void", "setIsFormatValid", "concode_elem_sep", "String", "getIsBulk", "concode_elem_sep", "void", "setRunId", "concode_elem_sep", "void", "setStatus", "concode_elem_sep", "String", "getIsActive", "concode_elem_sep", "void", "setModifiedDate", "concode_elem_sep", "void", "setCreatedDate", "concode_elem_sep", "void", "setPredecessorId", "concode_elem_sep", "String", "getIsSystemDerived"]}
{"code": "Verb function ( ) { return Verb . POST ; }", "nl": "returns the verb for the request token endpoint defaults to post concode_field_sep PlaceHolder placeHolder concode_field_sep TimestampService getTimestampService concode_elem_sep AccessTokenExtractor getAccessTokenExtractor concode_elem_sep String getAccessTokenEndpoint concode_elem_sep OAuthService createService concode_elem_sep String getAuthorizationUrl concode_elem_sep SignatureService getSignatureService concode_elem_sep BaseStringExtractor getBaseStringExtractor concode_elem_sep Verb getAccessTokenVerb concode_elem_sep String getRequestTokenEndpoint concode_elem_sep RequestTokenExtractor getRequestTokenExtractor concode_elem_sep HeaderExtractor getHeaderExtractor", "code_tokens": ["Verb", "function", "(", ")", "{", "return", "Verb", ".", "POST", ";", "}"], "nl_tokens": ["returns", "the", "verb", "for", "the", "request", "token", "endpoint", "defaults", "to", "post", "concode_field_sep", "PlaceHolder", "placeHolder", "concode_field_sep", "TimestampService", "getTimestampService", "concode_elem_sep", "AccessTokenExtractor", "getAccessTokenExtractor", "concode_elem_sep", "String", "getAccessTokenEndpoint", "concode_elem_sep", "OAuthService", "createService", "concode_elem_sep", "String", "getAuthorizationUrl", "concode_elem_sep", "SignatureService", "getSignatureService", "concode_elem_sep", "BaseStringExtractor", "getBaseStringExtractor", "concode_elem_sep", "Verb", "getAccessTokenVerb", "concode_elem_sep", "String", "getRequestTokenEndpoint", "concode_elem_sep", "RequestTokenExtractor", "getRequestTokenExtractor", "concode_elem_sep", "HeaderExtractor", "getHeaderExtractor"]}
{"code": "String function ( ) { return mainMethodClassName ; }", "nl": "get the name of the class for main method implementation . concode_field_sep Class<?>[] targetImplements concode_elem_sep String mainMethodClassName concode_elem_sep CompilerEnvirons compilerEnv concode_elem_sep Class<?> targetExtends concode_field_sep void setTargetExtends concode_elem_sep Object[] compileToClassFiles concode_elem_sep Class<?> getTargetExtends concode_elem_sep void setTargetImplements concode_elem_sep void setMainMethodClass concode_elem_sep CompilerEnvirons getCompilerEnv concode_elem_sep Class<?>[] getTargetImplements concode_elem_sep String makeAuxiliaryClassName", "code_tokens": ["String", "function", "(", ")", "{", "return", "mainMethodClassName", ";", "}"], "nl_tokens": ["get", "the", "name", "of", "the", "class", "for", "main", "method", "implementation", ".", "concode_field_sep", "Class", "<", "?", ">", "[", "]", "targetImplements", "concode_elem_sep", "String", "mainMethodClassName", "concode_elem_sep", "CompilerEnvirons", "compilerEnv", "concode_elem_sep", "Class", "<", "?", ">", "targetExtends", "concode_field_sep", "void", "setTargetExtends", "concode_elem_sep", "Object", "[", "]", "compileToClassFiles", "concode_elem_sep", "Class", "<", "?", ">", "getTargetExtends", "concode_elem_sep", "void", "setTargetImplements", "concode_elem_sep", "void", "setMainMethodClass", "concode_elem_sep", "CompilerEnvirons", "getCompilerEnv", "concode_elem_sep", "Class", "<", "?", ">", "[", "]", "getTargetImplements", "concode_elem_sep", "String", "makeAuxiliaryClassName"]}
{"code": "Context function ( ) { return context ; }", "nl": "return the context with the functions and variables of the el evaluator . concode_field_sep Map<String,Method> functions concode_elem_sep ThreadLocal<ELEvaluator> current concode_elem_sep Context context concode_elem_sep ExpressionEvaluator evaluator concode_elem_sep Map<String,Object> vars concode_field_sep void setVariables concode_elem_sep Method resolveFunction concode_elem_sep void addFunction concode_elem_sep Object resolveVariable concode_elem_sep void setVariable concode_elem_sep void setVariable concode_elem_sep ELEvaluator getCurrent concode_elem_sep Object getVariable concode_elem_sep Object getVariable concode_elem_sep T evaluate", "code_tokens": ["Context", "function", "(", ")", "{", "return", "context", ";", "}"], "nl_tokens": ["return", "the", "context", "with", "the", "functions", "and", "variables", "of", "the", "el", "evaluator", ".", "concode_field_sep", "Map", "<", "String", ",", "Method", ">", "functions", "concode_elem_sep", "ThreadLocal", "<", "ELEvaluator", ">", "current", "concode_elem_sep", "Context", "context", "concode_elem_sep", "ExpressionEvaluator", "evaluator", "concode_elem_sep", "Map", "<", "String", ",", "Object", ">", "vars", "concode_field_sep", "void", "setVariables", "concode_elem_sep", "Method", "resolveFunction", "concode_elem_sep", "void", "addFunction", "concode_elem_sep", "Object", "resolveVariable", "concode_elem_sep", "void", "setVariable", "concode_elem_sep", "void", "setVariable", "concode_elem_sep", "ELEvaluator", "getCurrent", "concode_elem_sep", "Object", "getVariable", "concode_elem_sep", "Object", "getVariable", "concode_elem_sep", "T", "evaluate"]}
{"code": "Object function ( String arg0 ) { return this . attributes . remove ( arg0 ) ; }", "nl": "remove an attribute value on the rulecontext . attributes can be shared between rulecontext instances . this operation is thread-safe . attribute values should be modified directly via the reference provided . it is not necessary to call setattribute string , object to update an attribute value . modifications made to the attribute value will automatically be seen by other threads . because of this , you must ensure the attribute values are themselves thread safe . concode_field_sep boolean ignoreExceptions concode_elem_sep File sourceCodeFile concode_elem_sep String sourceCodeFilename concode_elem_sep LanguageVersion languageVersion concode_elem_sep ConcurrentMap<String,Object> attributes concode_elem_sep Report report concode_field_sep void setSourceCodeFile concode_elem_sep void setLanguageVersion concode_elem_sep boolean setAttribute concode_elem_sep LanguageVersion getLanguageVersion concode_elem_sep Object getAttribute concode_elem_sep boolean isIgnoreExceptions concode_elem_sep void setSourceCodeFilename concode_elem_sep File getSourceCodeFile concode_elem_sep void setIgnoreExceptions concode_elem_sep Report getReport concode_elem_sep String getSourceCodeFilename concode_elem_sep void setReport", "code_tokens": ["Object", "function", "(", "String", "arg0", ")", "{", "return", "this", ".", "attributes", ".", "remove", "(", "arg0", ")", ";", "}"], "nl_tokens": ["remove", "an", "attribute", "value", "on", "the", "rulecontext", ".", "attributes", "can", "be", "shared", "between", "rulecontext", "instances", ".", "this", "operation", "is", "thread", "-", "safe", ".", "attribute", "values", "should", "be", "modified", "directly", "via", "the", "reference", "provided", ".", "it", "is", "not", "necessary", "to", "call", "setattribute", "string", ",", "object", "to", "update", "an", "attribute", "value", ".", "modifications", "made", "to", "the", "attribute", "value", "will", "automatically", "be", "seen", "by", "other", "threads", ".", "because", "of", "this", ",", "you", "must", "ensure", "the", "attribute", "values", "are", "themselves", "thread", "safe", ".", "concode_field_sep", "boolean", "ignoreExceptions", "concode_elem_sep", "File", "sourceCodeFile", "concode_elem_sep", "String", "sourceCodeFilename", "concode_elem_sep", "LanguageVersion", "languageVersion", "concode_elem_sep", "ConcurrentMap", "<", "String", ",", "Object", ">", "attributes", "concode_elem_sep", "Report", "report", "concode_field_sep", "void", "setSourceCodeFile", "concode_elem_sep", "void", "setLanguageVersion", "concode_elem_sep", "boolean", "setAttribute", "concode_elem_sep", "LanguageVersion", "getLanguageVersion", "concode_elem_sep", "Object", "getAttribute", "concode_elem_sep", "boolean", "isIgnoreExceptions", "concode_elem_sep", "void", "setSourceCodeFilename", "concode_elem_sep", "File", "getSourceCodeFile", "concode_elem_sep", "void", "setIgnoreExceptions", "concode_elem_sep", "Report", "getReport", "concode_elem_sep", "String", "getSourceCodeFilename", "concode_elem_sep", "void", "setReport"]}
{"code": "GenericJSONBuilder function ( String arg0 ) { place_name = arg0 ; return this ; }", "nl": "not required concode_field_sep double lat concode_elem_sep String id_str concode_elem_sep String screen_name concode_elem_sep String place_name concode_elem_sep String image concode_elem_sep String user_name concode_elem_sep double lng concode_elem_sep Date created_at concode_elem_sep int loc_radius concode_elem_sep String user_id concode_elem_sep String text concode_elem_sep ArrayList<String> extras concode_field_sep GenericJSONBuilder setIDstr concode_elem_sep GenericJSONBuilder addText concode_elem_sep GenericJSONBuilder addField concode_elem_sep void insert concode_elem_sep GenericJSONBuilder setCoordinateRadius concode_elem_sep GenericJSONBuilder setAuthor concode_elem_sep GenericJSONBuilder builder concode_elem_sep GenericJSONBuilder setCoordinate concode_elem_sep GenericJSONBuilder setCreatedTime concode_elem_sep void persist concode_elem_sep String buildFieldJSON concode_elem_sep GenericJSONBuilder setUserid concode_elem_sep GenericJSONBuilder setImage", "code_tokens": ["GenericJSONBuilder", "function", "(", "String", "arg0", ")", "{", "place_name", "=", "arg0", ";", "return", "this", ";", "}"], "nl_tokens": ["not", "required", "concode_field_sep", "double", "lat", "concode_elem_sep", "String", "id_str", "concode_elem_sep", "String", "screen_name", "concode_elem_sep", "String", "place_name", "concode_elem_sep", "String", "image", "concode_elem_sep", "String", "user_name", "concode_elem_sep", "double", "lng", "concode_elem_sep", "Date", "created_at", "concode_elem_sep", "int", "loc_radius", "concode_elem_sep", "String", "user_id", "concode_elem_sep", "String", "text", "concode_elem_sep", "ArrayList", "<", "String", ">", "extras", "concode_field_sep", "GenericJSONBuilder", "setIDstr", "concode_elem_sep", "GenericJSONBuilder", "addText", "concode_elem_sep", "GenericJSONBuilder", "addField", "concode_elem_sep", "void", "insert", "concode_elem_sep", "GenericJSONBuilder", "setCoordinateRadius", "concode_elem_sep", "GenericJSONBuilder", "setAuthor", "concode_elem_sep", "GenericJSONBuilder", "builder", "concode_elem_sep", "GenericJSONBuilder", "setCoordinate", "concode_elem_sep", "GenericJSONBuilder", "setCreatedTime", "concode_elem_sep", "void", "persist", "concode_elem_sep", "String", "buildFieldJSON", "concode_elem_sep", "GenericJSONBuilder", "setUserid", "concode_elem_sep", "GenericJSONBuilder", "setImage"]}
{"code": "boolean function ( String arg0 ) { return this . json . has ( arg0 ) ; }", "nl": "check the internal jsonobject for a key concode_field_sep JsonTray parent concode_elem_sep ClientCredential credential concode_elem_sep JSONObject json concode_field_sep boolean checkExpireTime concode_elem_sep ClientIdentity getIdentity concode_elem_sep Object get concode_elem_sep void setExpireTime concode_elem_sep boolean getBoolean concode_elem_sep boolean getBoolean concode_elem_sep Authentication setIdentity concode_elem_sep String getString concode_elem_sep String getString concode_elem_sep void delete concode_elem_sep void put concode_elem_sep void remove", "code_tokens": ["boolean", "function", "(", "String", "arg0", ")", "{", "return", "this", ".", "json", ".", "has", "(", "arg0", ")", ";", "}"], "nl_tokens": ["check", "the", "internal", "jsonobject", "for", "a", "key", "concode_field_sep", "JsonTray", "parent", "concode_elem_sep", "ClientCredential", "credential", "concode_elem_sep", "JSONObject", "json", "concode_field_sep", "boolean", "checkExpireTime", "concode_elem_sep", "ClientIdentity", "getIdentity", "concode_elem_sep", "Object", "get", "concode_elem_sep", "void", "setExpireTime", "concode_elem_sep", "boolean", "getBoolean", "concode_elem_sep", "boolean", "getBoolean", "concode_elem_sep", "Authentication", "setIdentity", "concode_elem_sep", "String", "getString", "concode_elem_sep", "String", "getString", "concode_elem_sep", "void", "delete", "concode_elem_sep", "void", "put", "concode_elem_sep", "void", "remove"]}
{"code": "Evictor function ( BlockMetadataManagerView arg0 , Allocator arg1 ) { try { return CommonUtils . createNewClassInstance ( Configuration . < Evictor > getClass ( PropertyKey . WORKER_EVICTOR_CLASS ) , new Class [ ] { BlockMetadataManagerView . class , Allocator . class } , new Object [ ] { arg0 , arg1 } ) ; } catch ( Exception loc0 ) { throw Throwables . propagate ( loc0 ) ; } }", "nl": "factory for evictor . concode_field_sep PlaceHolder placeHolder concode_field_sep EvictionPlan freeSpaceWithView", "code_tokens": ["Evictor", "function", "(", "BlockMetadataManagerView", "arg0", ",", "Allocator", "arg1", ")", "{", "try", "{", "return", "CommonUtils", ".", "createNewClassInstance", "(", "Configuration", ".", "<", "Evictor", ">", "getClass", "(", "PropertyKey", ".", "WORKER_EVICTOR_CLASS", ")", ",", "new", "Class", "[", "]", "{", "BlockMetadataManagerView", ".", "class", ",", "Allocator", ".", "class", "}", ",", "new", "Object", "[", "]", "{", "arg0", ",", "arg1", "}", ")", ";", "}", "catch", "(", "Exception", "loc0", ")", "{", "throw", "Throwables", ".", "propagate", "(", "loc0", ")", ";", "}", "}"], "nl_tokens": ["factory", "for", "evictor", ".", "concode_field_sep", "PlaceHolder", "placeHolder", "concode_field_sep", "EvictionPlan", "freeSpaceWithView"]}
{"code": "String function ( String arg0 , String arg1 , String arg2 , String arg3 , String arg4 , String arg5 , String arg6 ) { return String . format ( \"srini_string\" % s + \"srini_string\" % s + \"srini_string\" % s % s + \"srini_string\" + \"srini_string\" , arg2 , arg3 , arg0 , arg1 , arg4 , arg5 , arg6 ) ; }", "nl": "create merge-with query . concode_field_sep String graphName concode_elem_sep String user concode_elem_sep Endpoint ep concode_field_sep String createSelectQuery concode_elem_sep String createAutoMergeQuery concode_elem_sep String createCommonMergeQuery concode_elem_sep void setUpBeforeClass concode_elem_sep void testCommonMerge concode_elem_sep void setUp concode_elem_sep void testManualMerge concode_elem_sep void testAutoMerge concode_elem_sep void testCreatedGraph concode_elem_sep String createManualMergeQuery", "code_tokens": ["String", "function", "(", "String", "arg0", ",", "String", "arg1", ",", "String", "arg2", ",", "String", "arg3", ",", "String", "arg4", ",", "String", "arg5", ",", "String", "arg6", ")", "{", "return", "String", ".", "format", "(", "\"srini_string\"", "%", "s", "+", "\"srini_string\"", "%", "s", "+", "\"srini_string\"", "%", "s", "%", "s", "+", "\"srini_string\"", "+", "\"srini_string\"", ",", "arg2", ",", "arg3", ",", "arg0", ",", "arg1", ",", "arg4", ",", "arg5", ",", "arg6", ")", ";", "}"], "nl_tokens": ["create", "merge", "-", "with", "query", ".", "concode_field_sep", "String", "graphName", "concode_elem_sep", "String", "user", "concode_elem_sep", "Endpoint", "ep", "concode_field_sep", "String", "createSelectQuery", "concode_elem_sep", "String", "createAutoMergeQuery", "concode_elem_sep", "String", "createCommonMergeQuery", "concode_elem_sep", "void", "setUpBeforeClass", "concode_elem_sep", "void", "testCommonMerge", "concode_elem_sep", "void", "setUp", "concode_elem_sep", "void", "testManualMerge", "concode_elem_sep", "void", "testAutoMerge", "concode_elem_sep", "void", "testCreatedGraph", "concode_elem_sep", "String", "createManualMergeQuery"]}
{"code": "Bounds function ( Node arg0 ) { return arg0 . getBoundsInParent ( ) ; }", "nl": "retrieve the physical transformed bounds geom + effect + clip + transform of a node . concode_field_sep PlaceHolder placeHolder concode_field_sep Bounds translateBounds concode_elem_sep Bounds nodeBoundsInScene concode_elem_sep boolean areBoundsVisible concode_elem_sep Bounds makeSceneBounds concode_elem_sep Bounds bounds concode_elem_sep Bounds bounds concode_elem_sep Bounds bounds concode_elem_sep Bounds bounds concode_elem_sep Bounds bounds concode_elem_sep Bounds bounds concode_elem_sep Bounds nodeBoundsInLocal concode_elem_sep Bounds limitToVisibleBounds concode_elem_sep Bounds intersectBounds concode_elem_sep Point2D byOffset concode_elem_sep Bounds nodeBounds concode_elem_sep Bounds boundsOnScreen concode_elem_sep Bounds boundsOnScreen concode_elem_sep Bounds boundsOnScreen concode_elem_sep Bounds boundsOnScreen", "code_tokens": ["Bounds", "function", "(", "Node", "arg0", ")", "{", "return", "arg0", ".", "getBoundsInParent", "(", ")", ";", "}"], "nl_tokens": ["retrieve", "the", "physical", "transformed", "bounds", "geom", "+", "effect", "+", "clip", "+", "transform", "of", "a", "node", ".", "concode_field_sep", "PlaceHolder", "placeHolder", "concode_field_sep", "Bounds", "translateBounds", "concode_elem_sep", "Bounds", "nodeBoundsInScene", "concode_elem_sep", "boolean", "areBoundsVisible", "concode_elem_sep", "Bounds", "makeSceneBounds", "concode_elem_sep", "Bounds", "bounds", "concode_elem_sep", "Bounds", "bounds", "concode_elem_sep", "Bounds", "bounds", "concode_elem_sep", "Bounds", "bounds", "concode_elem_sep", "Bounds", "bounds", "concode_elem_sep", "Bounds", "bounds", "concode_elem_sep", "Bounds", "nodeBoundsInLocal", "concode_elem_sep", "Bounds", "limitToVisibleBounds", "concode_elem_sep", "Bounds", "intersectBounds", "concode_elem_sep", "Point2D", "byOffset", "concode_elem_sep", "Bounds", "nodeBounds", "concode_elem_sep", "Bounds", "boundsOnScreen", "concode_elem_sep", "Bounds", "boundsOnScreen", "concode_elem_sep", "Bounds", "boundsOnScreen", "concode_elem_sep", "Bounds", "boundsOnScreen"]}
{"code": "boolean function ( String arg0 ) { return getString ( arg0 , null ) != null ; }", "nl": "tests for the existence of a setting . concode_field_sep Logger logger concode_elem_sep Properties overrides concode_elem_sep Set<String> removals concode_field_sep Properties read concode_elem_sep int getFilesize concode_elem_sep long getFilesize concode_elem_sep Properties getSettings concode_elem_sep int getInteger concode_elem_sep String getString concode_elem_sep void removeSetting concode_elem_sep boolean saveSettings concode_elem_sep boolean saveSettings concode_elem_sep Map<String,String> getMap concode_elem_sep List<String> getStrings concode_elem_sep List<String> getStrings concode_elem_sep void overrideSetting concode_elem_sep void overrideSetting concode_elem_sep void overrideSetting concode_elem_sep long getLong concode_elem_sep char getChar concode_elem_sep String getRequiredString concode_elem_sep List<String> getAllKeys concode_elem_sep void merge concode_elem_sep boolean getBoolean concode_elem_sep List<Integer> getIntegers concode_elem_sep List<Integer> getIntegers", "code_tokens": ["boolean", "function", "(", "String", "arg0", ")", "{", "return", "getString", "(", "arg0", ",", "null", ")", "!=", "null", ";", "}"], "nl_tokens": ["tests", "for", "the", "existence", "of", "a", "setting", ".", "concode_field_sep", "Logger", "logger", "concode_elem_sep", "Properties", "overrides", "concode_elem_sep", "Set", "<", "String", ">", "removals", "concode_field_sep", "Properties", "read", "concode_elem_sep", "int", "getFilesize", "concode_elem_sep", "long", "getFilesize", "concode_elem_sep", "Properties", "getSettings", "concode_elem_sep", "int", "getInteger", "concode_elem_sep", "String", "getString", "concode_elem_sep", "void", "removeSetting", "concode_elem_sep", "boolean", "saveSettings", "concode_elem_sep", "boolean", "saveSettings", "concode_elem_sep", "Map", "<", "String", ",", "String", ">", "getMap", "concode_elem_sep", "List", "<", "String", ">", "getStrings", "concode_elem_sep", "List", "<", "String", ">", "getStrings", "concode_elem_sep", "void", "overrideSetting", "concode_elem_sep", "void", "overrideSetting", "concode_elem_sep", "void", "overrideSetting", "concode_elem_sep", "long", "getLong", "concode_elem_sep", "char", "getChar", "concode_elem_sep", "String", "getRequiredString", "concode_elem_sep", "List", "<", "String", ">", "getAllKeys", "concode_elem_sep", "void", "merge", "concode_elem_sep", "boolean", "getBoolean", "concode_elem_sep", "List", "<", "Integer", ">", "getIntegers", "concode_elem_sep", "List", "<", "Integer", ">", "getIntegers"]}
{"code": "void function ( ) { mTestStream . seek ( 10 ) ; Assert . assertEquals ( 10 , mTestStream . read ( ) ) ; mTestStream . seek ( 2 ) ; Assert . assertEquals ( 2 , mTestStream . read ( ) ) ; mTestStream . seek ( mBlockSize ) ; Assert . assertEquals ( - 1 , mTestStream . read ( ) ) ; }", "nl": "tests for the bufferedblockinstream #seek long method . concode_field_sep TestBufferedBlockInStream mTestStream concode_elem_sep long mBlockSize concode_elem_sep long mBufferSize concode_field_sep void before concode_elem_sep void bufferRead concode_elem_sep void skip concode_elem_sep void bulkRead concode_elem_sep void singleByteRead", "code_tokens": ["void", "function", "(", ")", "{", "mTestStream", ".", "seek", "(", "10", ")", ";", "Assert", ".", "assertEquals", "(", "10", ",", "mTestStream", ".", "read", "(", ")", ")", ";", "mTestStream", ".", "seek", "(", "2", ")", ";", "Assert", ".", "assertEquals", "(", "2", ",", "mTestStream", ".", "read", "(", ")", ")", ";", "mTestStream", ".", "seek", "(", "mBlockSize", ")", ";", "Assert", ".", "assertEquals", "(", "-", "1", ",", "mTestStream", ".", "read", "(", ")", ")", ";", "}"], "nl_tokens": ["tests", "for", "the", "bufferedblockinstream", "#seek long method . concode_field_sep TestBufferedBlockInStream mTestStream concode_elem_sep long mBlockSize concode_elem_sep long mBufferSize concode_field_sep void before concode_elem_sep void bufferRead concode_elem_sep void skip concode_elem_sep void bulkRead concode_elem_sep void singleByteRead"]}
{"code": "void function ( DataHandler arg0 ) { this . attachinfo = arg0 ; }", "nl": "sets the value of the attachinfo property . concode_field_sep DataHandler attachinfo concode_elem_sep String name concode_field_sep void setName concode_elem_sep String getName concode_elem_sep DataHandler getAttachinfo", "code_tokens": ["void", "function", "(", "DataHandler", "arg0", ")", "{", "this", ".", "attachinfo", "=", "arg0", ";", "}"], "nl_tokens": ["sets", "the", "value", "of", "the", "attachinfo", "property", ".", "concode_field_sep", "DataHandler", "attachinfo", "concode_elem_sep", "String", "name", "concode_field_sep", "void", "setName", "concode_elem_sep", "String", "getName", "concode_elem_sep", "DataHandler", "getAttachinfo"]}
{"code": "Function < Object , E > function ( @ Nullable E arg0 ) { return new ConstantFunction < E > ( arg0 ) ; }", "nl": "returns a function that ignores its input and always returns value . java 8 users : use the lambda expression o - > value instead . concode_field_sep long serialVersionUID concode_elem_sep Predicate<T> predicate concode_elem_sep V defaultValue concode_elem_sep Function<A,? extends B> f concode_elem_sep Function<B,C> g concode_elem_sep Supplier<T> supplier concode_elem_sep Map<K,? extends V> map concode_elem_sep E value concode_field_sep Function<T,Boolean> forPredicate concode_elem_sep Function<Object,T> forSupplier concode_elem_sep String apply concode_elem_sep Object apply concode_elem_sep V apply concode_elem_sep V apply concode_elem_sep C apply concode_elem_sep Boolean apply concode_elem_sep E apply concode_elem_sep T apply concode_elem_sep Function<A,C> compose concode_elem_sep Function<E,E> identity concode_elem_sep int hashCode concode_elem_sep int hashCode concode_elem_sep int hashCode concode_elem_sep int hashCode concode_elem_sep int hashCode concode_elem_sep int hashCode concode_elem_sep boolean equals concode_elem_sep boolean equals concode_elem_sep boolean equals concode_elem_sep boolean equals concode_elem_sep boolean equals concode_elem_sep boolean equals concode_elem_sep Function<Object,String> toStringFunction concode_elem_sep String toString concode_elem_sep String toString concode_elem_sep String toString concode_elem_sep String toString concode_elem_sep String toString concode_elem_sep String toString concode_elem_sep String toString concode_elem_sep String toString concode_elem_sep Function<K,V> forMap concode_elem_sep Function<K,V> forMap", "code_tokens": ["Function", "<", "Object", ",", "E", ">", "function", "(", "@", "Nullable", "E", "arg0", ")", "{", "return", "new", "ConstantFunction", "<", "E", ">", "(", "arg0", ")", ";", "}"], "nl_tokens": ["returns", "a", "function", "that", "ignores", "its", "input", "and", "always", "returns", "value", ".", "java", "8", "users", ":", "use", "the", "lambda", "expression", "o", "-", ">", "value", "instead", ".", "concode_field_sep", "long", "serialVersionUID", "concode_elem_sep", "Predicate", "<", "T", ">", "predicate", "concode_elem_sep", "V", "defaultValue", "concode_elem_sep", "Function", "<", "A", ",", "?", "extends", "B", ">", "f", "concode_elem_sep", "Function", "<", "B", ",", "C", ">", "g", "concode_elem_sep", "Supplier", "<", "T", ">", "supplier", "concode_elem_sep", "Map", "<", "K", ",", "?", "extends", "V", ">", "map", "concode_elem_sep", "E", "value", "concode_field_sep", "Function", "<", "T", ",", "Boolean", ">", "forPredicate", "concode_elem_sep", "Function", "<", "Object", ",", "T", ">", "forSupplier", "concode_elem_sep", "String", "apply", "concode_elem_sep", "Object", "apply", "concode_elem_sep", "V", "apply", "concode_elem_sep", "V", "apply", "concode_elem_sep", "C", "apply", "concode_elem_sep", "Boolean", "apply", "concode_elem_sep", "E", "apply", "concode_elem_sep", "T", "apply", "concode_elem_sep", "Function", "<", "A", ",", "C", ">", "compose", "concode_elem_sep", "Function", "<", "E", ",", "E", ">", "identity", "concode_elem_sep", "int", "hashCode", "concode_elem_sep", "int", "hashCode", "concode_elem_sep", "int", "hashCode", "concode_elem_sep", "int", "hashCode", "concode_elem_sep", "int", "hashCode", "concode_elem_sep", "int", "hashCode", "concode_elem_sep", "boolean", "equals", "concode_elem_sep", "boolean", "equals", "concode_elem_sep", "boolean", "equals", "concode_elem_sep", "boolean", "equals", "concode_elem_sep", "boolean", "equals", "concode_elem_sep", "boolean", "equals", "concode_elem_sep", "Function", "<", "Object", ",", "String", ">", "toStringFunction", "concode_elem_sep", "String", "toString", "concode_elem_sep", "String", "toString", "concode_elem_sep", "String", "toString", "concode_elem_sep", "String", "toString", "concode_elem_sep", "String", "toString", "concode_elem_sep", "String", "toString", "concode_elem_sep", "String", "toString", "concode_elem_sep", "String", "toString", "concode_elem_sep", "Function", "<", "K", ",", "V", ">", "forMap", "concode_elem_sep", "Function", "<", "K", ",", "V", ">", "forMap"]}
{"code": "void function ( ) { System . out . println ( \"srini_string\" ) ; LogEntryInterval loc0 = new LogEntryInterval ( ) ; int loc1 = 0 ; int loc2 = loc0 . getNumberRequests ( ) ; assertEquals ( loc1 , loc2 ) ; }", "nl": "test of getnumberrequests method , of class logentryinterval . concode_field_sep PlaceHolder placeHolder concode_field_sep void testSetIntervalNumber concode_elem_sep void testGetIntervalNumber concode_elem_sep void testSetMeanResponseTime concode_elem_sep void testSetNumberRequests concode_elem_sep void testGetMeanResponseTime concode_elem_sep void testIncNumberRequests", "code_tokens": ["void", "function", "(", ")", "{", "System", ".", "out", ".", "println", "(", "\"srini_string\"", ")", ";", "LogEntryInterval", "loc0", "=", "new", "LogEntryInterval", "(", ")", ";", "int", "loc1", "=", "0", ";", "int", "loc2", "=", "loc0", ".", "getNumberRequests", "(", ")", ";", "assertEquals", "(", "loc1", ",", "loc2", ")", ";", "}"], "nl_tokens": ["test", "of", "getnumberrequests", "method", ",", "of", "class", "logentryinterval", ".", "concode_field_sep", "PlaceHolder", "placeHolder", "concode_field_sep", "void", "testSetIntervalNumber", "concode_elem_sep", "void", "testGetIntervalNumber", "concode_elem_sep", "void", "testSetMeanResponseTime", "concode_elem_sep", "void", "testSetNumberRequests", "concode_elem_sep", "void", "testGetMeanResponseTime", "concode_elem_sep", "void", "testIncNumberRequests"]}
{"code": "AccessibilityRecordCompat function ( AccessibilityEvent arg0 , int arg1 ) { return new AccessibilityRecordCompat ( IMPL . getRecord ( arg0 , arg1 ) ) ; }", "nl": "gets the record at a given index . concode_field_sep AccessibilityEventVersionImpl IMPL concode_elem_sep int TYPE_VIEW_HOVER_EXIT concode_elem_sep int TYPE_VIEW_TEXT_SELECTION_CHANGED concode_elem_sep int TYPE_WINDOW_CONTENT_CHANGED concode_elem_sep int TYPE_VIEW_SCROLLED concode_elem_sep int TYPE_VIEW_HOVER_ENTER concode_elem_sep int TYPE_TOUCH_EXPLORATION_GESTURE_END concode_elem_sep int TYPE_TOUCH_EXPLORATION_GESTURE_START concode_field_sep void appendRecord concode_elem_sep void appendRecord concode_elem_sep void appendRecord concode_elem_sep int getRecordCount concode_elem_sep int getRecordCount concode_elem_sep int getRecordCount", "code_tokens": ["AccessibilityRecordCompat", "function", "(", "AccessibilityEvent", "arg0", ",", "int", "arg1", ")", "{", "return", "new", "AccessibilityRecordCompat", "(", "IMPL", ".", "getRecord", "(", "arg0", ",", "arg1", ")", ")", ";", "}"], "nl_tokens": ["gets", "the", "record", "at", "a", "given", "index", ".", "concode_field_sep", "AccessibilityEventVersionImpl", "IMPL", "concode_elem_sep", "int", "TYPE_VIEW_HOVER_EXIT", "concode_elem_sep", "int", "TYPE_VIEW_TEXT_SELECTION_CHANGED", "concode_elem_sep", "int", "TYPE_WINDOW_CONTENT_CHANGED", "concode_elem_sep", "int", "TYPE_VIEW_SCROLLED", "concode_elem_sep", "int", "TYPE_VIEW_HOVER_ENTER", "concode_elem_sep", "int", "TYPE_TOUCH_EXPLORATION_GESTURE_END", "concode_elem_sep", "int", "TYPE_TOUCH_EXPLORATION_GESTURE_START", "concode_field_sep", "void", "appendRecord", "concode_elem_sep", "void", "appendRecord", "concode_elem_sep", "void", "appendRecord", "concode_elem_sep", "int", "getRecordCount", "concode_elem_sep", "int", "getRecordCount", "concode_elem_sep", "int", "getRecordCount"]}
{"code": "String function ( String arg0 ) { if ( lhs . isFieldName ( ) && lhs . asFieldName ( ) . equals ( arg0 ) && rhs . isFieldName ( ) ) return rhs . asFieldName ( ) ; else if ( rhs . isFieldName ( ) && rhs . asFieldName ( ) . equals ( arg0 ) && lhs . isFieldName ( ) ) return lhs . asFieldName ( ) ; else return null ; }", "nl": "determines if this term is of the form `` f1 = f2 '' where f1 is the specified field and f2 is another field . if so , the method returns the name of that field . if not , the method returns null . concode_field_sep Expression lhs concode_elem_sep Expression rhs concode_field_sep Constant equatesWithConstant concode_elem_sep int reductionFactor concode_elem_sep boolean appliesTo concode_elem_sep boolean isSatisfied concode_elem_sep String toString", "code_tokens": ["String", "function", "(", "String", "arg0", ")", "{", "if", "(", "lhs", ".", "isFieldName", "(", ")", "&", "&", "lhs", ".", "asFieldName", "(", ")", ".", "equals", "(", "arg0", ")", "&", "&", "rhs", ".", "isFieldName", "(", ")", ")", "return", "rhs", ".", "asFieldName", "(", ")", ";", "else", "if", "(", "rhs", ".", "isFieldName", "(", ")", "&", "&", "rhs", ".", "asFieldName", "(", ")", ".", "equals", "(", "arg0", ")", "&", "&", "lhs", ".", "isFieldName", "(", ")", ")", "return", "lhs", ".", "asFieldName", "(", ")", ";", "else", "return", "null", ";", "}"], "nl_tokens": ["determines", "if", "this", "term", "is", "of", "the", "form", "`", "`", "f1", "=", "f2", "''", "where", "f1", "is", "the", "specified", "field", "and", "f2", "is", "another", "field", ".", "if", "so", ",", "the", "method", "returns", "the", "name", "of", "that", "field", ".", "if", "not", ",", "the", "method", "returns", "null", ".", "concode_field_sep", "Expression", "lhs", "concode_elem_sep", "Expression", "rhs", "concode_field_sep", "Constant", "equatesWithConstant", "concode_elem_sep", "int", "reductionFactor", "concode_elem_sep", "boolean", "appliesTo", "concode_elem_sep", "boolean", "isSatisfied", "concode_elem_sep", "String", "toString"]}
{"code": "Object function ( String arg0 ) { for ( Object loc0 : obsoleteFeatures ) { if ( Model . getFacade ( ) . isAAttribute ( loc0 ) && arg0 . equals ( Model . getFacade ( ) . getName ( loc0 ) ) ) { return loc0 ; } } return null ; }", "nl": "get a attribute from the current classifier not yet modeled . concode_field_sep String classnamePrefix concode_elem_sep Logger LOG concode_elem_sep Collection obsoleteInnerClasses concode_elem_sep Object component concode_elem_sep int anonymousClassCounter concode_elem_sep Context context concode_elem_sep Object classifier concode_elem_sep Collection obsoleteFeatures concode_field_sep void addClassifierContext concode_elem_sep void addPackageContext concode_elem_sep void removeObsoleteFeatures concode_elem_sep void innerClassifier concode_elem_sep void addComponent concode_elem_sep void outerClassifier concode_elem_sep Object getMethod concode_elem_sep Object getClassifier concode_elem_sep Object getFeature concode_elem_sep void removeObsoleteInnerClasses concode_elem_sep void feature concode_elem_sep Collection getFeatures concode_elem_sep String getClassnamePrefix concode_elem_sep Object getOperation concode_elem_sep Object getComponent concode_elem_sep String anonymousClass concode_elem_sep Context getContext", "code_tokens": ["Object", "function", "(", "String", "arg0", ")", "{", "for", "(", "Object", "loc0", ":", "obsoleteFeatures", ")", "{", "if", "(", "Model", ".", "getFacade", "(", ")", ".", "isAAttribute", "(", "loc0", ")", "&", "&", "arg0", ".", "equals", "(", "Model", ".", "getFacade", "(", ")", ".", "getName", "(", "loc0", ")", ")", ")", "{", "return", "loc0", ";", "}", "}", "return", "null", ";", "}"], "nl_tokens": ["get", "a", "attribute", "from", "the", "current", "classifier", "not", "yet", "modeled", ".", "concode_field_sep", "String", "classnamePrefix", "concode_elem_sep", "Logger", "LOG", "concode_elem_sep", "Collection", "obsoleteInnerClasses", "concode_elem_sep", "Object", "component", "concode_elem_sep", "int", "anonymousClassCounter", "concode_elem_sep", "Context", "context", "concode_elem_sep", "Object", "classifier", "concode_elem_sep", "Collection", "obsoleteFeatures", "concode_field_sep", "void", "addClassifierContext", "concode_elem_sep", "void", "addPackageContext", "concode_elem_sep", "void", "removeObsoleteFeatures", "concode_elem_sep", "void", "innerClassifier", "concode_elem_sep", "void", "addComponent", "concode_elem_sep", "void", "outerClassifier", "concode_elem_sep", "Object", "getMethod", "concode_elem_sep", "Object", "getClassifier", "concode_elem_sep", "Object", "getFeature", "concode_elem_sep", "void", "removeObsoleteInnerClasses", "concode_elem_sep", "void", "feature", "concode_elem_sep", "Collection", "getFeatures", "concode_elem_sep", "String", "getClassnamePrefix", "concode_elem_sep", "Object", "getOperation", "concode_elem_sep", "Object", "getComponent", "concode_elem_sep", "String", "anonymousClass", "concode_elem_sep", "Context", "getContext"]}
{"code": "Position function ( Position arg0 , Position arg1 ) { if ( ! isComparable ( arg0 , arg1 ) ) return null ; if ( arg0 . endLine > arg1 . endLine ) return arg0 ; if ( arg0 . endLine == arg1 . endLine && arg0 . endColumn >= arg1 . endColumn ) return arg0 ; return arg1 ; }", "nl": "returns the last of the given 2 positions i.e. if pos1 ends after pos2 , then last pos1 , pos2 = pos1 . returns null if the given 2 positions are not comparable . concode_field_sep int endLine concode_elem_sep int UNKNOWN concode_elem_sep int endColumn concode_elem_sep int endOffset concode_elem_sep Position COMPILER_GENERATED concode_elem_sep int CALLER concode_elem_sep int offset concode_elem_sep boolean compilerGenerated concode_elem_sep int line concode_elem_sep int column concode_elem_sep int THIS_METHOD concode_elem_sep int END_UNUSED concode_elem_sep long serialVersionUID concode_elem_sep String path concode_elem_sep String file concode_elem_sep String info concode_field_sep int endLine concode_elem_sep int endColumn concode_elem_sep int endOffset concode_elem_sep int offset concode_elem_sep int line concode_elem_sep int column concode_elem_sep Position truncateEnd concode_elem_sep Position endOf concode_elem_sep String path concode_elem_sep Position startOf concode_elem_sep String file concode_elem_sep boolean isComparable concode_elem_sep boolean isCompilerGenerated concode_elem_sep String toString concode_elem_sep void setInfo concode_elem_sep Position first concode_elem_sep Position compilerGenerated concode_elem_sep Position compilerGenerated concode_elem_sep Position compilerGenerated concode_elem_sep String nameAndLineString", "code_tokens": ["Position", "function", "(", "Position", "arg0", ",", "Position", "arg1", ")", "{", "if", "(", "!", "isComparable", "(", "arg0", ",", "arg1", ")", ")", "return", "null", ";", "if", "(", "arg0", ".", "endLine", ">", "arg1", ".", "endLine", ")", "return", "arg0", ";", "if", "(", "arg0", ".", "endLine", "==", "arg1", ".", "endLine", "&", "&", "arg0", ".", "endColumn", ">=", "arg1", ".", "endColumn", ")", "return", "arg0", ";", "return", "arg1", ";", "}"], "nl_tokens": ["returns", "the", "last", "of", "the", "given", "2", "positions", "i", ".", "e", ".", "if", "pos1", "ends", "after", "pos2", ",", "then", "last", "pos1", ",", "pos2", "=", "pos1", ".", "returns", "null", "if", "the", "given", "2", "positions", "are", "not", "comparable", ".", "concode_field_sep", "int", "endLine", "concode_elem_sep", "int", "UNKNOWN", "concode_elem_sep", "int", "endColumn", "concode_elem_sep", "int", "endOffset", "concode_elem_sep", "Position", "COMPILER_GENERATED", "concode_elem_sep", "int", "CALLER", "concode_elem_sep", "int", "offset", "concode_elem_sep", "boolean", "compilerGenerated", "concode_elem_sep", "int", "line", "concode_elem_sep", "int", "column", "concode_elem_sep", "int", "THIS_METHOD", "concode_elem_sep", "int", "END_UNUSED", "concode_elem_sep", "long", "serialVersionUID", "concode_elem_sep", "String", "path", "concode_elem_sep", "String", "file", "concode_elem_sep", "String", "info", "concode_field_sep", "int", "endLine", "concode_elem_sep", "int", "endColumn", "concode_elem_sep", "int", "endOffset", "concode_elem_sep", "int", "offset", "concode_elem_sep", "int", "line", "concode_elem_sep", "int", "column", "concode_elem_sep", "Position", "truncateEnd", "concode_elem_sep", "Position", "endOf", "concode_elem_sep", "String", "path", "concode_elem_sep", "Position", "startOf", "concode_elem_sep", "String", "file", "concode_elem_sep", "boolean", "isComparable", "concode_elem_sep", "boolean", "isCompilerGenerated", "concode_elem_sep", "String", "toString", "concode_elem_sep", "void", "setInfo", "concode_elem_sep", "Position", "first", "concode_elem_sep", "Position", "compilerGenerated", "concode_elem_sep", "Position", "compilerGenerated", "concode_elem_sep", "Position", "compilerGenerated", "concode_elem_sep", "String", "nameAndLineString"]}
{"code": "void function ( int arg0 ) { for ( int loc0 = 0 ; loc0 < arg0 ; loc0 ++ ) { blockFxThreadWithSemaphore ( ) ; sleep ( SEMAPHORE_SLEEP_IN_MILLIS , MILLISECONDS ) ; } }", "nl": "waits the given int attempts for the event queue of javafx application thread to becompleted , as well as any new events triggered on it . concode_field_sep ExecutorService executorService concode_elem_sep long CONDITION_SLEEP_IN_MILLIS concode_elem_sep int SEMAPHORE_LOOPS_COUNT concode_elem_sep long SEMAPHORE_SLEEP_IN_MILLIS concode_field_sep boolean callConditionAndReturnResult concode_elem_sep void runOnFxThread concode_elem_sep void callCallableAndSetFuture concode_elem_sep void sleepWithException concode_elem_sep void waitForAsyncFx concode_elem_sep T waitForAsyncFx concode_elem_sep void sleep concode_elem_sep T waitForMillis concode_elem_sep Future<Void> async concode_elem_sep Future<T> async concode_elem_sep void runOnThread concode_elem_sep Future<Void> asyncFx concode_elem_sep Future<T> asyncFx concode_elem_sep void blockFxThreadWithSemaphore concode_elem_sep T waitFor concode_elem_sep T waitFor concode_elem_sep void waitFor concode_elem_sep void waitFor concode_elem_sep void waitForAsync concode_elem_sep T waitForAsync", "code_tokens": ["void", "function", "(", "int", "arg0", ")", "{", "for", "(", "int", "loc0", "=", "0", ";", "loc0", "<", "arg0", ";", "loc0", "+", "+", ")", "{", "blockFxThreadWithSemaphore", "(", ")", ";", "sleep", "(", "SEMAPHORE_SLEEP_IN_MILLIS", ",", "MILLISECONDS", ")", ";", "}", "}"], "nl_tokens": ["waits", "the", "given", "int", "attempts", "for", "the", "event", "queue", "of", "javafx", "application", "thread", "to", "becompleted", ",", "as", "well", "as", "any", "new", "events", "triggered", "on", "it", ".", "concode_field_sep", "ExecutorService", "executorService", "concode_elem_sep", "long", "CONDITION_SLEEP_IN_MILLIS", "concode_elem_sep", "int", "SEMAPHORE_LOOPS_COUNT", "concode_elem_sep", "long", "SEMAPHORE_SLEEP_IN_MILLIS", "concode_field_sep", "boolean", "callConditionAndReturnResult", "concode_elem_sep", "void", "runOnFxThread", "concode_elem_sep", "void", "callCallableAndSetFuture", "concode_elem_sep", "void", "sleepWithException", "concode_elem_sep", "void", "waitForAsyncFx", "concode_elem_sep", "T", "waitForAsyncFx", "concode_elem_sep", "void", "sleep", "concode_elem_sep", "T", "waitForMillis", "concode_elem_sep", "Future", "<", "Void", ">", "async", "concode_elem_sep", "Future", "<", "T", ">", "async", "concode_elem_sep", "void", "runOnThread", "concode_elem_sep", "Future", "<", "Void", ">", "asyncFx", "concode_elem_sep", "Future", "<", "T", ">", "asyncFx", "concode_elem_sep", "void", "blockFxThreadWithSemaphore", "concode_elem_sep", "T", "waitFor", "concode_elem_sep", "T", "waitFor", "concode_elem_sep", "void", "waitFor", "concode_elem_sep", "void", "waitFor", "concode_elem_sep", "void", "waitForAsync", "concode_elem_sep", "T", "waitForAsync"]}
{"code": "void function ( String arg0 ) { this . failedAttributeName = arg0 ; }", "nl": "sets the failed attribute name . concode_field_sep Long expectedDataUnitId concode_elem_sep Long seqNo concode_elem_sep Long dataSetId concode_elem_sep Long dataUnitId concode_elem_sep String expectedValue concode_elem_sep String actualValue concode_elem_sep Long expectedDataSetId concode_elem_sep String errorCode concode_elem_sep Long testId concode_elem_sep String failedAttributeName concode_elem_sep String srcFileName concode_elem_sep String errorMsg concode_field_sep void setExpectedValue concode_elem_sep String getExpectedValue concode_elem_sep Long getExpectedDataSetId concode_elem_sep void setExpectedDataSetId concode_elem_sep void setActualValue concode_elem_sep Long getDataSetId concode_elem_sep void setSrcFileName concode_elem_sep Long getExpectedDataUnitId concode_elem_sep void setExpectedDataUnitId concode_elem_sep String getSrcFileName concode_elem_sep Long getSeqNo concode_elem_sep String getFailedAttributeName concode_elem_sep void setTestId concode_elem_sep Long getTestId concode_elem_sep void setErrorCode concode_elem_sep String getActualValue concode_elem_sep Long getDataUnitId concode_elem_sep void setSeqNo concode_elem_sep void setErrorMsg concode_elem_sep String getErrorCode concode_elem_sep void setDataUnitId concode_elem_sep void setDataSetId concode_elem_sep String toString concode_elem_sep String getErrorMsg", "code_tokens": ["void", "function", "(", "String", "arg0", ")", "{", "this", ".", "failedAttributeName", "=", "arg0", ";", "}"], "nl_tokens": ["sets", "the", "failed", "attribute", "name", ".", "concode_field_sep", "Long", "expectedDataUnitId", "concode_elem_sep", "Long", "seqNo", "concode_elem_sep", "Long", "dataSetId", "concode_elem_sep", "Long", "dataUnitId", "concode_elem_sep", "String", "expectedValue", "concode_elem_sep", "String", "actualValue", "concode_elem_sep", "Long", "expectedDataSetId", "concode_elem_sep", "String", "errorCode", "concode_elem_sep", "Long", "testId", "concode_elem_sep", "String", "failedAttributeName", "concode_elem_sep", "String", "srcFileName", "concode_elem_sep", "String", "errorMsg", "concode_field_sep", "void", "setExpectedValue", "concode_elem_sep", "String", "getExpectedValue", "concode_elem_sep", "Long", "getExpectedDataSetId", "concode_elem_sep", "void", "setExpectedDataSetId", "concode_elem_sep", "void", "setActualValue", "concode_elem_sep", "Long", "getDataSetId", "concode_elem_sep", "void", "setSrcFileName", "concode_elem_sep", "Long", "getExpectedDataUnitId", "concode_elem_sep", "void", "setExpectedDataUnitId", "concode_elem_sep", "String", "getSrcFileName", "concode_elem_sep", "Long", "getSeqNo", "concode_elem_sep", "String", "getFailedAttributeName", "concode_elem_sep", "void", "setTestId", "concode_elem_sep", "Long", "getTestId", "concode_elem_sep", "void", "setErrorCode", "concode_elem_sep", "String", "getActualValue", "concode_elem_sep", "Long", "getDataUnitId", "concode_elem_sep", "void", "setSeqNo", "concode_elem_sep", "void", "setErrorMsg", "concode_elem_sep", "String", "getErrorCode", "concode_elem_sep", "void", "setDataUnitId", "concode_elem_sep", "void", "setDataSetId", "concode_elem_sep", "String", "toString", "concode_elem_sep", "String", "getErrorMsg"]}
{"code": "long function ( ) { return timeElapsed ; }", "nl": "gets the total time elapsed in milliseconds . concode_field_sep long timeElapsed concode_elem_sep HttpServletRequest request concode_elem_sep ArrayList messages concode_elem_sep Date startTime concode_elem_sep Date stopTime concode_elem_sep ArrayList parameters concode_field_sep ArrayList getDebugMessages concode_elem_sep HttpServletRequest getRequest concode_elem_sep String getCompleteLog concode_elem_sep ArrayList getParameters concode_elem_sep void startTimer concode_elem_sep void logMsg concode_elem_sep void logMsg concode_elem_sep void stopTimer concode_elem_sep void addParameter concode_elem_sep void addParameter concode_elem_sep void addParameter", "code_tokens": ["long", "function", "(", ")", "{", "return", "timeElapsed", ";", "}"], "nl_tokens": ["gets", "the", "total", "time", "elapsed", "in", "milliseconds", ".", "concode_field_sep", "long", "timeElapsed", "concode_elem_sep", "HttpServletRequest", "request", "concode_elem_sep", "ArrayList", "messages", "concode_elem_sep", "Date", "startTime", "concode_elem_sep", "Date", "stopTime", "concode_elem_sep", "ArrayList", "parameters", "concode_field_sep", "ArrayList", "getDebugMessages", "concode_elem_sep", "HttpServletRequest", "getRequest", "concode_elem_sep", "String", "getCompleteLog", "concode_elem_sep", "ArrayList", "getParameters", "concode_elem_sep", "void", "startTimer", "concode_elem_sep", "void", "logMsg", "concode_elem_sep", "void", "logMsg", "concode_elem_sep", "void", "stopTimer", "concode_elem_sep", "void", "addParameter", "concode_elem_sep", "void", "addParameter", "concode_elem_sep", "void", "addParameter"]}
{"code": "Instrumentation function ( ) { return instrumentation ; }", "nl": "return the instrumentation instance in use . concode_field_sep String DEFAULT_LOCK_TIMEOUT concode_elem_sep XLog LOG concode_elem_sep boolean dryrun concode_elem_sep XLog.Info logInfo concode_elem_sep int priority concode_elem_sep String type concode_elem_sep Map<Long,List<XCommand<?>>> commandQueue concode_elem_sep boolean used concode_elem_sep String name concode_elem_sep long createdTime concode_elem_sep MemoryLocks.LockToken lock concode_elem_sep String INSTRUMENTATION_GROUP concode_elem_sep Instrumentation instrumentation concode_field_sep void loadState concode_elem_sep String getName concode_elem_sep long getLockTimeOut concode_elem_sep void releaseLock concode_elem_sep void eagerVerifyPrecondition concode_elem_sep T execute concode_elem_sep void resetUsed concode_elem_sep String getEntityKey concode_elem_sep T call concode_elem_sep void verifyPrecondition concode_elem_sep boolean isLockRequired concode_elem_sep String getType concode_elem_sep void acquireLock concode_elem_sep int getPriority concode_elem_sep void eagerLoadState concode_elem_sep long getCreatedTime concode_elem_sep void queue concode_elem_sep void queue", "code_tokens": ["Instrumentation", "function", "(", ")", "{", "return", "instrumentation", ";", "}"], "nl_tokens": ["return", "the", "instrumentation", "instance", "in", "use", ".", "concode_field_sep", "String", "DEFAULT_LOCK_TIMEOUT", "concode_elem_sep", "XLog", "LOG", "concode_elem_sep", "boolean", "dryrun", "concode_elem_sep", "XLog", ".", "Info", "logInfo", "concode_elem_sep", "int", "priority", "concode_elem_sep", "String", "type", "concode_elem_sep", "Map", "<", "Long", ",", "List", "<", "XCommand", "<", "?", ">>", ">", "commandQueue", "concode_elem_sep", "boolean", "used", "concode_elem_sep", "String", "name", "concode_elem_sep", "long", "createdTime", "concode_elem_sep", "MemoryLocks", ".", "LockToken", "lock", "concode_elem_sep", "String", "INSTRUMENTATION_GROUP", "concode_elem_sep", "Instrumentation", "instrumentation", "concode_field_sep", "void", "loadState", "concode_elem_sep", "String", "getName", "concode_elem_sep", "long", "getLockTimeOut", "concode_elem_sep", "void", "releaseLock", "concode_elem_sep", "void", "eagerVerifyPrecondition", "concode_elem_sep", "T", "execute", "concode_elem_sep", "void", "resetUsed", "concode_elem_sep", "String", "getEntityKey", "concode_elem_sep", "T", "call", "concode_elem_sep", "void", "verifyPrecondition", "concode_elem_sep", "boolean", "isLockRequired", "concode_elem_sep", "String", "getType", "concode_elem_sep", "void", "acquireLock", "concode_elem_sep", "int", "getPriority", "concode_elem_sep", "void", "eagerLoadState", "concode_elem_sep", "long", "getCreatedTime", "concode_elem_sep", "void", "queue", "concode_elem_sep", "void", "queue"]}
{"code": "void function ( String arg0 ) { webEngine . load ( arg0 ) ; }", "nl": "loads the specified url concode_field_sep WebEngine webEngine concode_field_sep void loadContent concode_elem_sep void setOnAlert concode_elem_sep Object executeScript concode_elem_sep Worker<Void> getLoadWorker concode_elem_sep void setOnError", "code_tokens": ["void", "function", "(", "String", "arg0", ")", "{", "webEngine", ".", "load", "(", "arg0", ")", ";", "}"], "nl_tokens": ["loads", "the", "specified", "url", "concode_field_sep", "WebEngine", "webEngine", "concode_field_sep", "void", "loadContent", "concode_elem_sep", "void", "setOnAlert", "concode_elem_sep", "Object", "executeScript", "concode_elem_sep", "Worker", "<", "Void", ">", "getLoadWorker", "concode_elem_sep", "void", "setOnError"]}
{"code": "void function ( LockedInodePath arg0 ) { List < Inode < ? >> loc0 = arg0 . getInodeList ( ) ; String loc1 = getClientUser ( ) ; List < String > loc2 = getGroups ( loc1 ) ; if ( isPrivilegedUser ( loc1 , loc2 ) ) { return ; } checkInodeList ( loc1 , loc2 , null , arg0 . getUri ( ) . getPath ( ) , loc0 , true ) ; }", "nl": "checks whether the client user is the owner of the path . concode_field_sep InodeTree mInodeTree concode_elem_sep boolean mPermissionCheckEnabled concode_elem_sep String mFileSystemSuperGroup concode_field_sep void checkPermission concode_elem_sep void checkInode concode_elem_sep void checkSetAttributePermission concode_elem_sep void checkParentPermission concode_elem_sep boolean isPrivilegedUser concode_elem_sep void checkInodeList concode_elem_sep void checkSuperUser concode_elem_sep String getClientUser concode_elem_sep List<String> getGroups concode_elem_sep String toExceptionMessage", "code_tokens": ["void", "function", "(", "LockedInodePath", "arg0", ")", "{", "List", "<", "Inode", "<", "?", ">>", "loc0", "=", "arg0", ".", "getInodeList", "(", ")", ";", "String", "loc1", "=", "getClientUser", "(", ")", ";", "List", "<", "String", ">", "loc2", "=", "getGroups", "(", "loc1", ")", ";", "if", "(", "isPrivilegedUser", "(", "loc1", ",", "loc2", ")", ")", "{", "return", ";", "}", "checkInodeList", "(", "loc1", ",", "loc2", ",", "null", ",", "arg0", ".", "getUri", "(", ")", ".", "getPath", "(", ")", ",", "loc0", ",", "true", ")", ";", "}"], "nl_tokens": ["checks", "whether", "the", "client", "user", "is", "the", "owner", "of", "the", "path", ".", "concode_field_sep", "InodeTree", "mInodeTree", "concode_elem_sep", "boolean", "mPermissionCheckEnabled", "concode_elem_sep", "String", "mFileSystemSuperGroup", "concode_field_sep", "void", "checkPermission", "concode_elem_sep", "void", "checkInode", "concode_elem_sep", "void", "checkSetAttributePermission", "concode_elem_sep", "void", "checkParentPermission", "concode_elem_sep", "boolean", "isPrivilegedUser", "concode_elem_sep", "void", "checkInodeList", "concode_elem_sep", "void", "checkSuperUser", "concode_elem_sep", "String", "getClientUser", "concode_elem_sep", "List", "<", "String", ">", "getGroups", "concode_elem_sep", "String", "toExceptionMessage"]}
{"code": "boolean function ( Connection arg0 ) { if ( arg0 . getMetaData ( ) . getDriverName ( ) . toLowerCase ( ) . contains ( DBType . MySQL . name ( ) . toLowerCase ( ) ) ) { return true ; } return false ; }", "nl": "checks if the given connection 's driver is mysql database driver concode_field_sep PlaceHolder placeHolder concode_field_sep Column column concode_elem_sep boolean isPrimaryKey concode_elem_sep String generateDropTableScript concode_elem_sep String generateCreateTableScript concode_elem_sep boolean isHsqlConnection concode_elem_sep String asLabel concode_elem_sep String generateCreateIndexScript concode_elem_sep Class<?> getType concode_elem_sep String name concode_elem_sep String getDbDataType concode_elem_sep int getLength concode_elem_sep Table table concode_elem_sep String columnName", "code_tokens": ["boolean", "function", "(", "Connection", "arg0", ")", "{", "if", "(", "arg0", ".", "getMetaData", "(", ")", ".", "getDriverName", "(", ")", ".", "toLowerCase", "(", ")", ".", "contains", "(", "DBType", ".", "MySQL", ".", "name", "(", ")", ".", "toLowerCase", "(", ")", ")", ")", "{", "return", "true", ";", "}", "return", "false", ";", "}"], "nl_tokens": ["checks", "if", "the", "given", "connection", "'", "s", "driver", "is", "mysql", "database", "driver", "concode_field_sep", "PlaceHolder", "placeHolder", "concode_field_sep", "Column", "column", "concode_elem_sep", "boolean", "isPrimaryKey", "concode_elem_sep", "String", "generateDropTableScript", "concode_elem_sep", "String", "generateCreateTableScript", "concode_elem_sep", "boolean", "isHsqlConnection", "concode_elem_sep", "String", "asLabel", "concode_elem_sep", "String", "generateCreateIndexScript", "concode_elem_sep", "Class", "<", "?", ">", "getType", "concode_elem_sep", "String", "name", "concode_elem_sep", "String", "getDbDataType", "concode_elem_sep", "int", "getLength", "concode_elem_sep", "Table", "table", "concode_elem_sep", "String", "columnName"]}
{"code": "String function ( AccessibilityServiceInfo arg0 ) { return IMPL . getDescription ( arg0 ) ; }", "nl": "description of the accessibility service . statically set from accessibilityservice #service_meta_data meta-data . concode_field_sep AccessibilityServiceInfoVersionImpl IMPL concode_elem_sep int FEEDBACK_ALL_MASK concode_field_sep ResolveInfo getResolveInfo concode_elem_sep ResolveInfo getResolveInfo concode_elem_sep ResolveInfo getResolveInfo concode_elem_sep String flagToString concode_elem_sep String getId concode_elem_sep String getId concode_elem_sep String getId concode_elem_sep boolean getCanRetrieveWindowContent concode_elem_sep boolean getCanRetrieveWindowContent concode_elem_sep boolean getCanRetrieveWindowContent concode_elem_sep String getSettingsActivityName concode_elem_sep String getSettingsActivityName concode_elem_sep String getSettingsActivityName concode_elem_sep String feedbackTypeToString", "code_tokens": ["String", "function", "(", "AccessibilityServiceInfo", "arg0", ")", "{", "return", "IMPL", ".", "getDescription", "(", "arg0", ")", ";", "}"], "nl_tokens": ["description", "of", "the", "accessibility", "service", ".", "statically", "set", "from", "accessibilityservice", "#service_meta_data meta-data . concode_field_sep AccessibilityServiceInfoVersionImpl IMPL concode_elem_sep int FEEDBACK_ALL_MASK concode_field_sep ResolveInfo getResolveInfo concode_elem_sep ResolveInfo getResolveInfo concode_elem_sep ResolveInfo getResolveInfo concode_elem_sep String flagToString concode_elem_sep String getId concode_elem_sep String getId concode_elem_sep String getId concode_elem_sep boolean getCanRetrieveWindowContent concode_elem_sep boolean getCanRetrieveWindowContent concode_elem_sep boolean getCanRetrieveWindowContent concode_elem_sep String getSettingsActivityName concode_elem_sep String getSettingsActivityName concode_elem_sep String getSettingsActivityName concode_elem_sep String feedbackTypeToString"]}
{"code": "void function ( ) { Collections . shuffle ( this . pilotos ) ; for ( Piloto loc0 : this . getPilotos ( ) ) { this . runTurno ( loc0 ) ; } this . notificarObservadoresRondaTerminada ( this . rondas . incrementAndGet ( ) ) ; }", "nl": "ejecuta una ronda . concode_field_sep AtomicLong rondas concode_elem_sep List<? extends Piloto> pilotos concode_elem_sep AtomicLong timeout concode_elem_sep List<Observador> observadores concode_elem_sep Partida partida concode_elem_sep Semaphore semaforo concode_field_sep void rondaTerminada concode_elem_sep void exception concode_elem_sep void agregarObservador concode_elem_sep void notificarObservadoresException concode_elem_sep void run concode_elem_sep void setPartida concode_elem_sep void finalizacion concode_elem_sep void runTurno concode_elem_sep void setPilotos concode_elem_sep void setTimeout concode_elem_sep long getRondas concode_elem_sep void notificarObservadoresRondaTerminada concode_elem_sep Partida getPartida concode_elem_sep List<Observador> getObservadores concode_elem_sep void notificarObservadoresFinalizacion concode_elem_sep long getTimeout concode_elem_sep List<? extends Piloto> getPilotos concode_elem_sep Semaphore getSemaforo", "code_tokens": ["void", "function", "(", ")", "{", "Collections", ".", "shuffle", "(", "this", ".", "pilotos", ")", ";", "for", "(", "Piloto", "loc0", ":", "this", ".", "getPilotos", "(", ")", ")", "{", "this", ".", "runTurno", "(", "loc0", ")", ";", "}", "this", ".", "notificarObservadoresRondaTerminada", "(", "this", ".", "rondas", ".", "incrementAndGet", "(", ")", ")", ";", "}"], "nl_tokens": ["ejecuta", "una", "ronda", ".", "concode_field_sep", "AtomicLong", "rondas", "concode_elem_sep", "List", "<", "?", "extends", "Piloto", ">", "pilotos", "concode_elem_sep", "AtomicLong", "timeout", "concode_elem_sep", "List", "<", "Observador", ">", "observadores", "concode_elem_sep", "Partida", "partida", "concode_elem_sep", "Semaphore", "semaforo", "concode_field_sep", "void", "rondaTerminada", "concode_elem_sep", "void", "exception", "concode_elem_sep", "void", "agregarObservador", "concode_elem_sep", "void", "notificarObservadoresException", "concode_elem_sep", "void", "run", "concode_elem_sep", "void", "setPartida", "concode_elem_sep", "void", "finalizacion", "concode_elem_sep", "void", "runTurno", "concode_elem_sep", "void", "setPilotos", "concode_elem_sep", "void", "setTimeout", "concode_elem_sep", "long", "getRondas", "concode_elem_sep", "void", "notificarObservadoresRondaTerminada", "concode_elem_sep", "Partida", "getPartida", "concode_elem_sep", "List", "<", "Observador", ">", "getObservadores", "concode_elem_sep", "void", "notificarObservadoresFinalizacion", "concode_elem_sep", "long", "getTimeout", "concode_elem_sep", "List", "<", "?", "extends", "Piloto", ">", "getPilotos", "concode_elem_sep", "Semaphore", "getSemaforo"]}
{"code": "boolean function ( String arg0 ) { mIPv6Matcher = mIPv6Pattern . matcher ( arg0 ) ; try { return mIPv6Matcher . matches ( ) ; } catch ( Exception loc0 ) { Log . loc0 ( Constants . TAG , \"srini_string\" , loc0 ) ; return true ; } }", "nl": "check if input is a valid ipv6 address concode_field_sep Matcher mWhitelistHostnameMatcher concode_elem_sep String IPV6_REGEX concode_elem_sep Pattern mTcpdumpHostnamePattern concode_elem_sep Pattern mHostnamePattern concode_elem_sep Pattern hostsParserPattern concode_elem_sep Matcher mIPv4Matcher concode_elem_sep Matcher mTcpdumpHostnameMatcher concode_elem_sep String SIMPLE_IPV6_REGEX concode_elem_sep Matcher mIPv6Matcher concode_elem_sep Matcher mHostnameMatcher concode_elem_sep String TCPDUMP_HOSTNAME_REGEX concode_elem_sep String IPV4_REGEX concode_elem_sep Pattern mIPv6Pattern concode_elem_sep String HOSTS_PARSER_WHITELIST_IMPORT concode_elem_sep Pattern hostsParserWhitelistImportPattern concode_elem_sep String WHITELIST_HOSTNAME_REGEX concode_elem_sep Pattern mIPv4Pattern concode_elem_sep String HOSTS_PARSER concode_elem_sep String HOSTNAME_REGEX concode_elem_sep Pattern mWhitelistHostnamePattern concode_field_sep boolean isValidHostname concode_elem_sep boolean isValidIP concode_elem_sep boolean isValidWhitelistHostname concode_elem_sep String getTcpdumpHostname concode_elem_sep boolean isValidIPv4 concode_elem_sep boolean isValidUrl concode_elem_sep String wildcardToRegex", "code_tokens": ["boolean", "function", "(", "String", "arg0", ")", "{", "mIPv6Matcher", "=", "mIPv6Pattern", ".", "matcher", "(", "arg0", ")", ";", "try", "{", "return", "mIPv6Matcher", ".", "matches", "(", ")", ";", "}", "catch", "(", "Exception", "loc0", ")", "{", "Log", ".", "loc0", "(", "Constants", ".", "TAG", ",", "\"srini_string\"", ",", "loc0", ")", ";", "return", "true", ";", "}", "}"], "nl_tokens": ["check", "if", "input", "is", "a", "valid", "ipv6", "address", "concode_field_sep", "Matcher", "mWhitelistHostnameMatcher", "concode_elem_sep", "String", "IPV6_REGEX", "concode_elem_sep", "Pattern", "mTcpdumpHostnamePattern", "concode_elem_sep", "Pattern", "mHostnamePattern", "concode_elem_sep", "Pattern", "hostsParserPattern", "concode_elem_sep", "Matcher", "mIPv4Matcher", "concode_elem_sep", "Matcher", "mTcpdumpHostnameMatcher", "concode_elem_sep", "String", "SIMPLE_IPV6_REGEX", "concode_elem_sep", "Matcher", "mIPv6Matcher", "concode_elem_sep", "Matcher", "mHostnameMatcher", "concode_elem_sep", "String", "TCPDUMP_HOSTNAME_REGEX", "concode_elem_sep", "String", "IPV4_REGEX", "concode_elem_sep", "Pattern", "mIPv6Pattern", "concode_elem_sep", "String", "HOSTS_PARSER_WHITELIST_IMPORT", "concode_elem_sep", "Pattern", "hostsParserWhitelistImportPattern", "concode_elem_sep", "String", "WHITELIST_HOSTNAME_REGEX", "concode_elem_sep", "Pattern", "mIPv4Pattern", "concode_elem_sep", "String", "HOSTS_PARSER", "concode_elem_sep", "String", "HOSTNAME_REGEX", "concode_elem_sep", "Pattern", "mWhitelistHostnamePattern", "concode_field_sep", "boolean", "isValidHostname", "concode_elem_sep", "boolean", "isValidIP", "concode_elem_sep", "boolean", "isValidWhitelistHostname", "concode_elem_sep", "String", "getTcpdumpHostname", "concode_elem_sep", "boolean", "isValidIPv4", "concode_elem_sep", "boolean", "isValidUrl", "concode_elem_sep", "String", "wildcardToRegex"]}
{"code": "void function ( ) { mClientRWLock = new ClientRWLock ( ) ; mReadLock = mClientRWLock . readLock ( ) ; mWriteLock = mClientRWLock . writeLock ( ) ; }", "nl": "sets up the constructors before a test run . concode_field_sep ClientRWLock mClientRWLock concode_elem_sep Lock mReadLock concode_elem_sep Lock mWriteLock concode_field_sep void unlock concode_elem_sep void lockInterruptibly concode_elem_sep void notSameLock concode_elem_sep void referenceCounting concode_elem_sep void tryLockTestFail", "code_tokens": ["void", "function", "(", ")", "{", "mClientRWLock", "=", "new", "ClientRWLock", "(", ")", ";", "mReadLock", "=", "mClientRWLock", ".", "readLock", "(", ")", ";", "mWriteLock", "=", "mClientRWLock", ".", "writeLock", "(", ")", ";", "}"], "nl_tokens": ["sets", "up", "the", "constructors", "before", "a", "test", "run", ".", "concode_field_sep", "ClientRWLock", "mClientRWLock", "concode_elem_sep", "Lock", "mReadLock", "concode_elem_sep", "Lock", "mWriteLock", "concode_field_sep", "void", "unlock", "concode_elem_sep", "void", "lockInterruptibly", "concode_elem_sep", "void", "notSameLock", "concode_elem_sep", "void", "referenceCounting", "concode_elem_sep", "void", "tryLockTestFail"]}
{"code": "int function ( String arg0 ) { byte [ ] loc0 = arg0 . getBytes ( ) ; int loc1 = loc0 . length ; int loc2 = 5381 ; for ( int loc3 = 0 ; loc3 < loc1 ; loc3 ++ ) { loc2 = ( ( loc2 << 5 ) + loc2 ) + loc0 [ loc3 ] ; } return loc2 ; }", "nl": "get hash value for string using djbx33a algorithm concode_field_sep PlaceHolder placeHolder concode_field_sep void genNCollisions concode_elem_sep String getCollisionString", "code_tokens": ["int", "function", "(", "String", "arg0", ")", "{", "byte", "[", "]", "loc0", "=", "arg0", ".", "getBytes", "(", ")", ";", "int", "loc1", "=", "loc0", ".", "length", ";", "int", "loc2", "=", "5381", ";", "for", "(", "int", "loc3", "=", "0", ";", "loc3", "<", "loc1", ";", "loc3", "+", "+", ")", "{", "loc2", "=", "(", "(", "loc2", "<<", "5", ")", "+", "loc2", ")", "+", "loc0", "[", "loc3", "]", ";", "}", "return", "loc2", ";", "}"], "nl_tokens": ["get", "hash", "value", "for", "string", "using", "djbx33a", "algorithm", "concode_field_sep", "PlaceHolder", "placeHolder", "concode_field_sep", "void", "genNCollisions", "concode_elem_sep", "String", "getCollisionString"]}
{"code": "int function ( ) { return 0xCafe123 ; }", "nl": "compute a hash code . concode_field_sep int SHIFT concode_elem_sep int NONASSOC concode_elem_sep int REDUCE concode_elem_sep int ERROR concode_field_sep int kind concode_elem_sep boolean equals concode_elem_sep boolean equals concode_elem_sep String toString", "code_tokens": ["int", "function", "(", ")", "{", "return", "0xCafe123", ";", "}"], "nl_tokens": ["compute", "a", "hash", "code", ".", "concode_field_sep", "int", "SHIFT", "concode_elem_sep", "int", "NONASSOC", "concode_elem_sep", "int", "REDUCE", "concode_elem_sep", "int", "ERROR", "concode_field_sep", "int", "kind", "concode_elem_sep", "boolean", "equals", "concode_elem_sep", "boolean", "equals", "concode_elem_sep", "String", "toString"]}
{"code": "String function ( ) { return applicationDescription ; }", "nl": "gets the description of the third-party application . concode_field_sep String clientIpAddress concode_elem_sep String clientId concode_elem_sep List<String> allowedGrantTypes concode_elem_sep boolean isConfidential concode_elem_sep List<String> applicationCertificates concode_elem_sep UserSubject subject concode_elem_sep List<String> redirectUris concode_elem_sep List<String> registeredScopes concode_elem_sep String applicationLogoUri concode_elem_sep long serialVersionUID concode_elem_sep String applicationDescription concode_elem_sep List<String> registeredAudiences concode_elem_sep String applicationWebUri concode_elem_sep String clientSecret concode_elem_sep Map<String,String> properties concode_elem_sep String applicationName concode_field_sep UserSubject getSubject concode_elem_sep String getApplicationName concode_elem_sep void setSubject concode_elem_sep String getClientId concode_elem_sep List<String> getAllowedGrantTypes concode_elem_sep void setApplicationDescription concode_elem_sep void setRegisteredScopes concode_elem_sep void setProperties concode_elem_sep String getClientIpAddress concode_elem_sep void setApplicationCertificates concode_elem_sep String getApplicationWebUri concode_elem_sep void setApplicationLogoUri concode_elem_sep void setConfidential concode_elem_sep List<String> getRedirectUris concode_elem_sep void setApplicationWebUri concode_elem_sep void setClientIpAddress concode_elem_sep String getApplicationLogoUri concode_elem_sep void setClientSecret concode_elem_sep void setAllowedGrantTypes concode_elem_sep boolean isConfidential concode_elem_sep String getClientSecret concode_elem_sep void setApplicationName concode_elem_sep Map<String,String> getProperties concode_elem_sep void setRedirectUris concode_elem_sep List<String> getRegisteredAudiences concode_elem_sep void setRegisteredAudiences concode_elem_sep List<String> getApplicationCertificates concode_elem_sep void setClientId concode_elem_sep List<String> getRegisteredScopes", "code_tokens": ["String", "function", "(", ")", "{", "return", "applicationDescription", ";", "}"], "nl_tokens": ["gets", "the", "description", "of", "the", "third", "-", "party", "application", ".", "concode_field_sep", "String", "clientIpAddress", "concode_elem_sep", "String", "clientId", "concode_elem_sep", "List", "<", "String", ">", "allowedGrantTypes", "concode_elem_sep", "boolean", "isConfidential", "concode_elem_sep", "List", "<", "String", ">", "applicationCertificates", "concode_elem_sep", "UserSubject", "subject", "concode_elem_sep", "List", "<", "String", ">", "redirectUris", "concode_elem_sep", "List", "<", "String", ">", "registeredScopes", "concode_elem_sep", "String", "applicationLogoUri", "concode_elem_sep", "long", "serialVersionUID", "concode_elem_sep", "String", "applicationDescription", "concode_elem_sep", "List", "<", "String", ">", "registeredAudiences", "concode_elem_sep", "String", "applicationWebUri", "concode_elem_sep", "String", "clientSecret", "concode_elem_sep", "Map", "<", "String", ",", "String", ">", "properties", "concode_elem_sep", "String", "applicationName", "concode_field_sep", "UserSubject", "getSubject", "concode_elem_sep", "String", "getApplicationName", "concode_elem_sep", "void", "setSubject", "concode_elem_sep", "String", "getClientId", "concode_elem_sep", "List", "<", "String", ">", "getAllowedGrantTypes", "concode_elem_sep", "void", "setApplicationDescription", "concode_elem_sep", "void", "setRegisteredScopes", "concode_elem_sep", "void", "setProperties", "concode_elem_sep", "String", "getClientIpAddress", "concode_elem_sep", "void", "setApplicationCertificates", "concode_elem_sep", "String", "getApplicationWebUri", "concode_elem_sep", "void", "setApplicationLogoUri", "concode_elem_sep", "void", "setConfidential", "concode_elem_sep", "List", "<", "String", ">", "getRedirectUris", "concode_elem_sep", "void", "setApplicationWebUri", "concode_elem_sep", "void", "setClientIpAddress", "concode_elem_sep", "String", "getApplicationLogoUri", "concode_elem_sep", "void", "setClientSecret", "concode_elem_sep", "void", "setAllowedGrantTypes", "concode_elem_sep", "boolean", "isConfidential", "concode_elem_sep", "String", "getClientSecret", "concode_elem_sep", "void", "setApplicationName", "concode_elem_sep", "Map", "<", "String", ",", "String", ">", "getProperties", "concode_elem_sep", "void", "setRedirectUris", "concode_elem_sep", "List", "<", "String", ">", "getRegisteredAudiences", "concode_elem_sep", "void", "setRegisteredAudiences", "concode_elem_sep", "List", "<", "String", ">", "getApplicationCertificates", "concode_elem_sep", "void", "setClientId", "concode_elem_sep", "List", "<", "String", ">", "getRegisteredScopes"]}
{"code": "Integer function ( byte [ ] arg0 , TFieldIdEnum arg1 , TFieldIdEnum ... arg2 ) { return ( Integer ) partialDeserializeField ( TType . I32 , arg0 , arg1 , arg2 ) ; }", "nl": "deserialize only an i32 field addressed by recursively using field id from a byte record . concode_field_sep TProtocol protocol_ concode_elem_sep TMemoryInputTransport trans_ concode_field_sep Long partialDeserializeI64 concode_elem_sep Byte partialDeserializeByte concode_elem_sep Short partialDeserializeSetFieldIdInUnion concode_elem_sep ByteBuffer partialDeserializeByteArray concode_elem_sep Object partialDeserializeField concode_elem_sep Boolean partialDeserializeBool concode_elem_sep void partialDeserialize concode_elem_sep Double partialDeserializeDouble concode_elem_sep Short partialDeserializeI16 concode_elem_sep String partialDeserializeString concode_elem_sep void fromString concode_elem_sep TField locateField concode_elem_sep void deserialize concode_elem_sep void deserialize concode_elem_sep void deserialize", "code_tokens": ["Integer", "function", "(", "byte", "[", "]", "arg0", ",", "TFieldIdEnum", "arg1", ",", "TFieldIdEnum", "...", "arg2", ")", "{", "return", "(", "Integer", ")", "partialDeserializeField", "(", "TType", ".", "I32", ",", "arg0", ",", "arg1", ",", "arg2", ")", ";", "}"], "nl_tokens": ["deserialize", "only", "an", "i32", "field", "addressed", "by", "recursively", "using", "field", "id", "from", "a", "byte", "record", ".", "concode_field_sep", "TProtocol", "protocol_", "concode_elem_sep", "TMemoryInputTransport", "trans_", "concode_field_sep", "Long", "partialDeserializeI64", "concode_elem_sep", "Byte", "partialDeserializeByte", "concode_elem_sep", "Short", "partialDeserializeSetFieldIdInUnion", "concode_elem_sep", "ByteBuffer", "partialDeserializeByteArray", "concode_elem_sep", "Object", "partialDeserializeField", "concode_elem_sep", "Boolean", "partialDeserializeBool", "concode_elem_sep", "void", "partialDeserialize", "concode_elem_sep", "Double", "partialDeserializeDouble", "concode_elem_sep", "Short", "partialDeserializeI16", "concode_elem_sep", "String", "partialDeserializeString", "concode_elem_sep", "void", "fromString", "concode_elem_sep", "TField", "locateField", "concode_elem_sep", "void", "deserialize", "concode_elem_sep", "void", "deserialize", "concode_elem_sep", "void", "deserialize"]}
{"code": "Actual function ( Actual arg0 ) { return arg0 ; }", "nl": "when adding a new substitution a - > b to the map , we need to check if there are already any existing substitutions , say c - > a , and if so , replace them appropriately , in this case with c - > b . this method allows subclasses to perform substitution on a value in the substitution map b in the example above . subclasses may need to override this if the keys and values are not the same object . concode_field_sep Map<ClassType,ClassType> substClassTypeCache concode_elem_sep Map<CacheTypeWrapper,Type> cache concode_elem_sep Type t concode_elem_sep Map<Formal,Actual> subst concode_elem_sep long readObjectVersionUID concode_elem_sep long serialVersionUID concode_elem_sep long writeObjectVersionUID concode_elem_sep ParamTypeSystem<Formal,Actual> ts concode_field_sep void cachePut concode_elem_sep ClassType substClassTypeImpl concode_elem_sep T substMethod concode_elem_sep CacheTypeWrapper typeWrapper concode_elem_sep List<T> substConstructorList concode_elem_sep T transform concode_elem_sep T transform concode_elem_sep T transform concode_elem_sep T transform concode_elem_sep Map<Formal,Actual> substitutions concode_elem_sep T substConstructor concode_elem_sep int hashCode concode_elem_sep int hashCode concode_elem_sep ClassType substClassType concode_elem_sep boolean cacheTypeEquality concode_elem_sep ReferenceType substContainer concode_elem_sep List<T> substMethodList concode_elem_sep Type cacheGet concode_elem_sep List<T> substTypeList concode_elem_sep void writeObject concode_elem_sep Type substType concode_elem_sep void readObject concode_elem_sep Iterator<Entry<Formal,Actual>> entries concode_elem_sep ParamTypeSystem<Formal,Actual> typeSystem concode_elem_sep PClass<Formal,Actual> substPClass concode_elem_sep boolean equals concode_elem_sep boolean equals concode_elem_sep List<T> substFieldList concode_elem_sep Type uncachedSubstType concode_elem_sep Iterable<Entry<Formal,Actual>> is_entry concode_elem_sep String toString concode_elem_sep String toString concode_elem_sep T substField", "code_tokens": ["Actual", "function", "(", "Actual", "arg0", ")", "{", "return", "arg0", ";", "}"], "nl_tokens": ["when", "adding", "a", "new", "substitution", "a", "-", ">", "b", "to", "the", "map", ",", "we", "need", "to", "check", "if", "there", "are", "already", "any", "existing", "substitutions", ",", "say", "c", "-", ">", "a", ",", "and", "if", "so", ",", "replace", "them", "appropriately", ",", "in", "this", "case", "with", "c", "-", ">", "b", ".", "this", "method", "allows", "subclasses", "to", "perform", "substitution", "on", "a", "value", "in", "the", "substitution", "map", "b", "in", "the", "example", "above", ".", "subclasses", "may", "need", "to", "override", "this", "if", "the", "keys", "and", "values", "are", "not", "the", "same", "object", ".", "concode_field_sep", "Map", "<", "ClassType", ",", "ClassType", ">", "substClassTypeCache", "concode_elem_sep", "Map", "<", "CacheTypeWrapper", ",", "Type", ">", "cache", "concode_elem_sep", "Type", "t", "concode_elem_sep", "Map", "<", "Formal", ",", "Actual", ">", "subst", "concode_elem_sep", "long", "readObjectVersionUID", "concode_elem_sep", "long", "serialVersionUID", "concode_elem_sep", "long", "writeObjectVersionUID", "concode_elem_sep", "ParamTypeSystem", "<", "Formal", ",", "Actual", ">", "ts", "concode_field_sep", "void", "cachePut", "concode_elem_sep", "ClassType", "substClassTypeImpl", "concode_elem_sep", "T", "substMethod", "concode_elem_sep", "CacheTypeWrapper", "typeWrapper", "concode_elem_sep", "List", "<", "T", ">", "substConstructorList", "concode_elem_sep", "T", "transform", "concode_elem_sep", "T", "transform", "concode_elem_sep", "T", "transform", "concode_elem_sep", "T", "transform", "concode_elem_sep", "Map", "<", "Formal", ",", "Actual", ">", "substitutions", "concode_elem_sep", "T", "substConstructor", "concode_elem_sep", "int", "hashCode", "concode_elem_sep", "int", "hashCode", "concode_elem_sep", "ClassType", "substClassType", "concode_elem_sep", "boolean", "cacheTypeEquality", "concode_elem_sep", "ReferenceType", "substContainer", "concode_elem_sep", "List", "<", "T", ">", "substMethodList", "concode_elem_sep", "Type", "cacheGet", "concode_elem_sep", "List", "<", "T", ">", "substTypeList", "concode_elem_sep", "void", "writeObject", "concode_elem_sep", "Type", "substType", "concode_elem_sep", "void", "readObject", "concode_elem_sep", "Iterator", "<", "Entry", "<", "Formal", ",", "Actual", ">>", "entries", "concode_elem_sep", "ParamTypeSystem", "<", "Formal", ",", "Actual", ">", "typeSystem", "concode_elem_sep", "PClass", "<", "Formal", ",", "Actual", ">", "substPClass", "concode_elem_sep", "boolean", "equals", "concode_elem_sep", "boolean", "equals", "concode_elem_sep", "List", "<", "T", ">", "substFieldList", "concode_elem_sep", "Type", "uncachedSubstType", "concode_elem_sep", "Iterable", "<", "Entry", "<", "Formal", ",", "Actual", ">>", "is_entry", "concode_elem_sep", "String", "toString", "concode_elem_sep", "String", "toString", "concode_elem_sep", "T", "substField"]}
{"code": "Element function ( ) { return m_KeyInfoEl ; }", "nl": "get keyinfo element of an encrypted element . concode_field_sep EncryptedKeyElement m_EncryptedKeyElement concode_elem_sep Element m_KeyInfoEl concode_elem_sep Logger LOG concode_field_sep EncryptedKeyElement getEncryptedKeyElement", "code_tokens": ["Element", "function", "(", ")", "{", "return", "m_KeyInfoEl", ";", "}"], "nl_tokens": ["get", "keyinfo", "element", "of", "an", "encrypted", "element", ".", "concode_field_sep", "EncryptedKeyElement", "m_EncryptedKeyElement", "concode_elem_sep", "Element", "m_KeyInfoEl", "concode_elem_sep", "Logger", "LOG", "concode_field_sep", "EncryptedKeyElement", "getEncryptedKeyElement"]}
{"code": "ByteBuffer function ( final String arg0 ) { try { final byte [ ] loc0 = arg0 . getBytes ( \"srini_string\" ) ; return ByteBuffer . wrap ( loc0 ) ; } catch ( final UnsupportedEncodingException loc0 ) { LOG . error ( \"srini_string\" , loc0 ) ; return ByteBuffer . allocate ( 0 ) ; } }", "nl": "converts the specified string to a bytebuffer . the string encoding is assumed to be ascii . concode_field_sep CharsetDecoder DECODER concode_elem_sep Logger LOG concode_field_sep Collection<byte[]> splitToByteArrays concode_elem_sep Collection<ByteBuffer> split concode_elem_sep byte[] toByteArray concode_elem_sep void putUnsignedByte concode_elem_sep void putUnsignedByte concode_elem_sep String toAsciiString concode_elem_sep void putUnsignedShort concode_elem_sep void putUnsignedShort concode_elem_sep boolean isUdp concode_elem_sep String getString concode_elem_sep ByteBuffer createBuffer concode_elem_sep void putUnsignedInt concode_elem_sep void putUnsignedInt", "code_tokens": ["ByteBuffer", "function", "(", "final", "String", "arg0", ")", "{", "try", "{", "final", "byte", "[", "]", "loc0", "=", "arg0", ".", "getBytes", "(", "\"srini_string\"", ")", ";", "return", "ByteBuffer", ".", "wrap", "(", "loc0", ")", ";", "}", "catch", "(", "final", "UnsupportedEncodingException", "loc0", ")", "{", "LOG", ".", "error", "(", "\"srini_string\"", ",", "loc0", ")", ";", "return", "ByteBuffer", ".", "allocate", "(", "0", ")", ";", "}", "}"], "nl_tokens": ["converts", "the", "specified", "string", "to", "a", "bytebuffer", ".", "the", "string", "encoding", "is", "assumed", "to", "be", "ascii", ".", "concode_field_sep", "CharsetDecoder", "DECODER", "concode_elem_sep", "Logger", "LOG", "concode_field_sep", "Collection", "<", "byte", "[", "]", ">", "splitToByteArrays", "concode_elem_sep", "Collection", "<", "ByteBuffer", ">", "split", "concode_elem_sep", "byte", "[", "]", "toByteArray", "concode_elem_sep", "void", "putUnsignedByte", "concode_elem_sep", "void", "putUnsignedByte", "concode_elem_sep", "String", "toAsciiString", "concode_elem_sep", "void", "putUnsignedShort", "concode_elem_sep", "void", "putUnsignedShort", "concode_elem_sep", "boolean", "isUdp", "concode_elem_sep", "String", "getString", "concode_elem_sep", "ByteBuffer", "createBuffer", "concode_elem_sep", "void", "putUnsignedInt", "concode_elem_sep", "void", "putUnsignedInt"]}
{"code": "FileDescriptor function ( ) { return fd ; }", "nl": "gets the file descriptor of this socket . concode_field_sep boolean shutdownInput concode_elem_sep ServalNetworkStack netImpl concode_elem_sep boolean streaming concode_elem_sep ServiceID localServiceID concode_elem_sep InetAddress address concode_elem_sep ServiceID remoteServiceID concode_elem_sep FileDescriptor fd concode_field_sep InetAddress getInetAddress concode_elem_sep ServiceID getServiceID concode_elem_sep void setOption concode_elem_sep int available concode_elem_sep Object getOption concode_elem_sep InputStream getInputStream concode_elem_sep void listen concode_elem_sep void shutdownOutput concode_elem_sep void accept concode_elem_sep void shutdownInput concode_elem_sep void setPerformancePreferences concode_elem_sep void bind concode_elem_sep void bind concode_elem_sep void bind concode_elem_sep void bind concode_elem_sep void sendUrgentData concode_elem_sep boolean supportsUrgentData concode_elem_sep ServiceID getLocalServiceID concode_elem_sep void create concode_elem_sep OutputStream getOutputStream concode_elem_sep String toString concode_elem_sep void close concode_elem_sep void connect concode_elem_sep void connect concode_elem_sep void connect concode_elem_sep void connect", "code_tokens": ["FileDescriptor", "function", "(", ")", "{", "return", "fd", ";", "}"], "nl_tokens": ["gets", "the", "file", "descriptor", "of", "this", "socket", ".", "concode_field_sep", "boolean", "shutdownInput", "concode_elem_sep", "ServalNetworkStack", "netImpl", "concode_elem_sep", "boolean", "streaming", "concode_elem_sep", "ServiceID", "localServiceID", "concode_elem_sep", "InetAddress", "address", "concode_elem_sep", "ServiceID", "remoteServiceID", "concode_elem_sep", "FileDescriptor", "fd", "concode_field_sep", "InetAddress", "getInetAddress", "concode_elem_sep", "ServiceID", "getServiceID", "concode_elem_sep", "void", "setOption", "concode_elem_sep", "int", "available", "concode_elem_sep", "Object", "getOption", "concode_elem_sep", "InputStream", "getInputStream", "concode_elem_sep", "void", "listen", "concode_elem_sep", "void", "shutdownOutput", "concode_elem_sep", "void", "accept", "concode_elem_sep", "void", "shutdownInput", "concode_elem_sep", "void", "setPerformancePreferences", "concode_elem_sep", "void", "bind", "concode_elem_sep", "void", "bind", "concode_elem_sep", "void", "bind", "concode_elem_sep", "void", "bind", "concode_elem_sep", "void", "sendUrgentData", "concode_elem_sep", "boolean", "supportsUrgentData", "concode_elem_sep", "ServiceID", "getLocalServiceID", "concode_elem_sep", "void", "create", "concode_elem_sep", "OutputStream", "getOutputStream", "concode_elem_sep", "String", "toString", "concode_elem_sep", "void", "close", "concode_elem_sep", "void", "connect", "concode_elem_sep", "void", "connect", "concode_elem_sep", "void", "connect", "concode_elem_sep", "void", "connect"]}
{"code": "void function ( FMLInitializationEvent arg0 ) { proxy . registerRenders ( ) ; }", "nl": "methods to call during initialization concode_field_sep ServerProxy proxy concode_elem_sep MainRegistry modInstance concode_field_sep void preInit concode_elem_sep void postInit", "code_tokens": ["void", "function", "(", "FMLInitializationEvent", "arg0", ")", "{", "proxy", ".", "registerRenders", "(", ")", ";", "}"], "nl_tokens": ["methods", "to", "call", "during", "initialization", "concode_field_sep", "ServerProxy", "proxy", "concode_elem_sep", "MainRegistry", "modInstance", "concode_field_sep", "void", "preInit", "concode_elem_sep", "void", "postInit"]}
{"code": "void function ( ) { Assert . assertEquals ( Mode . Bits . WRITE_EXECUTE , Mode . Bits . WRITE . or ( Mode . Bits . EXECUTE ) ) ; Assert . assertEquals ( Mode . Bits . READ_EXECUTE , Mode . Bits . READ . or ( Mode . Bits . EXECUTE ) ) ; Assert . assertEquals ( Mode . Bits . READ_WRITE , Mode . Bits . WRITE . or ( Mode . Bits . READ ) ) ; }", "nl": "tests the mode.bits #or mode.bits method . concode_field_sep PlaceHolder placeHolder concode_field_sep void andOperation concode_elem_sep void notOperation concode_elem_sep void implies concode_elem_sep void getSymbol", "code_tokens": ["void", "function", "(", ")", "{", "Assert", ".", "assertEquals", "(", "Mode", ".", "Bits", ".", "WRITE_EXECUTE", ",", "Mode", ".", "Bits", ".", "WRITE", ".", "or", "(", "Mode", ".", "Bits", ".", "EXECUTE", ")", ")", ";", "Assert", ".", "assertEquals", "(", "Mode", ".", "Bits", ".", "READ_EXECUTE", ",", "Mode", ".", "Bits", ".", "READ", ".", "or", "(", "Mode", ".", "Bits", ".", "EXECUTE", ")", ")", ";", "Assert", ".", "assertEquals", "(", "Mode", ".", "Bits", ".", "READ_WRITE", ",", "Mode", ".", "Bits", ".", "WRITE", ".", "or", "(", "Mode", ".", "Bits", ".", "READ", ")", ")", ";", "}"], "nl_tokens": ["tests", "the", "mode", ".", "bits", "#or mode.bits method . concode_field_sep PlaceHolder placeHolder concode_field_sep void andOperation concode_elem_sep void notOperation concode_elem_sep void implies concode_elem_sep void getSymbol"]}
{"code": "void function ( ) { assertEquals ( expected , LanguageRegistry . findLanguageVersionByTerseName ( terseName ) ) ; }", "nl": "checks that the expected languageversion can be found by thecombination of #tersename and #version . concode_field_sep LanguageVersion expected concode_elem_sep String name concode_elem_sep String version concode_elem_sep String simpleTerseName concode_elem_sep String terseName concode_field_sep void testRegisteredRulesets concode_elem_sep void testFindVersionsForLanguageNameAndVersion", "code_tokens": ["void", "function", "(", ")", "{", "assertEquals", "(", "expected", ",", "LanguageRegistry", ".", "findLanguageVersionByTerseName", "(", "terseName", ")", ")", ";", "}"], "nl_tokens": ["checks", "that", "the", "expected", "languageversion", "can", "be", "found", "by", "thecombination", "of", "#tersename and #version . concode_field_sep LanguageVersion expected concode_elem_sep String name concode_elem_sep String version concode_elem_sep String simpleTerseName concode_elem_sep String terseName concode_field_sep void testRegisteredRulesets concode_elem_sep void testFindVersionsForLanguageNameAndVersion"]}
{"code": "void function ( InputStream arg0 ) { BufferedReader loc0 = new BufferedReader ( new InputStreamReader ( arg0 ) ) ; while ( true ) { String loc1 = loc0 . readLine ( ) ; if ( loc1 == null ) break ; System . out . println ( \"srini_string\" + loc1 ) ; } System . out . println ( ) ; }", "nl": "displays the contents of the specified input stream as text . concode_field_sep PlaceHolder placeHolder concode_field_sep File createSampleFile concode_elem_sep void main", "code_tokens": ["void", "function", "(", "InputStream", "arg0", ")", "{", "BufferedReader", "loc0", "=", "new", "BufferedReader", "(", "new", "InputStreamReader", "(", "arg0", ")", ")", ";", "while", "(", "true", ")", "{", "String", "loc1", "=", "loc0", ".", "readLine", "(", ")", ";", "if", "(", "loc1", "==", "null", ")", "break", ";", "System", ".", "out", ".", "println", "(", "\"srini_string\"", "+", "loc1", ")", ";", "}", "System", ".", "out", ".", "println", "(", ")", ";", "}"], "nl_tokens": ["displays", "the", "contents", "of", "the", "specified", "input", "stream", "as", "text", ".", "concode_field_sep", "PlaceHolder", "placeHolder", "concode_field_sep", "File", "createSampleFile", "concode_elem_sep", "void", "main"]}
{"code": "double [ ] function ( final double [ ] arg0 ) { if ( arg0 == null ) { throw new NullArgumentException ( ) ; } if ( arg0 . length == 0 ) { throw new NoDataException ( ) ; } final double [ ] loc0 = new double [ arg0 . length ] ; for ( int loc1 = 0 ; loc1 < arg0 . length ; ++ loc1 ) { loc0 [ loc1 ] = FastMath . abs ( arg0 [ loc1 ] ) ; } return loc0 ; }", "nl": "calculates | z i | for all i concode_field_sep NaturalRanking naturalRanking concode_field_sep double wilcoxonSignedRank concode_elem_sep double calculateAsymptoticPValue concode_elem_sep double calculateExactPValue concode_elem_sep double wilcoxonSignedRankTest concode_elem_sep double[] calculateDifferences concode_elem_sep void ensureDataConformance", "code_tokens": ["double", "[", "]", "function", "(", "final", "double", "[", "]", "arg0", ")", "{", "if", "(", "arg0", "==", "null", ")", "{", "throw", "new", "NullArgumentException", "(", ")", ";", "}", "if", "(", "arg0", ".", "length", "==", "0", ")", "{", "throw", "new", "NoDataException", "(", ")", ";", "}", "final", "double", "[", "]", "loc0", "=", "new", "double", "[", "arg0", ".", "length", "]", ";", "for", "(", "int", "loc1", "=", "0", ";", "loc1", "<", "arg0", ".", "length", ";", "+", "+", "loc1", ")", "{", "loc0", "[", "loc1", "]", "=", "FastMath", ".", "abs", "(", "arg0", "[", "loc1", "]", ")", ";", "}", "return", "loc0", ";", "}"], "nl_tokens": ["calculates", "|", "z", "i", "|", "for", "all", "i", "concode_field_sep", "NaturalRanking", "naturalRanking", "concode_field_sep", "double", "wilcoxonSignedRank", "concode_elem_sep", "double", "calculateAsymptoticPValue", "concode_elem_sep", "double", "calculateExactPValue", "concode_elem_sep", "double", "wilcoxonSignedRankTest", "concode_elem_sep", "double", "[", "]", "calculateDifferences", "concode_elem_sep", "void", "ensureDataConformance"]}
{"code": "SearchFactory function ( ) { if ( instance == null ) instance = new SearchFactory ( ) ; return instance ; }", "nl": "provides access to the factory . implemented with lazy instantiation . concode_field_sep int GBF_SEARCH concode_elem_sep int ASTAR_SEARCH concode_elem_sep SearchFactory instance concode_elem_sep int UC_SEARCH concode_elem_sep int GRAPH_SEARCH concode_elem_sep int HILL_SEARCH concode_elem_sep int BF_SEARCH concode_elem_sep int ID_SEARCH concode_elem_sep int TREE_SEARCH concode_elem_sep int RBF_SEARCH concode_elem_sep int DF_SEARCH concode_field_sep String[] getSearchModeNames concode_elem_sep String[] getSearchStrategyNames concode_elem_sep Search createSearch", "code_tokens": ["SearchFactory", "function", "(", ")", "{", "if", "(", "instance", "==", "null", ")", "instance", "=", "new", "SearchFactory", "(", ")", ";", "return", "instance", ";", "}"], "nl_tokens": ["provides", "access", "to", "the", "factory", ".", "implemented", "with", "lazy", "instantiation", ".", "concode_field_sep", "int", "GBF_SEARCH", "concode_elem_sep", "int", "ASTAR_SEARCH", "concode_elem_sep", "SearchFactory", "instance", "concode_elem_sep", "int", "UC_SEARCH", "concode_elem_sep", "int", "GRAPH_SEARCH", "concode_elem_sep", "int", "HILL_SEARCH", "concode_elem_sep", "int", "BF_SEARCH", "concode_elem_sep", "int", "ID_SEARCH", "concode_elem_sep", "int", "TREE_SEARCH", "concode_elem_sep", "int", "RBF_SEARCH", "concode_elem_sep", "int", "DF_SEARCH", "concode_field_sep", "String", "[", "]", "getSearchModeNames", "concode_elem_sep", "String", "[", "]", "getSearchStrategyNames", "concode_elem_sep", "Search", "createSearch"]}
{"code": "SearchConditionBuilder function ( String arg0 ) { return instance ( arg0 , Collections . < String , String > emptyMap ( ) ) ; }", "nl": "creates instance of builder for specific language . concode_field_sep String FIQL concode_elem_sep String DEFAULT_LANGUAGE concode_field_sep String query", "code_tokens": ["SearchConditionBuilder", "function", "(", "String", "arg0", ")", "{", "return", "instance", "(", "arg0", ",", "Collections", ".", "<", "String", ",", "String", ">", "emptyMap", "(", ")", ")", ";", "}"], "nl_tokens": ["creates", "instance", "of", "builder", "for", "specific", "language", ".", "concode_field_sep", "String", "FIQL", "concode_elem_sep", "String", "DEFAULT_LANGUAGE", "concode_field_sep", "String", "query"]}
{"code": "void function ( ) { }", "nl": "validate the message . throws an exception if the message is invalid . concode_field_sep int mId concode_field_sep void encode concode_elem_sep ByteToMessageDecoder createFrameDecoder concode_elem_sep Type getType concode_elem_sep DataBuffer getPayloadDataBuffer concode_elem_sep int getId concode_elem_sep RPCMessage decodeMessage concode_elem_sep boolean hasPayload concode_elem_sep Type decode concode_elem_sep int getEncodedLength", "code_tokens": ["void", "function", "(", ")", "{", "}"], "nl_tokens": ["validate", "the", "message", ".", "throws", "an", "exception", "if", "the", "message", "is", "invalid", ".", "concode_field_sep", "int", "mId", "concode_field_sep", "void", "encode", "concode_elem_sep", "ByteToMessageDecoder", "createFrameDecoder", "concode_elem_sep", "Type", "getType", "concode_elem_sep", "DataBuffer", "getPayloadDataBuffer", "concode_elem_sep", "int", "getId", "concode_elem_sep", "RPCMessage", "decodeMessage", "concode_elem_sep", "boolean", "hasPayload", "concode_elem_sep", "Type", "decode", "concode_elem_sep", "int", "getEncodedLength"]}
{"code": "String function ( String arg0 ) { return \"srini_string\" + arg0 + \"srini_string\" ; }", "nl": "returns a string that is used to start a subgraph . concode_field_sep String TEMP_DIR concode_elem_sep StringBuilder graph concode_elem_sep String DOT concode_field_sep void add concode_elem_sep void addln concode_elem_sep void addln concode_elem_sep byte[] getGraph concode_elem_sep int writeGraphToFile concode_elem_sep int writeGraphToFile concode_elem_sep String start_graph concode_elem_sep String end_graph concode_elem_sep void readSource concode_elem_sep String getDotSource concode_elem_sep File writeDotSourceToFile concode_elem_sep byte[] get_img_stream concode_elem_sep String end_subgraph", "code_tokens": ["String", "function", "(", "String", "arg0", ")", "{", "return", "\"srini_string\"", "+", "arg0", "+", "\"srini_string\"", ";", "}"], "nl_tokens": ["returns", "a", "string", "that", "is", "used", "to", "start", "a", "subgraph", ".", "concode_field_sep", "String", "TEMP_DIR", "concode_elem_sep", "StringBuilder", "graph", "concode_elem_sep", "String", "DOT", "concode_field_sep", "void", "add", "concode_elem_sep", "void", "addln", "concode_elem_sep", "void", "addln", "concode_elem_sep", "byte", "[", "]", "getGraph", "concode_elem_sep", "int", "writeGraphToFile", "concode_elem_sep", "int", "writeGraphToFile", "concode_elem_sep", "String", "start_graph", "concode_elem_sep", "String", "end_graph", "concode_elem_sep", "void", "readSource", "concode_elem_sep", "String", "getDotSource", "concode_elem_sep", "File", "writeDotSourceToFile", "concode_elem_sep", "byte", "[", "]", "get_img_stream", "concode_elem_sep", "String", "end_subgraph"]}
{"code": "void function ( String arg0 ) { try { stub . setGlobalPolicyAlgorithm ( arg0 ) ; } catch ( Exception loc0 ) { handleException ( loc0 . getMessage ( ) , loc0 ) ; } }", "nl": "set policy combining algorithm globally concode_field_sep Log log concode_elem_sep EntitlementAdminServiceStub stub concode_field_sep String getDecision concode_elem_sep String getDecision concode_elem_sep PIPFinderDataHolder getPIPResourceFinderData concode_elem_sep void clearDecisionCache concode_elem_sep String getGlobalPolicyAlgorithm concode_elem_sep void handleException concode_elem_sep PolicyFinderDataHolder getPolicyFinderData concode_elem_sep PDPDataHolder getPDPData concode_elem_sep void clearAttributeCache concode_elem_sep void refreshAttributeFinder concode_elem_sep void refreshResourceFinder concode_elem_sep void refreshPolicyFinder concode_elem_sep PIPFinderDataHolder getPIPAttributeFinderData", "code_tokens": ["void", "function", "(", "String", "arg0", ")", "{", "try", "{", "stub", ".", "setGlobalPolicyAlgorithm", "(", "arg0", ")", ";", "}", "catch", "(", "Exception", "loc0", ")", "{", "handleException", "(", "loc0", ".", "getMessage", "(", ")", ",", "loc0", ")", ";", "}", "}"], "nl_tokens": ["set", "policy", "combining", "algorithm", "globally", "concode_field_sep", "Log", "log", "concode_elem_sep", "EntitlementAdminServiceStub", "stub", "concode_field_sep", "String", "getDecision", "concode_elem_sep", "String", "getDecision", "concode_elem_sep", "PIPFinderDataHolder", "getPIPResourceFinderData", "concode_elem_sep", "void", "clearDecisionCache", "concode_elem_sep", "String", "getGlobalPolicyAlgorithm", "concode_elem_sep", "void", "handleException", "concode_elem_sep", "PolicyFinderDataHolder", "getPolicyFinderData", "concode_elem_sep", "PDPDataHolder", "getPDPData", "concode_elem_sep", "void", "clearAttributeCache", "concode_elem_sep", "void", "refreshAttributeFinder", "concode_elem_sep", "void", "refreshResourceFinder", "concode_elem_sep", "void", "refreshPolicyFinder", "concode_elem_sep", "PIPFinderDataHolder", "getPIPAttributeFinderData"]}
{"code": "void function ( String arg0 ) { _specificityC ++ ; addCondition ( Condition . createLangCondition ( arg0 ) ) ; }", "nl": "the css condition : lang xx concode_field_sep int CHILD_AXIS concode_elem_sep int HOVER_PSEUDOCLASS concode_elem_sep int selectorID concode_elem_sep Selector siblingSelector concode_elem_sep String _name concode_elem_sep int _axis concode_elem_sep int FOCUS_PSEUDOCLASS concode_elem_sep int _pc concode_elem_sep int ACTIVE_PSEUDOCLASS concode_elem_sep int selectorCount concode_elem_sep int DESCENDANT_AXIS concode_elem_sep int VISITED_PSEUDOCLASS concode_elem_sep Ruleset _parent concode_elem_sep int IMMEDIATE_SIBLING_AXIS concode_elem_sep int _specificityD concode_elem_sep String _pe concode_elem_sep int _specificityC concode_elem_sep int _specificityB concode_elem_sep Selector chainedSelector concode_elem_sep int _pos concode_elem_sep String _namespaceURI concode_elem_sep java.util.List conditions concode_field_sep void setName concode_elem_sep void addClassCondition concode_elem_sep void addAttributeSubstringCondition concode_elem_sep void addNthChildCondition concode_elem_sep void setPseudoElement concode_elem_sep void addAttributeMatchesListCondition concode_elem_sep void addAttributeEqualsCondition concode_elem_sep void addCondition concode_elem_sep void addEvenChildCondition concode_elem_sep void addIDCondition concode_elem_sep void addAttributePrefixCondition concode_elem_sep void setPos concode_elem_sep void addLinkCondition concode_elem_sep void addLastChildCondition concode_elem_sep boolean matchesDynamic concode_elem_sep void setChainedSelector concode_elem_sep void setNamespaceURI concode_elem_sep int getSpecificityD concode_elem_sep void addUnsupportedCondition concode_elem_sep int getSpecificityC concode_elem_sep Selector getChainedSelector concode_elem_sep int getSpecificityB concode_elem_sep void setParent concode_elem_sep void addAttributeExistsCondition concode_elem_sep void addFirstChildCondition concode_elem_sep String getElementStylingOrder concode_elem_sep void setSiblingSelector concode_elem_sep void addAttributeSuffixCondition concode_elem_sep int getSelectorID concode_elem_sep int getAxis concode_elem_sep void setAxis concode_elem_sep void addAttributeMatchesFirstPartCondition concode_elem_sep String getPseudoElement concode_elem_sep Ruleset getRuleset concode_elem_sep boolean matches concode_elem_sep void addOddChildCondition concode_elem_sep void setPseudoClass concode_elem_sep boolean isPseudoClass concode_elem_sep String getOrder concode_elem_sep Object getAppropriateSibling concode_elem_sep void setSpecificityB concode_elem_sep void setSpecificityC concode_elem_sep void setSpecificityD", "code_tokens": ["void", "function", "(", "String", "arg0", ")", "{", "_specificityC", "+", "+", ";", "addCondition", "(", "Condition", ".", "createLangCondition", "(", "arg0", ")", ")", ";", "}"], "nl_tokens": ["the", "css", "condition", ":", "lang", "xx", "concode_field_sep", "int", "CHILD_AXIS", "concode_elem_sep", "int", "HOVER_PSEUDOCLASS", "concode_elem_sep", "int", "selectorID", "concode_elem_sep", "Selector", "siblingSelector", "concode_elem_sep", "String", "_name", "concode_elem_sep", "int", "_axis", "concode_elem_sep", "int", "FOCUS_PSEUDOCLASS", "concode_elem_sep", "int", "_pc", "concode_elem_sep", "int", "ACTIVE_PSEUDOCLASS", "concode_elem_sep", "int", "selectorCount", "concode_elem_sep", "int", "DESCENDANT_AXIS", "concode_elem_sep", "int", "VISITED_PSEUDOCLASS", "concode_elem_sep", "Ruleset", "_parent", "concode_elem_sep", "int", "IMMEDIATE_SIBLING_AXIS", "concode_elem_sep", "int", "_specificityD", "concode_elem_sep", "String", "_pe", "concode_elem_sep", "int", "_specificityC", "concode_elem_sep", "int", "_specificityB", "concode_elem_sep", "Selector", "chainedSelector", "concode_elem_sep", "int", "_pos", "concode_elem_sep", "String", "_namespaceURI", "concode_elem_sep", "java", ".", "util", ".", "List", "conditions", "concode_field_sep", "void", "setName", "concode_elem_sep", "void", "addClassCondition", "concode_elem_sep", "void", "addAttributeSubstringCondition", "concode_elem_sep", "void", "addNthChildCondition", "concode_elem_sep", "void", "setPseudoElement", "concode_elem_sep", "void", "addAttributeMatchesListCondition", "concode_elem_sep", "void", "addAttributeEqualsCondition", "concode_elem_sep", "void", "addCondition", "concode_elem_sep", "void", "addEvenChildCondition", "concode_elem_sep", "void", "addIDCondition", "concode_elem_sep", "void", "addAttributePrefixCondition", "concode_elem_sep", "void", "setPos", "concode_elem_sep", "void", "addLinkCondition", "concode_elem_sep", "void", "addLastChildCondition", "concode_elem_sep", "boolean", "matchesDynamic", "concode_elem_sep", "void", "setChainedSelector", "concode_elem_sep", "void", "setNamespaceURI", "concode_elem_sep", "int", "getSpecificityD", "concode_elem_sep", "void", "addUnsupportedCondition", "concode_elem_sep", "int", "getSpecificityC", "concode_elem_sep", "Selector", "getChainedSelector", "concode_elem_sep", "int", "getSpecificityB", "concode_elem_sep", "void", "setParent", "concode_elem_sep", "void", "addAttributeExistsCondition", "concode_elem_sep", "void", "addFirstChildCondition", "concode_elem_sep", "String", "getElementStylingOrder", "concode_elem_sep", "void", "setSiblingSelector", "concode_elem_sep", "void", "addAttributeSuffixCondition", "concode_elem_sep", "int", "getSelectorID", "concode_elem_sep", "int", "getAxis", "concode_elem_sep", "void", "setAxis", "concode_elem_sep", "void", "addAttributeMatchesFirstPartCondition", "concode_elem_sep", "String", "getPseudoElement", "concode_elem_sep", "Ruleset", "getRuleset", "concode_elem_sep", "boolean", "matches", "concode_elem_sep", "void", "addOddChildCondition", "concode_elem_sep", "void", "setPseudoClass", "concode_elem_sep", "boolean", "isPseudoClass", "concode_elem_sep", "String", "getOrder", "concode_elem_sep", "Object", "getAppropriateSibling", "concode_elem_sep", "void", "setSpecificityB", "concode_elem_sep", "void", "setSpecificityC", "concode_elem_sep", "void", "setSpecificityD"]}
{"code": "void function ( ) { prodscan . close ( ) ; }", "nl": "closes the current scans . concode_field_sep Transaction tx concode_elem_sep TableInfo ti concode_elem_sep int nextblknum concode_elem_sep Scan lhsscan concode_elem_sep int chunksize concode_elem_sep int filesize concode_elem_sep Scan prodscan concode_elem_sep Scan rhsscan concode_field_sep boolean next concode_elem_sep int getInt concode_elem_sep Constant getVal concode_elem_sep boolean useNextChunk concode_elem_sep void beforeFirst concode_elem_sep String getString concode_elem_sep boolean hasField", "code_tokens": ["void", "function", "(", ")", "{", "prodscan", ".", "close", "(", ")", ";", "}"], "nl_tokens": ["closes", "the", "current", "scans", ".", "concode_field_sep", "Transaction", "tx", "concode_elem_sep", "TableInfo", "ti", "concode_elem_sep", "int", "nextblknum", "concode_elem_sep", "Scan", "lhsscan", "concode_elem_sep", "int", "chunksize", "concode_elem_sep", "int", "filesize", "concode_elem_sep", "Scan", "prodscan", "concode_elem_sep", "Scan", "rhsscan", "concode_field_sep", "boolean", "next", "concode_elem_sep", "int", "getInt", "concode_elem_sep", "Constant", "getVal", "concode_elem_sep", "boolean", "useNextChunk", "concode_elem_sep", "void", "beforeFirst", "concode_elem_sep", "String", "getString", "concode_elem_sep", "boolean", "hasField"]}
{"code": "void function ( ) { }", "nl": "destroy the purge jobs service . concode_field_sep String COORD_PURGE_LIMIT concode_elem_sep int olderThan concode_elem_sep String CONF_OLDER_THAN concode_elem_sep int coordOlderThan concode_elem_sep String CONF_PURGE_INTERVAL concode_elem_sep int limit concode_elem_sep String CONF_PREFIX concode_elem_sep String COORD_CONF_OLDER_THAN concode_field_sep void init concode_elem_sep Class<? extends Service> getInterface concode_elem_sep void run", "code_tokens": ["void", "function", "(", ")", "{", "}"], "nl_tokens": ["destroy", "the", "purge", "jobs", "service", ".", "concode_field_sep", "String", "COORD_PURGE_LIMIT", "concode_elem_sep", "int", "olderThan", "concode_elem_sep", "String", "CONF_OLDER_THAN", "concode_elem_sep", "int", "coordOlderThan", "concode_elem_sep", "String", "CONF_PURGE_INTERVAL", "concode_elem_sep", "int", "limit", "concode_elem_sep", "String", "CONF_PREFIX", "concode_elem_sep", "String", "COORD_CONF_OLDER_THAN", "concode_field_sep", "void", "init", "concode_elem_sep", "Class", "<", "?", "extends", "Service", ">", "getInterface", "concode_elem_sep", "void", "run"]}
{"code": "void function ( long arg0 ) { this . deliveryTag = arg0 ; }", "nl": "set delivery tag of the message assigned by the transport concode_field_sep Map<String,Object> headers concode_elem_sep byte body[] concode_elem_sep long deliveryTag concode_elem_sep String replyTo concode_elem_sep String contentEncoding concode_elem_sep String messageId concode_elem_sep String correlationId concode_elem_sep String soapAction concode_elem_sep String contentType concode_field_sep String getCorrelationId concode_elem_sep String getContentEncoding concode_elem_sep void setHeaders concode_elem_sep Map<String,Object> getHeaders concode_elem_sep byte[] getBody concode_elem_sep String getReplyTo concode_elem_sep void setCorrelationId concode_elem_sep void setContentEncoding concode_elem_sep long getDeliveryTag concode_elem_sep void setMessageId concode_elem_sep void setSoapAction concode_elem_sep void setBody concode_elem_sep String getMessageId concode_elem_sep void setReplyTo concode_elem_sep String getContentType concode_elem_sep void setContentType concode_elem_sep String getSoapAction", "code_tokens": ["void", "function", "(", "long", "arg0", ")", "{", "this", ".", "deliveryTag", "=", "arg0", ";", "}"], "nl_tokens": ["set", "delivery", "tag", "of", "the", "message", "assigned", "by", "the", "transport", "concode_field_sep", "Map", "<", "String", ",", "Object", ">", "headers", "concode_elem_sep", "byte", "body", "[", "]", "concode_elem_sep", "long", "deliveryTag", "concode_elem_sep", "String", "replyTo", "concode_elem_sep", "String", "contentEncoding", "concode_elem_sep", "String", "messageId", "concode_elem_sep", "String", "correlationId", "concode_elem_sep", "String", "soapAction", "concode_elem_sep", "String", "contentType", "concode_field_sep", "String", "getCorrelationId", "concode_elem_sep", "String", "getContentEncoding", "concode_elem_sep", "void", "setHeaders", "concode_elem_sep", "Map", "<", "String", ",", "Object", ">", "getHeaders", "concode_elem_sep", "byte", "[", "]", "getBody", "concode_elem_sep", "String", "getReplyTo", "concode_elem_sep", "void", "setCorrelationId", "concode_elem_sep", "void", "setContentEncoding", "concode_elem_sep", "long", "getDeliveryTag", "concode_elem_sep", "void", "setMessageId", "concode_elem_sep", "void", "setSoapAction", "concode_elem_sep", "void", "setBody", "concode_elem_sep", "String", "getMessageId", "concode_elem_sep", "void", "setReplyTo", "concode_elem_sep", "String", "getContentType", "concode_elem_sep", "void", "setContentType", "concode_elem_sep", "String", "getSoapAction"]}
{"code": "HashCodeBuilder function ( Object [ ] arg0 ) { if ( arg0 == null ) { iTotal = iTotal * iConstant ; } else { for ( Object loc0 : arg0 ) { append ( loc0 ) ; } } return this ; }", "nl": "append a hashcode for an object array . concode_field_sep int iConstant concode_elem_sep int iTotal concode_field_sep HashCodeBuilder appendSuper concode_elem_sep int toHashCode", "code_tokens": ["HashCodeBuilder", "function", "(", "Object", "[", "]", "arg0", ")", "{", "if", "(", "arg0", "==", "null", ")", "{", "iTotal", "=", "iTotal", "*", "iConstant", ";", "}", "else", "{", "for", "(", "Object", "loc0", ":", "arg0", ")", "{", "append", "(", "loc0", ")", ";", "}", "}", "return", "this", ";", "}"], "nl_tokens": ["append", "a", "hashcode", "for", "an", "object", "array", ".", "concode_field_sep", "int", "iConstant", "concode_elem_sep", "int", "iTotal", "concode_field_sep", "HashCodeBuilder", "appendSuper", "concode_elem_sep", "int", "toHashCode"]}
{"code": "String [ ] [ ] function ( ) { return matrix ; }", "nl": "gets the data matrix . concode_field_sep GeneticProfile geneticProfile concode_elem_sep ArrayList<String> caseIdList concode_elem_sep ArrayList<String> geneList concode_elem_sep HashMap<String,String> mapFromGeneAndCaseToGeneProperties concode_elem_sep String[][] matrix concode_field_sep String getValue concode_elem_sep void processMatrix concode_elem_sep ArrayList<String> getCaseIdList concode_elem_sep ArrayList<String> getGeneList concode_elem_sep String createKey concode_elem_sep ValueParser getValueParsed concode_elem_sep GeneticProfile getGeneticProfile", "code_tokens": ["String", "[", "]", "[", "]", "function", "(", ")", "{", "return", "matrix", ";", "}"], "nl_tokens": ["gets", "the", "data", "matrix", ".", "concode_field_sep", "GeneticProfile", "geneticProfile", "concode_elem_sep", "ArrayList", "<", "String", ">", "caseIdList", "concode_elem_sep", "ArrayList", "<", "String", ">", "geneList", "concode_elem_sep", "HashMap", "<", "String", ",", "String", ">", "mapFromGeneAndCaseToGeneProperties", "concode_elem_sep", "String", "[", "]", "[", "]", "matrix", "concode_field_sep", "String", "getValue", "concode_elem_sep", "void", "processMatrix", "concode_elem_sep", "ArrayList", "<", "String", ">", "getCaseIdList", "concode_elem_sep", "ArrayList", "<", "String", ">", "getGeneList", "concode_elem_sep", "String", "createKey", "concode_elem_sep", "ValueParser", "getValueParsed", "concode_elem_sep", "GeneticProfile", "getGeneticProfile"]}
{"code": "void function ( final Activity arg0 , final int arg1 , final String arg2 ) { final Intent loc0 = makeIntent ( arg2 , null ) ; startForResult ( arg0 , arg1 , loc0 ) ; }", "nl": "request any amount of bitcoins probably a donation from user , with feedback from the app . result intent can be received by overriding android.app.activity #onactivityresult . result indicates either activity #result_ok or activity #result_canceled . in the success case , use #transactionhashfromresult intent to read the transaction hash from the intent.warning : a success indication is no guarantee ! to be on the safe side , you must drive your own bitcoin infrastructure and validate the transaction . concode_field_sep int NANOCOINS_PER_COIN concode_elem_sep String INTENT_EXTRA_TRANSACTION_HASH concode_elem_sep String INTENT_EXTRA_TRANSACTION_HASH_OLD concode_field_sep void request concode_elem_sep void request concode_elem_sep void transactionHashToResult concode_elem_sep void startForResult concode_elem_sep String transactionHashFromResult concode_elem_sep Intent makeIntent concode_elem_sep void redirectToDownload concode_elem_sep void start", "code_tokens": ["void", "function", "(", "final", "Activity", "arg0", ",", "final", "int", "arg1", ",", "final", "String", "arg2", ")", "{", "final", "Intent", "loc0", "=", "makeIntent", "(", "arg2", ",", "null", ")", ";", "startForResult", "(", "arg0", ",", "arg1", ",", "loc0", ")", ";", "}"], "nl_tokens": ["request", "any", "amount", "of", "bitcoins", "probably", "a", "donation", "from", "user", ",", "with", "feedback", "from", "the", "app", ".", "result", "intent", "can", "be", "received", "by", "overriding", "android", ".", "app", ".", "activity", "#onactivityresult . result indicates either activity #result_ok or activity #result_canceled . in the success case , use #transactionhashfromresult intent to read the transaction hash from the intent.warning : a success indication is no guarantee ! to be on the safe side , you must drive your own bitcoin infrastructure and validate the transaction . concode_field_sep int NANOCOINS_PER_COIN concode_elem_sep String INTENT_EXTRA_TRANSACTION_HASH concode_elem_sep String INTENT_EXTRA_TRANSACTION_HASH_OLD concode_field_sep void request concode_elem_sep void request concode_elem_sep void transactionHashToResult concode_elem_sep void startForResult concode_elem_sep String transactionHashFromResult concode_elem_sep Intent makeIntent concode_elem_sep void redirectToDownload concode_elem_sep void start"]}
{"code": "void function ( int arg0 ) { this . peakStart = arg0 ; }", "nl": "sets the start of the peak of the roi concode_field_sep boolean AMPLIFIED concode_elem_sep boolean DELETED concode_elem_sep int gisticID concode_elem_sep int peakStart concode_elem_sep ArrayList<CanonicalGene> genes_in_ROI concode_elem_sep String cytoband concode_elem_sep boolean amp concode_elem_sep int NO_SUCH_GISTIC concode_elem_sep int cancerStudyId concode_elem_sep int chromosome concode_elem_sep int peakEnd concode_elem_sep double qValue concode_field_sep void setPeakEnd concode_elem_sep void setAmp concode_elem_sep String getCytoband concode_elem_sep int getPeakStart concode_elem_sep void setqValue concode_elem_sep boolean getAmp concode_elem_sep int getInternalId concode_elem_sep void setGenes_in_ROI concode_elem_sep int peakSize concode_elem_sep int getCancerStudyId concode_elem_sep int getChromosome concode_elem_sep int getPeakEnd concode_elem_sep void addGene concode_elem_sep void setInternalId concode_elem_sep void setCancerStudyId concode_elem_sep double getqValue concode_elem_sep String toString concode_elem_sep ArrayList<CanonicalGene> getGenes_in_ROI concode_elem_sep void setCytoband concode_elem_sep void setChromosome", "code_tokens": ["void", "function", "(", "int", "arg0", ")", "{", "this", ".", "peakStart", "=", "arg0", ";", "}"], "nl_tokens": ["sets", "the", "start", "of", "the", "peak", "of", "the", "roi", "concode_field_sep", "boolean", "AMPLIFIED", "concode_elem_sep", "boolean", "DELETED", "concode_elem_sep", "int", "gisticID", "concode_elem_sep", "int", "peakStart", "concode_elem_sep", "ArrayList", "<", "CanonicalGene", ">", "genes_in_ROI", "concode_elem_sep", "String", "cytoband", "concode_elem_sep", "boolean", "amp", "concode_elem_sep", "int", "NO_SUCH_GISTIC", "concode_elem_sep", "int", "cancerStudyId", "concode_elem_sep", "int", "chromosome", "concode_elem_sep", "int", "peakEnd", "concode_elem_sep", "double", "qValue", "concode_field_sep", "void", "setPeakEnd", "concode_elem_sep", "void", "setAmp", "concode_elem_sep", "String", "getCytoband", "concode_elem_sep", "int", "getPeakStart", "concode_elem_sep", "void", "setqValue", "concode_elem_sep", "boolean", "getAmp", "concode_elem_sep", "int", "getInternalId", "concode_elem_sep", "void", "setGenes_in_ROI", "concode_elem_sep", "int", "peakSize", "concode_elem_sep", "int", "getCancerStudyId", "concode_elem_sep", "int", "getChromosome", "concode_elem_sep", "int", "getPeakEnd", "concode_elem_sep", "void", "addGene", "concode_elem_sep", "void", "setInternalId", "concode_elem_sep", "void", "setCancerStudyId", "concode_elem_sep", "double", "getqValue", "concode_elem_sep", "String", "toString", "concode_elem_sep", "ArrayList", "<", "CanonicalGene", ">", "getGenes_in_ROI", "concode_elem_sep", "void", "setCytoband", "concode_elem_sep", "void", "setChromosome"]}
{"code": "void function ( ) { hdt . setHeading ( 123.45 ) ; assertEquals ( 123.5 , hdt . getHeading ( ) , 0.1 ) ; }", "nl": "test method for net.sf.marineapi.nmea.parser.hdtparser #setheading double . concode_field_sep HDTSentence hdt concode_elem_sep String EXAMPLE concode_field_sep void testSetHeadingTooHigh concode_elem_sep void testIsTrue concode_elem_sep void setUp concode_elem_sep void testGetHeading concode_elem_sep void testSetNegativeHeading concode_elem_sep void testConstructor", "code_tokens": ["void", "function", "(", ")", "{", "hdt", ".", "setHeading", "(", "123.45", ")", ";", "assertEquals", "(", "123.5", ",", "hdt", ".", "getHeading", "(", ")", ",", "0.1", ")", ";", "}"], "nl_tokens": ["test", "method", "for", "net", ".", "sf", ".", "marineapi", ".", "nmea", ".", "parser", ".", "hdtparser", "#setheading double . concode_field_sep HDTSentence hdt concode_elem_sep String EXAMPLE concode_field_sep void testSetHeadingTooHigh concode_elem_sep void testIsTrue concode_elem_sep void setUp concode_elem_sep void testGetHeading concode_elem_sep void testSetNegativeHeading concode_elem_sep void testConstructor"]}
{"code": "String function ( ) { return user ; }", "nl": "return the user name . concode_field_sep String authToken concode_elem_sep String user concode_field_sep void resume concode_elem_sep void suspend concode_elem_sep String getDefinition concode_elem_sep String submitJob concode_elem_sep String getJobIdForExternalId concode_elem_sep void change concode_elem_sep void start concode_elem_sep void streamLog concode_elem_sep void kill concode_elem_sep void reRun concode_elem_sep WorkflowJob getJob concode_elem_sep WorkflowJob getJob concode_elem_sep String getAuthToken concode_elem_sep String dryrunSubmit concode_elem_sep CoordinatorJob getCoordJob concode_elem_sep CoordinatorJob getCoordJob", "code_tokens": ["String", "function", "(", ")", "{", "return", "user", ";", "}"], "nl_tokens": ["return", "the", "user", "name", ".", "concode_field_sep", "String", "authToken", "concode_elem_sep", "String", "user", "concode_field_sep", "void", "resume", "concode_elem_sep", "void", "suspend", "concode_elem_sep", "String", "getDefinition", "concode_elem_sep", "String", "submitJob", "concode_elem_sep", "String", "getJobIdForExternalId", "concode_elem_sep", "void", "change", "concode_elem_sep", "void", "start", "concode_elem_sep", "void", "streamLog", "concode_elem_sep", "void", "kill", "concode_elem_sep", "void", "reRun", "concode_elem_sep", "WorkflowJob", "getJob", "concode_elem_sep", "WorkflowJob", "getJob", "concode_elem_sep", "String", "getAuthToken", "concode_elem_sep", "String", "dryrunSubmit", "concode_elem_sep", "CoordinatorJob", "getCoordJob", "concode_elem_sep", "CoordinatorJob", "getCoordJob"]}
{"code": "boolean function ( ) { if ( mSubject . isReadOnly ( ) ) { throw new LoginException ( \"srini_string\" ) ; } if ( mUser != null ) { mSubject . getPrincipals ( ) . remove ( mUser ) ; } return true ; }", "nl": "logs out the user the implementation removes the user associated with the subject . concode_field_sep User mUser concode_elem_sep CallbackHandler mCallbackHandler concode_elem_sep String mUserName concode_elem_sep Subject mSubject concode_field_sep boolean abort concode_elem_sep boolean commit concode_elem_sep void handle concode_elem_sep void initialize concode_elem_sep boolean login", "code_tokens": ["boolean", "function", "(", ")", "{", "if", "(", "mSubject", ".", "isReadOnly", "(", ")", ")", "{", "throw", "new", "LoginException", "(", "\"srini_string\"", ")", ";", "}", "if", "(", "mUser", "!=", "null", ")", "{", "mSubject", ".", "getPrincipals", "(", ")", ".", "remove", "(", "mUser", ")", ";", "}", "return", "true", ";", "}"], "nl_tokens": ["logs", "out", "the", "user", "the", "implementation", "removes", "the", "user", "associated", "with", "the", "subject", ".", "concode_field_sep", "User", "mUser", "concode_elem_sep", "CallbackHandler", "mCallbackHandler", "concode_elem_sep", "String", "mUserName", "concode_elem_sep", "Subject", "mSubject", "concode_field_sep", "boolean", "abort", "concode_elem_sep", "boolean", "commit", "concode_elem_sep", "void", "handle", "concode_elem_sep", "void", "initialize", "concode_elem_sep", "boolean", "login"]}
{"code": "void function ( ) { }", "nl": "invoked to request the service to stop . by default this method does nothing . concode_field_sep Logger logger concode_elem_sep Service delegate concode_field_sep void doStop concode_elem_sep void run concode_elem_sep Throwable failureCause concode_elem_sep String serviceName concode_elem_sep Service startAsync concode_elem_sep void shutDown concode_elem_sep boolean isRunning concode_elem_sep void startUp concode_elem_sep Executor executor concode_elem_sep void doStart concode_elem_sep void awaitTerminated concode_elem_sep void awaitTerminated concode_elem_sep Service stopAsync concode_elem_sep String toString concode_elem_sep String toString concode_elem_sep State state concode_elem_sep void awaitRunning concode_elem_sep void awaitRunning concode_elem_sep void addListener", "code_tokens": ["void", "function", "(", ")", "{", "}"], "nl_tokens": ["invoked", "to", "request", "the", "service", "to", "stop", ".", "by", "default", "this", "method", "does", "nothing", ".", "concode_field_sep", "Logger", "logger", "concode_elem_sep", "Service", "delegate", "concode_field_sep", "void", "doStop", "concode_elem_sep", "void", "run", "concode_elem_sep", "Throwable", "failureCause", "concode_elem_sep", "String", "serviceName", "concode_elem_sep", "Service", "startAsync", "concode_elem_sep", "void", "shutDown", "concode_elem_sep", "boolean", "isRunning", "concode_elem_sep", "void", "startUp", "concode_elem_sep", "Executor", "executor", "concode_elem_sep", "void", "doStart", "concode_elem_sep", "void", "awaitTerminated", "concode_elem_sep", "void", "awaitTerminated", "concode_elem_sep", "Service", "stopAsync", "concode_elem_sep", "String", "toString", "concode_elem_sep", "String", "toString", "concode_elem_sep", "State", "state", "concode_elem_sep", "void", "awaitRunning", "concode_elem_sep", "void", "awaitRunning", "concode_elem_sep", "void", "addListener"]}
{"code": "void function ( ) { this . errorLevel = this . errorLevelFolder ; }", "nl": "restores errorlevel to folder one concode_field_sep int errorLevelFolder concode_elem_sep String tooltip concode_elem_sep int errorLevel concode_elem_sep String value concode_field_sep void setKO concode_elem_sep void setKO concode_elem_sep boolean isWarning concode_elem_sep void setErrorLevel concode_elem_sep int getErrorLevel concode_elem_sep String analyseTrack concode_elem_sep String analyseTrackYear concode_elem_sep String formatNumber concode_elem_sep String colorField concode_elem_sep String colorField concode_elem_sep String getValue concode_elem_sep String analyseTrackComment concode_elem_sep String analyseTrackBpm concode_elem_sep int hashCode concode_elem_sep void setValue concode_elem_sep boolean equals concode_elem_sep String getDisplayToolTip concode_elem_sep void setOK concode_elem_sep String toString concode_elem_sep boolean isNotValid concode_elem_sep Color getDisplayColor concode_elem_sep String analyseTrackNumber concode_elem_sep String getDisplayText concode_elem_sep void setWarning concode_elem_sep void setWarning concode_elem_sep String analyseTrackString concode_elem_sep boolean isKO", "code_tokens": ["void", "function", "(", ")", "{", "this", ".", "errorLevel", "=", "this", ".", "errorLevelFolder", ";", "}"], "nl_tokens": ["restores", "errorlevel", "to", "folder", "one", "concode_field_sep", "int", "errorLevelFolder", "concode_elem_sep", "String", "tooltip", "concode_elem_sep", "int", "errorLevel", "concode_elem_sep", "String", "value", "concode_field_sep", "void", "setKO", "concode_elem_sep", "void", "setKO", "concode_elem_sep", "boolean", "isWarning", "concode_elem_sep", "void", "setErrorLevel", "concode_elem_sep", "int", "getErrorLevel", "concode_elem_sep", "String", "analyseTrack", "concode_elem_sep", "String", "analyseTrackYear", "concode_elem_sep", "String", "formatNumber", "concode_elem_sep", "String", "colorField", "concode_elem_sep", "String", "colorField", "concode_elem_sep", "String", "getValue", "concode_elem_sep", "String", "analyseTrackComment", "concode_elem_sep", "String", "analyseTrackBpm", "concode_elem_sep", "int", "hashCode", "concode_elem_sep", "void", "setValue", "concode_elem_sep", "boolean", "equals", "concode_elem_sep", "String", "getDisplayToolTip", "concode_elem_sep", "void", "setOK", "concode_elem_sep", "String", "toString", "concode_elem_sep", "boolean", "isNotValid", "concode_elem_sep", "Color", "getDisplayColor", "concode_elem_sep", "String", "analyseTrackNumber", "concode_elem_sep", "String", "getDisplayText", "concode_elem_sep", "void", "setWarning", "concode_elem_sep", "void", "setWarning", "concode_elem_sep", "String", "analyseTrackString", "concode_elem_sep", "boolean", "isKO"]}
{"code": "void function ( Timestamp arg0 ) { this . fetcherStartTimestamp = arg0 ; }", "nl": "sets the fetcher start timestamp . concode_field_sep Timestamp lastModifiedTimeStamp concode_elem_sep Timestamp fetcherStartTimestamp concode_elem_sep Timestamp createTimeStamp concode_elem_sep long serialVersionUID concode_elem_sep BigDecimal batchId concode_elem_sep String errorMsg concode_elem_sep OutcomeType outcomeType concode_elem_sep String createdBy concode_elem_sep BigDecimal feedId concode_elem_sep long testId concode_elem_sep BigDecimal runId concode_elem_sep Timestamp fetcherEndTimeStamp concode_elem_sep List<RegPCLTestResultDetailsEntity> regPclTestResultDetails concode_elem_sep RunStatusType runStatus concode_field_sep void setLastModifiedTimeStamp concode_elem_sep void setFeedId concode_elem_sep OutcomeType getOutcomeType concode_elem_sep void updateLastModifiedTimeStamp concode_elem_sep void updateCreateTimeStamp concode_elem_sep BigDecimal getRunId concode_elem_sep void setBatchId concode_elem_sep List<RegPCLTestResultDetailsEntity> getRegPclTestResultDetails concode_elem_sep void setTestId concode_elem_sep long getTestId concode_elem_sep RegPCLTestResultDetailsEntity removeRegPclTestResultDetail concode_elem_sep void setRegPclTestResultDetails concode_elem_sep void setErrorMsg concode_elem_sep RunStatusType getRunStatus concode_elem_sep RegPCLTestResultDetailsEntity addRegPclTestResultDetail concode_elem_sep String getErrorMsg concode_elem_sep void setRunStatus concode_elem_sep Timestamp getFetcherEndTimeStamp concode_elem_sep Timestamp getLastModifiedTimeStamp concode_elem_sep BigDecimal getFeedId concode_elem_sep void setRunId concode_elem_sep Timestamp getFetcherStartTimestamp concode_elem_sep void setFetcherEndTimeStamp concode_elem_sep void setCreateTimeStamp concode_elem_sep void setCreatedBy concode_elem_sep Timestamp getCreateTimeStamp concode_elem_sep BigDecimal getBatchId concode_elem_sep void setOutcomeType concode_elem_sep String getCreatedBy", "code_tokens": ["void", "function", "(", "Timestamp", "arg0", ")", "{", "this", ".", "fetcherStartTimestamp", "=", "arg0", ";", "}"], "nl_tokens": ["sets", "the", "fetcher", "start", "timestamp", ".", "concode_field_sep", "Timestamp", "lastModifiedTimeStamp", "concode_elem_sep", "Timestamp", "fetcherStartTimestamp", "concode_elem_sep", "Timestamp", "createTimeStamp", "concode_elem_sep", "long", "serialVersionUID", "concode_elem_sep", "BigDecimal", "batchId", "concode_elem_sep", "String", "errorMsg", "concode_elem_sep", "OutcomeType", "outcomeType", "concode_elem_sep", "String", "createdBy", "concode_elem_sep", "BigDecimal", "feedId", "concode_elem_sep", "long", "testId", "concode_elem_sep", "BigDecimal", "runId", "concode_elem_sep", "Timestamp", "fetcherEndTimeStamp", "concode_elem_sep", "List", "<", "RegPCLTestResultDetailsEntity", ">", "regPclTestResultDetails", "concode_elem_sep", "RunStatusType", "runStatus", "concode_field_sep", "void", "setLastModifiedTimeStamp", "concode_elem_sep", "void", "setFeedId", "concode_elem_sep", "OutcomeType", "getOutcomeType", "concode_elem_sep", "void", "updateLastModifiedTimeStamp", "concode_elem_sep", "void", "updateCreateTimeStamp", "concode_elem_sep", "BigDecimal", "getRunId", "concode_elem_sep", "void", "setBatchId", "concode_elem_sep", "List", "<", "RegPCLTestResultDetailsEntity", ">", "getRegPclTestResultDetails", "concode_elem_sep", "void", "setTestId", "concode_elem_sep", "long", "getTestId", "concode_elem_sep", "RegPCLTestResultDetailsEntity", "removeRegPclTestResultDetail", "concode_elem_sep", "void", "setRegPclTestResultDetails", "concode_elem_sep", "void", "setErrorMsg", "concode_elem_sep", "RunStatusType", "getRunStatus", "concode_elem_sep", "RegPCLTestResultDetailsEntity", "addRegPclTestResultDetail", "concode_elem_sep", "String", "getErrorMsg", "concode_elem_sep", "void", "setRunStatus", "concode_elem_sep", "Timestamp", "getFetcherEndTimeStamp", "concode_elem_sep", "Timestamp", "getLastModifiedTimeStamp", "concode_elem_sep", "BigDecimal", "getFeedId", "concode_elem_sep", "void", "setRunId", "concode_elem_sep", "Timestamp", "getFetcherStartTimestamp", "concode_elem_sep", "void", "setFetcherEndTimeStamp", "concode_elem_sep", "void", "setCreateTimeStamp", "concode_elem_sep", "void", "setCreatedBy", "concode_elem_sep", "Timestamp", "getCreateTimeStamp", "concode_elem_sep", "BigDecimal", "getBatchId", "concode_elem_sep", "void", "setOutcomeType", "concode_elem_sep", "String", "getCreatedBy"]}
{"code": "String function ( ) { return postId ; }", "nl": "returns the post id , if available . concode_field_sep String postId concode_field_sep void setShouldFailOnDataError concode_elem_sep boolean getShouldFailOnDataError", "code_tokens": ["String", "function", "(", ")", "{", "return", "postId", ";", "}"], "nl_tokens": ["returns", "the", "post", "id", ",", "if", "available", ".", "concode_field_sep", "String", "postId", "concode_field_sep", "void", "setShouldFailOnDataError", "concode_elem_sep", "boolean", "getShouldFailOnDataError"]}
{"code": "boolean function ( ) { return ( mrnaValue == MRNA . DOWNREGULATED ) ; }", "nl": "is the gene mrna down-regulated ? concode_field_sep RPPA rppaValue concode_elem_sep mutations isMutated concode_elem_sep String gene concode_elem_sep String mutationType concode_elem_sep String caseId concode_elem_sep CNA cnaValue concode_elem_sep GeneticEventComparator geneticEventComparator concode_elem_sep MRNA mrnaValue concode_field_sep RPPA getRPPAValue concode_elem_sep boolean isMutated concode_elem_sep boolean isRPPADownRegulated concode_elem_sep String caseCaseId concode_elem_sep mutations getMutationValue concode_elem_sep MRNA getMrnaValue concode_elem_sep boolean isCnaAmplified concode_elem_sep void setGeneticEventComparator concode_elem_sep String getGene concode_elem_sep boolean isCnaHeterozygousDeleted concode_elem_sep boolean equals concode_elem_sep CNA getCnaValue concode_elem_sep String toString concode_elem_sep boolean isRPPAUpRegulated concode_elem_sep String getMutationType concode_elem_sep boolean isCnaHomozygouslyDeleted concode_elem_sep boolean isMRNAUpRegulated", "code_tokens": ["boolean", "function", "(", ")", "{", "return", "(", "mrnaValue", "==", "MRNA", ".", "DOWNREGULATED", ")", ";", "}"], "nl_tokens": ["is", "the", "gene", "mrna", "down", "-", "regulated", "?", "concode_field_sep", "RPPA", "rppaValue", "concode_elem_sep", "mutations", "isMutated", "concode_elem_sep", "String", "gene", "concode_elem_sep", "String", "mutationType", "concode_elem_sep", "String", "caseId", "concode_elem_sep", "CNA", "cnaValue", "concode_elem_sep", "GeneticEventComparator", "geneticEventComparator", "concode_elem_sep", "MRNA", "mrnaValue", "concode_field_sep", "RPPA", "getRPPAValue", "concode_elem_sep", "boolean", "isMutated", "concode_elem_sep", "boolean", "isRPPADownRegulated", "concode_elem_sep", "String", "caseCaseId", "concode_elem_sep", "mutations", "getMutationValue", "concode_elem_sep", "MRNA", "getMrnaValue", "concode_elem_sep", "boolean", "isCnaAmplified", "concode_elem_sep", "void", "setGeneticEventComparator", "concode_elem_sep", "String", "getGene", "concode_elem_sep", "boolean", "isCnaHeterozygousDeleted", "concode_elem_sep", "boolean", "equals", "concode_elem_sep", "CNA", "getCnaValue", "concode_elem_sep", "String", "toString", "concode_elem_sep", "boolean", "isRPPAUpRegulated", "concode_elem_sep", "String", "getMutationType", "concode_elem_sep", "boolean", "isCnaHomozygouslyDeleted", "concode_elem_sep", "boolean", "isMRNAUpRegulated"]}
{"code": "ByteBuffer function ( int arg0 , int arg1 ) { return ByteBuffer . wrap ( getIncreasingByteArray ( arg0 , arg1 ) ) ; }", "nl": "gets a bytebuffer containing an increasing sequence of bytes starting at the givenvalue . concode_field_sep Method sCleanerCleanMethod concode_elem_sep Method sByteBufferCleanerMethod concode_elem_sep Logger LOG concode_field_sep boolean equalConstantByteArray concode_elem_sep void fastCopy concode_elem_sep void cleanDirectBuffer concode_elem_sep ByteBuffer sliceByteBuffer concode_elem_sep ByteBuffer sliceByteBuffer concode_elem_sep int byteToInt concode_elem_sep boolean equalIncreasingByteArray concode_elem_sep boolean equalIncreasingByteArray concode_elem_sep boolean equalIncreasingByteBuffer concode_elem_sep byte[] getIncreasingByteArray concode_elem_sep byte[] getIncreasingByteArray concode_elem_sep void writeBufferToFile concode_elem_sep List<ByteBuffer> cloneByteBufferList concode_elem_sep ByteBuffer cloneByteBuffer concode_elem_sep byte[] newByteArrayFromByteBuffer concode_elem_sep void putIntByteBuffer concode_elem_sep ByteBuffer generateNewByteBufferFromThriftRPCResults concode_elem_sep ByteBuffer getIncreasingIntBuffer concode_elem_sep ByteBuffer getIncreasingIntBuffer", "code_tokens": ["ByteBuffer", "function", "(", "int", "arg0", ",", "int", "arg1", ")", "{", "return", "ByteBuffer", ".", "wrap", "(", "getIncreasingByteArray", "(", "arg0", ",", "arg1", ")", ")", ";", "}"], "nl_tokens": ["gets", "a", "bytebuffer", "containing", "an", "increasing", "sequence", "of", "bytes", "starting", "at", "the", "givenvalue", ".", "concode_field_sep", "Method", "sCleanerCleanMethod", "concode_elem_sep", "Method", "sByteBufferCleanerMethod", "concode_elem_sep", "Logger", "LOG", "concode_field_sep", "boolean", "equalConstantByteArray", "concode_elem_sep", "void", "fastCopy", "concode_elem_sep", "void", "cleanDirectBuffer", "concode_elem_sep", "ByteBuffer", "sliceByteBuffer", "concode_elem_sep", "ByteBuffer", "sliceByteBuffer", "concode_elem_sep", "int", "byteToInt", "concode_elem_sep", "boolean", "equalIncreasingByteArray", "concode_elem_sep", "boolean", "equalIncreasingByteArray", "concode_elem_sep", "boolean", "equalIncreasingByteBuffer", "concode_elem_sep", "byte", "[", "]", "getIncreasingByteArray", "concode_elem_sep", "byte", "[", "]", "getIncreasingByteArray", "concode_elem_sep", "void", "writeBufferToFile", "concode_elem_sep", "List", "<", "ByteBuffer", ">", "cloneByteBufferList", "concode_elem_sep", "ByteBuffer", "cloneByteBuffer", "concode_elem_sep", "byte", "[", "]", "newByteArrayFromByteBuffer", "concode_elem_sep", "void", "putIntByteBuffer", "concode_elem_sep", "ByteBuffer", "generateNewByteBufferFromThriftRPCResults", "concode_elem_sep", "ByteBuffer", "getIncreasingIntBuffer", "concode_elem_sep", "ByteBuffer", "getIncreasingIntBuffer"]}
{"code": "void function ( ) { rmb . setOriginId ( \"srini_string\" ) ; assertTrue ( rmb . toString ( ) . contains ( \"srini_string\" ) ) ; assertEquals ( \"srini_string\" , rmb . getOriginId ( ) ) ; }", "nl": "test method for net.sf.marineapi.nmea.parser.rmbparser #setoriginid string . concode_field_sep String EXAMPLE concode_elem_sep RMBSentence rmb concode_elem_sep RMBSentence empty concode_field_sep void testGetVelocity concode_elem_sep void testGetCrossTrackError concode_elem_sep void testArrivalStatus concode_elem_sep void testSetDestination concode_elem_sep void testSetBearing concode_elem_sep void testSetSteerToWithNull concode_elem_sep void testSetStatus concode_elem_sep void testConstructor concode_elem_sep void testGetBearing concode_elem_sep void testSetBearingWithNegativeValue concode_elem_sep void testSetSteerTo concode_elem_sep void testGetSteerTo concode_elem_sep void testSetVelocity concode_elem_sep void testGetOriginId concode_elem_sep void testSetVelocityWithNegativeValue concode_elem_sep void setUp concode_elem_sep void testGetStatus concode_elem_sep void testSetBearingWithValueGreaterThanAllowed concode_elem_sep void testGetRange concode_elem_sep void testSetRange concode_elem_sep void testGetDestination concode_elem_sep void testSetCrossTrackError", "code_tokens": ["void", "function", "(", ")", "{", "rmb", ".", "setOriginId", "(", "\"srini_string\"", ")", ";", "assertTrue", "(", "rmb", ".", "toString", "(", ")", ".", "contains", "(", "\"srini_string\"", ")", ")", ";", "assertEquals", "(", "\"srini_string\"", ",", "rmb", ".", "getOriginId", "(", ")", ")", ";", "}"], "nl_tokens": ["test", "method", "for", "net", ".", "sf", ".", "marineapi", ".", "nmea", ".", "parser", ".", "rmbparser", "#setoriginid string . concode_field_sep String EXAMPLE concode_elem_sep RMBSentence rmb concode_elem_sep RMBSentence empty concode_field_sep void testGetVelocity concode_elem_sep void testGetCrossTrackError concode_elem_sep void testArrivalStatus concode_elem_sep void testSetDestination concode_elem_sep void testSetBearing concode_elem_sep void testSetSteerToWithNull concode_elem_sep void testSetStatus concode_elem_sep void testConstructor concode_elem_sep void testGetBearing concode_elem_sep void testSetBearingWithNegativeValue concode_elem_sep void testSetSteerTo concode_elem_sep void testGetSteerTo concode_elem_sep void testSetVelocity concode_elem_sep void testGetOriginId concode_elem_sep void testSetVelocityWithNegativeValue concode_elem_sep void setUp concode_elem_sep void testGetStatus concode_elem_sep void testSetBearingWithValueGreaterThanAllowed concode_elem_sep void testGetRange concode_elem_sep void testSetRange concode_elem_sep void testGetDestination concode_elem_sep void testSetCrossTrackError"]}
{"code": "List < NotationName > function ( ) { return Collections . unmodifiableList ( notations ) ; }", "nl": "get all of the registered notations . concode_field_sep Logger LOG concode_elem_sep String name concode_elem_sep Icon icon concode_elem_sep ArrayList<NotationName> notations concode_elem_sep String version concode_field_sep String getVersion concode_elem_sep String getNotationNameString concode_elem_sep String getName concode_elem_sep void fireEvent concode_elem_sep boolean removeNotation concode_elem_sep Icon getIcon concode_elem_sep String getConfigurationValue concode_elem_sep String getTitle concode_elem_sep NotationName findNotation concode_elem_sep NotationName getNotation concode_elem_sep NotationName getNotation concode_elem_sep String toString concode_elem_sep NotationName makeNotation concode_elem_sep boolean sameNotationAs", "code_tokens": ["List", "<", "NotationName", ">", "function", "(", ")", "{", "return", "Collections", ".", "unmodifiableList", "(", "notations", ")", ";", "}"], "nl_tokens": ["get", "all", "of", "the", "registered", "notations", ".", "concode_field_sep", "Logger", "LOG", "concode_elem_sep", "String", "name", "concode_elem_sep", "Icon", "icon", "concode_elem_sep", "ArrayList", "<", "NotationName", ">", "notations", "concode_elem_sep", "String", "version", "concode_field_sep", "String", "getVersion", "concode_elem_sep", "String", "getNotationNameString", "concode_elem_sep", "String", "getName", "concode_elem_sep", "void", "fireEvent", "concode_elem_sep", "boolean", "removeNotation", "concode_elem_sep", "Icon", "getIcon", "concode_elem_sep", "String", "getConfigurationValue", "concode_elem_sep", "String", "getTitle", "concode_elem_sep", "NotationName", "findNotation", "concode_elem_sep", "NotationName", "getNotation", "concode_elem_sep", "NotationName", "getNotation", "concode_elem_sep", "String", "toString", "concode_elem_sep", "NotationName", "makeNotation", "concode_elem_sep", "boolean", "sameNotationAs"]}
{"code": "void function ( BigDecimal arg0 ) { this . feedId = arg0 ; }", "nl": "sets the feed id . concode_field_sep long serialVersionUID concode_elem_sep String isSystemDerived concode_elem_sep String isActive concode_elem_sep BigDecimal predecessorId concode_elem_sep String srcFileName concode_elem_sep BigDecimal successorId concode_elem_sep BigDecimal feedId concode_elem_sep String checksum concode_elem_sep String transmissionDatasetId concode_elem_sep String comments concode_elem_sep String inactivationReasonType concode_elem_sep String isFormatValid concode_elem_sep long dataUnitId concode_elem_sep Timestamp receiptDate concode_elem_sep String srcUniqueFileName concode_elem_sep Timestamp createdDate concode_elem_sep Long dataSetId concode_elem_sep BigDecimal fileSize concode_elem_sep String destFileName concode_elem_sep String loadedInCats concode_elem_sep String checksumType concode_elem_sep Timestamp modifiedDate concode_elem_sep BigDecimal runId concode_elem_sep String isPrepopulated concode_elem_sep String isBulk concode_elem_sep String isUpdate concode_elem_sep String receiptDateType concode_elem_sep String status concode_field_sep void setIsSystemDerived concode_elem_sep void setIsPrepopulated concode_elem_sep String getStatus concode_elem_sep String getIsUpdate concode_elem_sep long getDataUnitId concode_elem_sep BigDecimal getFileSize concode_elem_sep void setInactivationReasonType concode_elem_sep void setDataUnitId concode_elem_sep String getComments concode_elem_sep Timestamp getCreatedDate concode_elem_sep void setFileSize concode_elem_sep BigDecimal getPredecessorId concode_elem_sep void setIsUpdate concode_elem_sep String getReceiptDateType concode_elem_sep BigDecimal getFeedId concode_elem_sep void setReceiptDate concode_elem_sep Timestamp getModifiedDate concode_elem_sep void setSuccessorId concode_elem_sep void setDestFileName concode_elem_sep void setIsBulk concode_elem_sep String getIsFormatValid concode_elem_sep void setDataSetId concode_elem_sep void setIsActive concode_elem_sep void setChecksumType concode_elem_sep String getInactivationReasonType concode_elem_sep String getSrcUniqueFileName concode_elem_sep Long getDataSetId concode_elem_sep void setReceiptDateType concode_elem_sep BigDecimal getRunId concode_elem_sep void setSrcFileName concode_elem_sep String getChecksumType concode_elem_sep String getSrcFileName concode_elem_sep String getChecksum concode_elem_sep String getDestFileName concode_elem_sep Timestamp getReceiptDate concode_elem_sep void setTransmissionDatasetId concode_elem_sep String getTransmissionDatasetId concode_elem_sep void setComments concode_elem_sep String getLoadedInCats concode_elem_sep BigDecimal getSuccessorId concode_elem_sep void setLoadedInCats concode_elem_sep String getIsPrepopulated concode_elem_sep void setSrcUniqueFileName concode_elem_sep void setChecksum concode_elem_sep void setIsFormatValid concode_elem_sep String getIsBulk concode_elem_sep void setRunId concode_elem_sep void setStatus concode_elem_sep String getIsActive concode_elem_sep void setModifiedDate concode_elem_sep void setCreatedDate concode_elem_sep void setPredecessorId concode_elem_sep String getIsSystemDerived", "code_tokens": ["void", "function", "(", "BigDecimal", "arg0", ")", "{", "this", ".", "feedId", "=", "arg0", ";", "}"], "nl_tokens": ["sets", "the", "feed", "id", ".", "concode_field_sep", "long", "serialVersionUID", "concode_elem_sep", "String", "isSystemDerived", "concode_elem_sep", "String", "isActive", "concode_elem_sep", "BigDecimal", "predecessorId", "concode_elem_sep", "String", "srcFileName", "concode_elem_sep", "BigDecimal", "successorId", "concode_elem_sep", "BigDecimal", "feedId", "concode_elem_sep", "String", "checksum", "concode_elem_sep", "String", "transmissionDatasetId", "concode_elem_sep", "String", "comments", "concode_elem_sep", "String", "inactivationReasonType", "concode_elem_sep", "String", "isFormatValid", "concode_elem_sep", "long", "dataUnitId", "concode_elem_sep", "Timestamp", "receiptDate", "concode_elem_sep", "String", "srcUniqueFileName", "concode_elem_sep", "Timestamp", "createdDate", "concode_elem_sep", "Long", "dataSetId", "concode_elem_sep", "BigDecimal", "fileSize", "concode_elem_sep", "String", "destFileName", "concode_elem_sep", "String", "loadedInCats", "concode_elem_sep", "String", "checksumType", "concode_elem_sep", "Timestamp", "modifiedDate", "concode_elem_sep", "BigDecimal", "runId", "concode_elem_sep", "String", "isPrepopulated", "concode_elem_sep", "String", "isBulk", "concode_elem_sep", "String", "isUpdate", "concode_elem_sep", "String", "receiptDateType", "concode_elem_sep", "String", "status", "concode_field_sep", "void", "setIsSystemDerived", "concode_elem_sep", "void", "setIsPrepopulated", "concode_elem_sep", "String", "getStatus", "concode_elem_sep", "String", "getIsUpdate", "concode_elem_sep", "long", "getDataUnitId", "concode_elem_sep", "BigDecimal", "getFileSize", "concode_elem_sep", "void", "setInactivationReasonType", "concode_elem_sep", "void", "setDataUnitId", "concode_elem_sep", "String", "getComments", "concode_elem_sep", "Timestamp", "getCreatedDate", "concode_elem_sep", "void", "setFileSize", "concode_elem_sep", "BigDecimal", "getPredecessorId", "concode_elem_sep", "void", "setIsUpdate", "concode_elem_sep", "String", "getReceiptDateType", "concode_elem_sep", "BigDecimal", "getFeedId", "concode_elem_sep", "void", "setReceiptDate", "concode_elem_sep", "Timestamp", "getModifiedDate", "concode_elem_sep", "void", "setSuccessorId", "concode_elem_sep", "void", "setDestFileName", "concode_elem_sep", "void", "setIsBulk", "concode_elem_sep", "String", "getIsFormatValid", "concode_elem_sep", "void", "setDataSetId", "concode_elem_sep", "void", "setIsActive", "concode_elem_sep", "void", "setChecksumType", "concode_elem_sep", "String", "getInactivationReasonType", "concode_elem_sep", "String", "getSrcUniqueFileName", "concode_elem_sep", "Long", "getDataSetId", "concode_elem_sep", "void", "setReceiptDateType", "concode_elem_sep", "BigDecimal", "getRunId", "concode_elem_sep", "void", "setSrcFileName", "concode_elem_sep", "String", "getChecksumType", "concode_elem_sep", "String", "getSrcFileName", "concode_elem_sep", "String", "getChecksum", "concode_elem_sep", "String", "getDestFileName", "concode_elem_sep", "Timestamp", "getReceiptDate", "concode_elem_sep", "void", "setTransmissionDatasetId", "concode_elem_sep", "String", "getTransmissionDatasetId", "concode_elem_sep", "void", "setComments", "concode_elem_sep", "String", "getLoadedInCats", "concode_elem_sep", "BigDecimal", "getSuccessorId", "concode_elem_sep", "void", "setLoadedInCats", "concode_elem_sep", "String", "getIsPrepopulated", "concode_elem_sep", "void", "setSrcUniqueFileName", "concode_elem_sep", "void", "setChecksum", "concode_elem_sep", "void", "setIsFormatValid", "concode_elem_sep", "String", "getIsBulk", "concode_elem_sep", "void", "setRunId", "concode_elem_sep", "void", "setStatus", "concode_elem_sep", "String", "getIsActive", "concode_elem_sep", "void", "setModifiedDate", "concode_elem_sep", "void", "setCreatedDate", "concode_elem_sep", "void", "setPredecessorId", "concode_elem_sep", "String", "getIsSystemDerived"]}
{"code": "void function ( String arg0 , String arg1 ) { addTablesSQL ( arg0 , null , null , arg1 ) ; }", "nl": "add mapping between uri path and sql which represent one of more using inner join or left outer join tables . the base type and sub type will be guessed . concode_field_sep List<E> mEntries concode_elem_sep Map<String,SQLiteUriMatcher> instances concode_elem_sep Uri mBaseContentUri concode_elem_sep String mAuthority concode_elem_sep UriMatcher mUriMatcher concode_elem_sep String TAG concode_field_sep E createMatcherEntry concode_elem_sep E createMatcherEntry concode_elem_sep void addSQLBuilderCallback concode_elem_sep void addSQLBuilderCallback concode_elem_sep E getMatcherEntry concode_elem_sep String getType concode_elem_sep List<E> getEntries concode_elem_sep void addMatherEntry concode_elem_sep void addRawSQL concode_elem_sep void addRawSQL concode_elem_sep U getInstance concode_elem_sep void instantiate", "code_tokens": ["void", "function", "(", "String", "arg0", ",", "String", "arg1", ")", "{", "addTablesSQL", "(", "arg0", ",", "null", ",", "null", ",", "arg1", ")", ";", "}"], "nl_tokens": ["add", "mapping", "between", "uri", "path", "and", "sql", "which", "represent", "one", "of", "more", "using", "inner", "join", "or", "left", "outer", "join", "tables", ".", "the", "base", "type", "and", "sub", "type", "will", "be", "guessed", ".", "concode_field_sep", "List", "<", "E", ">", "mEntries", "concode_elem_sep", "Map", "<", "String", ",", "SQLiteUriMatcher", ">", "instances", "concode_elem_sep", "Uri", "mBaseContentUri", "concode_elem_sep", "String", "mAuthority", "concode_elem_sep", "UriMatcher", "mUriMatcher", "concode_elem_sep", "String", "TAG", "concode_field_sep", "E", "createMatcherEntry", "concode_elem_sep", "E", "createMatcherEntry", "concode_elem_sep", "void", "addSQLBuilderCallback", "concode_elem_sep", "void", "addSQLBuilderCallback", "concode_elem_sep", "E", "getMatcherEntry", "concode_elem_sep", "String", "getType", "concode_elem_sep", "List", "<", "E", ">", "getEntries", "concode_elem_sep", "void", "addMatherEntry", "concode_elem_sep", "void", "addRawSQL", "concode_elem_sep", "void", "addRawSQL", "concode_elem_sep", "U", "getInstance", "concode_elem_sep", "void", "instantiate"]}
{"code": "void function ( String arg0 ) { this . response . setContentType ( arg0 ) ; }", "nl": "set the http content-type header . concode_field_sep int status concode_elem_sep int INFINITY concode_elem_sep HttpServletRequest request concode_elem_sep URI base concode_elem_sep HttpServletResponse response concode_field_sep URI lookup concode_elem_sep int getDepth concode_elem_sep InputStream read concode_elem_sep String getNormalizedPath concode_elem_sep URI getDestination concode_elem_sep String getMethod concode_elem_sep int getStatus concode_elem_sep boolean hasRequestBody concode_elem_sep void setStatus concode_elem_sep void setHeader concode_elem_sep boolean getOverwrite concode_elem_sep String getOriginalPath concode_elem_sep OutputStream write concode_elem_sep PrintWriter write concode_elem_sep Date getIfModifiedSince", "code_tokens": ["void", "function", "(", "String", "arg0", ")", "{", "this", ".", "response", ".", "setContentType", "(", "arg0", ")", ";", "}"], "nl_tokens": ["set", "the", "http", "content", "-", "type", "header", ".", "concode_field_sep", "int", "status", "concode_elem_sep", "int", "INFINITY", "concode_elem_sep", "HttpServletRequest", "request", "concode_elem_sep", "URI", "base", "concode_elem_sep", "HttpServletResponse", "response", "concode_field_sep", "URI", "lookup", "concode_elem_sep", "int", "getDepth", "concode_elem_sep", "InputStream", "read", "concode_elem_sep", "String", "getNormalizedPath", "concode_elem_sep", "URI", "getDestination", "concode_elem_sep", "String", "getMethod", "concode_elem_sep", "int", "getStatus", "concode_elem_sep", "boolean", "hasRequestBody", "concode_elem_sep", "void", "setStatus", "concode_elem_sep", "void", "setHeader", "concode_elem_sep", "boolean", "getOverwrite", "concode_elem_sep", "String", "getOriginalPath", "concode_elem_sep", "OutputStream", "write", "concode_elem_sep", "PrintWriter", "write", "concode_elem_sep", "Date", "getIfModifiedSince"]}
{"code": "void function ( T arg0 ) { if ( position >= max ) { position = 0 ; haveOverflow = true ; } if ( circularArray . size ( ) > position ) { circularArray . remove ( position ) ; } circularArray . add ( position , arg0 ) ; position ++ ; }", "nl": "add an entry concode_field_sep List<T> circularArray concode_elem_sep int max concode_elem_sep int position concode_elem_sep boolean haveOverflow concode_field_sep int size concode_elem_sep String toString", "code_tokens": ["void", "function", "(", "T", "arg0", ")", "{", "if", "(", "position", ">=", "max", ")", "{", "position", "=", "0", ";", "haveOverflow", "=", "true", ";", "}", "if", "(", "circularArray", ".", "size", "(", ")", ">", "position", ")", "{", "circularArray", ".", "remove", "(", "position", ")", ";", "}", "circularArray", ".", "add", "(", "position", ",", "arg0", ")", ";", "position", "+", "+", ";", "}"], "nl_tokens": ["add", "an", "entry", "concode_field_sep", "List", "<", "T", ">", "circularArray", "concode_elem_sep", "int", "max", "concode_elem_sep", "int", "position", "concode_elem_sep", "boolean", "haveOverflow", "concode_field_sep", "int", "size", "concode_elem_sep", "String", "toString"]}
{"code": "String function ( Date arg0 ) { SimpleDateFormat loc0 = new SimpleDateFormat ( \"srini_string\" ) ; loc0 . setTimeZone ( TimeZone . getTimeZone ( \"srini_string\" ) ) ; return loc0 . format ( arg0 ) ; }", "nl": "return the utc date and time in w3c format down to second yyyy-mm-ddthh : mm : ssz . i.e. : 1997-07-16t19:20:30z concode_field_sep String[] W3CDATETIME_MASKS concode_elem_sep TimeZone UTC concode_field_sep boolean isDSTChangeDay concode_elem_sep String formatDateUTC concode_elem_sep String formatDateUTC concode_elem_sep DateFormat getISO8601DateFormat concode_elem_sep TimeZone getTimeZone concode_elem_sep java.util.Date toDate concode_elem_sep Timestamp convertDateToTimestamp concode_elem_sep Date parseDateUTC concode_elem_sep Calendar getCalendar concode_elem_sep Calendar getCalendar concode_elem_sep void moveToEnd concode_elem_sep Date parseUsingMask concode_elem_sep int hoursInDay", "code_tokens": ["String", "function", "(", "Date", "arg0", ")", "{", "SimpleDateFormat", "loc0", "=", "new", "SimpleDateFormat", "(", "\"srini_string\"", ")", ";", "loc0", ".", "setTimeZone", "(", "TimeZone", ".", "getTimeZone", "(", "\"srini_string\"", ")", ")", ";", "return", "loc0", ".", "format", "(", "arg0", ")", ";", "}"], "nl_tokens": ["return", "the", "utc", "date", "and", "time", "in", "w3c", "format", "down", "to", "second", "yyyy", "-", "mm", "-", "ddthh", ":", "mm", ":", "ssz", ".", "i", ".", "e", ".", ":", "1997", "-", "0", "7", "-", "16", "t19", ":", "20", ":", "30", "z", "concode_field_sep", "String", "[", "]", "W3CDATETIME_MASKS", "concode_elem_sep", "TimeZone", "UTC", "concode_field_sep", "boolean", "isDSTChangeDay", "concode_elem_sep", "String", "formatDateUTC", "concode_elem_sep", "String", "formatDateUTC", "concode_elem_sep", "DateFormat", "getISO8601DateFormat", "concode_elem_sep", "TimeZone", "getTimeZone", "concode_elem_sep", "java", ".", "util", ".", "Date", "toDate", "concode_elem_sep", "Timestamp", "convertDateToTimestamp", "concode_elem_sep", "Date", "parseDateUTC", "concode_elem_sep", "Calendar", "getCalendar", "concode_elem_sep", "Calendar", "getCalendar", "concode_elem_sep", "void", "moveToEnd", "concode_elem_sep", "Date", "parseUsingMask", "concode_elem_sep", "int", "hoursInDay"]}
{"code": "MetadataEditorCompat function ( int arg0 , long arg1 ) { if ( HAS_REMOTE_CONTROL_APIS ) { ( ( RemoteControlClient . MetadataEditor ) mActualMetadataEditor ) . putLong ( arg0 , arg1 ) ; } return this ; }", "nl": "adds numerical information to be displayed . note that none of the information added after #apply has been called , will be displayed . concode_field_sep boolean HAS_REMOTE_CONTROL_APIS concode_elem_sep Object mActualMetadataEditor concode_elem_sep int METADATA_KEY_ARTWORK concode_elem_sep Object mActualRemoteControlClient concode_field_sep void setPlaybackState concode_elem_sep MetadataEditorCompat putBitmap concode_elem_sep void apply concode_elem_sep void removeFromMediaRouter concode_elem_sep MetadataEditorCompat putString concode_elem_sep void clear concode_elem_sep void addToMediaRouter concode_elem_sep Object getActualRemoteControlClientObject concode_elem_sep MetadataEditorCompat editMetadata concode_elem_sep void setTransportControlFlags", "code_tokens": ["MetadataEditorCompat", "function", "(", "int", "arg0", ",", "long", "arg1", ")", "{", "if", "(", "HAS_REMOTE_CONTROL_APIS", ")", "{", "(", "(", "RemoteControlClient", ".", "MetadataEditor", ")", "mActualMetadataEditor", ")", ".", "putLong", "(", "arg0", ",", "arg1", ")", ";", "}", "return", "this", ";", "}"], "nl_tokens": ["adds", "numerical", "information", "to", "be", "displayed", ".", "note", "that", "none", "of", "the", "information", "added", "after", "#apply has been called , will be displayed . concode_field_sep boolean HAS_REMOTE_CONTROL_APIS concode_elem_sep Object mActualMetadataEditor concode_elem_sep int METADATA_KEY_ARTWORK concode_elem_sep Object mActualRemoteControlClient concode_field_sep void setPlaybackState concode_elem_sep MetadataEditorCompat putBitmap concode_elem_sep void apply concode_elem_sep void removeFromMediaRouter concode_elem_sep MetadataEditorCompat putString concode_elem_sep void clear concode_elem_sep void addToMediaRouter concode_elem_sep Object getActualRemoteControlClientObject concode_elem_sep MetadataEditorCompat editMetadata concode_elem_sep void setTransportControlFlags"]}
{"code": "void function ( List < Double > arg0 ) { profits . add ( arg0 ) ; }", "nl": "add the utility values of an itemset to this sequence concode_field_sep double exactUtility concode_elem_sep int id concode_elem_sep List<List<Integer>> itemsets concode_elem_sep List<List<Double>> profits concode_field_sep List<List<Double>> getUtilities concode_elem_sep void print concode_elem_sep int size concode_elem_sep List<Integer> get concode_elem_sep String toString concode_elem_sep int getId concode_elem_sep List<List<Integer>> getItemsets concode_elem_sep void addItemset", "code_tokens": ["void", "function", "(", "List", "<", "Double", ">", "arg0", ")", "{", "profits", ".", "add", "(", "arg0", ")", ";", "}"], "nl_tokens": ["add", "the", "utility", "values", "of", "an", "itemset", "to", "this", "sequence", "concode_field_sep", "double", "exactUtility", "concode_elem_sep", "int", "id", "concode_elem_sep", "List", "<", "List", "<", "Integer", ">>", "itemsets", "concode_elem_sep", "List", "<", "List", "<", "Double", ">>", "profits", "concode_field_sep", "List", "<", "List", "<", "Double", ">>", "getUtilities", "concode_elem_sep", "void", "print", "concode_elem_sep", "int", "size", "concode_elem_sep", "List", "<", "Integer", ">", "get", "concode_elem_sep", "String", "toString", "concode_elem_sep", "int", "getId", "concode_elem_sep", "List", "<", "List", "<", "Integer", ">>", "getItemsets", "concode_elem_sep", "void", "addItemset"]}
{"code": "void function ( List < Interceptor < ? extends Message >> arg0 ) { inInterceptors = arg0 ; }", "nl": "sets the list of in interceptors which pre-process the responses from remote services . concode_field_sep ConduitSelector conduitSelector concode_elem_sep Map<String,Object> requestContext concode_elem_sep Bus bus concode_elem_sep List<Interceptor<? extends Message>> inInterceptors concode_elem_sep long synchronousTimeout concode_elem_sep List<Interceptor<? extends Message>> outInterceptors concode_elem_sep Logger LOG concode_elem_sep List<Interceptor<? extends Message>> inFault concode_elem_sep Map<String,Object> responseContext concode_elem_sep List<Interceptor<? extends Message>> outFault concode_field_sep Bus getBus concode_elem_sep List<Interceptor<? extends Message>> getOutFaultInterceptors concode_elem_sep Endpoint getEndpoint concode_elem_sep long getSynchronousTimeout concode_elem_sep void setConduitSelector concode_elem_sep void setOutInterceptors concode_elem_sep List<Interceptor<? extends Message>> getInInterceptors concode_elem_sep Map<String,Object> getResponseContext concode_elem_sep boolean isResponseExpectedForOneway concode_elem_sep void setOutFaultInterceptors concode_elem_sep HTTPConduit getHttpConduit concode_elem_sep Conduit getConduit concode_elem_sep void setSynchronousTimeout concode_elem_sep ConduitSelector getConduitSelector concode_elem_sep List<Interceptor<? extends Message>> getInFaultInterceptors concode_elem_sep List<Interceptor<? extends Message>> getOutInterceptors concode_elem_sep Map<String,Object> getRequestContext concode_elem_sep void setInFaultInterceptors concode_elem_sep void setBus concode_elem_sep void prepareConduitSelector", "code_tokens": ["void", "function", "(", "List", "<", "Interceptor", "<", "?", "extends", "Message", ">>", "arg0", ")", "{", "inInterceptors", "=", "arg0", ";", "}"], "nl_tokens": ["sets", "the", "list", "of", "in", "interceptors", "which", "pre", "-", "process", "the", "responses", "from", "remote", "services", ".", "concode_field_sep", "ConduitSelector", "conduitSelector", "concode_elem_sep", "Map", "<", "String", ",", "Object", ">", "requestContext", "concode_elem_sep", "Bus", "bus", "concode_elem_sep", "List", "<", "Interceptor", "<", "?", "extends", "Message", ">>", "inInterceptors", "concode_elem_sep", "long", "synchronousTimeout", "concode_elem_sep", "List", "<", "Interceptor", "<", "?", "extends", "Message", ">>", "outInterceptors", "concode_elem_sep", "Logger", "LOG", "concode_elem_sep", "List", "<", "Interceptor", "<", "?", "extends", "Message", ">>", "inFault", "concode_elem_sep", "Map", "<", "String", ",", "Object", ">", "responseContext", "concode_elem_sep", "List", "<", "Interceptor", "<", "?", "extends", "Message", ">>", "outFault", "concode_field_sep", "Bus", "getBus", "concode_elem_sep", "List", "<", "Interceptor", "<", "?", "extends", "Message", ">>", "getOutFaultInterceptors", "concode_elem_sep", "Endpoint", "getEndpoint", "concode_elem_sep", "long", "getSynchronousTimeout", "concode_elem_sep", "void", "setConduitSelector", "concode_elem_sep", "void", "setOutInterceptors", "concode_elem_sep", "List", "<", "Interceptor", "<", "?", "extends", "Message", ">>", "getInInterceptors", "concode_elem_sep", "Map", "<", "String", ",", "Object", ">", "getResponseContext", "concode_elem_sep", "boolean", "isResponseExpectedForOneway", "concode_elem_sep", "void", "setOutFaultInterceptors", "concode_elem_sep", "HTTPConduit", "getHttpConduit", "concode_elem_sep", "Conduit", "getConduit", "concode_elem_sep", "void", "setSynchronousTimeout", "concode_elem_sep", "ConduitSelector", "getConduitSelector", "concode_elem_sep", "List", "<", "Interceptor", "<", "?", "extends", "Message", ">>", "getInFaultInterceptors", "concode_elem_sep", "List", "<", "Interceptor", "<", "?", "extends", "Message", ">>", "getOutInterceptors", "concode_elem_sep", "Map", "<", "String", ",", "Object", ">", "getRequestContext", "concode_elem_sep", "void", "setInFaultInterceptors", "concode_elem_sep", "void", "setBus", "concode_elem_sep", "void", "prepareConduitSelector"]}
{"code": "void function ( String arg0 ) { try { processWriter . write ( arg0 + \"srini_string\" ) ; processWriter . flush ( ) ; } catch ( IOException loc0 ) { loc0 . printStackTrace ( ) ; } }", "nl": "takes in any valid uci command and executes it concode_field_sep String PATH concode_elem_sep Process engineProcess concode_elem_sep OutputStreamWriter processWriter concode_elem_sep BufferedReader processReader concode_field_sep float getEvalScore concode_elem_sep String getLegalMoves concode_elem_sep boolean startEngine concode_elem_sep void drawBoard concode_elem_sep String getBestMove concode_elem_sep void stopEngine concode_elem_sep String getOutput", "code_tokens": ["void", "function", "(", "String", "arg0", ")", "{", "try", "{", "processWriter", ".", "write", "(", "arg0", "+", "\"srini_string\"", ")", ";", "processWriter", ".", "flush", "(", ")", ";", "}", "catch", "(", "IOException", "loc0", ")", "{", "loc0", ".", "printStackTrace", "(", ")", ";", "}", "}"], "nl_tokens": ["takes", "in", "any", "valid", "uci", "command", "and", "executes", "it", "concode_field_sep", "String", "PATH", "concode_elem_sep", "Process", "engineProcess", "concode_elem_sep", "OutputStreamWriter", "processWriter", "concode_elem_sep", "BufferedReader", "processReader", "concode_field_sep", "float", "getEvalScore", "concode_elem_sep", "String", "getLegalMoves", "concode_elem_sep", "boolean", "startEngine", "concode_elem_sep", "void", "drawBoard", "concode_elem_sep", "String", "getBestMove", "concode_elem_sep", "void", "stopEngine", "concode_elem_sep", "String", "getOutput"]}
{"code": "void function ( ) { Preconditions . checkState ( mNettyBuf != null ) ; Preconditions . checkState ( mNettyBuf . refCnt ( ) == 1 , \"srini_string\" , mNettyBuf . refCnt ( ) ) ; Preconditions . checkState ( mNettyBuf . release ( ) , \"srini_string\" ) ; }", "nl": "release the netty bytebuf . concode_field_sep long mLength concode_elem_sep ByteBuffer mBuffer concode_elem_sep ByteBuf mNettyBuf concode_field_sep ByteBuffer getReadOnlyByteBuffer concode_elem_sep long getLength concode_elem_sep Object getNettyOutput", "code_tokens": ["void", "function", "(", ")", "{", "Preconditions", ".", "checkState", "(", "mNettyBuf", "!=", "null", ")", ";", "Preconditions", ".", "checkState", "(", "mNettyBuf", ".", "refCnt", "(", ")", "==", "1", ",", "\"srini_string\"", ",", "mNettyBuf", ".", "refCnt", "(", ")", ")", ";", "Preconditions", ".", "checkState", "(", "mNettyBuf", ".", "release", "(", ")", ",", "\"srini_string\"", ")", ";", "}"], "nl_tokens": ["release", "the", "netty", "bytebuf", ".", "concode_field_sep", "long", "mLength", "concode_elem_sep", "ByteBuffer", "mBuffer", "concode_elem_sep", "ByteBuf", "mNettyBuf", "concode_field_sep", "ByteBuffer", "getReadOnlyByteBuffer", "concode_elem_sep", "long", "getLength", "concode_elem_sep", "Object", "getNettyOutput"]}
{"code": "boolean function ( final Callable < Boolean > arg0 ) { boolean loc0 ; try { loc0 = arg0 . call ( ) ; } catch ( Exception loc1 ) { LOG . error ( \"srini_string\" + arg0 , loc1 ) ; loc0 = false ; } CliUtils . printPassInfo ( loc0 ) ; return loc0 ; }", "nl": "runs an example . concode_field_sep Logger LOG concode_field_sep void printPassInfo", "code_tokens": ["boolean", "function", "(", "final", "Callable", "<", "Boolean", ">", "arg0", ")", "{", "boolean", "loc0", ";", "try", "{", "loc0", "=", "arg0", ".", "call", "(", ")", ";", "}", "catch", "(", "Exception", "loc1", ")", "{", "LOG", ".", "error", "(", "\"srini_string\"", "+", "arg0", ",", "loc1", ")", ";", "loc0", "=", "false", ";", "}", "CliUtils", ".", "printPassInfo", "(", "loc0", ")", ";", "return", "loc0", ";", "}"], "nl_tokens": ["runs", "an", "example", ".", "concode_field_sep", "Logger", "LOG", "concode_field_sep", "void", "printPassInfo"]}
{"code": "void function ( byte [ ] arg0 ) { this . challenge = ( ( byte [ ] ) arg0 ) ; }", "nl": "sets the value of the challenge property . concode_field_sep Access access concode_elem_sep byte[] challenge concode_elem_sep Integer statusCode concode_field_sep void setAccess concode_elem_sep Access getAccess concode_elem_sep Integer getStatusCode concode_elem_sep void setStatusCode concode_elem_sep byte[] getChallenge", "code_tokens": ["void", "function", "(", "byte", "[", "]", "arg0", ")", "{", "this", ".", "challenge", "=", "(", "(", "byte", "[", "]", ")", "arg0", ")", ";", "}"], "nl_tokens": ["sets", "the", "value", "of", "the", "challenge", "property", ".", "concode_field_sep", "Access", "access", "concode_elem_sep", "byte", "[", "]", "challenge", "concode_elem_sep", "Integer", "statusCode", "concode_field_sep", "void", "setAccess", "concode_elem_sep", "Access", "getAccess", "concode_elem_sep", "Integer", "getStatusCode", "concode_elem_sep", "void", "setStatusCode", "concode_elem_sep", "byte", "[", "]", "getChallenge"]}
{"code": "void function ( List < String > arg0 , List < String > arg1 , Map < String , String > arg2 ) { for ( String loc0 : arg0 ) { for ( String loc1 : arg1 ) { String loc2 = createKey ( loc0 , loc1 ) ; arg2 . put ( loc2 , \"srini_string\" ) ; } } }", "nl": "applies no mutation data to mutation map . concode_field_sep File allCasesFile concode_elem_sep String MAP_KEY_DELIMETER concode_elem_sep File sequencedCaseFile concode_elem_sep File knownMutationFile concode_elem_sep File sequencedGeneFile concode_field_sep ArrayList<String> getList concode_elem_sep String generateMutationFile concode_elem_sep Map<String,String> getMutationMap concode_elem_sep String createKey concode_elem_sep void applyKnownMutationsData concode_elem_sep void main concode_elem_sep String execute", "code_tokens": ["void", "function", "(", "List", "<", "String", ">", "arg0", ",", "List", "<", "String", ">", "arg1", ",", "Map", "<", "String", ",", "String", ">", "arg2", ")", "{", "for", "(", "String", "loc0", ":", "arg0", ")", "{", "for", "(", "String", "loc1", ":", "arg1", ")", "{", "String", "loc2", "=", "createKey", "(", "loc0", ",", "loc1", ")", ";", "arg2", ".", "put", "(", "loc2", ",", "\"srini_string\"", ")", ";", "}", "}", "}"], "nl_tokens": ["applies", "no", "mutation", "data", "to", "mutation", "map", ".", "concode_field_sep", "File", "allCasesFile", "concode_elem_sep", "String", "MAP_KEY_DELIMETER", "concode_elem_sep", "File", "sequencedCaseFile", "concode_elem_sep", "File", "knownMutationFile", "concode_elem_sep", "File", "sequencedGeneFile", "concode_field_sep", "ArrayList", "<", "String", ">", "getList", "concode_elem_sep", "String", "generateMutationFile", "concode_elem_sep", "Map", "<", "String", ",", "String", ">", "getMutationMap", "concode_elem_sep", "String", "createKey", "concode_elem_sep", "void", "applyKnownMutationsData", "concode_elem_sep", "void", "main", "concode_elem_sep", "String", "execute"]}
{"code": "int function ( String arg0 ) { if ( p1 . schema ( ) . hasField ( arg0 ) ) return p1 . distinctValues ( arg0 ) ; else return p2 . distinctValues ( arg0 ) ; }", "nl": "estimates the distinct number of field values in the join . since the join does not increase or decrease field values , the estimate is the same as in the appropriate underlying query . concode_field_sep String fldname2 concode_elem_sep Plan p1 concode_elem_sep String fldname1 concode_elem_sep Plan p2 concode_elem_sep Schema sch concode_field_sep Schema schema concode_elem_sep int blocksAccessed concode_elem_sep int recordsOutput concode_elem_sep Scan open", "code_tokens": ["int", "function", "(", "String", "arg0", ")", "{", "if", "(", "p1", ".", "schema", "(", ")", ".", "hasField", "(", "arg0", ")", ")", "return", "p1", ".", "distinctValues", "(", "arg0", ")", ";", "else", "return", "p2", ".", "distinctValues", "(", "arg0", ")", ";", "}"], "nl_tokens": ["estimates", "the", "distinct", "number", "of", "field", "values", "in", "the", "join", ".", "since", "the", "join", "does", "not", "increase", "or", "decrease", "field", "values", ",", "the", "estimate", "is", "the", "same", "as", "in", "the", "appropriate", "underlying", "query", ".", "concode_field_sep", "String", "fldname2", "concode_elem_sep", "Plan", "p1", "concode_elem_sep", "String", "fldname1", "concode_elem_sep", "Plan", "p2", "concode_elem_sep", "Schema", "sch", "concode_field_sep", "Schema", "schema", "concode_elem_sep", "int", "blocksAccessed", "concode_elem_sep", "int", "recordsOutput", "concode_elem_sep", "Scan", "open"]}
{"code": "void function ( ) { cancelled = true ; }", "nl": "cancel all operations . concode_field_sep Context context concode_elem_sep DuplicateProviderListener<T,DuplicateProvider<T>> listener concode_elem_sep boolean cancelled concode_field_sep void fetchItems concode_elem_sep boolean isCancelled concode_elem_sep String[] getReadPermissions concode_elem_sep String getCursorSelection concode_elem_sep void deletePairs concode_elem_sep Uri getContentUri concode_elem_sep String empty concode_elem_sep List<T> getItems concode_elem_sep void onPreExecute concode_elem_sep void populateItem concode_elem_sep String[] getCursorProjection concode_elem_sep boolean deleteItem concode_elem_sep boolean deleteItem concode_elem_sep T createItem concode_elem_sep void setListener concode_elem_sep void deleteItems concode_elem_sep void onPostExecute concode_elem_sep DuplicateProviderListener<T,DuplicateProvider<T>> getListener concode_elem_sep Context getContext concode_elem_sep String[] getDeletePermissions", "code_tokens": ["void", "function", "(", ")", "{", "cancelled", "=", "true", ";", "}"], "nl_tokens": ["cancel", "all", "operations", ".", "concode_field_sep", "Context", "context", "concode_elem_sep", "DuplicateProviderListener", "<", "T", ",", "DuplicateProvider", "<", "T", ">>", "listener", "concode_elem_sep", "boolean", "cancelled", "concode_field_sep", "void", "fetchItems", "concode_elem_sep", "boolean", "isCancelled", "concode_elem_sep", "String", "[", "]", "getReadPermissions", "concode_elem_sep", "String", "getCursorSelection", "concode_elem_sep", "void", "deletePairs", "concode_elem_sep", "Uri", "getContentUri", "concode_elem_sep", "String", "empty", "concode_elem_sep", "List", "<", "T", ">", "getItems", "concode_elem_sep", "void", "onPreExecute", "concode_elem_sep", "void", "populateItem", "concode_elem_sep", "String", "[", "]", "getCursorProjection", "concode_elem_sep", "boolean", "deleteItem", "concode_elem_sep", "boolean", "deleteItem", "concode_elem_sep", "T", "createItem", "concode_elem_sep", "void", "setListener", "concode_elem_sep", "void", "deleteItems", "concode_elem_sep", "void", "onPostExecute", "concode_elem_sep", "DuplicateProviderListener", "<", "T", ",", "DuplicateProvider", "<", "T", ">>", "getListener", "concode_elem_sep", "Context", "getContext", "concode_elem_sep", "String", "[", "]", "getDeletePermissions"]}
{"code": "TopKSelector < T > function ( int arg0 ) { return greatest ( arg0 , Ordering . natural ( ) ) ; }", "nl": "returns a topkselector that collects the greatest k elements added to it , relative to the natural ordering of the elements , and returns them via #topk indescending order . concode_field_sep Comparator<? super T> comparator concode_elem_sep T threshold concode_elem_sep int k concode_elem_sep T[] buffer concode_elem_sep int bufferSize concode_field_sep void offer concode_elem_sep List<T> topK concode_elem_sep int partition concode_elem_sep void trim concode_elem_sep void swap concode_elem_sep void offerAll concode_elem_sep void offerAll concode_elem_sep TopKSelector<T> least concode_elem_sep TopKSelector<T> least concode_elem_sep TopKSelector<T> combine", "code_tokens": ["TopKSelector", "<", "T", ">", "function", "(", "int", "arg0", ")", "{", "return", "greatest", "(", "arg0", ",", "Ordering", ".", "natural", "(", ")", ")", ";", "}"], "nl_tokens": ["returns", "a", "topkselector", "that", "collects", "the", "greatest", "k", "elements", "added", "to", "it", ",", "relative", "to", "the", "natural", "ordering", "of", "the", "elements", ",", "and", "returns", "them", "via", "#topk indescending order . concode_field_sep Comparator<? super T> comparator concode_elem_sep T threshold concode_elem_sep int k concode_elem_sep T[] buffer concode_elem_sep int bufferSize concode_field_sep void offer concode_elem_sep List<T> topK concode_elem_sep int partition concode_elem_sep void trim concode_elem_sep void swap concode_elem_sep void offerAll concode_elem_sep void offerAll concode_elem_sep TopKSelector<T> least concode_elem_sep TopKSelector<T> least concode_elem_sep TopKSelector<T> combine"]}
{"code": "void function ( String [ ] arg0 ) { SshExample loc0 = new SshExample ( ) ; }", "nl": "main method for sshexample concode_field_sep boolean connected concode_field_sep void connected concode_elem_sep void disconnected concode_elem_sep void dataReceived", "code_tokens": ["void", "function", "(", "String", "[", "]", "arg0", ")", "{", "SshExample", "loc0", "=", "new", "SshExample", "(", ")", ";", "}"], "nl_tokens": ["main", "method", "for", "sshexample", "concode_field_sep", "boolean", "connected", "concode_field_sep", "void", "connected", "concode_elem_sep", "void", "disconnected", "concode_elem_sep", "void", "dataReceived"]}
{"code": "void function ( ) { setFirstRecordPosition ( FIRST_POS ) ; setLastRecordPosition ( LAST_POS ) ; currentpos = 2 * INT_SIZE ; currentblk = mypage . append ( logfile ) ; }", "nl": "clear the current page , and append it to the log file . concode_field_sep int LAST_POS concode_elem_sep int FIRST_POS concode_elem_sep Page mypage concode_elem_sep String logfile concode_elem_sep int currentpos concode_elem_sep Block currentblk concode_field_sep int getFirstRecordPosition concode_elem_sep ListIterator<BasicLogRecord> iterator concode_elem_sep void setFirstRecordPosition concode_elem_sep void flush concode_elem_sep void flush concode_elem_sep int size concode_elem_sep void appendVal concode_elem_sep int currentLSN concode_elem_sep void finalizeRecord concode_elem_sep void setLastRecordPosition concode_elem_sep int getLastRecordPosition concode_elem_sep int append", "code_tokens": ["void", "function", "(", ")", "{", "setFirstRecordPosition", "(", "FIRST_POS", ")", ";", "setLastRecordPosition", "(", "LAST_POS", ")", ";", "currentpos", "=", "2", "*", "INT_SIZE", ";", "currentblk", "=", "mypage", ".", "append", "(", "logfile", ")", ";", "}"], "nl_tokens": ["clear", "the", "current", "page", ",", "and", "append", "it", "to", "the", "log", "file", ".", "concode_field_sep", "int", "LAST_POS", "concode_elem_sep", "int", "FIRST_POS", "concode_elem_sep", "Page", "mypage", "concode_elem_sep", "String", "logfile", "concode_elem_sep", "int", "currentpos", "concode_elem_sep", "Block", "currentblk", "concode_field_sep", "int", "getFirstRecordPosition", "concode_elem_sep", "ListIterator", "<", "BasicLogRecord", ">", "iterator", "concode_elem_sep", "void", "setFirstRecordPosition", "concode_elem_sep", "void", "flush", "concode_elem_sep", "void", "flush", "concode_elem_sep", "int", "size", "concode_elem_sep", "void", "appendVal", "concode_elem_sep", "int", "currentLSN", "concode_elem_sep", "void", "finalizeRecord", "concode_elem_sep", "void", "setLastRecordPosition", "concode_elem_sep", "int", "getLastRecordPosition", "concode_elem_sep", "int", "append"]}
{"code": "float function ( ) { return mFinal ; }", "nl": "returns where the scroll will end . valid only for `` fling '' scrolls . concode_field_sep int mDuration concode_elem_sep Interpolator mInterpolator concode_elem_sep float mFinal concode_elem_sep boolean mFinished concode_elem_sep float mDurationReciprocal concode_elem_sep float mStart concode_elem_sep long mStartTime concode_elem_sep float mCurr concode_elem_sep float mDeltaX concode_field_sep void abortAnimation concode_elem_sep void forceFinished concode_elem_sep void extendDuration concode_elem_sep int timePassed concode_elem_sep int getDuration concode_elem_sep float getStart concode_elem_sep float getCurr concode_elem_sep void startScroll concode_elem_sep boolean isFinished concode_elem_sep void setFinal concode_elem_sep boolean computeScrollOffset", "code_tokens": ["float", "function", "(", ")", "{", "return", "mFinal", ";", "}"], "nl_tokens": ["returns", "where", "the", "scroll", "will", "end", ".", "valid", "only", "for", "`", "`", "fling", "''", "scrolls", ".", "concode_field_sep", "int", "mDuration", "concode_elem_sep", "Interpolator", "mInterpolator", "concode_elem_sep", "float", "mFinal", "concode_elem_sep", "boolean", "mFinished", "concode_elem_sep", "float", "mDurationReciprocal", "concode_elem_sep", "float", "mStart", "concode_elem_sep", "long", "mStartTime", "concode_elem_sep", "float", "mCurr", "concode_elem_sep", "float", "mDeltaX", "concode_field_sep", "void", "abortAnimation", "concode_elem_sep", "void", "forceFinished", "concode_elem_sep", "void", "extendDuration", "concode_elem_sep", "int", "timePassed", "concode_elem_sep", "int", "getDuration", "concode_elem_sep", "float", "getStart", "concode_elem_sep", "float", "getCurr", "concode_elem_sep", "void", "startScroll", "concode_elem_sep", "boolean", "isFinished", "concode_elem_sep", "void", "setFinal", "concode_elem_sep", "boolean", "computeScrollOffset"]}
{"code": "String function ( final ByteBuffer arg0 ) { DECODER . reset ( ) ; try { return arg0 . getString ( DECODER ) ; } catch ( final CharacterCodingException loc0 ) { LOG . error ( \"srini_string\" + arg0 , loc0 ) ; return StringUtils . EMPTY ; } }", "nl": "reads an ascii string from the buffer . reads from the buffer 's current position to its limit . concode_field_sep CharsetDecoder DECODER concode_elem_sep Logger LOG concode_field_sep Collection<byte[]> splitToByteArrays concode_elem_sep Collection<ByteBuffer> split concode_elem_sep byte[] toByteArray concode_elem_sep void putUnsignedByte concode_elem_sep void putUnsignedByte concode_elem_sep String toAsciiString concode_elem_sep void putUnsignedShort concode_elem_sep void putUnsignedShort concode_elem_sep boolean isUdp concode_elem_sep ByteBuffer createBuffer concode_elem_sep void putUnsignedInt concode_elem_sep void putUnsignedInt concode_elem_sep ByteBuffer toBuf", "code_tokens": ["String", "function", "(", "final", "ByteBuffer", "arg0", ")", "{", "DECODER", ".", "reset", "(", ")", ";", "try", "{", "return", "arg0", ".", "getString", "(", "DECODER", ")", ";", "}", "catch", "(", "final", "CharacterCodingException", "loc0", ")", "{", "LOG", ".", "error", "(", "\"srini_string\"", "+", "arg0", ",", "loc0", ")", ";", "return", "StringUtils", ".", "EMPTY", ";", "}", "}"], "nl_tokens": ["reads", "an", "ascii", "string", "from", "the", "buffer", ".", "reads", "from", "the", "buffer", "'", "s", "current", "position", "to", "its", "limit", ".", "concode_field_sep", "CharsetDecoder", "DECODER", "concode_elem_sep", "Logger", "LOG", "concode_field_sep", "Collection", "<", "byte", "[", "]", ">", "splitToByteArrays", "concode_elem_sep", "Collection", "<", "ByteBuffer", ">", "split", "concode_elem_sep", "byte", "[", "]", "toByteArray", "concode_elem_sep", "void", "putUnsignedByte", "concode_elem_sep", "void", "putUnsignedByte", "concode_elem_sep", "String", "toAsciiString", "concode_elem_sep", "void", "putUnsignedShort", "concode_elem_sep", "void", "putUnsignedShort", "concode_elem_sep", "boolean", "isUdp", "concode_elem_sep", "ByteBuffer", "createBuffer", "concode_elem_sep", "void", "putUnsignedInt", "concode_elem_sep", "void", "putUnsignedInt", "concode_elem_sep", "ByteBuffer", "toBuf"]}
{"code": "lalr_item function ( ) { lalr_item loc0 ; if ( _all . values ( ) . size ( ) == 0 ) return null ; loc0 = iterator ( ) . next ( ) ; remove ( loc0 ) ; return loc0 ; }", "nl": "remove and return one item from the set done in hash order . return null if there are no items in the set . concode_field_sep Integer hashcode_cache concode_elem_sep HashMap<lalr_item,lalr_item> _all concode_field_sep lalr_item add concode_elem_sep void add concode_elem_sep void not_null concode_elem_sep boolean is_superset_of concode_elem_sep void remove concode_elem_sep void remove concode_elem_sep Iterator<lalr_item> iterator concode_elem_sep boolean contains concode_elem_sep int size concode_elem_sep lalr_item find concode_elem_sep int hashCode concode_elem_sep boolean equals concode_elem_sep boolean equals concode_elem_sep boolean is_subset_of concode_elem_sep void compute_closure concode_elem_sep String toString", "code_tokens": ["lalr_item", "function", "(", ")", "{", "lalr_item", "loc0", ";", "if", "(", "_all", ".", "values", "(", ")", ".", "size", "(", ")", "==", "0", ")", "return", "null", ";", "loc0", "=", "iterator", "(", ")", ".", "next", "(", ")", ";", "remove", "(", "loc0", ")", ";", "return", "loc0", ";", "}"], "nl_tokens": ["remove", "and", "return", "one", "item", "from", "the", "set", "done", "in", "hash", "order", ".", "return", "null", "if", "there", "are", "no", "items", "in", "the", "set", ".", "concode_field_sep", "Integer", "hashcode_cache", "concode_elem_sep", "HashMap", "<", "lalr_item", ",", "lalr_item", ">", "_all", "concode_field_sep", "lalr_item", "add", "concode_elem_sep", "void", "add", "concode_elem_sep", "void", "not_null", "concode_elem_sep", "boolean", "is_superset_of", "concode_elem_sep", "void", "remove", "concode_elem_sep", "void", "remove", "concode_elem_sep", "Iterator", "<", "lalr_item", ">", "iterator", "concode_elem_sep", "boolean", "contains", "concode_elem_sep", "int", "size", "concode_elem_sep", "lalr_item", "find", "concode_elem_sep", "int", "hashCode", "concode_elem_sep", "boolean", "equals", "concode_elem_sep", "boolean", "equals", "concode_elem_sep", "boolean", "is_subset_of", "concode_elem_sep", "void", "compute_closure", "concode_elem_sep", "String", "toString"]}
{"code": "String function ( ) { return workflowImplId ; }", "nl": "gets the value of the workflowimplid property . concode_field_sep MetaData.Template template concode_elem_sep MetaData.WorkflowImpl workflowImpl concode_elem_sep String workflowImplId concode_elem_sep ParametersMetaData parametersMetaData concode_elem_sep String templateName concode_elem_sep String templateDescription concode_elem_sep String templateId concode_elem_sep String workflowImplName concode_elem_sep String workflowImplDescription concode_field_sep MetaData.WorkflowImpl getWorkflowImpl concode_elem_sep MetaData.Template getTemplate concode_elem_sep void setWorkflowImplId concode_elem_sep ParametersMetaData getParametersMetaData concode_elem_sep ParametersMetaData getParametersMetaData concode_elem_sep void setWorkflowImplName concode_elem_sep void setTemplateId concode_elem_sep void setTemplateId concode_elem_sep String getTemplateDescription concode_elem_sep void setTemplateDescription concode_elem_sep void setTemplateName concode_elem_sep void setParametersMetaData concode_elem_sep void setParametersMetaData concode_elem_sep String getWorkflowImplName concode_elem_sep void setTemplate concode_elem_sep String getTemplateId concode_elem_sep String getTemplateId concode_elem_sep String getWorkflowImplDescription concode_elem_sep String getTemplateName concode_elem_sep void setWorkflowImpl concode_elem_sep void setWorkflowImplDescription", "code_tokens": ["String", "function", "(", ")", "{", "return", "workflowImplId", ";", "}"], "nl_tokens": ["gets", "the", "value", "of", "the", "workflowimplid", "property", ".", "concode_field_sep", "MetaData", ".", "Template", "template", "concode_elem_sep", "MetaData", ".", "WorkflowImpl", "workflowImpl", "concode_elem_sep", "String", "workflowImplId", "concode_elem_sep", "ParametersMetaData", "parametersMetaData", "concode_elem_sep", "String", "templateName", "concode_elem_sep", "String", "templateDescription", "concode_elem_sep", "String", "templateId", "concode_elem_sep", "String", "workflowImplName", "concode_elem_sep", "String", "workflowImplDescription", "concode_field_sep", "MetaData", ".", "WorkflowImpl", "getWorkflowImpl", "concode_elem_sep", "MetaData", ".", "Template", "getTemplate", "concode_elem_sep", "void", "setWorkflowImplId", "concode_elem_sep", "ParametersMetaData", "getParametersMetaData", "concode_elem_sep", "ParametersMetaData", "getParametersMetaData", "concode_elem_sep", "void", "setWorkflowImplName", "concode_elem_sep", "void", "setTemplateId", "concode_elem_sep", "void", "setTemplateId", "concode_elem_sep", "String", "getTemplateDescription", "concode_elem_sep", "void", "setTemplateDescription", "concode_elem_sep", "void", "setTemplateName", "concode_elem_sep", "void", "setParametersMetaData", "concode_elem_sep", "void", "setParametersMetaData", "concode_elem_sep", "String", "getWorkflowImplName", "concode_elem_sep", "void", "setTemplate", "concode_elem_sep", "String", "getTemplateId", "concode_elem_sep", "String", "getTemplateId", "concode_elem_sep", "String", "getWorkflowImplDescription", "concode_elem_sep", "String", "getTemplateName", "concode_elem_sep", "void", "setWorkflowImpl", "concode_elem_sep", "void", "setWorkflowImplDescription"]}
{"code": "boolean function ( ActivityRequest arg0 ) { if ( arg0 == null ) { return false ; } if ( arg0 . getFeedId ( ) == null ) { return false ; } return arg0 . getConfigProperties ( ) != null ; }", "nl": "validate the incoming request for mandatory parameters . concode_field_sep IFileSystemWorkAreaService fileSystemWorkAreaServiceImpl concode_elem_sep Logger logger concode_elem_sep IFetcherRunRecorderService fetcherRunRecorderServiceImpl concode_elem_sep IFetcherWorkAreaService fetcherWorkAreaServiceImpl concode_field_sep void releaseResources concode_elem_sep ActivityResponse perform", "code_tokens": ["boolean", "function", "(", "ActivityRequest", "arg0", ")", "{", "if", "(", "arg0", "==", "null", ")", "{", "return", "false", ";", "}", "if", "(", "arg0", ".", "getFeedId", "(", ")", "==", "null", ")", "{", "return", "false", ";", "}", "return", "arg0", ".", "getConfigProperties", "(", ")", "!=", "null", ";", "}"], "nl_tokens": ["validate", "the", "incoming", "request", "for", "mandatory", "parameters", ".", "concode_field_sep", "IFileSystemWorkAreaService", "fileSystemWorkAreaServiceImpl", "concode_elem_sep", "Logger", "logger", "concode_elem_sep", "IFetcherRunRecorderService", "fetcherRunRecorderServiceImpl", "concode_elem_sep", "IFetcherWorkAreaService", "fetcherWorkAreaServiceImpl", "concode_field_sep", "void", "releaseResources", "concode_elem_sep", "ActivityResponse", "perform"]}
{"code": "Sha256Hash function ( byte [ ] arg0 ) { try { MessageDigest loc0 = MessageDigest . getInstance ( \"srini_string\" ) ; return new Sha256Hash ( loc0 . loc0 ( arg0 ) ) ; } catch ( NoSuchAlgorithmException loc0 ) { throw new RuntimeException ( loc0 ) ; } }", "nl": "calculates the one-time hash of contents and returns it as a new wrapped hash . concode_field_sep Sha256Hash ZERO_HASH concode_elem_sep byte[] bytes concode_field_sep Sha256Hash createDouble concode_elem_sep Sha256Hash hashFileContents concode_elem_sep int hashCode concode_elem_sep boolean equals concode_elem_sep BigInteger toBigInteger concode_elem_sep String toString concode_elem_sep Sha256Hash duplicate concode_elem_sep int compareTo concode_elem_sep byte[] getBytes", "code_tokens": ["Sha256Hash", "function", "(", "byte", "[", "]", "arg0", ")", "{", "try", "{", "MessageDigest", "loc0", "=", "MessageDigest", ".", "getInstance", "(", "\"srini_string\"", ")", ";", "return", "new", "Sha256Hash", "(", "loc0", ".", "loc0", "(", "arg0", ")", ")", ";", "}", "catch", "(", "NoSuchAlgorithmException", "loc0", ")", "{", "throw", "new", "RuntimeException", "(", "loc0", ")", ";", "}", "}"], "nl_tokens": ["calculates", "the", "one", "-", "time", "hash", "of", "contents", "and", "returns", "it", "as", "a", "new", "wrapped", "hash", ".", "concode_field_sep", "Sha256Hash", "ZERO_HASH", "concode_elem_sep", "byte", "[", "]", "bytes", "concode_field_sep", "Sha256Hash", "createDouble", "concode_elem_sep", "Sha256Hash", "hashFileContents", "concode_elem_sep", "int", "hashCode", "concode_elem_sep", "boolean", "equals", "concode_elem_sep", "BigInteger", "toBigInteger", "concode_elem_sep", "String", "toString", "concode_elem_sep", "Sha256Hash", "duplicate", "concode_elem_sep", "int", "compareTo", "concode_elem_sep", "byte", "[", "]", "getBytes"]}
{"code": "Set < T > function ( Class < T > arg0 , Set < JspNode > arg1 ) { Set < T > loc0 = new HashSet < > ( ) ; for ( Node loc1 : arg1 ) { if ( arg0 . equals ( loc1 . getClass ( ) ) ) { loc0 . add ( ( T ) loc1 ) ; } } return loc0 ; }", "nl": "return a subset of allnodes , containing the items in allnodes that are of the given type . concode_field_sep PlaceHolder placeHolder concode_field_sep Set<T> getNodes concode_elem_sep void assertNumberOfNodes concode_elem_sep void addNodeAndSubnodes", "code_tokens": ["Set", "<", "T", ">", "function", "(", "Class", "<", "T", ">", "arg0", ",", "Set", "<", "JspNode", ">", "arg1", ")", "{", "Set", "<", "T", ">", "loc0", "=", "new", "HashSet", "<", ">", "(", ")", ";", "for", "(", "Node", "loc1", ":", "arg1", ")", "{", "if", "(", "arg0", ".", "equals", "(", "loc1", ".", "getClass", "(", ")", ")", ")", "{", "loc0", ".", "add", "(", "(", "T", ")", "loc1", ")", ";", "}", "}", "return", "loc0", ";", "}"], "nl_tokens": ["return", "a", "subset", "of", "allnodes", ",", "containing", "the", "items", "in", "allnodes", "that", "are", "of", "the", "given", "type", ".", "concode_field_sep", "PlaceHolder", "placeHolder", "concode_field_sep", "Set", "<", "T", ">", "getNodes", "concode_elem_sep", "void", "assertNumberOfNodes", "concode_elem_sep", "void", "addNodeAndSubnodes"]}
{"code": "Dish function ( SiteUrl arg0 ) { return dishRepository . findBySiteUrl ( arg0 ) ; }", "nl": "get a dish by site url concode_field_sep CustomDishRepository customDishRepository concode_elem_sep SimpleDishRepository simpleDishRepository concode_elem_sep DishRepository dishRepository concode_elem_sep DishFilterService dishFilterService concode_elem_sep Logger log concode_field_sep Page<SimpleDish> findAllSimpleDish concode_elem_sep SimpleDish findSimpleById concode_elem_sep Page<SimpleDish> findByHashes concode_elem_sep Dish save concode_elem_sep Dish findOne concode_elem_sep void deleteAll concode_elem_sep void deleteByHost concode_elem_sep Page<SimpleDish> searchIngredientFullText concode_elem_sep Page<Dish> findAll concode_elem_sep void delete concode_elem_sep Dish findBySiteUrlId concode_elem_sep Dish findOneById concode_elem_sep List<SimpleDish> findByHashesLimit concode_elem_sep List<SimpleDish> findByProcedureStepsLessThanLimit concode_elem_sep List<SimpleDish> findOnlyIdByProcedureStepsLessThan concode_elem_sep Dish findByTitleUrl concode_elem_sep Long countByTitleUrl concode_elem_sep List<SimpleDish> findByPreparationStepsLessThanLimit concode_elem_sep List<SimpleDish> findOnlyIdByPreparationStepsLessThan concode_elem_sep List<SimpleDish> findOnlyIdByHashes", "code_tokens": ["Dish", "function", "(", "SiteUrl", "arg0", ")", "{", "return", "dishRepository", ".", "findBySiteUrl", "(", "arg0", ")", ";", "}"], "nl_tokens": ["get", "a", "dish", "by", "site", "url", "concode_field_sep", "CustomDishRepository", "customDishRepository", "concode_elem_sep", "SimpleDishRepository", "simpleDishRepository", "concode_elem_sep", "DishRepository", "dishRepository", "concode_elem_sep", "DishFilterService", "dishFilterService", "concode_elem_sep", "Logger", "log", "concode_field_sep", "Page", "<", "SimpleDish", ">", "findAllSimpleDish", "concode_elem_sep", "SimpleDish", "findSimpleById", "concode_elem_sep", "Page", "<", "SimpleDish", ">", "findByHashes", "concode_elem_sep", "Dish", "save", "concode_elem_sep", "Dish", "findOne", "concode_elem_sep", "void", "deleteAll", "concode_elem_sep", "void", "deleteByHost", "concode_elem_sep", "Page", "<", "SimpleDish", ">", "searchIngredientFullText", "concode_elem_sep", "Page", "<", "Dish", ">", "findAll", "concode_elem_sep", "void", "delete", "concode_elem_sep", "Dish", "findBySiteUrlId", "concode_elem_sep", "Dish", "findOneById", "concode_elem_sep", "List", "<", "SimpleDish", ">", "findByHashesLimit", "concode_elem_sep", "List", "<", "SimpleDish", ">", "findByProcedureStepsLessThanLimit", "concode_elem_sep", "List", "<", "SimpleDish", ">", "findOnlyIdByProcedureStepsLessThan", "concode_elem_sep", "Dish", "findByTitleUrl", "concode_elem_sep", "Long", "countByTitleUrl", "concode_elem_sep", "List", "<", "SimpleDish", ">", "findByPreparationStepsLessThanLimit", "concode_elem_sep", "List", "<", "SimpleDish", ">", "findOnlyIdByPreparationStepsLessThan", "concode_elem_sep", "List", "<", "SimpleDish", ">", "findOnlyIdByHashes"]}
{"code": "void function ( ) { for ( Action loc0 : actions ) { loc0 . update ( ) ; } }", "nl": "updates the actions according to the current battle state . concode_field_sep Array<Condition> conditions concode_elem_sep Array<Action> actions concode_field_sep boolean evaluateConditions concode_elem_sep void read concode_elem_sep void setConditions concode_elem_sep void setActions concode_elem_sep Array<Action> getActions concode_elem_sep void write", "code_tokens": ["void", "function", "(", ")", "{", "for", "(", "Action", "loc0", ":", "actions", ")", "{", "loc0", ".", "update", "(", ")", ";", "}", "}"], "nl_tokens": ["updates", "the", "actions", "according", "to", "the", "current", "battle", "state", ".", "concode_field_sep", "Array", "<", "Condition", ">", "conditions", "concode_elem_sep", "Array", "<", "Action", ">", "actions", "concode_field_sep", "boolean", "evaluateConditions", "concode_elem_sep", "void", "read", "concode_elem_sep", "void", "setConditions", "concode_elem_sep", "void", "setActions", "concode_elem_sep", "Array", "<", "Action", ">", "getActions", "concode_elem_sep", "void", "write"]}
{"code": "String function ( ) { final String loc0 = this . getOriginalPath ( ) ; if ( ! loc0 . endsWith ( \"srini_string\" ) ) return loc0 ; return loc0 . substring ( 0 , loc0 . length ( ) - 1 ) ; }", "nl": "return the path originally requested by the client . concode_field_sep int status concode_elem_sep int INFINITY concode_elem_sep HttpServletRequest request concode_elem_sep URI base concode_elem_sep HttpServletResponse response concode_field_sep URI lookup concode_elem_sep int getDepth concode_elem_sep InputStream read concode_elem_sep URI getDestination concode_elem_sep String getMethod concode_elem_sep int getStatus concode_elem_sep boolean hasRequestBody concode_elem_sep void setStatus concode_elem_sep void setHeader concode_elem_sep boolean getOverwrite concode_elem_sep String getOriginalPath concode_elem_sep void setContentType concode_elem_sep OutputStream write concode_elem_sep PrintWriter write concode_elem_sep Date getIfModifiedSince", "code_tokens": ["String", "function", "(", ")", "{", "final", "String", "loc0", "=", "this", ".", "getOriginalPath", "(", ")", ";", "if", "(", "!", "loc0", ".", "endsWith", "(", "\"srini_string\"", ")", ")", "return", "loc0", ";", "return", "loc0", ".", "substring", "(", "0", ",", "loc0", ".", "length", "(", ")", "-", "1", ")", ";", "}"], "nl_tokens": ["return", "the", "path", "originally", "requested", "by", "the", "client", ".", "concode_field_sep", "int", "status", "concode_elem_sep", "int", "INFINITY", "concode_elem_sep", "HttpServletRequest", "request", "concode_elem_sep", "URI", "base", "concode_elem_sep", "HttpServletResponse", "response", "concode_field_sep", "URI", "lookup", "concode_elem_sep", "int", "getDepth", "concode_elem_sep", "InputStream", "read", "concode_elem_sep", "URI", "getDestination", "concode_elem_sep", "String", "getMethod", "concode_elem_sep", "int", "getStatus", "concode_elem_sep", "boolean", "hasRequestBody", "concode_elem_sep", "void", "setStatus", "concode_elem_sep", "void", "setHeader", "concode_elem_sep", "boolean", "getOverwrite", "concode_elem_sep", "String", "getOriginalPath", "concode_elem_sep", "void", "setContentType", "concode_elem_sep", "OutputStream", "write", "concode_elem_sep", "PrintWriter", "write", "concode_elem_sep", "Date", "getIfModifiedSince"]}
{"code": "Coin function ( ) { return value ; }", "nl": "the value which this transaction output holds . concode_field_sep boolean coinbase concode_elem_sep long serialVersionUID concode_elem_sep long index concode_elem_sep Coin value concode_elem_sep byte[] scriptBytes concode_elem_sep Sha256Hash hash concode_elem_sep int height concode_field_sep int getHeight concode_elem_sep Sha256Hash getHash concode_elem_sep long getIndex concode_elem_sep boolean isCoinbase concode_elem_sep int hashCode concode_elem_sep void serializeToStream concode_elem_sep boolean equals concode_elem_sep String toString concode_elem_sep byte[] getScriptBytes", "code_tokens": ["Coin", "function", "(", ")", "{", "return", "value", ";", "}"], "nl_tokens": ["the", "value", "which", "this", "transaction", "output", "holds", ".", "concode_field_sep", "boolean", "coinbase", "concode_elem_sep", "long", "serialVersionUID", "concode_elem_sep", "long", "index", "concode_elem_sep", "Coin", "value", "concode_elem_sep", "byte", "[", "]", "scriptBytes", "concode_elem_sep", "Sha256Hash", "hash", "concode_elem_sep", "int", "height", "concode_field_sep", "int", "getHeight", "concode_elem_sep", "Sha256Hash", "getHash", "concode_elem_sep", "long", "getIndex", "concode_elem_sep", "boolean", "isCoinbase", "concode_elem_sep", "int", "hashCode", "concode_elem_sep", "void", "serializeToStream", "concode_elem_sep", "boolean", "equals", "concode_elem_sep", "String", "toString", "concode_elem_sep", "byte", "[", "]", "getScriptBytes"]}
{"code": "String function ( ) { return url . replaceAll ( \"srini_string\" , \"srini_string\" ) . replace ( \"srini_string\" , \"srini_string\" ) ; }", "nl": "returns the url without the port and the query string part . concode_field_sep Map<String,String> headers concode_elem_sep String charset concode_elem_sep Verb verb concode_elem_sep ParameterList bodyParams concode_elem_sep String url concode_elem_sep byte[] bytePayload concode_elem_sep Long readTimeout concode_elem_sep ParameterList querystringParams concode_elem_sep boolean connectionKeepAlive concode_elem_sep Long connectTimeout concode_elem_sep String CONTENT_LENGTH concode_elem_sep String CONTENT_TYPE concode_elem_sep HttpURLConnection connection concode_elem_sep String payload concode_elem_sep String DEFAULT_CONTENT_TYPE concode_field_sep void addHeaders concode_elem_sep void setCharset concode_elem_sep void addBody concode_elem_sep void addHeader concode_elem_sep void setConnectionKeepAlive concode_elem_sep void setConnectTimeout concode_elem_sep byte[] getByteBodyContents concode_elem_sep Map<String,String> getHeaders concode_elem_sep ParameterList getQueryStringParams concode_elem_sep void setConnection concode_elem_sep void createConnection concode_elem_sep String getCharset concode_elem_sep void addBodyParameter concode_elem_sep String getUrl concode_elem_sep void setReadTimeout concode_elem_sep String getCompleteUrl concode_elem_sep Verb getVerb concode_elem_sep void addPayload concode_elem_sep void addPayload concode_elem_sep void addQuerystringParameter concode_elem_sep String toString concode_elem_sep Response doSend concode_elem_sep Response send concode_elem_sep String getBodyContents concode_elem_sep ParameterList getBodyParams", "code_tokens": ["String", "function", "(", ")", "{", "return", "url", ".", "replaceAll", "(", "\"srini_string\"", ",", "\"srini_string\"", ")", ".", "replace", "(", "\"srini_string\"", ",", "\"srini_string\"", ")", ";", "}"], "nl_tokens": ["returns", "the", "url", "without", "the", "port", "and", "the", "query", "string", "part", ".", "concode_field_sep", "Map", "<", "String", ",", "String", ">", "headers", "concode_elem_sep", "String", "charset", "concode_elem_sep", "Verb", "verb", "concode_elem_sep", "ParameterList", "bodyParams", "concode_elem_sep", "String", "url", "concode_elem_sep", "byte", "[", "]", "bytePayload", "concode_elem_sep", "Long", "readTimeout", "concode_elem_sep", "ParameterList", "querystringParams", "concode_elem_sep", "boolean", "connectionKeepAlive", "concode_elem_sep", "Long", "connectTimeout", "concode_elem_sep", "String", "CONTENT_LENGTH", "concode_elem_sep", "String", "CONTENT_TYPE", "concode_elem_sep", "HttpURLConnection", "connection", "concode_elem_sep", "String", "payload", "concode_elem_sep", "String", "DEFAULT_CONTENT_TYPE", "concode_field_sep", "void", "addHeaders", "concode_elem_sep", "void", "setCharset", "concode_elem_sep", "void", "addBody", "concode_elem_sep", "void", "addHeader", "concode_elem_sep", "void", "setConnectionKeepAlive", "concode_elem_sep", "void", "setConnectTimeout", "concode_elem_sep", "byte", "[", "]", "getByteBodyContents", "concode_elem_sep", "Map", "<", "String", ",", "String", ">", "getHeaders", "concode_elem_sep", "ParameterList", "getQueryStringParams", "concode_elem_sep", "void", "setConnection", "concode_elem_sep", "void", "createConnection", "concode_elem_sep", "String", "getCharset", "concode_elem_sep", "void", "addBodyParameter", "concode_elem_sep", "String", "getUrl", "concode_elem_sep", "void", "setReadTimeout", "concode_elem_sep", "String", "getCompleteUrl", "concode_elem_sep", "Verb", "getVerb", "concode_elem_sep", "void", "addPayload", "concode_elem_sep", "void", "addPayload", "concode_elem_sep", "void", "addQuerystringParameter", "concode_elem_sep", "String", "toString", "concode_elem_sep", "Response", "doSend", "concode_elem_sep", "Response", "send", "concode_elem_sep", "String", "getBodyContents", "concode_elem_sep", "ParameterList", "getBodyParams"]}
{"code": "void function ( String arg0 ) { this . moduleName = arg0 ; }", "nl": "sets the value of the modulename property . concode_field_sep String fail concode_elem_sep String pass concode_elem_sep String moduleName concode_elem_sep String noRun concode_elem_sep int ID concode_elem_sep String value concode_elem_sep String totalTC concode_field_sep String getPass concode_elem_sep void setNoRun concode_elem_sep String getTotalTC concode_elem_sep int getID concode_elem_sep void setFail concode_elem_sep String getFail concode_elem_sep String getNoRun concode_elem_sep int compareTo concode_elem_sep String getModuleName concode_elem_sep String getValue concode_elem_sep void setValue concode_elem_sep void setID concode_elem_sep void setTotalTC concode_elem_sep void setPass", "code_tokens": ["void", "function", "(", "String", "arg0", ")", "{", "this", ".", "moduleName", "=", "arg0", ";", "}"], "nl_tokens": ["sets", "the", "value", "of", "the", "modulename", "property", ".", "concode_field_sep", "String", "fail", "concode_elem_sep", "String", "pass", "concode_elem_sep", "String", "moduleName", "concode_elem_sep", "String", "noRun", "concode_elem_sep", "int", "ID", "concode_elem_sep", "String", "value", "concode_elem_sep", "String", "totalTC", "concode_field_sep", "String", "getPass", "concode_elem_sep", "void", "setNoRun", "concode_elem_sep", "String", "getTotalTC", "concode_elem_sep", "int", "getID", "concode_elem_sep", "void", "setFail", "concode_elem_sep", "String", "getFail", "concode_elem_sep", "String", "getNoRun", "concode_elem_sep", "int", "compareTo", "concode_elem_sep", "String", "getModuleName", "concode_elem_sep", "String", "getValue", "concode_elem_sep", "void", "setValue", "concode_elem_sep", "void", "setID", "concode_elem_sep", "void", "setTotalTC", "concode_elem_sep", "void", "setPass"]}
{"code": "void function ( ClassdiagramNode arg0 ) { uplinks . add ( arg0 ) ; }", "nl": "add an uplink to this node . concode_field_sep int edgeOffset concode_elem_sep FigNode figure concode_elem_sep float UPLINK_FACTOR concode_elem_sep List<ClassdiagramNode> uplinks concode_elem_sep int rank concode_elem_sep List<ClassdiagramNode> downlinks concode_elem_sep int NORANK concode_elem_sep int column concode_elem_sep int placementHint concode_elem_sep float weight concode_elem_sep int NOCOLUMN concode_elem_sep int NOWEIGHT concode_field_sep Vector<ClassdiagramNode> getUplinks concode_elem_sep Point getLocation concode_elem_sep boolean isComment concode_elem_sep List<ClassdiagramNode> getUpNodes concode_elem_sep float getWeight concode_elem_sep FigNode getFigure concode_elem_sep Vector<ClassdiagramNode> getDownlinks concode_elem_sep int compareTo concode_elem_sep void setColumn concode_elem_sep void addDownlink concode_elem_sep void setLocation concode_elem_sep void setEdgeOffset concode_elem_sep boolean isStandalone concode_elem_sep int getColumn concode_elem_sep float getSubtreeWeight concode_elem_sep float calculateWeight concode_elem_sep void setRank concode_elem_sep void addRank concode_elem_sep int getTypeOrderNumer concode_elem_sep int getEdgeOffset concode_elem_sep int getRank concode_elem_sep void setWeight concode_elem_sep boolean isPackage concode_elem_sep int getLevel concode_elem_sep Dimension getSize concode_elem_sep void setPlacementHint concode_elem_sep int getPlacementHint concode_elem_sep void setFigure concode_elem_sep List<ClassdiagramNode> getDownNodes", "code_tokens": ["void", "function", "(", "ClassdiagramNode", "arg0", ")", "{", "uplinks", ".", "add", "(", "arg0", ")", ";", "}"], "nl_tokens": ["add", "an", "uplink", "to", "this", "node", ".", "concode_field_sep", "int", "edgeOffset", "concode_elem_sep", "FigNode", "figure", "concode_elem_sep", "float", "UPLINK_FACTOR", "concode_elem_sep", "List", "<", "ClassdiagramNode", ">", "uplinks", "concode_elem_sep", "int", "rank", "concode_elem_sep", "List", "<", "ClassdiagramNode", ">", "downlinks", "concode_elem_sep", "int", "NORANK", "concode_elem_sep", "int", "column", "concode_elem_sep", "int", "placementHint", "concode_elem_sep", "float", "weight", "concode_elem_sep", "int", "NOCOLUMN", "concode_elem_sep", "int", "NOWEIGHT", "concode_field_sep", "Vector", "<", "ClassdiagramNode", ">", "getUplinks", "concode_elem_sep", "Point", "getLocation", "concode_elem_sep", "boolean", "isComment", "concode_elem_sep", "List", "<", "ClassdiagramNode", ">", "getUpNodes", "concode_elem_sep", "float", "getWeight", "concode_elem_sep", "FigNode", "getFigure", "concode_elem_sep", "Vector", "<", "ClassdiagramNode", ">", "getDownlinks", "concode_elem_sep", "int", "compareTo", "concode_elem_sep", "void", "setColumn", "concode_elem_sep", "void", "addDownlink", "concode_elem_sep", "void", "setLocation", "concode_elem_sep", "void", "setEdgeOffset", "concode_elem_sep", "boolean", "isStandalone", "concode_elem_sep", "int", "getColumn", "concode_elem_sep", "float", "getSubtreeWeight", "concode_elem_sep", "float", "calculateWeight", "concode_elem_sep", "void", "setRank", "concode_elem_sep", "void", "addRank", "concode_elem_sep", "int", "getTypeOrderNumer", "concode_elem_sep", "int", "getEdgeOffset", "concode_elem_sep", "int", "getRank", "concode_elem_sep", "void", "setWeight", "concode_elem_sep", "boolean", "isPackage", "concode_elem_sep", "int", "getLevel", "concode_elem_sep", "Dimension", "getSize", "concode_elem_sep", "void", "setPlacementHint", "concode_elem_sep", "int", "getPlacementHint", "concode_elem_sep", "void", "setFigure", "concode_elem_sep", "List", "<", "ClassdiagramNode", ">", "getDownNodes"]}
{"code": "void function ( boolean arg0 ) { this . verifyProofOfPossession = arg0 ; }", "nl": "set whether proof of possession is required or not to cancel a token concode_field_sep Logger LOG concode_elem_sep boolean verifyProofOfPossession concode_field_sep boolean canHandleToken concode_elem_sep boolean matchDOMSignatureSecret concode_elem_sep boolean matchStreamingSignatureSecret concode_elem_sep boolean matchKey concode_elem_sep TokenCancellerResponse cancelToken", "code_tokens": ["void", "function", "(", "boolean", "arg0", ")", "{", "this", ".", "verifyProofOfPossession", "=", "arg0", ";", "}"], "nl_tokens": ["set", "whether", "proof", "of", "possession", "is", "required", "or", "not", "to", "cancel", "a", "token", "concode_field_sep", "Logger", "LOG", "concode_elem_sep", "boolean", "verifyProofOfPossession", "concode_field_sep", "boolean", "canHandleToken", "concode_elem_sep", "boolean", "matchDOMSignatureSecret", "concode_elem_sep", "boolean", "matchStreamingSignatureSecret", "concode_elem_sep", "boolean", "matchKey", "concode_elem_sep", "TokenCancellerResponse", "cancelToken"]}
{"code": "Constant function ( ) { return dataval ; }", "nl": "returns the dataval component of the entry concode_field_sep Constant dataval concode_elem_sep int blocknum concode_field_sep int blockNumber", "code_tokens": ["Constant", "function", "(", ")", "{", "return", "dataval", ";", "}"], "nl_tokens": ["returns", "the", "dataval", "component", "of", "the", "entry", "concode_field_sep", "Constant", "dataval", "concode_elem_sep", "int", "blocknum", "concode_field_sep", "int", "blockNumber"]}
{"code": "long function ( byte [ ] arg0 , int arg1 , int arg2 ) { long loc0 = 0 ; int loc1 = Math . min ( arg2 , 8 ) ; for ( int loc2 = 0 ; loc2 < loc1 ; loc2 ++ ) { loc0 |= ( arg0 [ arg1 + loc2 ] & 0xFFL ) << ( loc2 * 8 ) ; } return loc0 ; }", "nl": "similar to load64 , but allows offset + 8 > input.length , padding the result with zeroes . this has to explicitly reverse the order of the bytes as it packs them into the result which makes it slower than the native version . concode_field_sep int BYTE_ARRAY_BASE_OFFSET concode_elem_sep Unsafe theUnsafe concode_elem_sep LittleEndianBytes byteArray concode_field_sep int load32 concode_elem_sep long load64 concode_elem_sep void putLongLittleEndian concode_elem_sep void putLongLittleEndian concode_elem_sep void putLongLittleEndian concode_elem_sep void putLongLittleEndian concode_elem_sep boolean usingUnsafe concode_elem_sep sun.misc.Unsafe getUnsafe concode_elem_sep long getLongLittleEndian concode_elem_sep long getLongLittleEndian concode_elem_sep long getLongLittleEndian concode_elem_sep long getLongLittleEndian concode_elem_sep void store64", "code_tokens": ["long", "function", "(", "byte", "[", "]", "arg0", ",", "int", "arg1", ",", "int", "arg2", ")", "{", "long", "loc0", "=", "0", ";", "int", "loc1", "=", "Math", ".", "min", "(", "arg2", ",", "8", ")", ";", "for", "(", "int", "loc2", "=", "0", ";", "loc2", "<", "loc1", ";", "loc2", "+", "+", ")", "{", "loc0", "|=", "(", "arg0", "[", "arg1", "+", "loc2", "]", "&", "0xFF", "L", ")", "<<", "(", "loc2", "*", "8", ")", ";", "}", "return", "loc0", ";", "}"], "nl_tokens": ["similar", "to", "load64", ",", "but", "allows", "offset", "+", "8", ">", "input", ".", "length", ",", "padding", "the", "result", "with", "zeroes", ".", "this", "has", "to", "explicitly", "reverse", "the", "order", "of", "the", "bytes", "as", "it", "packs", "them", "into", "the", "result", "which", "makes", "it", "slower", "than", "the", "native", "version", ".", "concode_field_sep", "int", "BYTE_ARRAY_BASE_OFFSET", "concode_elem_sep", "Unsafe", "theUnsafe", "concode_elem_sep", "LittleEndianBytes", "byteArray", "concode_field_sep", "int", "load32", "concode_elem_sep", "long", "load64", "concode_elem_sep", "void", "putLongLittleEndian", "concode_elem_sep", "void", "putLongLittleEndian", "concode_elem_sep", "void", "putLongLittleEndian", "concode_elem_sep", "void", "putLongLittleEndian", "concode_elem_sep", "boolean", "usingUnsafe", "concode_elem_sep", "sun", ".", "misc", ".", "Unsafe", "getUnsafe", "concode_elem_sep", "long", "getLongLittleEndian", "concode_elem_sep", "long", "getLongLittleEndian", "concode_elem_sep", "long", "getLongLittleEndian", "concode_elem_sep", "long", "getLongLittleEndian", "concode_elem_sep", "void", "store64"]}
{"code": "boolean function ( Object arg0 ) { Type loc0 = ( Type ) arg0 ; boolean loc1 = false ; for ( Iterator < Type > loc2 = v . iterator ( ) ; loc2 . hasNext ( ) ; ) { Type loc3 = loc2 . next ( ) ; if ( ts . isSubtype ( loc3 , loc0 ) ) { loc1 = true ; loc2 . remove ( ) ; } } return loc1 ; }", "nl": "removes all elements s in the set such that s decends from o concode_field_sep Type topType concode_elem_sep List<Type> v concode_elem_sep TypeSystem ts concode_field_sep boolean add concode_elem_sep boolean containsAll concode_elem_sep void clear concode_elem_sep boolean isEmpty concode_elem_sep boolean contains concode_elem_sep Iterator<Type> iterator concode_elem_sep boolean removeAll concode_elem_sep int size concode_elem_sep boolean addAll concode_elem_sep boolean containsSubtype concode_elem_sep Object[] toArray concode_elem_sep U[] toArray concode_elem_sep String toString concode_elem_sep boolean retainAll", "code_tokens": ["boolean", "function", "(", "Object", "arg0", ")", "{", "Type", "loc0", "=", "(", "Type", ")", "arg0", ";", "boolean", "loc1", "=", "false", ";", "for", "(", "Iterator", "<", "Type", ">", "loc2", "=", "v", ".", "iterator", "(", ")", ";", "loc2", ".", "hasNext", "(", ")", ";", ")", "{", "Type", "loc3", "=", "loc2", ".", "next", "(", ")", ";", "if", "(", "ts", ".", "isSubtype", "(", "loc3", ",", "loc0", ")", ")", "{", "loc1", "=", "true", ";", "loc2", ".", "remove", "(", ")", ";", "}", "}", "return", "loc1", ";", "}"], "nl_tokens": ["removes", "all", "elements", "s", "in", "the", "set", "such", "that", "s", "decends", "from", "o", "concode_field_sep", "Type", "topType", "concode_elem_sep", "List", "<", "Type", ">", "v", "concode_elem_sep", "TypeSystem", "ts", "concode_field_sep", "boolean", "add", "concode_elem_sep", "boolean", "containsAll", "concode_elem_sep", "void", "clear", "concode_elem_sep", "boolean", "isEmpty", "concode_elem_sep", "boolean", "contains", "concode_elem_sep", "Iterator", "<", "Type", ">", "iterator", "concode_elem_sep", "boolean", "removeAll", "concode_elem_sep", "int", "size", "concode_elem_sep", "boolean", "addAll", "concode_elem_sep", "boolean", "containsSubtype", "concode_elem_sep", "Object", "[", "]", "toArray", "concode_elem_sep", "U", "[", "]", "toArray", "concode_elem_sep", "String", "toString", "concode_elem_sep", "boolean", "retainAll"]}
{"code": "boolean function ( ) { return parseRetain ; }", "nl": "whether the serializer will produce cached mode messages concode_field_sep Map<Class<? extends Message>,String> names concode_elem_sep int size concode_elem_sep Logger log concode_elem_sep boolean parseLazy concode_elem_sep int HEADER_LENGTH concode_elem_sep byte[] checksum concode_elem_sep byte[] header concode_elem_sep NetworkParameters params concode_elem_sep int COMMAND_LEN concode_elem_sep String command concode_elem_sep boolean parseRetain concode_field_sep void seekPastMagicBytes concode_elem_sep void serialize concode_elem_sep void serialize concode_elem_sep Message makeMessage concode_elem_sep Message deserializePayload concode_elem_sep boolean isParseLazyMode concode_elem_sep BitcoinPacketHeader deserializeHeader concode_elem_sep Message deserialize", "code_tokens": ["boolean", "function", "(", ")", "{", "return", "parseRetain", ";", "}"], "nl_tokens": ["whether", "the", "serializer", "will", "produce", "cached", "mode", "messages", "concode_field_sep", "Map", "<", "Class", "<", "?", "extends", "Message", ">", ",", "String", ">", "names", "concode_elem_sep", "int", "size", "concode_elem_sep", "Logger", "log", "concode_elem_sep", "boolean", "parseLazy", "concode_elem_sep", "int", "HEADER_LENGTH", "concode_elem_sep", "byte", "[", "]", "checksum", "concode_elem_sep", "byte", "[", "]", "header", "concode_elem_sep", "NetworkParameters", "params", "concode_elem_sep", "int", "COMMAND_LEN", "concode_elem_sep", "String", "command", "concode_elem_sep", "boolean", "parseRetain", "concode_field_sep", "void", "seekPastMagicBytes", "concode_elem_sep", "void", "serialize", "concode_elem_sep", "void", "serialize", "concode_elem_sep", "Message", "makeMessage", "concode_elem_sep", "Message", "deserializePayload", "concode_elem_sep", "boolean", "isParseLazyMode", "concode_elem_sep", "BitcoinPacketHeader", "deserializeHeader", "concode_elem_sep", "Message", "deserialize"]}
{"code": "float function ( ) { return ( float ) Position . getDistKM ( latMax , lonMin , latMin , lonMin ) ; }", "nl": "returns the distance between latmax and latmin in kilometers . concode_field_sep float lonMax concode_elem_sep float latMin concode_elem_sep float lonMin concode_elem_sep float latMax concode_field_sep float getWestEastDistKM concode_elem_sep float getLatMax concode_elem_sep boolean intersectsWith concode_elem_sep void adjust concode_elem_sep float getLatMin concode_elem_sep String toString concode_elem_sep BoundingBox intersectWith concode_elem_sep boolean isInside concode_elem_sep float getLonMin concode_elem_sep float getLonMax concode_elem_sep BoundingBox unifyWith", "code_tokens": ["float", "function", "(", ")", "{", "return", "(", "float", ")", "Position", ".", "getDistKM", "(", "latMax", ",", "lonMin", ",", "latMin", ",", "lonMin", ")", ";", "}"], "nl_tokens": ["returns", "the", "distance", "between", "latmax", "and", "latmin", "in", "kilometers", ".", "concode_field_sep", "float", "lonMax", "concode_elem_sep", "float", "latMin", "concode_elem_sep", "float", "lonMin", "concode_elem_sep", "float", "latMax", "concode_field_sep", "float", "getWestEastDistKM", "concode_elem_sep", "float", "getLatMax", "concode_elem_sep", "boolean", "intersectsWith", "concode_elem_sep", "void", "adjust", "concode_elem_sep", "float", "getLatMin", "concode_elem_sep", "String", "toString", "concode_elem_sep", "BoundingBox", "intersectWith", "concode_elem_sep", "boolean", "isInside", "concode_elem_sep", "float", "getLonMin", "concode_elem_sep", "float", "getLonMax", "concode_elem_sep", "BoundingBox", "unifyWith"]}
{"code": "String function ( ) { return caseId ; }", "nl": "gets the case id . concode_field_sep RPPA rppaValue concode_elem_sep mutations isMutated concode_elem_sep String gene concode_elem_sep String mutationType concode_elem_sep String caseId concode_elem_sep CNA cnaValue concode_elem_sep GeneticEventComparator geneticEventComparator concode_elem_sep MRNA mrnaValue concode_field_sep RPPA getRPPAValue concode_elem_sep boolean isMutated concode_elem_sep boolean isRPPADownRegulated concode_elem_sep mutations getMutationValue concode_elem_sep MRNA getMrnaValue concode_elem_sep boolean isCnaAmplified concode_elem_sep void setGeneticEventComparator concode_elem_sep String getGene concode_elem_sep boolean isCnaHeterozygousDeleted concode_elem_sep boolean equals concode_elem_sep CNA getCnaValue concode_elem_sep boolean isMRNADownRegulated concode_elem_sep String toString concode_elem_sep boolean isRPPAUpRegulated concode_elem_sep String getMutationType concode_elem_sep boolean isCnaHomozygouslyDeleted concode_elem_sep boolean isMRNAUpRegulated", "code_tokens": ["String", "function", "(", ")", "{", "return", "caseId", ";", "}"], "nl_tokens": ["gets", "the", "case", "id", ".", "concode_field_sep", "RPPA", "rppaValue", "concode_elem_sep", "mutations", "isMutated", "concode_elem_sep", "String", "gene", "concode_elem_sep", "String", "mutationType", "concode_elem_sep", "String", "caseId", "concode_elem_sep", "CNA", "cnaValue", "concode_elem_sep", "GeneticEventComparator", "geneticEventComparator", "concode_elem_sep", "MRNA", "mrnaValue", "concode_field_sep", "RPPA", "getRPPAValue", "concode_elem_sep", "boolean", "isMutated", "concode_elem_sep", "boolean", "isRPPADownRegulated", "concode_elem_sep", "mutations", "getMutationValue", "concode_elem_sep", "MRNA", "getMrnaValue", "concode_elem_sep", "boolean", "isCnaAmplified", "concode_elem_sep", "void", "setGeneticEventComparator", "concode_elem_sep", "String", "getGene", "concode_elem_sep", "boolean", "isCnaHeterozygousDeleted", "concode_elem_sep", "boolean", "equals", "concode_elem_sep", "CNA", "getCnaValue", "concode_elem_sep", "boolean", "isMRNADownRegulated", "concode_elem_sep", "String", "toString", "concode_elem_sep", "boolean", "isRPPAUpRegulated", "concode_elem_sep", "String", "getMutationType", "concode_elem_sep", "boolean", "isCnaHomozygouslyDeleted", "concode_elem_sep", "boolean", "isMRNAUpRegulated"]}
{"code": "String function ( ) { return \"srini_string\" ; }", "nl": "supply the encoding to be used throughout the persistence mechanism . concode_field_sep ConfigurationKey KEY_MOST_RECENT_PROJECT_FILE concode_elem_sep String DOCUMENTATION_TAG concode_elem_sep ConfigurationKey KEY_MOST_RECENT_EXPORT_DIRECTORY concode_elem_sep ConfigurationKey KEY_SCREEN_LEFT_X concode_elem_sep ConfigurationKey KEY_INPUT_SOURCE_ENCODING concode_elem_sep ConfigurationKey KEY_SCREEN_THEME concode_elem_sep String DEPRECATED_TAG concode_elem_sep ConfigurationKey KEY_SNAP concode_elem_sep String CONSOLE_LOG concode_elem_sep ConfigurationKey KEY_SCREEN_HEIGHT concode_elem_sep ConfigurationKey KEY_SPLASH concode_elem_sep ConfigurationKey KEY_EDEM concode_elem_sep ConfigurationKey KEY_NUMBER_LAST_RECENT_USED concode_elem_sep String RESOURCEDIR concode_elem_sep ConfigurationKey KEY_SCREEN_NORTHEAST_WIDTH concode_elem_sep ConfigurationKey KEY_USER_EMAIL concode_elem_sep String ARGO_CONSOLE_PREFIX concode_elem_sep int SCOPE_APPLICATION concode_elem_sep ConfigurationKey KEY_SCREEN_SOUTHEAST_WIDTH concode_elem_sep String SINCE_TAG concode_elem_sep ConfigurationKey KEY_LOCALE concode_elem_sep ConfigurationKey KEY_USER_FULLNAME concode_elem_sep ConfigurationKey KEY_IMPORT_GENERAL_SETTINGS_FLAGS concode_elem_sep ConfigurationKey KEY_SCREEN_SOUTH_HEIGHT concode_elem_sep ConfigurationKey KEY_SCREEN_EAST_WIDTH concode_elem_sep ConfigurationKey KEY_IMPORT_GENERAL_DETAIL_LEVEL concode_elem_sep ConfigurationKey KEY_USER_IMPORT_CLASSPATH concode_elem_sep String VERSION_TAG concode_elem_sep String SEE_TAG concode_elem_sep int SCOPE_PROJECT concode_elem_sep String ARGO_CONSOLE_SUPPRESS concode_elem_sep ConfigurationKey KEY_THEME_CLASS concode_elem_sep String DOCUMENTATION_TAG_ALT concode_elem_sep ConfigurationKey KEY_SMOOTH_EDGES concode_elem_sep ConfigurationKey KEY_XMI_STRIP_DIAGRAMS concode_elem_sep ConfigurationKey KEY_SCREEN_NORTH_HEIGHT concode_elem_sep ConfigurationKey KEY_SCREEN_WIDTH concode_elem_sep ConfigurationKey KEY_SCREEN_SOUTHWEST_WIDTH concode_elem_sep ConfigurationKey KEY_SCREEN_WEST_WIDTH concode_elem_sep ConfigurationKey KEY_SCREEN_TOP_Y concode_elem_sep ConfigurationKey KEY_DEFAULT_MODEL concode_elem_sep ConfigurationKey KEY_SCREEN_NORTHWEST_WIDTH concode_elem_sep ConfigurationKey KEY_USER_EXPLORER_PERSPECTIVES concode_elem_sep String ARGOINI concode_elem_sep String AUTHOR_TAG concode_elem_sep ConfigurationKey KEY_GRID concode_elem_sep ConfigurationKey KEY_RELOAD_RECENT_PROJECT concode_elem_sep ConfigurationKey KEY_LOOK_AND_FEEL_CLASS concode_elem_sep ConfigurationKey KEY_SCREEN_MAXIMIZED concode_elem_sep ConfigurationKey KEY_STARTUP_DIR concode_field_sep void setDirectory concode_elem_sep String getDirectory", "code_tokens": ["String", "function", "(", ")", "{", "return", "\"srini_string\"", ";", "}"], "nl_tokens": ["supply", "the", "encoding", "to", "be", "used", "throughout", "the", "persistence", "mechanism", ".", "concode_field_sep", "ConfigurationKey", "KEY_MOST_RECENT_PROJECT_FILE", "concode_elem_sep", "String", "DOCUMENTATION_TAG", "concode_elem_sep", "ConfigurationKey", "KEY_MOST_RECENT_EXPORT_DIRECTORY", "concode_elem_sep", "ConfigurationKey", "KEY_SCREEN_LEFT_X", "concode_elem_sep", "ConfigurationKey", "KEY_INPUT_SOURCE_ENCODING", "concode_elem_sep", "ConfigurationKey", "KEY_SCREEN_THEME", "concode_elem_sep", "String", "DEPRECATED_TAG", "concode_elem_sep", "ConfigurationKey", "KEY_SNAP", "concode_elem_sep", "String", "CONSOLE_LOG", "concode_elem_sep", "ConfigurationKey", "KEY_SCREEN_HEIGHT", "concode_elem_sep", "ConfigurationKey", "KEY_SPLASH", "concode_elem_sep", "ConfigurationKey", "KEY_EDEM", "concode_elem_sep", "ConfigurationKey", "KEY_NUMBER_LAST_RECENT_USED", "concode_elem_sep", "String", "RESOURCEDIR", "concode_elem_sep", "ConfigurationKey", "KEY_SCREEN_NORTHEAST_WIDTH", "concode_elem_sep", "ConfigurationKey", "KEY_USER_EMAIL", "concode_elem_sep", "String", "ARGO_CONSOLE_PREFIX", "concode_elem_sep", "int", "SCOPE_APPLICATION", "concode_elem_sep", "ConfigurationKey", "KEY_SCREEN_SOUTHEAST_WIDTH", "concode_elem_sep", "String", "SINCE_TAG", "concode_elem_sep", "ConfigurationKey", "KEY_LOCALE", "concode_elem_sep", "ConfigurationKey", "KEY_USER_FULLNAME", "concode_elem_sep", "ConfigurationKey", "KEY_IMPORT_GENERAL_SETTINGS_FLAGS", "concode_elem_sep", "ConfigurationKey", "KEY_SCREEN_SOUTH_HEIGHT", "concode_elem_sep", "ConfigurationKey", "KEY_SCREEN_EAST_WIDTH", "concode_elem_sep", "ConfigurationKey", "KEY_IMPORT_GENERAL_DETAIL_LEVEL", "concode_elem_sep", "ConfigurationKey", "KEY_USER_IMPORT_CLASSPATH", "concode_elem_sep", "String", "VERSION_TAG", "concode_elem_sep", "String", "SEE_TAG", "concode_elem_sep", "int", "SCOPE_PROJECT", "concode_elem_sep", "String", "ARGO_CONSOLE_SUPPRESS", "concode_elem_sep", "ConfigurationKey", "KEY_THEME_CLASS", "concode_elem_sep", "String", "DOCUMENTATION_TAG_ALT", "concode_elem_sep", "ConfigurationKey", "KEY_SMOOTH_EDGES", "concode_elem_sep", "ConfigurationKey", "KEY_XMI_STRIP_DIAGRAMS", "concode_elem_sep", "ConfigurationKey", "KEY_SCREEN_NORTH_HEIGHT", "concode_elem_sep", "ConfigurationKey", "KEY_SCREEN_WIDTH", "concode_elem_sep", "ConfigurationKey", "KEY_SCREEN_SOUTHWEST_WIDTH", "concode_elem_sep", "ConfigurationKey", "KEY_SCREEN_WEST_WIDTH", "concode_elem_sep", "ConfigurationKey", "KEY_SCREEN_TOP_Y", "concode_elem_sep", "ConfigurationKey", "KEY_DEFAULT_MODEL", "concode_elem_sep", "ConfigurationKey", "KEY_SCREEN_NORTHWEST_WIDTH", "concode_elem_sep", "ConfigurationKey", "KEY_USER_EXPLORER_PERSPECTIVES", "concode_elem_sep", "String", "ARGOINI", "concode_elem_sep", "String", "AUTHOR_TAG", "concode_elem_sep", "ConfigurationKey", "KEY_GRID", "concode_elem_sep", "ConfigurationKey", "KEY_RELOAD_RECENT_PROJECT", "concode_elem_sep", "ConfigurationKey", "KEY_LOOK_AND_FEEL_CLASS", "concode_elem_sep", "ConfigurationKey", "KEY_SCREEN_MAXIMIZED", "concode_elem_sep", "ConfigurationKey", "KEY_STARTUP_DIR", "concode_field_sep", "void", "setDirectory", "concode_elem_sep", "String", "getDirectory"]}
{"code": "void function ( ) { Mockito . when ( mockServerConfig . getIssuer ( ) ) . thenReturn ( \"srini_string\" ) ; RegisteredClient loc0 = service . getClientConfiguration ( mockServerConfig ) ; assertThat ( loc0 , is ( nullValue ( ) ) ) ; }", "nl": "checks the behavior when the issuer is not known . concode_field_sep ServerConfiguration mockServerConfig concode_elem_sep String issuer concode_elem_sep StaticClientConfigurationService service concode_elem_sep RegisteredClient mockClient concode_field_sep void getClientConfiguration_success concode_elem_sep void prepare", "code_tokens": ["void", "function", "(", ")", "{", "Mockito", ".", "when", "(", "mockServerConfig", ".", "getIssuer", "(", ")", ")", ".", "thenReturn", "(", "\"srini_string\"", ")", ";", "RegisteredClient", "loc0", "=", "service", ".", "getClientConfiguration", "(", "mockServerConfig", ")", ";", "assertThat", "(", "loc0", ",", "is", "(", "nullValue", "(", ")", ")", ")", ";", "}"], "nl_tokens": ["checks", "the", "behavior", "when", "the", "issuer", "is", "not", "known", ".", "concode_field_sep", "ServerConfiguration", "mockServerConfig", "concode_elem_sep", "String", "issuer", "concode_elem_sep", "StaticClientConfigurationService", "service", "concode_elem_sep", "RegisteredClient", "mockClient", "concode_field_sep", "void", "getClientConfiguration_success", "concode_elem_sep", "void", "prepare"]}
{"code": "long function ( ) { long loc0 = getTotal ( ) ; if ( loc0 == 0 ) { return 0 ; } return getTotalElapsed ( ) / loc0 ; }", "nl": "get average elapsed . concode_field_sep AtomicInteger failed concode_elem_sep AtomicLong totalElapsed concode_elem_sep AtomicInteger active concode_elem_sep AtomicLong succeededMaxElapsed concode_elem_sep ConcurrentMap<String,RpcStatus> SERVICE_STATISTICS concode_elem_sep ConcurrentMap<String,ConcurrentMap<String,RpcStatus>> METHOD_STATISTICS concode_elem_sep ConcurrentMap<String,Object> values concode_elem_sep AtomicLong total concode_elem_sep AtomicLong failedElapsed concode_elem_sep AtomicLong maxElapsed concode_elem_sep AtomicLong failedMaxElapsed concode_field_sep long getFailedAverageElapsed concode_elem_sep long getSucceededMaxElapsed concode_elem_sep void set concode_elem_sep long getSucceededElapsed concode_elem_sep long getSucceeded concode_elem_sep long getSucceededAverageElapsed concode_elem_sep long getMaxElapsed concode_elem_sep RpcStatus getStatus concode_elem_sep RpcStatus getStatus concode_elem_sep void removeStatus concode_elem_sep void removeStatus concode_elem_sep long getAverageTps concode_elem_sep long getFailedElapsed concode_elem_sep long getFailedMaxElapsed concode_elem_sep Object get concode_elem_sep void endCount concode_elem_sep void endCount concode_elem_sep int getActive concode_elem_sep long getTotal concode_elem_sep long getTotalElapsed concode_elem_sep void beginCount concode_elem_sep void beginCount concode_elem_sep int getFailed", "code_tokens": ["long", "function", "(", ")", "{", "long", "loc0", "=", "getTotal", "(", ")", ";", "if", "(", "loc0", "==", "0", ")", "{", "return", "0", ";", "}", "return", "getTotalElapsed", "(", ")", "/", "loc0", ";", "}"], "nl_tokens": ["get", "average", "elapsed", ".", "concode_field_sep", "AtomicInteger", "failed", "concode_elem_sep", "AtomicLong", "totalElapsed", "concode_elem_sep", "AtomicInteger", "active", "concode_elem_sep", "AtomicLong", "succeededMaxElapsed", "concode_elem_sep", "ConcurrentMap", "<", "String", ",", "RpcStatus", ">", "SERVICE_STATISTICS", "concode_elem_sep", "ConcurrentMap", "<", "String", ",", "ConcurrentMap", "<", "String", ",", "RpcStatus", ">>", "METHOD_STATISTICS", "concode_elem_sep", "ConcurrentMap", "<", "String", ",", "Object", ">", "values", "concode_elem_sep", "AtomicLong", "total", "concode_elem_sep", "AtomicLong", "failedElapsed", "concode_elem_sep", "AtomicLong", "maxElapsed", "concode_elem_sep", "AtomicLong", "failedMaxElapsed", "concode_field_sep", "long", "getFailedAverageElapsed", "concode_elem_sep", "long", "getSucceededMaxElapsed", "concode_elem_sep", "void", "set", "concode_elem_sep", "long", "getSucceededElapsed", "concode_elem_sep", "long", "getSucceeded", "concode_elem_sep", "long", "getSucceededAverageElapsed", "concode_elem_sep", "long", "getMaxElapsed", "concode_elem_sep", "RpcStatus", "getStatus", "concode_elem_sep", "RpcStatus", "getStatus", "concode_elem_sep", "void", "removeStatus", "concode_elem_sep", "void", "removeStatus", "concode_elem_sep", "long", "getAverageTps", "concode_elem_sep", "long", "getFailedElapsed", "concode_elem_sep", "long", "getFailedMaxElapsed", "concode_elem_sep", "Object", "get", "concode_elem_sep", "void", "endCount", "concode_elem_sep", "void", "endCount", "concode_elem_sep", "int", "getActive", "concode_elem_sep", "long", "getTotal", "concode_elem_sep", "long", "getTotalElapsed", "concode_elem_sep", "void", "beginCount", "concode_elem_sep", "void", "beginCount", "concode_elem_sep", "int", "getFailed"]}
{"code": "Schema function ( ) { return sch ; }", "nl": "returns the schema of the index join . concode_field_sep IndexInfo ii concode_elem_sep Plan p1 concode_elem_sep Plan p2 concode_elem_sep String joinfield concode_elem_sep Schema sch concode_field_sep int blocksAccessed concode_elem_sep int distinctValues concode_elem_sep int recordsOutput concode_elem_sep Scan open", "code_tokens": ["Schema", "function", "(", ")", "{", "return", "sch", ";", "}"], "nl_tokens": ["returns", "the", "schema", "of", "the", "index", "join", ".", "concode_field_sep", "IndexInfo", "ii", "concode_elem_sep", "Plan", "p1", "concode_elem_sep", "Plan", "p2", "concode_elem_sep", "String", "joinfield", "concode_elem_sep", "Schema", "sch", "concode_field_sep", "int", "blocksAccessed", "concode_elem_sep", "int", "distinctValues", "concode_elem_sep", "int", "recordsOutput", "concode_elem_sep", "Scan", "open"]}
{"code": "void function ( ) { ASTElement loc0 = element ( \"srini_string\" ) ; ASTElement loc1 = element ( \"srini_string\" ) ; tagList . openTag ( loc0 ) ; tagList . openTag ( loc1 ) ; tagList . closeTag ( loc0 ) ; assertFalse ( loc0 . isUnclosed ( ) ) ; assertTrue ( loc1 . isUnclosed ( ) ) ; }", "nl": "< a > < b > < / a > concode_field_sep OpenTagRegister tagList concode_elem_sep int elmId concode_field_sep void openedIsolatedTag concode_elem_sep void doubleNesting concode_elem_sep void interleavedTags concode_elem_sep void newRegister concode_elem_sep void unopenedTags concode_elem_sep ASTElement element", "code_tokens": ["void", "function", "(", ")", "{", "ASTElement", "loc0", "=", "element", "(", "\"srini_string\"", ")", ";", "ASTElement", "loc1", "=", "element", "(", "\"srini_string\"", ")", ";", "tagList", ".", "openTag", "(", "loc0", ")", ";", "tagList", ".", "openTag", "(", "loc1", ")", ";", "tagList", ".", "closeTag", "(", "loc0", ")", ";", "assertFalse", "(", "loc0", ".", "isUnclosed", "(", ")", ")", ";", "assertTrue", "(", "loc1", ".", "isUnclosed", "(", ")", ")", ";", "}"], "nl_tokens": ["<", "a", ">", "<", "b", ">", "<", "/", "a", ">", "concode_field_sep", "OpenTagRegister", "tagList", "concode_elem_sep", "int", "elmId", "concode_field_sep", "void", "openedIsolatedTag", "concode_elem_sep", "void", "doubleNesting", "concode_elem_sep", "void", "interleavedTags", "concode_elem_sep", "void", "newRegister", "concode_elem_sep", "void", "unopenedTags", "concode_elem_sep", "ASTElement", "element"]}
{"code": "void function ( boolean arg0 ) { dim . setBreakOnExceptions ( arg0 ) ; debugGui . getMenubar ( ) . getBreakOnExceptions ( ) . setSelected ( arg0 ) ; }", "nl": "sets whether execution should break when a script exception is thrown . concode_field_sep Scriptable scope concode_elem_sep Dim dim concode_elem_sep int type concode_elem_sep SwingGui debugGui concode_elem_sep int EXIT_ACTION concode_elem_sep int SCOPE_PROVIDER concode_field_sep InputStream getIn concode_elem_sep void setExitAction concode_elem_sep void doBreak concode_elem_sep void main concode_elem_sep void run concode_elem_sep void setBreakOnReturn concode_elem_sep PrintStream getOut concode_elem_sep void setSize concode_elem_sep void setSize concode_elem_sep void contextCreated concode_elem_sep void setVisible concode_elem_sep void mainEmbedded concode_elem_sep void mainEmbedded concode_elem_sep void mainEmbedded concode_elem_sep void contextExited concode_elem_sep void setBreakOnEnter concode_elem_sep PrintStream getErr concode_elem_sep void mainEmbeddedImpl concode_elem_sep void go concode_elem_sep boolean isVisible concode_elem_sep ScopeProvider newScopeProvider concode_elem_sep void setScopeProvider concode_elem_sep void pack concode_elem_sep void clearAllBreakpoints concode_elem_sep void contextReleased concode_elem_sep void setOptimizationLevel concode_elem_sep void detach concode_elem_sep void dispose concode_elem_sep void setScope concode_elem_sep void attachTo concode_elem_sep void contextEntered concode_elem_sep Scriptable getScope concode_elem_sep JFrame getDebugFrame", "code_tokens": ["void", "function", "(", "boolean", "arg0", ")", "{", "dim", ".", "setBreakOnExceptions", "(", "arg0", ")", ";", "debugGui", ".", "getMenubar", "(", ")", ".", "getBreakOnExceptions", "(", ")", ".", "setSelected", "(", "arg0", ")", ";", "}"], "nl_tokens": ["sets", "whether", "execution", "should", "break", "when", "a", "script", "exception", "is", "thrown", ".", "concode_field_sep", "Scriptable", "scope", "concode_elem_sep", "Dim", "dim", "concode_elem_sep", "int", "type", "concode_elem_sep", "SwingGui", "debugGui", "concode_elem_sep", "int", "EXIT_ACTION", "concode_elem_sep", "int", "SCOPE_PROVIDER", "concode_field_sep", "InputStream", "getIn", "concode_elem_sep", "void", "setExitAction", "concode_elem_sep", "void", "doBreak", "concode_elem_sep", "void", "main", "concode_elem_sep", "void", "run", "concode_elem_sep", "void", "setBreakOnReturn", "concode_elem_sep", "PrintStream", "getOut", "concode_elem_sep", "void", "setSize", "concode_elem_sep", "void", "setSize", "concode_elem_sep", "void", "contextCreated", "concode_elem_sep", "void", "setVisible", "concode_elem_sep", "void", "mainEmbedded", "concode_elem_sep", "void", "mainEmbedded", "concode_elem_sep", "void", "mainEmbedded", "concode_elem_sep", "void", "contextExited", "concode_elem_sep", "void", "setBreakOnEnter", "concode_elem_sep", "PrintStream", "getErr", "concode_elem_sep", "void", "mainEmbeddedImpl", "concode_elem_sep", "void", "go", "concode_elem_sep", "boolean", "isVisible", "concode_elem_sep", "ScopeProvider", "newScopeProvider", "concode_elem_sep", "void", "setScopeProvider", "concode_elem_sep", "void", "pack", "concode_elem_sep", "void", "clearAllBreakpoints", "concode_elem_sep", "void", "contextReleased", "concode_elem_sep", "void", "setOptimizationLevel", "concode_elem_sep", "void", "detach", "concode_elem_sep", "void", "dispose", "concode_elem_sep", "void", "setScope", "concode_elem_sep", "void", "attachTo", "concode_elem_sep", "void", "contextEntered", "concode_elem_sep", "Scriptable", "getScope", "concode_elem_sep", "JFrame", "getDebugFrame"]}
{"code": "Timestamp function ( ) { return this . receiptDate ; }", "nl": "gets the receipt date . concode_field_sep long serialVersionUID concode_elem_sep String isSystemDerived concode_elem_sep String isActive concode_elem_sep BigDecimal predecessorId concode_elem_sep String srcFileName concode_elem_sep BigDecimal successorId concode_elem_sep BigDecimal feedId concode_elem_sep String checksum concode_elem_sep String transmissionDatasetId concode_elem_sep String comments concode_elem_sep String inactivationReasonType concode_elem_sep String isFormatValid concode_elem_sep long dataUnitId concode_elem_sep Timestamp receiptDate concode_elem_sep String srcUniqueFileName concode_elem_sep Timestamp createdDate concode_elem_sep Long dataSetId concode_elem_sep BigDecimal fileSize concode_elem_sep String destFileName concode_elem_sep String loadedInCats concode_elem_sep String checksumType concode_elem_sep Timestamp modifiedDate concode_elem_sep BigDecimal runId concode_elem_sep String isPrepopulated concode_elem_sep String isBulk concode_elem_sep String isUpdate concode_elem_sep String receiptDateType concode_elem_sep String status concode_field_sep void setIsSystemDerived concode_elem_sep void setIsPrepopulated concode_elem_sep String getStatus concode_elem_sep String getIsUpdate concode_elem_sep long getDataUnitId concode_elem_sep BigDecimal getFileSize concode_elem_sep void setInactivationReasonType concode_elem_sep void setDataUnitId concode_elem_sep String getComments concode_elem_sep Timestamp getCreatedDate concode_elem_sep void setFileSize concode_elem_sep BigDecimal getPredecessorId concode_elem_sep void setIsUpdate concode_elem_sep String getReceiptDateType concode_elem_sep BigDecimal getFeedId concode_elem_sep void setReceiptDate concode_elem_sep Timestamp getModifiedDate concode_elem_sep void setSuccessorId concode_elem_sep void setDestFileName concode_elem_sep void setIsBulk concode_elem_sep String getIsFormatValid concode_elem_sep void setDataSetId concode_elem_sep void setIsActive concode_elem_sep void setChecksumType concode_elem_sep void setFeedId concode_elem_sep String getInactivationReasonType concode_elem_sep String getSrcUniqueFileName concode_elem_sep Long getDataSetId concode_elem_sep void setReceiptDateType concode_elem_sep BigDecimal getRunId concode_elem_sep void setSrcFileName concode_elem_sep String getChecksumType concode_elem_sep String getSrcFileName concode_elem_sep String getChecksum concode_elem_sep String getDestFileName concode_elem_sep void setTransmissionDatasetId concode_elem_sep String getTransmissionDatasetId concode_elem_sep void setComments concode_elem_sep String getLoadedInCats concode_elem_sep BigDecimal getSuccessorId concode_elem_sep void setLoadedInCats concode_elem_sep String getIsPrepopulated concode_elem_sep void setSrcUniqueFileName concode_elem_sep void setChecksum concode_elem_sep void setIsFormatValid concode_elem_sep String getIsBulk concode_elem_sep void setRunId concode_elem_sep void setStatus concode_elem_sep String getIsActive concode_elem_sep void setModifiedDate concode_elem_sep void setCreatedDate concode_elem_sep void setPredecessorId concode_elem_sep String getIsSystemDerived", "code_tokens": ["Timestamp", "function", "(", ")", "{", "return", "this", ".", "receiptDate", ";", "}"], "nl_tokens": ["gets", "the", "receipt", "date", ".", "concode_field_sep", "long", "serialVersionUID", "concode_elem_sep", "String", "isSystemDerived", "concode_elem_sep", "String", "isActive", "concode_elem_sep", "BigDecimal", "predecessorId", "concode_elem_sep", "String", "srcFileName", "concode_elem_sep", "BigDecimal", "successorId", "concode_elem_sep", "BigDecimal", "feedId", "concode_elem_sep", "String", "checksum", "concode_elem_sep", "String", "transmissionDatasetId", "concode_elem_sep", "String", "comments", "concode_elem_sep", "String", "inactivationReasonType", "concode_elem_sep", "String", "isFormatValid", "concode_elem_sep", "long", "dataUnitId", "concode_elem_sep", "Timestamp", "receiptDate", "concode_elem_sep", "String", "srcUniqueFileName", "concode_elem_sep", "Timestamp", "createdDate", "concode_elem_sep", "Long", "dataSetId", "concode_elem_sep", "BigDecimal", "fileSize", "concode_elem_sep", "String", "destFileName", "concode_elem_sep", "String", "loadedInCats", "concode_elem_sep", "String", "checksumType", "concode_elem_sep", "Timestamp", "modifiedDate", "concode_elem_sep", "BigDecimal", "runId", "concode_elem_sep", "String", "isPrepopulated", "concode_elem_sep", "String", "isBulk", "concode_elem_sep", "String", "isUpdate", "concode_elem_sep", "String", "receiptDateType", "concode_elem_sep", "String", "status", "concode_field_sep", "void", "setIsSystemDerived", "concode_elem_sep", "void", "setIsPrepopulated", "concode_elem_sep", "String", "getStatus", "concode_elem_sep", "String", "getIsUpdate", "concode_elem_sep", "long", "getDataUnitId", "concode_elem_sep", "BigDecimal", "getFileSize", "concode_elem_sep", "void", "setInactivationReasonType", "concode_elem_sep", "void", "setDataUnitId", "concode_elem_sep", "String", "getComments", "concode_elem_sep", "Timestamp", "getCreatedDate", "concode_elem_sep", "void", "setFileSize", "concode_elem_sep", "BigDecimal", "getPredecessorId", "concode_elem_sep", "void", "setIsUpdate", "concode_elem_sep", "String", "getReceiptDateType", "concode_elem_sep", "BigDecimal", "getFeedId", "concode_elem_sep", "void", "setReceiptDate", "concode_elem_sep", "Timestamp", "getModifiedDate", "concode_elem_sep", "void", "setSuccessorId", "concode_elem_sep", "void", "setDestFileName", "concode_elem_sep", "void", "setIsBulk", "concode_elem_sep", "String", "getIsFormatValid", "concode_elem_sep", "void", "setDataSetId", "concode_elem_sep", "void", "setIsActive", "concode_elem_sep", "void", "setChecksumType", "concode_elem_sep", "void", "setFeedId", "concode_elem_sep", "String", "getInactivationReasonType", "concode_elem_sep", "String", "getSrcUniqueFileName", "concode_elem_sep", "Long", "getDataSetId", "concode_elem_sep", "void", "setReceiptDateType", "concode_elem_sep", "BigDecimal", "getRunId", "concode_elem_sep", "void", "setSrcFileName", "concode_elem_sep", "String", "getChecksumType", "concode_elem_sep", "String", "getSrcFileName", "concode_elem_sep", "String", "getChecksum", "concode_elem_sep", "String", "getDestFileName", "concode_elem_sep", "void", "setTransmissionDatasetId", "concode_elem_sep", "String", "getTransmissionDatasetId", "concode_elem_sep", "void", "setComments", "concode_elem_sep", "String", "getLoadedInCats", "concode_elem_sep", "BigDecimal", "getSuccessorId", "concode_elem_sep", "void", "setLoadedInCats", "concode_elem_sep", "String", "getIsPrepopulated", "concode_elem_sep", "void", "setSrcUniqueFileName", "concode_elem_sep", "void", "setChecksum", "concode_elem_sep", "void", "setIsFormatValid", "concode_elem_sep", "String", "getIsBulk", "concode_elem_sep", "void", "setRunId", "concode_elem_sep", "void", "setStatus", "concode_elem_sep", "String", "getIsActive", "concode_elem_sep", "void", "setModifiedDate", "concode_elem_sep", "void", "setCreatedDate", "concode_elem_sep", "void", "setPredecessorId", "concode_elem_sep", "String", "getIsSystemDerived"]}
{"code": "void function ( RepeatField arg0 ) { if ( arg0 == null ) throw new NullPointerException ( \"srini_string\" ) ; this . repeatList . add ( arg0 ) ; }", "nl": "add a repeat field . concode_field_sep Vector repeatList concode_elem_sep TimeField timeImpl concode_field_sep Time getTime concode_elem_sep void setRepeatTimes concode_elem_sep String toString concode_elem_sep Vector getRepeatTimes concode_elem_sep void setTime", "code_tokens": ["void", "function", "(", "RepeatField", "arg0", ")", "{", "if", "(", "arg0", "==", "null", ")", "throw", "new", "NullPointerException", "(", "\"srini_string\"", ")", ";", "this", ".", "repeatList", ".", "add", "(", "arg0", ")", ";", "}"], "nl_tokens": ["add", "a", "repeat", "field", ".", "concode_field_sep", "Vector", "repeatList", "concode_elem_sep", "TimeField", "timeImpl", "concode_field_sep", "Time", "getTime", "concode_elem_sep", "void", "setRepeatTimes", "concode_elem_sep", "String", "toString", "concode_elem_sep", "Vector", "getRepeatTimes", "concode_elem_sep", "void", "setTime"]}
{"code": "void function ( ) { final ViolationNode loc0 = createViolationNode ( \"srini_string\" , 1 , 1 , 5 , 15 , \"srini_string\" ) ; final ViolationNode loc1 = createViolationNode ( \"srini_string\" , 1 , 1 , 7 , 15 , \"srini_string\" ) ; assertFalse ( \"srini_string\" , loc0 . equalsNode ( loc1 ) ) ; }", "nl": "verifies that two violations nodes with different begincolumn arenot equal . concode_field_sep PlaceHolder placeHolder concode_field_sep void testEqualsNodeWithTwoDifferentViolationsDifferentEndColumn concode_elem_sep ViolationNode createViolationNode concode_elem_sep void testEqualsNodeWithTwoDifferentViolationsDifferentVariableName concode_elem_sep void testEqualsNodeWithTwoDifferentViolationsDifferentEndLine concode_elem_sep void testEqualsNodeWithTwoDifferentViolationsDifferentFilename concode_elem_sep void testEqualsNodeWithTwoDifferentViolationsDifferentBeginLine concode_elem_sep void testEqualsNodeWithTwoEqualViolations", "code_tokens": ["void", "function", "(", ")", "{", "final", "ViolationNode", "loc0", "=", "createViolationNode", "(", "\"srini_string\"", ",", "1", ",", "1", ",", "5", ",", "15", ",", "\"srini_string\"", ")", ";", "final", "ViolationNode", "loc1", "=", "createViolationNode", "(", "\"srini_string\"", ",", "1", ",", "1", ",", "7", ",", "15", ",", "\"srini_string\"", ")", ";", "assertFalse", "(", "\"srini_string\"", ",", "loc0", ".", "equalsNode", "(", "loc1", ")", ")", ";", "}"], "nl_tokens": ["verifies", "that", "two", "violations", "nodes", "with", "different", "begincolumn", "arenot", "equal", ".", "concode_field_sep", "PlaceHolder", "placeHolder", "concode_field_sep", "void", "testEqualsNodeWithTwoDifferentViolationsDifferentEndColumn", "concode_elem_sep", "ViolationNode", "createViolationNode", "concode_elem_sep", "void", "testEqualsNodeWithTwoDifferentViolationsDifferentVariableName", "concode_elem_sep", "void", "testEqualsNodeWithTwoDifferentViolationsDifferentEndLine", "concode_elem_sep", "void", "testEqualsNodeWithTwoDifferentViolationsDifferentFilename", "concode_elem_sep", "void", "testEqualsNodeWithTwoDifferentViolationsDifferentBeginLine", "concode_elem_sep", "void", "testEqualsNodeWithTwoEqualViolations"]}
{"code": "void function ( final String arg0 ) { this . instanceName = arg0 ; }", "nl": "set the unique name of the editor concode_field_sep HttpServletRequest request concode_elem_sep String toolbarSet concode_elem_sep String instanceName concode_elem_sep String height concode_elem_sep String basePath concode_elem_sep FCKeditorConfig config concode_elem_sep String value concode_elem_sep String width concode_field_sep String createHtml concode_elem_sep void setValue concode_elem_sep String escapeXml concode_elem_sep String createInputForVariable concode_elem_sep String toString concode_elem_sep void setToolbarSet concode_elem_sep void setBasePath concode_elem_sep void setWidth concode_elem_sep void setHeight concode_elem_sep FCKeditorConfig getConfig concode_elem_sep void setConfig", "code_tokens": ["void", "function", "(", "final", "String", "arg0", ")", "{", "this", ".", "instanceName", "=", "arg0", ";", "}"], "nl_tokens": ["set", "the", "unique", "name", "of", "the", "editor", "concode_field_sep", "HttpServletRequest", "request", "concode_elem_sep", "String", "toolbarSet", "concode_elem_sep", "String", "instanceName", "concode_elem_sep", "String", "height", "concode_elem_sep", "String", "basePath", "concode_elem_sep", "FCKeditorConfig", "config", "concode_elem_sep", "String", "value", "concode_elem_sep", "String", "width", "concode_field_sep", "String", "createHtml", "concode_elem_sep", "void", "setValue", "concode_elem_sep", "String", "escapeXml", "concode_elem_sep", "String", "createInputForVariable", "concode_elem_sep", "String", "toString", "concode_elem_sep", "void", "setToolbarSet", "concode_elem_sep", "void", "setBasePath", "concode_elem_sep", "void", "setWidth", "concode_elem_sep", "void", "setHeight", "concode_elem_sep", "FCKeditorConfig", "getConfig", "concode_elem_sep", "void", "setConfig"]}
{"code": "void function ( WalkDirection arg0 ) { viewer . moveCharacter2d ( arg0 ) ; }", "nl": "method called only from the model . it sends a command to the viewer to update the character sprite as the model 's character moves . concode_field_sep RpgScreen viewer concode_elem_sep RpgPlatform model concode_field_sep void updateModel concode_elem_sep RpgScreen getViewer concode_elem_sep RpgPlatform getModel concode_elem_sep void setModel concode_elem_sep void moveCharacter concode_elem_sep void moveCharacter concode_elem_sep void triggerEvent concode_elem_sep void setViewer concode_elem_sep TiledMap getMap concode_elem_sep void runAutomaticEvents", "code_tokens": ["void", "function", "(", "WalkDirection", "arg0", ")", "{", "viewer", ".", "moveCharacter2d", "(", "arg0", ")", ";", "}"], "nl_tokens": ["method", "called", "only", "from", "the", "model", ".", "it", "sends", "a", "command", "to", "the", "viewer", "to", "update", "the", "character", "sprite", "as", "the", "model", "'", "s", "character", "moves", ".", "concode_field_sep", "RpgScreen", "viewer", "concode_elem_sep", "RpgPlatform", "model", "concode_field_sep", "void", "updateModel", "concode_elem_sep", "RpgScreen", "getViewer", "concode_elem_sep", "RpgPlatform", "getModel", "concode_elem_sep", "void", "setModel", "concode_elem_sep", "void", "moveCharacter", "concode_elem_sep", "void", "moveCharacter", "concode_elem_sep", "void", "triggerEvent", "concode_elem_sep", "void", "setViewer", "concode_elem_sep", "TiledMap", "getMap", "concode_elem_sep", "void", "runAutomaticEvents"]}
{"code": "void function ( String arg0 ) { this . resultCode = arg0 ; }", "nl": "sets the result code . concode_field_sep Timestamp endDate concode_elem_sep BigDecimal feedConfigId concode_elem_sep String resultCode concode_elem_sep long serialVersionUID concode_elem_sep String resultMessage concode_elem_sep BigDecimal fileCount concode_elem_sep Timestamp maxReceiptDate concode_elem_sep BigDecimal downloadSize concode_elem_sep BigDecimal feedId concode_elem_sep String configInfo concode_elem_sep long runId concode_elem_sep byte[] errors concode_elem_sep String runStatus concode_elem_sep Timestamp startDate concode_field_sep BigDecimal getFeedConfigId concode_elem_sep Timestamp getStartDate concode_elem_sep void setFeedId concode_elem_sep String getResultCode concode_elem_sep void setFeedConfigId concode_elem_sep void setMaxReceiptDate concode_elem_sep long getRunId concode_elem_sep Timestamp getEndDate concode_elem_sep void setErrors concode_elem_sep String getConfigInfo concode_elem_sep void setEndDate concode_elem_sep byte[] getErrors concode_elem_sep void setFileCount concode_elem_sep BigDecimal getDownloadSize concode_elem_sep String getResultMessage concode_elem_sep void setResultMessage concode_elem_sep BigDecimal getFileCount concode_elem_sep String getRunStatus concode_elem_sep void setRunStatus concode_elem_sep void setStartDate concode_elem_sep BigDecimal getFeedId concode_elem_sep void setRunId concode_elem_sep Timestamp getMaxReceiptDate concode_elem_sep void setConfigInfo concode_elem_sep void setDownloadSize", "code_tokens": ["void", "function", "(", "String", "arg0", ")", "{", "this", ".", "resultCode", "=", "arg0", ";", "}"], "nl_tokens": ["sets", "the", "result", "code", ".", "concode_field_sep", "Timestamp", "endDate", "concode_elem_sep", "BigDecimal", "feedConfigId", "concode_elem_sep", "String", "resultCode", "concode_elem_sep", "long", "serialVersionUID", "concode_elem_sep", "String", "resultMessage", "concode_elem_sep", "BigDecimal", "fileCount", "concode_elem_sep", "Timestamp", "maxReceiptDate", "concode_elem_sep", "BigDecimal", "downloadSize", "concode_elem_sep", "BigDecimal", "feedId", "concode_elem_sep", "String", "configInfo", "concode_elem_sep", "long", "runId", "concode_elem_sep", "byte", "[", "]", "errors", "concode_elem_sep", "String", "runStatus", "concode_elem_sep", "Timestamp", "startDate", "concode_field_sep", "BigDecimal", "getFeedConfigId", "concode_elem_sep", "Timestamp", "getStartDate", "concode_elem_sep", "void", "setFeedId", "concode_elem_sep", "String", "getResultCode", "concode_elem_sep", "void", "setFeedConfigId", "concode_elem_sep", "void", "setMaxReceiptDate", "concode_elem_sep", "long", "getRunId", "concode_elem_sep", "Timestamp", "getEndDate", "concode_elem_sep", "void", "setErrors", "concode_elem_sep", "String", "getConfigInfo", "concode_elem_sep", "void", "setEndDate", "concode_elem_sep", "byte", "[", "]", "getErrors", "concode_elem_sep", "void", "setFileCount", "concode_elem_sep", "BigDecimal", "getDownloadSize", "concode_elem_sep", "String", "getResultMessage", "concode_elem_sep", "void", "setResultMessage", "concode_elem_sep", "BigDecimal", "getFileCount", "concode_elem_sep", "String", "getRunStatus", "concode_elem_sep", "void", "setRunStatus", "concode_elem_sep", "void", "setStartDate", "concode_elem_sep", "BigDecimal", "getFeedId", "concode_elem_sep", "void", "setRunId", "concode_elem_sep", "Timestamp", "getMaxReceiptDate", "concode_elem_sep", "void", "setConfigInfo", "concode_elem_sep", "void", "setDownloadSize"]}
{"code": "void function ( ) { canvas . setForegroundColor ( color ) ; canvas . fillCircle ( xPosition , yPosition , diameter ) ; }", "nl": "draw this ball at its current position onto the canvas . concode_field_sep int xPosition concode_elem_sep Canvas canvas concode_elem_sep int ySpeed concode_elem_sep int ballDegradation concode_elem_sep Color color concode_elem_sep int diameter concode_elem_sep int yPosition concode_elem_sep int groundPosition concode_elem_sep int GRAVITY concode_elem_sep Ellipse2D.Double circle concode_field_sep void erase concode_elem_sep void move concode_elem_sep int getXPosition concode_elem_sep int getYPosition", "code_tokens": ["void", "function", "(", ")", "{", "canvas", ".", "setForegroundColor", "(", "color", ")", ";", "canvas", ".", "fillCircle", "(", "xPosition", ",", "yPosition", ",", "diameter", ")", ";", "}"], "nl_tokens": ["draw", "this", "ball", "at", "its", "current", "position", "onto", "the", "canvas", ".", "concode_field_sep", "int", "xPosition", "concode_elem_sep", "Canvas", "canvas", "concode_elem_sep", "int", "ySpeed", "concode_elem_sep", "int", "ballDegradation", "concode_elem_sep", "Color", "color", "concode_elem_sep", "int", "diameter", "concode_elem_sep", "int", "yPosition", "concode_elem_sep", "int", "groundPosition", "concode_elem_sep", "int", "GRAVITY", "concode_elem_sep", "Ellipse2D", ".", "Double", "circle", "concode_field_sep", "void", "erase", "concode_elem_sep", "void", "move", "concode_elem_sep", "int", "getXPosition", "concode_elem_sep", "int", "getYPosition"]}
{"code": "Block function ( int arg0 ) { return tx . append ( ti . fileName ( ) , new BTPageFormatter ( ti , arg0 ) ) ; }", "nl": "appends a new block to the end of the specified b-tree file , having the specified flag value . concode_field_sep Transaction tx concode_elem_sep TableInfo ti concode_elem_sep int slotsize concode_elem_sep Block currentblk concode_field_sep void insertDir concode_elem_sep int getChildNum concode_elem_sep void insert concode_elem_sep void delete concode_elem_sep Block split concode_elem_sep void transferRecs concode_elem_sep int fldpos concode_elem_sep int getNumRecs concode_elem_sep int slotpos concode_elem_sep void close concode_elem_sep int getFlag concode_elem_sep void setVal concode_elem_sep RID getDataRid concode_elem_sep Constant getVal concode_elem_sep void setFlag concode_elem_sep void insertLeaf concode_elem_sep String getString concode_elem_sep void setInt concode_elem_sep int getInt concode_elem_sep void setString concode_elem_sep Constant getDataVal concode_elem_sep void copyRecord concode_elem_sep boolean isFull concode_elem_sep void setNumRecs concode_elem_sep int findSlotBefore", "code_tokens": ["Block", "function", "(", "int", "arg0", ")", "{", "return", "tx", ".", "append", "(", "ti", ".", "fileName", "(", ")", ",", "new", "BTPageFormatter", "(", "ti", ",", "arg0", ")", ")", ";", "}"], "nl_tokens": ["appends", "a", "new", "block", "to", "the", "end", "of", "the", "specified", "b", "-", "tree", "file", ",", "having", "the", "specified", "flag", "value", ".", "concode_field_sep", "Transaction", "tx", "concode_elem_sep", "TableInfo", "ti", "concode_elem_sep", "int", "slotsize", "concode_elem_sep", "Block", "currentblk", "concode_field_sep", "void", "insertDir", "concode_elem_sep", "int", "getChildNum", "concode_elem_sep", "void", "insert", "concode_elem_sep", "void", "delete", "concode_elem_sep", "Block", "split", "concode_elem_sep", "void", "transferRecs", "concode_elem_sep", "int", "fldpos", "concode_elem_sep", "int", "getNumRecs", "concode_elem_sep", "int", "slotpos", "concode_elem_sep", "void", "close", "concode_elem_sep", "int", "getFlag", "concode_elem_sep", "void", "setVal", "concode_elem_sep", "RID", "getDataRid", "concode_elem_sep", "Constant", "getVal", "concode_elem_sep", "void", "setFlag", "concode_elem_sep", "void", "insertLeaf", "concode_elem_sep", "String", "getString", "concode_elem_sep", "void", "setInt", "concode_elem_sep", "int", "getInt", "concode_elem_sep", "void", "setString", "concode_elem_sep", "Constant", "getDataVal", "concode_elem_sep", "void", "copyRecord", "concode_elem_sep", "boolean", "isFull", "concode_elem_sep", "void", "setNumRecs", "concode_elem_sep", "int", "findSlotBefore"]}
{"code": "boolean function ( HttpServletRequest arg0 ) { String loc0 = getEmailId ( arg0 ) ; if ( loc0 != null ) { return true ; } else { return false ; } }", "nl": "is the user currently authenticated ? determined via session . concode_field_sep String EMAIL concode_field_sep void loginUser concode_elem_sep void logoutUser concode_elem_sep String getEmailId", "code_tokens": ["boolean", "function", "(", "HttpServletRequest", "arg0", ")", "{", "String", "loc0", "=", "getEmailId", "(", "arg0", ")", ";", "if", "(", "loc0", "!=", "null", ")", "{", "return", "true", ";", "}", "else", "{", "return", "false", ";", "}", "}"], "nl_tokens": ["is", "the", "user", "currently", "authenticated", "?", "determined", "via", "session", ".", "concode_field_sep", "String", "EMAIL", "concode_field_sep", "void", "loginUser", "concode_elem_sep", "void", "logoutUser", "concode_elem_sep", "String", "getEmailId"]}
{"code": "QName function ( ) { return qname ; }", "nl": "gets the value of the qname property . concode_field_sep QName qname concode_field_sep void setQName concode_elem_sep boolean isSetQName", "code_tokens": ["QName", "function", "(", ")", "{", "return", "qname", ";", "}"], "nl_tokens": ["gets", "the", "value", "of", "the", "qname", "property", ".", "concode_field_sep", "QName", "qname", "concode_field_sep", "void", "setQName", "concode_elem_sep", "boolean", "isSetQName"]}
{"code": "long function ( ) { return k ; }", "nl": "k is initialised as 2 and increased by 1 each time the number is fed back concode_field_sep long sequenceNumber concode_elem_sep long lastFeedbacktime concode_elem_sep long k concode_field_sep void feedback concode_elem_sep long getSequenceNumber concode_elem_sep int hashCode concode_elem_sep boolean equals concode_elem_sep String toString concode_elem_sep int compareTo concode_elem_sep long getLastFeedbackTime", "code_tokens": ["long", "function", "(", ")", "{", "return", "k", ";", "}"], "nl_tokens": ["k", "is", "initialised", "as", "2", "and", "increased", "by", "1", "each", "time", "the", "number", "is", "fed", "back", "concode_field_sep", "long", "sequenceNumber", "concode_elem_sep", "long", "lastFeedbacktime", "concode_elem_sep", "long", "k", "concode_field_sep", "void", "feedback", "concode_elem_sep", "long", "getSequenceNumber", "concode_elem_sep", "int", "hashCode", "concode_elem_sep", "boolean", "equals", "concode_elem_sep", "String", "toString", "concode_elem_sep", "int", "compareTo", "concode_elem_sep", "long", "getLastFeedbackTime"]}
{"code": "void function ( ) { this . m_markedForRemoval = true ; }", "nl": "marks this directory as one that has been removed , indicating we should also remove all the directory contents . concode_field_sep Collection<File> m_newDirectoryContents concode_elem_sep Collection<File> m_storedDirectoryContents concode_elem_sep Logger m_log concode_elem_sep boolean m_removed concode_elem_sep File m_directory concode_elem_sep boolean m_markedForRemoval concode_field_sep boolean removed concode_elem_sep int hashCode concode_elem_sep boolean equals concode_elem_sep boolean markedForRemoval concode_elem_sep File getDirectory concode_elem_sep boolean shouldUpdate concode_elem_sep void setRemoved concode_elem_sep Collection<File> getFiles concode_elem_sep void updated", "code_tokens": ["void", "function", "(", ")", "{", "this", ".", "m_markedForRemoval", "=", "true", ";", "}"], "nl_tokens": ["marks", "this", "directory", "as", "one", "that", "has", "been", "removed", ",", "indicating", "we", "should", "also", "remove", "all", "the", "directory", "contents", ".", "concode_field_sep", "Collection", "<", "File", ">", "m_newDirectoryContents", "concode_elem_sep", "Collection", "<", "File", ">", "m_storedDirectoryContents", "concode_elem_sep", "Logger", "m_log", "concode_elem_sep", "boolean", "m_removed", "concode_elem_sep", "File", "m_directory", "concode_elem_sep", "boolean", "m_markedForRemoval", "concode_field_sep", "boolean", "removed", "concode_elem_sep", "int", "hashCode", "concode_elem_sep", "boolean", "equals", "concode_elem_sep", "boolean", "markedForRemoval", "concode_elem_sep", "File", "getDirectory", "concode_elem_sep", "boolean", "shouldUpdate", "concode_elem_sep", "void", "setRemoved", "concode_elem_sep", "Collection", "<", "File", ">", "getFiles", "concode_elem_sep", "void", "updated"]}
{"code": "void function ( boolean arg0 ) { this . returnEntropy = arg0 ; }", "nl": "set whether entropy is returned to the client or not concode_field_sep boolean returnEntropy concode_elem_sep long lifetime concode_elem_sep Logger LOG concode_field_sep boolean canHandleToken concode_elem_sep boolean canHandleToken concode_elem_sep boolean isReturnEntropy concode_elem_sep long getLifetime concode_elem_sep int getWSCVersion concode_elem_sep void setLifetime concode_elem_sep TokenProviderResponse createToken", "code_tokens": ["void", "function", "(", "boolean", "arg0", ")", "{", "this", ".", "returnEntropy", "=", "arg0", ";", "}"], "nl_tokens": ["set", "whether", "entropy", "is", "returned", "to", "the", "client", "or", "not", "concode_field_sep", "boolean", "returnEntropy", "concode_elem_sep", "long", "lifetime", "concode_elem_sep", "Logger", "LOG", "concode_field_sep", "boolean", "canHandleToken", "concode_elem_sep", "boolean", "canHandleToken", "concode_elem_sep", "boolean", "isReturnEntropy", "concode_elem_sep", "long", "getLifetime", "concode_elem_sep", "int", "getWSCVersion", "concode_elem_sep", "void", "setLifetime", "concode_elem_sep", "TokenProviderResponse", "createToken"]}
{"code": "java . lang . Object function ( ) { try { return forName ( literalName ) ; } catch ( java . lang . IllegalArgumentException loc0 ) { throw new java . io . InvalidObjectException ( loc0 . getMessage ( ) ) ; } }", "nl": "resolves serialized instance of enumeration value . concode_field_sep java.util.List typeName concode_elem_sep ChangeableKindEnum CK_ADD_ONLY concode_elem_sep ChangeableKindEnum CK_CHANGEABLE concode_elem_sep java.lang.String literalName concode_elem_sep ChangeableKindEnum CK_FROZEN concode_field_sep ChangeableKind forName concode_elem_sep java.util.List refTypeName concode_elem_sep int hashCode concode_elem_sep boolean equals concode_elem_sep java.lang.String toString", "code_tokens": ["java", ".", "lang", ".", "Object", "function", "(", ")", "{", "try", "{", "return", "forName", "(", "literalName", ")", ";", "}", "catch", "(", "java", ".", "lang", ".", "IllegalArgumentException", "loc0", ")", "{", "throw", "new", "java", ".", "io", ".", "InvalidObjectException", "(", "loc0", ".", "getMessage", "(", ")", ")", ";", "}", "}"], "nl_tokens": ["resolves", "serialized", "instance", "of", "enumeration", "value", ".", "concode_field_sep", "java", ".", "util", ".", "List", "typeName", "concode_elem_sep", "ChangeableKindEnum", "CK_ADD_ONLY", "concode_elem_sep", "ChangeableKindEnum", "CK_CHANGEABLE", "concode_elem_sep", "java", ".", "lang", ".", "String", "literalName", "concode_elem_sep", "ChangeableKindEnum", "CK_FROZEN", "concode_field_sep", "ChangeableKind", "forName", "concode_elem_sep", "java", ".", "util", ".", "List", "refTypeName", "concode_elem_sep", "int", "hashCode", "concode_elem_sep", "boolean", "equals", "concode_elem_sep", "java", ".", "lang", ".", "String", "toString"]}
{"code": "String function ( ) { return operation ; }", "nl": "returns the operation string . @return the operation string . concode_field_sep Pattern FORMAT concode_elem_sep String[] packages concode_elem_sep String operation concode_elem_sep String[] classes concode_field_sep QualifiedName makeOuterClassOf concode_elem_sep boolean isClass concode_elem_sep QualifiedName makeOperationOf concode_elem_sep QualifiedName makeOperationOf concode_elem_sep QualifiedName makeOperationOf concode_elem_sep QualifiedName parseName concode_elem_sep String getOperationName concode_elem_sep boolean isOperation concode_elem_sep QualifiedName makeNestedClassOf concode_elem_sep int hashCode concode_elem_sep boolean equals concode_elem_sep String[] getPackages concode_elem_sep String toString concode_elem_sep String[] getClasses concode_elem_sep QualifiedName makeClassOf", "code_tokens": ["String", "function", "(", ")", "{", "return", "operation", ";", "}"], "nl_tokens": ["returns", "the", "operation", "string", ".", "@", "return", "the", "operation", "string", ".", "concode_field_sep", "Pattern", "FORMAT", "concode_elem_sep", "String", "[", "]", "packages", "concode_elem_sep", "String", "operation", "concode_elem_sep", "String", "[", "]", "classes", "concode_field_sep", "QualifiedName", "makeOuterClassOf", "concode_elem_sep", "boolean", "isClass", "concode_elem_sep", "QualifiedName", "makeOperationOf", "concode_elem_sep", "QualifiedName", "makeOperationOf", "concode_elem_sep", "QualifiedName", "makeOperationOf", "concode_elem_sep", "QualifiedName", "parseName", "concode_elem_sep", "String", "getOperationName", "concode_elem_sep", "boolean", "isOperation", "concode_elem_sep", "QualifiedName", "makeNestedClassOf", "concode_elem_sep", "int", "hashCode", "concode_elem_sep", "boolean", "equals", "concode_elem_sep", "String", "[", "]", "getPackages", "concode_elem_sep", "String", "toString", "concode_elem_sep", "String", "[", "]", "getClasses", "concode_elem_sep", "QualifiedName", "makeClassOf"]}
{"code": "String function ( ) { return Util . selectRandomlyFromList ( getLocations ( ) ) ; }", "nl": "returns a location which is selected by random . concode_field_sep Hashtable<String,Point2D> locationPositions concode_elem_sep LabeledGraph<String,Double> links concode_field_sep Double getDistance concode_elem_sep void clear concode_elem_sep void clearLinks concode_elem_sep void setPosition concode_elem_sep void addBidirectionalLink concode_elem_sep void removeUnidirectionalLink concode_elem_sep Point2D getPosition concode_elem_sep void removeBidirectionalLink concode_elem_sep boolean isLocation concode_elem_sep List<String> getLocations concode_elem_sep void addUnidirectionalLink concode_elem_sep List<String> getLocationsLinkedTo concode_elem_sep void setDistAndDirToRefLocation", "code_tokens": ["String", "function", "(", ")", "{", "return", "Util", ".", "selectRandomlyFromList", "(", "getLocations", "(", ")", ")", ";", "}"], "nl_tokens": ["returns", "a", "location", "which", "is", "selected", "by", "random", ".", "concode_field_sep", "Hashtable", "<", "String", ",", "Point2D", ">", "locationPositions", "concode_elem_sep", "LabeledGraph", "<", "String", ",", "Double", ">", "links", "concode_field_sep", "Double", "getDistance", "concode_elem_sep", "void", "clear", "concode_elem_sep", "void", "clearLinks", "concode_elem_sep", "void", "setPosition", "concode_elem_sep", "void", "addBidirectionalLink", "concode_elem_sep", "void", "removeUnidirectionalLink", "concode_elem_sep", "Point2D", "getPosition", "concode_elem_sep", "void", "removeBidirectionalLink", "concode_elem_sep", "boolean", "isLocation", "concode_elem_sep", "List", "<", "String", ">", "getLocations", "concode_elem_sep", "void", "addUnidirectionalLink", "concode_elem_sep", "List", "<", "String", ">", "getLocationsLinkedTo", "concode_elem_sep", "void", "setDistAndDirToRefLocation"]}
{"code": "boolean function ( Collection < Assertion > arg0 , Collection < Assertion > arg1 ) { if ( null == arg1 || arg1 . isEmpty ( ) ) { return true ; } for ( Assertion loc0 : arg1 ) { if ( ! contains ( arg0 , loc0 ) ) { return false ; } } return true ; }", "nl": "determine if one collection of assertions contains another collection of assertion , using the equal method from the assertion interface . concode_field_sep org.apache.cxf.transport.Assertor obj concode_elem_sep String INDENT concode_field_sep Assertor createAsserter concode_elem_sep boolean isEmptyPolicyOperator concode_elem_sep void logPolicy concode_elem_sep boolean isEmptyPolicy concode_elem_sep void indent concode_elem_sep org.apache.cxf.transport.Assertor getWrappedAssertor concode_elem_sep boolean canAssert concode_elem_sep void nl concode_elem_sep void assertMessage concode_elem_sep void printPolicyComponent concode_elem_sep void printPolicyComponent concode_elem_sep String typeToString", "code_tokens": ["boolean", "function", "(", "Collection", "<", "Assertion", ">", "arg0", ",", "Collection", "<", "Assertion", ">", "arg1", ")", "{", "if", "(", "null", "==", "arg1", "|", "|", "arg1", ".", "isEmpty", "(", ")", ")", "{", "return", "true", ";", "}", "for", "(", "Assertion", "loc0", ":", "arg1", ")", "{", "if", "(", "!", "contains", "(", "arg0", ",", "loc0", ")", ")", "{", "return", "false", ";", "}", "}", "return", "true", ";", "}"], "nl_tokens": ["determine", "if", "one", "collection", "of", "assertions", "contains", "another", "collection", "of", "assertion", ",", "using", "the", "equal", "method", "from", "the", "assertion", "interface", ".", "concode_field_sep", "org", ".", "apache", ".", "cxf", ".", "transport", ".", "Assertor", "obj", "concode_elem_sep", "String", "INDENT", "concode_field_sep", "Assertor", "createAsserter", "concode_elem_sep", "boolean", "isEmptyPolicyOperator", "concode_elem_sep", "void", "logPolicy", "concode_elem_sep", "boolean", "isEmptyPolicy", "concode_elem_sep", "void", "indent", "concode_elem_sep", "org", ".", "apache", ".", "cxf", ".", "transport", ".", "Assertor", "getWrappedAssertor", "concode_elem_sep", "boolean", "canAssert", "concode_elem_sep", "void", "nl", "concode_elem_sep", "void", "assertMessage", "concode_elem_sep", "void", "printPolicyComponent", "concode_elem_sep", "void", "printPolicyComponent", "concode_elem_sep", "String", "typeToString"]}
{"code": "long function ( ) { return index ; }", "nl": "the index of the output in transaction to which we refer concode_field_sep ThreadLocal<Boolean> inTransaction concode_elem_sep TransactionalHashMap<StoredTransactionOutPoint,StoredTransactionOutput> transactionOutputMap concode_elem_sep TransactionalHashMap<UniqueKeyType,ValueType> mapValues concode_elem_sep boolean wasUndoable concode_elem_sep StoredBlock verifiedChainHead concode_elem_sep ThreadLocal<HashMap<KeyType,ValueType>> tempMap concode_elem_sep long index concode_elem_sep HashMap<MultiKeyType,Set<UniqueKeyType>> mapKeys concode_elem_sep StoredBlock chainHead concode_elem_sep TransactionalHashMap<Sha256Hash,StoredBlockAndWasUndoableFlag> blockMap concode_elem_sep ThreadLocal<HashSet<KeyType>> tempSetRemoved concode_elem_sep StoredBlock block concode_elem_sep TransactionalMultiKeyHashMap<Sha256Hash,Integer,StoredUndoableBlock> fullBlockMap concode_elem_sep long serialVersionUID concode_elem_sep HashMap<KeyType,ValueType> map concode_elem_sep Sha256Hash hash concode_elem_sep int fullStoreDepth concode_field_sep Sha256Hash getHash concode_elem_sep StoredTransactionOutput getTransactionOutput concode_elem_sep void removeUnspentTransactionOutput concode_elem_sep void put concode_elem_sep void put concode_elem_sep void put concode_elem_sep void put concode_elem_sep ValueType remove concode_elem_sep boolean hasUnspentOutputs concode_elem_sep void BeginTransaction concode_elem_sep StoredBlock getVerifiedChainHead concode_elem_sep void CommitTransaction concode_elem_sep int hashCode concode_elem_sep ValueType get concode_elem_sep ValueType get concode_elem_sep StoredBlock get concode_elem_sep void abortDatabaseBatchWrite concode_elem_sep void abortDatabaseBatchWrite concode_elem_sep ValueType removeByUniqueKey concode_elem_sep void addUnspentTransactionOutput concode_elem_sep void beginDatabaseBatchWrite concode_elem_sep void beginDatabaseBatchWrite concode_elem_sep void close concode_elem_sep void setVerifiedChainHead concode_elem_sep void commitDatabaseBatchWrite concode_elem_sep void commitDatabaseBatchWrite concode_elem_sep StoredUndoableBlock getUndoBlock concode_elem_sep StoredBlock getChainHead concode_elem_sep void setChainHead concode_elem_sep boolean equals concode_elem_sep String toString concode_elem_sep void AbortTransaction concode_elem_sep void removeByMultiKey concode_elem_sep StoredBlock getOnceUndoableStoredBlock", "code_tokens": ["long", "function", "(", ")", "{", "return", "index", ";", "}"], "nl_tokens": ["the", "index", "of", "the", "output", "in", "transaction", "to", "which", "we", "refer", "concode_field_sep", "ThreadLocal", "<", "Boolean", ">", "inTransaction", "concode_elem_sep", "TransactionalHashMap", "<", "StoredTransactionOutPoint", ",", "StoredTransactionOutput", ">", "transactionOutputMap", "concode_elem_sep", "TransactionalHashMap", "<", "UniqueKeyType", ",", "ValueType", ">", "mapValues", "concode_elem_sep", "boolean", "wasUndoable", "concode_elem_sep", "StoredBlock", "verifiedChainHead", "concode_elem_sep", "ThreadLocal", "<", "HashMap", "<", "KeyType", ",", "ValueType", ">>", "tempMap", "concode_elem_sep", "long", "index", "concode_elem_sep", "HashMap", "<", "MultiKeyType", ",", "Set", "<", "UniqueKeyType", ">>", "mapKeys", "concode_elem_sep", "StoredBlock", "chainHead", "concode_elem_sep", "TransactionalHashMap", "<", "Sha256Hash", ",", "StoredBlockAndWasUndoableFlag", ">", "blockMap", "concode_elem_sep", "ThreadLocal", "<", "HashSet", "<", "KeyType", ">>", "tempSetRemoved", "concode_elem_sep", "StoredBlock", "block", "concode_elem_sep", "TransactionalMultiKeyHashMap", "<", "Sha256Hash", ",", "Integer", ",", "StoredUndoableBlock", ">", "fullBlockMap", "concode_elem_sep", "long", "serialVersionUID", "concode_elem_sep", "HashMap", "<", "KeyType", ",", "ValueType", ">", "map", "concode_elem_sep", "Sha256Hash", "hash", "concode_elem_sep", "int", "fullStoreDepth", "concode_field_sep", "Sha256Hash", "getHash", "concode_elem_sep", "StoredTransactionOutput", "getTransactionOutput", "concode_elem_sep", "void", "removeUnspentTransactionOutput", "concode_elem_sep", "void", "put", "concode_elem_sep", "void", "put", "concode_elem_sep", "void", "put", "concode_elem_sep", "void", "put", "concode_elem_sep", "ValueType", "remove", "concode_elem_sep", "boolean", "hasUnspentOutputs", "concode_elem_sep", "void", "BeginTransaction", "concode_elem_sep", "StoredBlock", "getVerifiedChainHead", "concode_elem_sep", "void", "CommitTransaction", "concode_elem_sep", "int", "hashCode", "concode_elem_sep", "ValueType", "get", "concode_elem_sep", "ValueType", "get", "concode_elem_sep", "StoredBlock", "get", "concode_elem_sep", "void", "abortDatabaseBatchWrite", "concode_elem_sep", "void", "abortDatabaseBatchWrite", "concode_elem_sep", "ValueType", "removeByUniqueKey", "concode_elem_sep", "void", "addUnspentTransactionOutput", "concode_elem_sep", "void", "beginDatabaseBatchWrite", "concode_elem_sep", "void", "beginDatabaseBatchWrite", "concode_elem_sep", "void", "close", "concode_elem_sep", "void", "setVerifiedChainHead", "concode_elem_sep", "void", "commitDatabaseBatchWrite", "concode_elem_sep", "void", "commitDatabaseBatchWrite", "concode_elem_sep", "StoredUndoableBlock", "getUndoBlock", "concode_elem_sep", "StoredBlock", "getChainHead", "concode_elem_sep", "void", "setChainHead", "concode_elem_sep", "boolean", "equals", "concode_elem_sep", "String", "toString", "concode_elem_sep", "void", "AbortTransaction", "concode_elem_sep", "void", "removeByMultiKey", "concode_elem_sep", "StoredBlock", "getOnceUndoableStoredBlock"]}
{"code": "int function ( String arg0 ) { try { if ( arg0 . equals ( \"srini_string\" ) || arg0 . equals ( \"srini_string\" ) ) { return - 1 ; } else { return Integer . parseInt ( arg0 ) ; } } catch ( Exception loc0 ) { throw new IllegalArgumentException ( \"srini_string\" + arg0 ) ; } }", "nl": "convert a multiplicityrange bound string to an integer . concode_field_sep EUMLModelImplementation modelImpl concode_field_sep Object createMultiplicity concode_elem_sep Object createMultiplicity concode_elem_sep Object createMultiplicity concode_elem_sep String boundToString concode_elem_sep Object createArgListsExpression concode_elem_sep Object createProcedureExpression concode_elem_sep Object createTypeExpression concode_elem_sep Object createIterationExpression concode_elem_sep Object createObjectSetExpression concode_elem_sep Object createTimeExpression concode_elem_sep Object createMappingExpression concode_elem_sep Object createBooleanExpression concode_elem_sep Object createActionExpression concode_elem_sep OpaqueExpression createExpression concode_elem_sep Object createMultiplicityRange concode_elem_sep Object createMultiplicityRange", "code_tokens": ["int", "function", "(", "String", "arg0", ")", "{", "try", "{", "if", "(", "arg0", ".", "equals", "(", "\"srini_string\"", ")", "|", "|", "arg0", ".", "equals", "(", "\"srini_string\"", ")", ")", "{", "return", "-", "1", ";", "}", "else", "{", "return", "Integer", ".", "parseInt", "(", "arg0", ")", ";", "}", "}", "catch", "(", "Exception", "loc0", ")", "{", "throw", "new", "IllegalArgumentException", "(", "\"srini_string\"", "+", "arg0", ")", ";", "}", "}"], "nl_tokens": ["convert", "a", "multiplicityrange", "bound", "string", "to", "an", "integer", ".", "concode_field_sep", "EUMLModelImplementation", "modelImpl", "concode_field_sep", "Object", "createMultiplicity", "concode_elem_sep", "Object", "createMultiplicity", "concode_elem_sep", "Object", "createMultiplicity", "concode_elem_sep", "String", "boundToString", "concode_elem_sep", "Object", "createArgListsExpression", "concode_elem_sep", "Object", "createProcedureExpression", "concode_elem_sep", "Object", "createTypeExpression", "concode_elem_sep", "Object", "createIterationExpression", "concode_elem_sep", "Object", "createObjectSetExpression", "concode_elem_sep", "Object", "createTimeExpression", "concode_elem_sep", "Object", "createMappingExpression", "concode_elem_sep", "Object", "createBooleanExpression", "concode_elem_sep", "Object", "createActionExpression", "concode_elem_sep", "OpaqueExpression", "createExpression", "concode_elem_sep", "Object", "createMultiplicityRange", "concode_elem_sep", "Object", "createMultiplicityRange"]}
{"code": "MetadataEditorCompat function ( int arg0 , String arg1 ) { if ( HAS_REMOTE_CONTROL_APIS ) { ( ( RemoteControlClient . MetadataEditor ) mActualMetadataEditor ) . putString ( arg0 , arg1 ) ; } return this ; }", "nl": "adds textual information to be displayed . note that none of the information added after #apply has been called , will be displayed . concode_field_sep boolean HAS_REMOTE_CONTROL_APIS concode_elem_sep Object mActualMetadataEditor concode_elem_sep int METADATA_KEY_ARTWORK concode_elem_sep Object mActualRemoteControlClient concode_field_sep void setPlaybackState concode_elem_sep MetadataEditorCompat putBitmap concode_elem_sep void apply concode_elem_sep void removeFromMediaRouter concode_elem_sep void clear concode_elem_sep void addToMediaRouter concode_elem_sep Object getActualRemoteControlClientObject concode_elem_sep MetadataEditorCompat putLong concode_elem_sep MetadataEditorCompat editMetadata concode_elem_sep void setTransportControlFlags", "code_tokens": ["MetadataEditorCompat", "function", "(", "int", "arg0", ",", "String", "arg1", ")", "{", "if", "(", "HAS_REMOTE_CONTROL_APIS", ")", "{", "(", "(", "RemoteControlClient", ".", "MetadataEditor", ")", "mActualMetadataEditor", ")", ".", "putString", "(", "arg0", ",", "arg1", ")", ";", "}", "return", "this", ";", "}"], "nl_tokens": ["adds", "textual", "information", "to", "be", "displayed", ".", "note", "that", "none", "of", "the", "information", "added", "after", "#apply has been called , will be displayed . concode_field_sep boolean HAS_REMOTE_CONTROL_APIS concode_elem_sep Object mActualMetadataEditor concode_elem_sep int METADATA_KEY_ARTWORK concode_elem_sep Object mActualRemoteControlClient concode_field_sep void setPlaybackState concode_elem_sep MetadataEditorCompat putBitmap concode_elem_sep void apply concode_elem_sep void removeFromMediaRouter concode_elem_sep void clear concode_elem_sep void addToMediaRouter concode_elem_sep Object getActualRemoteControlClientObject concode_elem_sep MetadataEditorCompat putLong concode_elem_sep MetadataEditorCompat editMetadata concode_elem_sep void setTransportControlFlags"]}
{"code": "void function ( String arg0 , OperationSignature arg1 ) { if ( ! operations . containsKey ( arg1 ) ) { operations . put ( arg1 , new HashMap < String , OperationStats > ( ) ) ; } operations . get ( arg1 ) . put ( arg0 , new OperationStats ( arg0 ) ) ; }", "nl": "adds an operation to the class . concode_field_sep Map<FieldSignature,Set<String>> fields concode_elem_sep Map<String,ClassStats> nestedClasses concode_elem_sep Map<ClassMetricKey,Double> memo concode_elem_sep Map<OperationSignature,Map<String,OperationStats>> operations concode_field_sep double compute concode_elem_sep double compute concode_elem_sep void addField concode_elem_sep ClassStats getNestedClassStats concode_elem_sep boolean hasMatchingSig concode_elem_sep boolean hasMatchingSig", "code_tokens": ["void", "function", "(", "String", "arg0", ",", "OperationSignature", "arg1", ")", "{", "if", "(", "!", "operations", ".", "containsKey", "(", "arg1", ")", ")", "{", "operations", ".", "put", "(", "arg1", ",", "new", "HashMap", "<", "String", ",", "OperationStats", ">", "(", ")", ")", ";", "}", "operations", ".", "get", "(", "arg1", ")", ".", "put", "(", "arg0", ",", "new", "OperationStats", "(", "arg0", ")", ")", ";", "}"], "nl_tokens": ["adds", "an", "operation", "to", "the", "class", ".", "concode_field_sep", "Map", "<", "FieldSignature", ",", "Set", "<", "String", ">>", "fields", "concode_elem_sep", "Map", "<", "String", ",", "ClassStats", ">", "nestedClasses", "concode_elem_sep", "Map", "<", "ClassMetricKey", ",", "Double", ">", "memo", "concode_elem_sep", "Map", "<", "OperationSignature", ",", "Map", "<", "String", ",", "OperationStats", ">>", "operations", "concode_field_sep", "double", "compute", "concode_elem_sep", "double", "compute", "concode_elem_sep", "void", "addField", "concode_elem_sep", "ClassStats", "getNestedClassStats", "concode_elem_sep", "boolean", "hasMatchingSig", "concode_elem_sep", "boolean", "hasMatchingSig"]}
{"code": "String function ( ) { return reason ; }", "nl": "gets the reason . concode_field_sep String reason concode_elem_sep String feedId concode_elem_sep String testId concode_elem_sep String batchId concode_elem_sep String runStatus concode_field_sep void setFeedId concode_elem_sep boolean isFeedRunnable concode_elem_sep String getRunStatus concode_elem_sep void setReason concode_elem_sep String getBatchId concode_elem_sep String toString concode_elem_sep String getFeedId concode_elem_sep void setBatchId concode_elem_sep void setTestId concode_elem_sep String getTestId concode_elem_sep void setRunStatus", "code_tokens": ["String", "function", "(", ")", "{", "return", "reason", ";", "}"], "nl_tokens": ["gets", "the", "reason", ".", "concode_field_sep", "String", "reason", "concode_elem_sep", "String", "feedId", "concode_elem_sep", "String", "testId", "concode_elem_sep", "String", "batchId", "concode_elem_sep", "String", "runStatus", "concode_field_sep", "void", "setFeedId", "concode_elem_sep", "boolean", "isFeedRunnable", "concode_elem_sep", "String", "getRunStatus", "concode_elem_sep", "void", "setReason", "concode_elem_sep", "String", "getBatchId", "concode_elem_sep", "String", "toString", "concode_elem_sep", "String", "getFeedId", "concode_elem_sep", "void", "setBatchId", "concode_elem_sep", "void", "setTestId", "concode_elem_sep", "String", "getTestId", "concode_elem_sep", "void", "setRunStatus"]}
{"code": "Node function ( ) { return node ; }", "nl": "retrieves the underlying node concode_field_sep Node node concode_elem_sep SimpleNodeTreeNodeAdapter parent concode_elem_sep List<TreeNode> children concode_field_sep int getChildCount concode_elem_sep void checkChildren concode_elem_sep TreeNode getChildAt concode_elem_sep TreeNode getParent concode_elem_sep int getIndex concode_elem_sep Enumeration<TreeNode> children concode_elem_sep boolean getAllowsChildren concode_elem_sep String toString concode_elem_sep boolean isLeaf", "code_tokens": ["Node", "function", "(", ")", "{", "return", "node", ";", "}"], "nl_tokens": ["retrieves", "the", "underlying", "node", "concode_field_sep", "Node", "node", "concode_elem_sep", "SimpleNodeTreeNodeAdapter", "parent", "concode_elem_sep", "List", "<", "TreeNode", ">", "children", "concode_field_sep", "int", "getChildCount", "concode_elem_sep", "void", "checkChildren", "concode_elem_sep", "TreeNode", "getChildAt", "concode_elem_sep", "TreeNode", "getParent", "concode_elem_sep", "int", "getIndex", "concode_elem_sep", "Enumeration", "<", "TreeNode", ">", "children", "concode_elem_sep", "boolean", "getAllowsChildren", "concode_elem_sep", "String", "toString", "concode_elem_sep", "boolean", "isLeaf"]}
{"code": "String function ( Block arg0 , int arg1 ) { concurMgr . sLock ( arg0 ) ; Buffer loc0 = myBuffers . getBuffer ( arg0 ) ; return loc0 . getString ( arg1 ) ; }", "nl": "returns the string value stored at the specified offset of the specified block . the method first obtains an slock on the block , then it calls the buffer to retrieve the value . concode_field_sep RecoveryMgr recoveryMgr concode_elem_sep BufferList myBuffers concode_elem_sep ConcurrencyMgr concurMgr concode_elem_sep int END_OF_FILE concode_elem_sep int txnum concode_elem_sep int nextTxNum concode_field_sep void rollback concode_elem_sep int getInt concode_elem_sep void setString concode_elem_sep void recover concode_elem_sep void pin concode_elem_sep int size concode_elem_sep void commit concode_elem_sep void unpin concode_elem_sep int nextTxNumber concode_elem_sep Block append concode_elem_sep void setInt", "code_tokens": ["String", "function", "(", "Block", "arg0", ",", "int", "arg1", ")", "{", "concurMgr", ".", "sLock", "(", "arg0", ")", ";", "Buffer", "loc0", "=", "myBuffers", ".", "getBuffer", "(", "arg0", ")", ";", "return", "loc0", ".", "getString", "(", "arg1", ")", ";", "}"], "nl_tokens": ["returns", "the", "string", "value", "stored", "at", "the", "specified", "offset", "of", "the", "specified", "block", ".", "the", "method", "first", "obtains", "an", "slock", "on", "the", "block", ",", "then", "it", "calls", "the", "buffer", "to", "retrieve", "the", "value", ".", "concode_field_sep", "RecoveryMgr", "recoveryMgr", "concode_elem_sep", "BufferList", "myBuffers", "concode_elem_sep", "ConcurrencyMgr", "concurMgr", "concode_elem_sep", "int", "END_OF_FILE", "concode_elem_sep", "int", "txnum", "concode_elem_sep", "int", "nextTxNum", "concode_field_sep", "void", "rollback", "concode_elem_sep", "int", "getInt", "concode_elem_sep", "void", "setString", "concode_elem_sep", "void", "recover", "concode_elem_sep", "void", "pin", "concode_elem_sep", "int", "size", "concode_elem_sep", "void", "commit", "concode_elem_sep", "void", "unpin", "concode_elem_sep", "int", "nextTxNumber", "concode_elem_sep", "Block", "append", "concode_elem_sep", "void", "setInt"]}
{"code": "void function ( final ReadableByteChannel arg0 , final WritableByteChannel arg1 ) { final ByteBuffer loc0 = ByteBuffer . allocateDirect ( 16 * 1024 ) ; while ( arg0 . read ( loc0 ) != - 1 ) { loc0 . flip ( ) ; arg1 . write ( loc0 ) ; loc0 . compact ( ) ; } loc0 . flip ( ) ; while ( loc0 . hasRemaining ( ) ) { arg1 . write ( loc0 ) ; } }", "nl": "an efficient copy between two channels with a fixed-size buffer . concode_field_sep Method sCleanerCleanMethod concode_elem_sep Method sByteBufferCleanerMethod concode_elem_sep Logger LOG concode_field_sep boolean equalConstantByteArray concode_elem_sep ByteBuffer getIncreasingByteBuffer concode_elem_sep ByteBuffer getIncreasingByteBuffer concode_elem_sep void cleanDirectBuffer concode_elem_sep ByteBuffer sliceByteBuffer concode_elem_sep ByteBuffer sliceByteBuffer concode_elem_sep int byteToInt concode_elem_sep boolean equalIncreasingByteArray concode_elem_sep boolean equalIncreasingByteArray concode_elem_sep boolean equalIncreasingByteBuffer concode_elem_sep byte[] getIncreasingByteArray concode_elem_sep byte[] getIncreasingByteArray concode_elem_sep void writeBufferToFile concode_elem_sep List<ByteBuffer> cloneByteBufferList concode_elem_sep ByteBuffer cloneByteBuffer concode_elem_sep byte[] newByteArrayFromByteBuffer concode_elem_sep void putIntByteBuffer concode_elem_sep ByteBuffer generateNewByteBufferFromThriftRPCResults concode_elem_sep ByteBuffer getIncreasingIntBuffer concode_elem_sep ByteBuffer getIncreasingIntBuffer", "code_tokens": ["void", "function", "(", "final", "ReadableByteChannel", "arg0", ",", "final", "WritableByteChannel", "arg1", ")", "{", "final", "ByteBuffer", "loc0", "=", "ByteBuffer", ".", "allocateDirect", "(", "16", "*", "1024", ")", ";", "while", "(", "arg0", ".", "read", "(", "loc0", ")", "!=", "-", "1", ")", "{", "loc0", ".", "flip", "(", ")", ";", "arg1", ".", "write", "(", "loc0", ")", ";", "loc0", ".", "compact", "(", ")", ";", "}", "loc0", ".", "flip", "(", ")", ";", "while", "(", "loc0", ".", "hasRemaining", "(", ")", ")", "{", "arg1", ".", "write", "(", "loc0", ")", ";", "}", "}"], "nl_tokens": ["an", "efficient", "copy", "between", "two", "channels", "with", "a", "fixed", "-", "size", "buffer", ".", "concode_field_sep", "Method", "sCleanerCleanMethod", "concode_elem_sep", "Method", "sByteBufferCleanerMethod", "concode_elem_sep", "Logger", "LOG", "concode_field_sep", "boolean", "equalConstantByteArray", "concode_elem_sep", "ByteBuffer", "getIncreasingByteBuffer", "concode_elem_sep", "ByteBuffer", "getIncreasingByteBuffer", "concode_elem_sep", "void", "cleanDirectBuffer", "concode_elem_sep", "ByteBuffer", "sliceByteBuffer", "concode_elem_sep", "ByteBuffer", "sliceByteBuffer", "concode_elem_sep", "int", "byteToInt", "concode_elem_sep", "boolean", "equalIncreasingByteArray", "concode_elem_sep", "boolean", "equalIncreasingByteArray", "concode_elem_sep", "boolean", "equalIncreasingByteBuffer", "concode_elem_sep", "byte", "[", "]", "getIncreasingByteArray", "concode_elem_sep", "byte", "[", "]", "getIncreasingByteArray", "concode_elem_sep", "void", "writeBufferToFile", "concode_elem_sep", "List", "<", "ByteBuffer", ">", "cloneByteBufferList", "concode_elem_sep", "ByteBuffer", "cloneByteBuffer", "concode_elem_sep", "byte", "[", "]", "newByteArrayFromByteBuffer", "concode_elem_sep", "void", "putIntByteBuffer", "concode_elem_sep", "ByteBuffer", "generateNewByteBufferFromThriftRPCResults", "concode_elem_sep", "ByteBuffer", "getIncreasingIntBuffer", "concode_elem_sep", "ByteBuffer", "getIncreasingIntBuffer"]}
{"code": "void function ( Intent arg0 , int arg1 ) { activity . startActivityForResult ( arg0 , arg1 ) ; }", "nl": "start an activity . this method is defined to allow different methods of activity starting for newer versions of android and for compatibility library . concode_field_sep String DEFAULT_TITLE concode_elem_sep String DEFAULT_YES concode_elem_sep Activity activity concode_elem_sep Collection<String> DATA_MATRIX_TYPES concode_elem_sep String buttonYes concode_elem_sep String buttonNo concode_elem_sep String TAG concode_elem_sep Collection<String> QR_CODE_TYPES concode_elem_sep Collection<String> ONE_D_CODE_TYPES concode_elem_sep String title concode_elem_sep String message concode_elem_sep Collection<String> TARGET_ALL_KNOWN concode_elem_sep Collection<String> targetApplications concode_elem_sep Collection<String> PRODUCT_CODE_TYPES concode_elem_sep Collection<String> ALL_CODE_TYPES concode_elem_sep String BS_PACKAGE concode_elem_sep String DEFAULT_MESSAGE concode_elem_sep int REQUEST_CODE concode_elem_sep String DEFAULT_NO concode_elem_sep Collection<String> TARGET_BARCODE_SCANNER_ONLY concode_field_sep String getButtonYes concode_elem_sep void setButtonYes concode_elem_sep void setTitleByID concode_elem_sep String getButtonNo concode_elem_sep void setTitle concode_elem_sep String getMessage concode_elem_sep void setMessage concode_elem_sep Collection<String> list concode_elem_sep AlertDialog showDownloadDialog concode_elem_sep IntentResult parseActivityResult concode_elem_sep void setButtonNo concode_elem_sep String getTitle concode_elem_sep void setButtonNoByID concode_elem_sep void setTargetApplications concode_elem_sep AlertDialog initiateScan concode_elem_sep AlertDialog initiateScan concode_elem_sep void setButtonYesByID concode_elem_sep void shareText concode_elem_sep void setSingleTargetApplication concode_elem_sep Collection<String> getTargetApplications concode_elem_sep void setMessageByID concode_elem_sep String findTargetAppPackage", "code_tokens": ["void", "function", "(", "Intent", "arg0", ",", "int", "arg1", ")", "{", "activity", ".", "startActivityForResult", "(", "arg0", ",", "arg1", ")", ";", "}"], "nl_tokens": ["start", "an", "activity", ".", "this", "method", "is", "defined", "to", "allow", "different", "methods", "of", "activity", "starting", "for", "newer", "versions", "of", "android", "and", "for", "compatibility", "library", ".", "concode_field_sep", "String", "DEFAULT_TITLE", "concode_elem_sep", "String", "DEFAULT_YES", "concode_elem_sep", "Activity", "activity", "concode_elem_sep", "Collection", "<", "String", ">", "DATA_MATRIX_TYPES", "concode_elem_sep", "String", "buttonYes", "concode_elem_sep", "String", "buttonNo", "concode_elem_sep", "String", "TAG", "concode_elem_sep", "Collection", "<", "String", ">", "QR_CODE_TYPES", "concode_elem_sep", "Collection", "<", "String", ">", "ONE_D_CODE_TYPES", "concode_elem_sep", "String", "title", "concode_elem_sep", "String", "message", "concode_elem_sep", "Collection", "<", "String", ">", "TARGET_ALL_KNOWN", "concode_elem_sep", "Collection", "<", "String", ">", "targetApplications", "concode_elem_sep", "Collection", "<", "String", ">", "PRODUCT_CODE_TYPES", "concode_elem_sep", "Collection", "<", "String", ">", "ALL_CODE_TYPES", "concode_elem_sep", "String", "BS_PACKAGE", "concode_elem_sep", "String", "DEFAULT_MESSAGE", "concode_elem_sep", "int", "REQUEST_CODE", "concode_elem_sep", "String", "DEFAULT_NO", "concode_elem_sep", "Collection", "<", "String", ">", "TARGET_BARCODE_SCANNER_ONLY", "concode_field_sep", "String", "getButtonYes", "concode_elem_sep", "void", "setButtonYes", "concode_elem_sep", "void", "setTitleByID", "concode_elem_sep", "String", "getButtonNo", "concode_elem_sep", "void", "setTitle", "concode_elem_sep", "String", "getMessage", "concode_elem_sep", "void", "setMessage", "concode_elem_sep", "Collection", "<", "String", ">", "list", "concode_elem_sep", "AlertDialog", "showDownloadDialog", "concode_elem_sep", "IntentResult", "parseActivityResult", "concode_elem_sep", "void", "setButtonNo", "concode_elem_sep", "String", "getTitle", "concode_elem_sep", "void", "setButtonNoByID", "concode_elem_sep", "void", "setTargetApplications", "concode_elem_sep", "AlertDialog", "initiateScan", "concode_elem_sep", "AlertDialog", "initiateScan", "concode_elem_sep", "void", "setButtonYesByID", "concode_elem_sep", "void", "shareText", "concode_elem_sep", "void", "setSingleTargetApplication", "concode_elem_sep", "Collection", "<", "String", ">", "getTargetApplications", "concode_elem_sep", "void", "setMessageByID", "concode_elem_sep", "String", "findTargetAppPackage"]}
{"code": "void function ( ) { Sentence loc0 = factory . createParser ( HDGTest . EXAMPLE ) ; assertNull ( event ) ; instance . sentenceRead ( new SentenceEvent ( this , loc0 ) ) ; assertNotNull ( event ) ; assertEquals ( 123.4 , event . getHeading ( ) , 0.1 ) ; assertFalse ( event . isTrue ( ) ) ; }", "nl": "test method for net.sf.marineapi.provider.abstractprovider #sentenceread net.sf.marineapi.nmea.event.sentenceevent . concode_field_sep SentenceFactory factory concode_elem_sep HeadingProvider instance concode_elem_sep HeadingEvent event concode_field_sep void providerUpdate concode_elem_sep void testHDMSentenceRead concode_elem_sep void setUp concode_elem_sep void testHDTSentenceRead concode_elem_sep void tearDown", "code_tokens": ["void", "function", "(", ")", "{", "Sentence", "loc0", "=", "factory", ".", "createParser", "(", "HDGTest", ".", "EXAMPLE", ")", ";", "assertNull", "(", "event", ")", ";", "instance", ".", "sentenceRead", "(", "new", "SentenceEvent", "(", "this", ",", "loc0", ")", ")", ";", "assertNotNull", "(", "event", ")", ";", "assertEquals", "(", "123.4", ",", "event", ".", "getHeading", "(", ")", ",", "0.1", ")", ";", "assertFalse", "(", "event", ".", "isTrue", "(", ")", ")", ";", "}"], "nl_tokens": ["test", "method", "for", "net", ".", "sf", ".", "marineapi", ".", "provider", ".", "abstractprovider", "#sentenceread net.sf.marineapi.nmea.event.sentenceevent . concode_field_sep SentenceFactory factory concode_elem_sep HeadingProvider instance concode_elem_sep HeadingEvent event concode_field_sep void providerUpdate concode_elem_sep void testHDMSentenceRead concode_elem_sep void setUp concode_elem_sep void testHDTSentenceRead concode_elem_sep void tearDown"]}
{"code": "void function ( String arg0 ) { this . errorDescription = arg0 ; }", "nl": "sets the error description concode_field_sep String errorUri concode_elem_sep String errorDescription concode_elem_sep String state concode_elem_sep String error concode_field_sep String getError concode_elem_sep String getErrorDescription concode_elem_sep String getState concode_elem_sep void setError concode_elem_sep void setState concode_elem_sep String getErrorUri concode_elem_sep void setErrorUri", "code_tokens": ["void", "function", "(", "String", "arg0", ")", "{", "this", ".", "errorDescription", "=", "arg0", ";", "}"], "nl_tokens": ["sets", "the", "error", "description", "concode_field_sep", "String", "errorUri", "concode_elem_sep", "String", "errorDescription", "concode_elem_sep", "String", "state", "concode_elem_sep", "String", "error", "concode_field_sep", "String", "getError", "concode_elem_sep", "String", "getErrorDescription", "concode_elem_sep", "String", "getState", "concode_elem_sep", "void", "setError", "concode_elem_sep", "void", "setState", "concode_elem_sep", "String", "getErrorUri", "concode_elem_sep", "void", "setErrorUri"]}
{"code": "void function ( Class arg0 , Connection arg1 ) { closeConnection ( arg0 . getName ( ) , arg1 ) ; }", "nl": "frees database connection . concode_field_sep Log LOG concode_elem_sep Map<String,Integer> activeConnectionCount concode_elem_sep DataSource ds concode_field_sep DataSource getDataSource concode_elem_sep Long readLongFromResultSet concode_elem_sep void logMessage concode_elem_sep void disableForeignKeyCheck concode_elem_sep DataSource initDataSource concode_elem_sep Integer readIntegerFromResultSet concode_elem_sep void enableForeignKeyCheck concode_elem_sep void setDataSource concode_elem_sep Connection getDbConnection concode_elem_sep Connection getDbConnection concode_elem_sep void closeAll concode_elem_sep void closeAll concode_elem_sep void closeAll concode_elem_sep void closeAll concode_elem_sep Double readDoubleFromResultSet", "code_tokens": ["void", "function", "(", "Class", "arg0", ",", "Connection", "arg1", ")", "{", "closeConnection", "(", "arg0", ".", "getName", "(", ")", ",", "arg1", ")", ";", "}"], "nl_tokens": ["frees", "database", "connection", ".", "concode_field_sep", "Log", "LOG", "concode_elem_sep", "Map", "<", "String", ",", "Integer", ">", "activeConnectionCount", "concode_elem_sep", "DataSource", "ds", "concode_field_sep", "DataSource", "getDataSource", "concode_elem_sep", "Long", "readLongFromResultSet", "concode_elem_sep", "void", "logMessage", "concode_elem_sep", "void", "disableForeignKeyCheck", "concode_elem_sep", "DataSource", "initDataSource", "concode_elem_sep", "Integer", "readIntegerFromResultSet", "concode_elem_sep", "void", "enableForeignKeyCheck", "concode_elem_sep", "void", "setDataSource", "concode_elem_sep", "Connection", "getDbConnection", "concode_elem_sep", "Connection", "getDbConnection", "concode_elem_sep", "void", "closeAll", "concode_elem_sep", "void", "closeAll", "concode_elem_sep", "void", "closeAll", "concode_elem_sep", "void", "closeAll", "concode_elem_sep", "Double", "readDoubleFromResultSet"]}
{"code": "void function ( long arg0 ) { this . geneB = arg0 ; }", "nl": "sets entrez gene id for gene b. concode_field_sep String interactionType concode_elem_sep String experimentTypes concode_elem_sep long geneB concode_elem_sep String pmids concode_elem_sep long geneA concode_elem_sep String source concode_field_sep void setSource concode_elem_sep String toSif concode_elem_sep void setExperimentTypes concode_elem_sep void setGeneA concode_elem_sep String getInteractionType concode_elem_sep long getGeneA concode_elem_sep long getGeneB concode_elem_sep void setPmids concode_elem_sep String getSource concode_elem_sep String toString concode_elem_sep void setInteractionType concode_elem_sep String getExperimentTypes concode_elem_sep String getPmids", "code_tokens": ["void", "function", "(", "long", "arg0", ")", "{", "this", ".", "geneB", "=", "arg0", ";", "}"], "nl_tokens": ["sets", "entrez", "gene", "id", "for", "gene", "b", ".", "concode_field_sep", "String", "interactionType", "concode_elem_sep", "String", "experimentTypes", "concode_elem_sep", "long", "geneB", "concode_elem_sep", "String", "pmids", "concode_elem_sep", "long", "geneA", "concode_elem_sep", "String", "source", "concode_field_sep", "void", "setSource", "concode_elem_sep", "String", "toSif", "concode_elem_sep", "void", "setExperimentTypes", "concode_elem_sep", "void", "setGeneA", "concode_elem_sep", "String", "getInteractionType", "concode_elem_sep", "long", "getGeneA", "concode_elem_sep", "long", "getGeneB", "concode_elem_sep", "void", "setPmids", "concode_elem_sep", "String", "getSource", "concode_elem_sep", "String", "toString", "concode_elem_sep", "void", "setInteractionType", "concode_elem_sep", "String", "getExperimentTypes", "concode_elem_sep", "String", "getPmids"]}
{"code": "void function ( ) { Sentence loc0 = instance . createParser ( BODTest . EXAMPLE ) ; assertNotNull ( loc0 ) ; assertTrue ( loc0 instanceof Sentence ) ; assertTrue ( loc0 instanceof BODSentence ) ; assertTrue ( loc0 instanceof BODParser ) ; assertEquals ( BODTest . EXAMPLE , loc0 . toSentence ( ) ) ; }", "nl": "test method for net.sf.marineapi.nmea.parser.sentencefactory #createparser java.lang.string . concode_field_sep SentenceFactory instance concode_field_sep void testRegisterInvalidParser concode_elem_sep void testHasParser concode_elem_sep void testUnregisterParser concode_elem_sep void testListParsers concode_elem_sep void testCreateParserWithNull concode_elem_sep void testCreateEmptyParserWithSentenceIdStr concode_elem_sep void testCreateEmptyCustomParser concode_elem_sep void testCreateParserWithUnregistered concode_elem_sep void testCreateEmptyParserWithSentenceId concode_elem_sep void testCreateCustomParser concode_elem_sep void testRegisterParserWithAlternativeBeginChar concode_elem_sep void testSupportedTypesRegistered concode_elem_sep void testCreateParserWithRandom concode_elem_sep void setUp concode_elem_sep void testGetInstance concode_elem_sep void testCreateParserWithEmptyString", "code_tokens": ["void", "function", "(", ")", "{", "Sentence", "loc0", "=", "instance", ".", "createParser", "(", "BODTest", ".", "EXAMPLE", ")", ";", "assertNotNull", "(", "loc0", ")", ";", "assertTrue", "(", "loc0", "instanceof", "Sentence", ")", ";", "assertTrue", "(", "loc0", "instanceof", "BODSentence", ")", ";", "assertTrue", "(", "loc0", "instanceof", "BODParser", ")", ";", "assertEquals", "(", "BODTest", ".", "EXAMPLE", ",", "loc0", ".", "toSentence", "(", ")", ")", ";", "}"], "nl_tokens": ["test", "method", "for", "net", ".", "sf", ".", "marineapi", ".", "nmea", ".", "parser", ".", "sentencefactory", "#createparser java.lang.string . concode_field_sep SentenceFactory instance concode_field_sep void testRegisterInvalidParser concode_elem_sep void testHasParser concode_elem_sep void testUnregisterParser concode_elem_sep void testListParsers concode_elem_sep void testCreateParserWithNull concode_elem_sep void testCreateEmptyParserWithSentenceIdStr concode_elem_sep void testCreateEmptyCustomParser concode_elem_sep void testCreateParserWithUnregistered concode_elem_sep void testCreateEmptyParserWithSentenceId concode_elem_sep void testCreateCustomParser concode_elem_sep void testRegisterParserWithAlternativeBeginChar concode_elem_sep void testSupportedTypesRegistered concode_elem_sep void testCreateParserWithRandom concode_elem_sep void setUp concode_elem_sep void testGetInstance concode_elem_sep void testCreateParserWithEmptyString"]}
{"code": "void function ( String arg0 , int arg1 ) { connect ( InetAddress . getByName ( arg0 ) , arg1 ) ; }", "nl": "establishes a connection to the given server . starts the sender thread . concode_field_sep org.slf4j.Logger logger concode_elem_sep UDPEndPoint clientEndpoint concode_elem_sep ClientSession clientSession concode_field_sep void sendBlocking concode_elem_sep int read concode_elem_sep void flush concode_elem_sep UDTStatistics getStatistics concode_elem_sep Socket getSocket concode_elem_sep OutputStream getOutputStream concode_elem_sep UDPEndPoint getEndpoint concode_elem_sep void send concode_elem_sep InputStream getInputStream concode_elem_sep void shutdown", "code_tokens": ["void", "function", "(", "String", "arg0", ",", "int", "arg1", ")", "{", "connect", "(", "InetAddress", ".", "getByName", "(", "arg0", ")", ",", "arg1", ")", ";", "}"], "nl_tokens": ["establishes", "a", "connection", "to", "the", "given", "server", ".", "starts", "the", "sender", "thread", ".", "concode_field_sep", "org", ".", "slf4j", ".", "Logger", "logger", "concode_elem_sep", "UDPEndPoint", "clientEndpoint", "concode_elem_sep", "ClientSession", "clientSession", "concode_field_sep", "void", "sendBlocking", "concode_elem_sep", "int", "read", "concode_elem_sep", "void", "flush", "concode_elem_sep", "UDTStatistics", "getStatistics", "concode_elem_sep", "Socket", "getSocket", "concode_elem_sep", "OutputStream", "getOutputStream", "concode_elem_sep", "UDPEndPoint", "getEndpoint", "concode_elem_sep", "void", "send", "concode_elem_sep", "InputStream", "getInputStream", "concode_elem_sep", "void", "shutdown"]}
{"code": "void function ( IRtfListener arg0 ) { arg0 . processBinaryBytes ( data ) ; }", "nl": "pass the event to the listener . concode_field_sep byte[] data concode_field_sep ParserEventType getType concode_elem_sep String toString", "code_tokens": ["void", "function", "(", "IRtfListener", "arg0", ")", "{", "arg0", ".", "processBinaryBytes", "(", "data", ")", ";", "}"], "nl_tokens": ["pass", "the", "event", "to", "the", "listener", ".", "concode_field_sep", "byte", "[", "]", "data", "concode_field_sep", "ParserEventType", "getType", "concode_elem_sep", "String", "toString"]}
{"code": "void function ( double arg0 [ ] , double [ ] arg1 , int arg2 ) { for ( int loc0 = arg2 - 1 ; loc0 >= 0 ; loc0 -- ) { double loc1 = arg1 [ loc0 ] ; int loc2 = loc0 * arg2 + loc0 + 1 ; for ( int loc3 = loc0 + 1 ; loc3 < arg2 ; loc3 ++ ) { loc1 -= arg0 [ loc2 ++ ] * arg1 [ loc3 ] ; } arg1 [ loc0 ] = loc1 / arg0 [ loc0 * arg2 + loc0 ] ; } }", "nl": "this is a forward substitution solver for non-singular upper triangular matrices . b = u-1b where b is a vector , u is an n by n matrix . concode_field_sep PlaceHolder placeHolder concode_field_sep void solveL concode_elem_sep void solveL concode_elem_sep void invertLower concode_elem_sep void invertLower concode_elem_sep void solveTranL", "code_tokens": ["void", "function", "(", "double", "arg0", "[", "]", ",", "double", "[", "]", "arg1", ",", "int", "arg2", ")", "{", "for", "(", "int", "loc0", "=", "arg2", "-", "1", ";", "loc0", ">=", "0", ";", "loc0", "-", "-", ")", "{", "double", "loc1", "=", "arg1", "[", "loc0", "]", ";", "int", "loc2", "=", "loc0", "*", "arg2", "+", "loc0", "+", "1", ";", "for", "(", "int", "loc3", "=", "loc0", "+", "1", ";", "loc3", "<", "arg2", ";", "loc3", "+", "+", ")", "{", "loc1", "-=", "arg0", "[", "loc2", "+", "+", "]", "*", "arg1", "[", "loc3", "]", ";", "}", "arg1", "[", "loc0", "]", "=", "loc1", "/", "arg0", "[", "loc0", "*", "arg2", "+", "loc0", "]", ";", "}", "}"], "nl_tokens": ["this", "is", "a", "forward", "substitution", "solver", "for", "non", "-", "singular", "upper", "triangular", "matrices", ".", "b", "=", "u", "-", "1", "b", "where", "b", "is", "a", "vector", ",", "u", "is", "an", "n", "by", "n", "matrix", ".", "concode_field_sep", "PlaceHolder", "placeHolder", "concode_field_sep", "void", "solveL", "concode_elem_sep", "void", "solveL", "concode_elem_sep", "void", "invertLower", "concode_elem_sep", "void", "invertLower", "concode_elem_sep", "void", "solveTranL"]}
{"code": "Collection < Edge > function ( Node arg0 ) { return graph . getIncidentEdges ( arg0 ) ; }", "nl": "returns the collection of nodes in this network which are connected to edge . concode_field_sep Map<String,Node> nodesByIds concode_elem_sep Graph<Node,Edge> graph concode_field_sep Collection<Node> getNodes concode_elem_sep Node[] getNodes concode_elem_sep void addNode concode_elem_sep Collection findEdgeSet concode_elem_sep Node getNodeById concode_elem_sep Collection<Node> getNeighbors concode_elem_sep boolean removeEdge concode_elem_sep int countNodes concode_elem_sep int countNodes concode_elem_sep int getDegree concode_elem_sep Node getOpposite concode_elem_sep Collection<Edge> getEdges concode_elem_sep void addEdge concode_elem_sep int coundEdges concode_elem_sep boolean removeNode", "code_tokens": ["Collection", "<", "Edge", ">", "function", "(", "Node", "arg0", ")", "{", "return", "graph", ".", "getIncidentEdges", "(", "arg0", ")", ";", "}"], "nl_tokens": ["returns", "the", "collection", "of", "nodes", "in", "this", "network", "which", "are", "connected", "to", "edge", ".", "concode_field_sep", "Map", "<", "String", ",", "Node", ">", "nodesByIds", "concode_elem_sep", "Graph", "<", "Node", ",", "Edge", ">", "graph", "concode_field_sep", "Collection", "<", "Node", ">", "getNodes", "concode_elem_sep", "Node", "[", "]", "getNodes", "concode_elem_sep", "void", "addNode", "concode_elem_sep", "Collection", "findEdgeSet", "concode_elem_sep", "Node", "getNodeById", "concode_elem_sep", "Collection", "<", "Node", ">", "getNeighbors", "concode_elem_sep", "boolean", "removeEdge", "concode_elem_sep", "int", "countNodes", "concode_elem_sep", "int", "countNodes", "concode_elem_sep", "int", "getDegree", "concode_elem_sep", "Node", "getOpposite", "concode_elem_sep", "Collection", "<", "Edge", ">", "getEdges", "concode_elem_sep", "void", "addEdge", "concode_elem_sep", "int", "coundEdges", "concode_elem_sep", "boolean", "removeNode"]}
{"code": "ArrayList function ( ) { return parameters ; }", "nl": "gets all parameters . concode_field_sep long timeElapsed concode_elem_sep HttpServletRequest request concode_elem_sep ArrayList messages concode_elem_sep Date startTime concode_elem_sep Date stopTime concode_elem_sep ArrayList parameters concode_field_sep ArrayList getDebugMessages concode_elem_sep HttpServletRequest getRequest concode_elem_sep String getCompleteLog concode_elem_sep void startTimer concode_elem_sep void logMsg concode_elem_sep void logMsg concode_elem_sep void stopTimer concode_elem_sep long getTimeElapsed concode_elem_sep void addParameter concode_elem_sep void addParameter concode_elem_sep void addParameter", "code_tokens": ["ArrayList", "function", "(", ")", "{", "return", "parameters", ";", "}"], "nl_tokens": ["gets", "all", "parameters", ".", "concode_field_sep", "long", "timeElapsed", "concode_elem_sep", "HttpServletRequest", "request", "concode_elem_sep", "ArrayList", "messages", "concode_elem_sep", "Date", "startTime", "concode_elem_sep", "Date", "stopTime", "concode_elem_sep", "ArrayList", "parameters", "concode_field_sep", "ArrayList", "getDebugMessages", "concode_elem_sep", "HttpServletRequest", "getRequest", "concode_elem_sep", "String", "getCompleteLog", "concode_elem_sep", "void", "startTimer", "concode_elem_sep", "void", "logMsg", "concode_elem_sep", "void", "logMsg", "concode_elem_sep", "void", "stopTimer", "concode_elem_sep", "long", "getTimeElapsed", "concode_elem_sep", "void", "addParameter", "concode_elem_sep", "void", "addParameter", "concode_elem_sep", "void", "addParameter"]}
{"code": "Map < String , String > function ( final String arg0 , final String arg1 ) { final Map < String , String > loc0 = new HashMap < String , String > ( ) ; loc0 . put ( arg0 , arg1 ) ; return loc0 ; }", "nl": "generates the parameters map . this is the complete parameters for the common case where a header only has a single parameter . otherwise , calling methods can add additional parameters to the map . concode_field_sep int sequenceNumber concode_elem_sep Logger LOG concode_field_sep SipHeader createHeader concode_elem_sep String createBranchId concode_elem_sep SipHeader createExpires concode_elem_sep String createCallIdValue concode_elem_sep SipHeader createCSeq concode_elem_sep SipHeader createSupported concode_elem_sep String createCSeqValue concode_elem_sep SipHeader createFrom concode_elem_sep SipHeader createTo concode_elem_sep SipHeader createTo concode_elem_sep SipHeader createContentLength concode_elem_sep SipHeader createSentByVia concode_elem_sep SipHeader createMaxForwards concode_elem_sep SipHeader createContact concode_elem_sep SipHeader createCallId concode_elem_sep List<SipHeaderValue> createHeaderValues concode_elem_sep String createTagValue", "code_tokens": ["Map", "<", "String", ",", "String", ">", "function", "(", "final", "String", "arg0", ",", "final", "String", "arg1", ")", "{", "final", "Map", "<", "String", ",", "String", ">", "loc0", "=", "new", "HashMap", "<", "String", ",", "String", ">", "(", ")", ";", "loc0", ".", "put", "(", "arg0", ",", "arg1", ")", ";", "return", "loc0", ";", "}"], "nl_tokens": ["generates", "the", "parameters", "map", ".", "this", "is", "the", "complete", "parameters", "for", "the", "common", "case", "where", "a", "header", "only", "has", "a", "single", "parameter", ".", "otherwise", ",", "calling", "methods", "can", "add", "additional", "parameters", "to", "the", "map", ".", "concode_field_sep", "int", "sequenceNumber", "concode_elem_sep", "Logger", "LOG", "concode_field_sep", "SipHeader", "createHeader", "concode_elem_sep", "String", "createBranchId", "concode_elem_sep", "SipHeader", "createExpires", "concode_elem_sep", "String", "createCallIdValue", "concode_elem_sep", "SipHeader", "createCSeq", "concode_elem_sep", "SipHeader", "createSupported", "concode_elem_sep", "String", "createCSeqValue", "concode_elem_sep", "SipHeader", "createFrom", "concode_elem_sep", "SipHeader", "createTo", "concode_elem_sep", "SipHeader", "createTo", "concode_elem_sep", "SipHeader", "createContentLength", "concode_elem_sep", "SipHeader", "createSentByVia", "concode_elem_sep", "SipHeader", "createMaxForwards", "concode_elem_sep", "SipHeader", "createContact", "concode_elem_sep", "SipHeader", "createCallId", "concode_elem_sep", "List", "<", "SipHeaderValue", ">", "createHeaderValues", "concode_elem_sep", "String", "createTagValue"]}
{"code": "float function ( ) { return ( ( float ) setFoundFragments ) / ( ( float ) setFragmentsCount ) ; }", "nl": "returns the naive similarity score . concode_field_sep float score concode_elem_sep int mSetFragmentsCount concode_elem_sep int mSetFoundFragments concode_elem_sep NumberFormat f concode_elem_sep String documentName concode_elem_sep int setFragmentsCount concode_elem_sep int setFoundFragments concode_field_sep int getSetFragmentsCount concode_elem_sep float getNaiveScoreMSet concode_elem_sep int getMSetFragmentsCount concode_elem_sep int getMSetFoundFragments concode_elem_sep String toString concode_elem_sep int compareTo concode_elem_sep String getDocumentName concode_elem_sep float getScore concode_elem_sep int getSetFoundFragments", "code_tokens": ["float", "function", "(", ")", "{", "return", "(", "(", "float", ")", "setFoundFragments", ")", "/", "(", "(", "float", ")", "setFragmentsCount", ")", ";", "}"], "nl_tokens": ["returns", "the", "naive", "similarity", "score", ".", "concode_field_sep", "float", "score", "concode_elem_sep", "int", "mSetFragmentsCount", "concode_elem_sep", "int", "mSetFoundFragments", "concode_elem_sep", "NumberFormat", "f", "concode_elem_sep", "String", "documentName", "concode_elem_sep", "int", "setFragmentsCount", "concode_elem_sep", "int", "setFoundFragments", "concode_field_sep", "int", "getSetFragmentsCount", "concode_elem_sep", "float", "getNaiveScoreMSet", "concode_elem_sep", "int", "getMSetFragmentsCount", "concode_elem_sep", "int", "getMSetFoundFragments", "concode_elem_sep", "String", "toString", "concode_elem_sep", "int", "compareTo", "concode_elem_sep", "String", "getDocumentName", "concode_elem_sep", "float", "getScore", "concode_elem_sep", "int", "getSetFoundFragments"]}
{"code": "void function ( ) { SpaceXGUI . getInstance ( ) . appendToConsole ( TAG , \"srini_string\" ) ; cmd . landing ( ) . doFor ( 2000 ) ; }", "nl": "landing land the drone concode_field_sep GeneralMotorCon ourInstance concode_elem_sep int spin90Time concode_elem_sep String TAG concode_elem_sep int batLvl concode_elem_sep long threadTimer concode_elem_sep int spinSpeed concode_elem_sep CommandManager cmd concode_elem_sep int hoverTime concode_elem_sep int speed concode_elem_sep int spin90Speed concode_elem_sep ARDrone drone concode_elem_sep int spinTime concode_field_sep void spin90Left concode_elem_sep void spinRight concode_elem_sep void takeoff concode_elem_sep void forward concode_elem_sep void spinLeft concode_elem_sep void right concode_elem_sep void lowerAltitude concode_elem_sep void spin90Right concode_elem_sep void setDrone concode_elem_sep void left concode_elem_sep void backward concode_elem_sep GeneralMotorCon getInstance concode_elem_sep void setBatLvl concode_elem_sep void waitFor concode_elem_sep int getBatLvl concode_elem_sep void onStop concode_elem_sep void raiseAltitude", "code_tokens": ["void", "function", "(", ")", "{", "SpaceXGUI", ".", "getInstance", "(", ")", ".", "appendToConsole", "(", "TAG", ",", "\"srini_string\"", ")", ";", "cmd", ".", "landing", "(", ")", ".", "doFor", "(", "2000", ")", ";", "}"], "nl_tokens": ["landing", "land", "the", "drone", "concode_field_sep", "GeneralMotorCon", "ourInstance", "concode_elem_sep", "int", "spin90Time", "concode_elem_sep", "String", "TAG", "concode_elem_sep", "int", "batLvl", "concode_elem_sep", "long", "threadTimer", "concode_elem_sep", "int", "spinSpeed", "concode_elem_sep", "CommandManager", "cmd", "concode_elem_sep", "int", "hoverTime", "concode_elem_sep", "int", "speed", "concode_elem_sep", "int", "spin90Speed", "concode_elem_sep", "ARDrone", "drone", "concode_elem_sep", "int", "spinTime", "concode_field_sep", "void", "spin90Left", "concode_elem_sep", "void", "spinRight", "concode_elem_sep", "void", "takeoff", "concode_elem_sep", "void", "forward", "concode_elem_sep", "void", "spinLeft", "concode_elem_sep", "void", "right", "concode_elem_sep", "void", "lowerAltitude", "concode_elem_sep", "void", "spin90Right", "concode_elem_sep", "void", "setDrone", "concode_elem_sep", "void", "left", "concode_elem_sep", "void", "backward", "concode_elem_sep", "GeneralMotorCon", "getInstance", "concode_elem_sep", "void", "setBatLvl", "concode_elem_sep", "void", "waitFor", "concode_elem_sep", "int", "getBatLvl", "concode_elem_sep", "void", "onStop", "concode_elem_sep", "void", "raiseAltitude"]}
{"code": "void function ( IParserEvent arg0 ) { IParserEventHandler loc0 = new UprHandler ( handler ) ; loc0 . handleEvent ( arg0 ) ; handlerStack . push ( handler ) ; handler = loc0 ; }", "nl": "process a upr command : consume all of the rtf commands relating to this and emit events representing the unicode content . concode_field_sep IParserEventHandler handler concode_elem_sep IParserEvent GROUP_END concode_elem_sep IParserEvent GROUP_START concode_elem_sep IParserEvent DOCUMENT_START concode_elem_sep Deque<IParserEventHandler> handlerStack concode_elem_sep Map<Integer,String> m_fontEncodings concode_elem_sep Deque<ParserState> stack concode_elem_sep IParserEvent DOCUMENT_END concode_elem_sep ParserState state concode_elem_sep int skipBytes concode_field_sep void processCharacter concode_elem_sep void handleEvent concode_elem_sep void processDocumentEnd concode_elem_sep void processGroupEnd concode_elem_sep void processCommand concode_elem_sep void parse concode_elem_sep void processCharacterBytes concode_elem_sep void processString concode_elem_sep void processDocumentStart concode_elem_sep void processUnicodeAlternateSkipCount concode_elem_sep void handleCommand concode_elem_sep void processGroupStart concode_elem_sep void processFont concode_elem_sep void processEncoding concode_elem_sep void processUnicode concode_elem_sep String currentEncoding concode_elem_sep void processBinaryBytes concode_elem_sep void processFontCharset", "code_tokens": ["void", "function", "(", "IParserEvent", "arg0", ")", "{", "IParserEventHandler", "loc0", "=", "new", "UprHandler", "(", "handler", ")", ";", "loc0", ".", "handleEvent", "(", "arg0", ")", ";", "handlerStack", ".", "push", "(", "handler", ")", ";", "handler", "=", "loc0", ";", "}"], "nl_tokens": ["process", "a", "upr", "command", ":", "consume", "all", "of", "the", "rtf", "commands", "relating", "to", "this", "and", "emit", "events", "representing", "the", "unicode", "content", ".", "concode_field_sep", "IParserEventHandler", "handler", "concode_elem_sep", "IParserEvent", "GROUP_END", "concode_elem_sep", "IParserEvent", "GROUP_START", "concode_elem_sep", "IParserEvent", "DOCUMENT_START", "concode_elem_sep", "Deque", "<", "IParserEventHandler", ">", "handlerStack", "concode_elem_sep", "Map", "<", "Integer", ",", "String", ">", "m_fontEncodings", "concode_elem_sep", "Deque", "<", "ParserState", ">", "stack", "concode_elem_sep", "IParserEvent", "DOCUMENT_END", "concode_elem_sep", "ParserState", "state", "concode_elem_sep", "int", "skipBytes", "concode_field_sep", "void", "processCharacter", "concode_elem_sep", "void", "handleEvent", "concode_elem_sep", "void", "processDocumentEnd", "concode_elem_sep", "void", "processGroupEnd", "concode_elem_sep", "void", "processCommand", "concode_elem_sep", "void", "parse", "concode_elem_sep", "void", "processCharacterBytes", "concode_elem_sep", "void", "processString", "concode_elem_sep", "void", "processDocumentStart", "concode_elem_sep", "void", "processUnicodeAlternateSkipCount", "concode_elem_sep", "void", "handleCommand", "concode_elem_sep", "void", "processGroupStart", "concode_elem_sep", "void", "processFont", "concode_elem_sep", "void", "processEncoding", "concode_elem_sep", "void", "processUnicode", "concode_elem_sep", "String", "currentEncoding", "concode_elem_sep", "void", "processBinaryBytes", "concode_elem_sep", "void", "processFontCharset"]}
{"code": "boolean function ( final HttpParams arg0 ) { if ( arg0 == null ) { throw new IllegalArgumentException ( \"srini_string\" ) ; } return arg0 . getBooleanParameter ( INTEREST_OPS_QUEUEING , false ) ; }", "nl": "obtains the value of nioreactorpnames #interest_ops_queueing parameter.if not set , defaults to false . concode_field_sep PlaceHolder placeHolder concode_field_sep void setContentBufferSize concode_elem_sep void setSelectInterval concode_elem_sep void setGracePeriod concode_elem_sep int getContentBufferSize concode_elem_sep void setInterestOpsQueueing concode_elem_sep long getSelectInterval concode_elem_sep long getGracePeriod", "code_tokens": ["boolean", "function", "(", "final", "HttpParams", "arg0", ")", "{", "if", "(", "arg0", "==", "null", ")", "{", "throw", "new", "IllegalArgumentException", "(", "\"srini_string\"", ")", ";", "}", "return", "arg0", ".", "getBooleanParameter", "(", "INTEREST_OPS_QUEUEING", ",", "false", ")", ";", "}"], "nl_tokens": ["obtains", "the", "value", "of", "nioreactorpnames", "#interest_ops_queueing parameter.if not set , defaults to false . concode_field_sep PlaceHolder placeHolder concode_field_sep void setContentBufferSize concode_elem_sep void setSelectInterval concode_elem_sep void setGracePeriod concode_elem_sep int getContentBufferSize concode_elem_sep void setInterestOpsQueueing concode_elem_sep long getSelectInterval concode_elem_sep long getGracePeriod"]}
{"code": "AbstractAction function ( ) { return undoAction ; }", "nl": "get the action that can undo the last user interaction on this project . concode_field_sep ProjectActions theInstance concode_elem_sep ActionRemoveFromDiagram removeFromDiagram concode_elem_sep AbstractAction redoAction concode_elem_sep ActionUndo undoAction concode_field_sep void determineRemoveEnabled concode_elem_sep void targetSet concode_elem_sep void jumpToDiagramShowing concode_elem_sep AbstractAction getRedoAction concode_elem_sep void targetRemoved concode_elem_sep AbstractAction getRemoveFromDiagramAction concode_elem_sep void setTarget concode_elem_sep void propertyChange concode_elem_sep ProjectActions getInstance concode_elem_sep void targetAdded", "code_tokens": ["AbstractAction", "function", "(", ")", "{", "return", "undoAction", ";", "}"], "nl_tokens": ["get", "the", "action", "that", "can", "undo", "the", "last", "user", "interaction", "on", "this", "project", ".", "concode_field_sep", "ProjectActions", "theInstance", "concode_elem_sep", "ActionRemoveFromDiagram", "removeFromDiagram", "concode_elem_sep", "AbstractAction", "redoAction", "concode_elem_sep", "ActionUndo", "undoAction", "concode_field_sep", "void", "determineRemoveEnabled", "concode_elem_sep", "void", "targetSet", "concode_elem_sep", "void", "jumpToDiagramShowing", "concode_elem_sep", "AbstractAction", "getRedoAction", "concode_elem_sep", "void", "targetRemoved", "concode_elem_sep", "AbstractAction", "getRemoveFromDiagramAction", "concode_elem_sep", "void", "setTarget", "concode_elem_sep", "void", "propertyChange", "concode_elem_sep", "ProjectActions", "getInstance", "concode_elem_sep", "void", "targetAdded"]}
{"code": "Set < String > function ( ) { return atMeGroupList ; }", "nl": "get groups which i was mentioned concode_field_sep List<String> toAtUserList concode_elem_sep Set<String> atMeGroupList concode_elem_sep EaseAtMessageHelper instance concode_field_sep boolean isAtMeMsg concode_elem_sep void cleanToAtUserList concode_elem_sep boolean hasAtMeMsg concode_elem_sep boolean containsAtAll concode_elem_sep EaseAtMessageHelper get concode_elem_sep void addAtUser concode_elem_sep boolean containsAtUsername concode_elem_sep void parseMessages concode_elem_sep void removeAtMeGroup concode_elem_sep JSONArray atListToJsonArray concode_elem_sep List<String> getAtMessageUsernames", "code_tokens": ["Set", "<", "String", ">", "function", "(", ")", "{", "return", "atMeGroupList", ";", "}"], "nl_tokens": ["get", "groups", "which", "i", "was", "mentioned", "concode_field_sep", "List", "<", "String", ">", "toAtUserList", "concode_elem_sep", "Set", "<", "String", ">", "atMeGroupList", "concode_elem_sep", "EaseAtMessageHelper", "instance", "concode_field_sep", "boolean", "isAtMeMsg", "concode_elem_sep", "void", "cleanToAtUserList", "concode_elem_sep", "boolean", "hasAtMeMsg", "concode_elem_sep", "boolean", "containsAtAll", "concode_elem_sep", "EaseAtMessageHelper", "get", "concode_elem_sep", "void", "addAtUser", "concode_elem_sep", "boolean", "containsAtUsername", "concode_elem_sep", "void", "parseMessages", "concode_elem_sep", "void", "removeAtMeGroup", "concode_elem_sep", "JSONArray", "atListToJsonArray", "concode_elem_sep", "List", "<", "String", ">", "getAtMessageUsernames"]}
{"code": "int function ( ) { return ii . recordsOutput ( ) ; }", "nl": "estimates the number of output records in the index selection , which is the same as the number of search key values for the index . concode_field_sep Plan p concode_elem_sep IndexInfo ii concode_elem_sep Constant val concode_field_sep Schema schema concode_elem_sep int blocksAccessed concode_elem_sep int distinctValues concode_elem_sep Scan open", "code_tokens": ["int", "function", "(", ")", "{", "return", "ii", ".", "recordsOutput", "(", ")", ";", "}"], "nl_tokens": ["estimates", "the", "number", "of", "output", "records", "in", "the", "index", "selection", ",", "which", "is", "the", "same", "as", "the", "number", "of", "search", "key", "values", "for", "the", "index", ".", "concode_field_sep", "Plan", "p", "concode_elem_sep", "IndexInfo", "ii", "concode_elem_sep", "Constant", "val", "concode_field_sep", "Schema", "schema", "concode_elem_sep", "int", "blocksAccessed", "concode_elem_sep", "int", "distinctValues", "concode_elem_sep", "Scan", "open"]}
{"code": "DomainRestoreInfo function ( CSP arg0 ) { DomainRestoreInfo loc0 = new DomainRestoreInfo ( ) ; FIFOQueue < Variable > loc1 = new FIFOQueue < Variable > ( ) ; for ( Variable loc2 : arg0 . getVariables ( ) ) loc1 . add ( loc2 ) ; reduceDomains ( loc1 , arg0 , loc0 ) ; return loc0 . compactify ( ) ; }", "nl": "makes a csp consisting of binary constraints arc-consistent . concode_field_sep PlaceHolder placeHolder concode_field_sep boolean revise", "code_tokens": ["DomainRestoreInfo", "function", "(", "CSP", "arg0", ")", "{", "DomainRestoreInfo", "loc0", "=", "new", "DomainRestoreInfo", "(", ")", ";", "FIFOQueue", "<", "Variable", ">", "loc1", "=", "new", "FIFOQueue", "<", "Variable", ">", "(", ")", ";", "for", "(", "Variable", "loc2", ":", "arg0", ".", "getVariables", "(", ")", ")", "loc1", ".", "add", "(", "loc2", ")", ";", "reduceDomains", "(", "loc1", ",", "arg0", ",", "loc0", ")", ";", "return", "loc0", ".", "compactify", "(", ")", ";", "}"], "nl_tokens": ["makes", "a", "csp", "consisting", "of", "binary", "constraints", "arc", "-", "consistent", ".", "concode_field_sep", "PlaceHolder", "placeHolder", "concode_field_sep", "boolean", "revise"]}
{"code": "void function ( Long arg0 ) { this . expectedDataUnitId = arg0 ; }", "nl": "sets the expected data unit id . concode_field_sep Long expectedDataUnitId concode_elem_sep Long seqNo concode_elem_sep Long dataSetId concode_elem_sep Long dataUnitId concode_elem_sep String expectedValue concode_elem_sep String actualValue concode_elem_sep Long expectedDataSetId concode_elem_sep String errorCode concode_elem_sep Long testId concode_elem_sep String failedAttributeName concode_elem_sep String srcFileName concode_elem_sep String errorMsg concode_field_sep void setExpectedValue concode_elem_sep String getExpectedValue concode_elem_sep Long getExpectedDataSetId concode_elem_sep void setExpectedDataSetId concode_elem_sep void setActualValue concode_elem_sep Long getDataSetId concode_elem_sep void setSrcFileName concode_elem_sep Long getExpectedDataUnitId concode_elem_sep String getSrcFileName concode_elem_sep Long getSeqNo concode_elem_sep String getFailedAttributeName concode_elem_sep void setTestId concode_elem_sep void setFailedAttributeName concode_elem_sep Long getTestId concode_elem_sep void setErrorCode concode_elem_sep String getActualValue concode_elem_sep Long getDataUnitId concode_elem_sep void setSeqNo concode_elem_sep void setErrorMsg concode_elem_sep String getErrorCode concode_elem_sep void setDataUnitId concode_elem_sep void setDataSetId concode_elem_sep String toString concode_elem_sep String getErrorMsg", "code_tokens": ["void", "function", "(", "Long", "arg0", ")", "{", "this", ".", "expectedDataUnitId", "=", "arg0", ";", "}"], "nl_tokens": ["sets", "the", "expected", "data", "unit", "id", ".", "concode_field_sep", "Long", "expectedDataUnitId", "concode_elem_sep", "Long", "seqNo", "concode_elem_sep", "Long", "dataSetId", "concode_elem_sep", "Long", "dataUnitId", "concode_elem_sep", "String", "expectedValue", "concode_elem_sep", "String", "actualValue", "concode_elem_sep", "Long", "expectedDataSetId", "concode_elem_sep", "String", "errorCode", "concode_elem_sep", "Long", "testId", "concode_elem_sep", "String", "failedAttributeName", "concode_elem_sep", "String", "srcFileName", "concode_elem_sep", "String", "errorMsg", "concode_field_sep", "void", "setExpectedValue", "concode_elem_sep", "String", "getExpectedValue", "concode_elem_sep", "Long", "getExpectedDataSetId", "concode_elem_sep", "void", "setExpectedDataSetId", "concode_elem_sep", "void", "setActualValue", "concode_elem_sep", "Long", "getDataSetId", "concode_elem_sep", "void", "setSrcFileName", "concode_elem_sep", "Long", "getExpectedDataUnitId", "concode_elem_sep", "String", "getSrcFileName", "concode_elem_sep", "Long", "getSeqNo", "concode_elem_sep", "String", "getFailedAttributeName", "concode_elem_sep", "void", "setTestId", "concode_elem_sep", "void", "setFailedAttributeName", "concode_elem_sep", "Long", "getTestId", "concode_elem_sep", "void", "setErrorCode", "concode_elem_sep", "String", "getActualValue", "concode_elem_sep", "Long", "getDataUnitId", "concode_elem_sep", "void", "setSeqNo", "concode_elem_sep", "void", "setErrorMsg", "concode_elem_sep", "String", "getErrorCode", "concode_elem_sep", "void", "setDataUnitId", "concode_elem_sep", "void", "setDataSetId", "concode_elem_sep", "String", "toString", "concode_elem_sep", "String", "getErrorMsg"]}
{"code": "void function ( JavaMailSender arg0 ) { this . mailSender = arg0 ; }", "nl": "sets the mail sender . concode_field_sep Logger LOGGER concode_elem_sep JavaMailSender mailSender concode_elem_sep VelocityEngine velocityEngine concode_field_sep void sendEmail concode_elem_sep void sendEmail concode_elem_sep void setVelocityEngine", "code_tokens": ["void", "function", "(", "JavaMailSender", "arg0", ")", "{", "this", ".", "mailSender", "=", "arg0", ";", "}"], "nl_tokens": ["sets", "the", "mail", "sender", ".", "concode_field_sep", "Logger", "LOGGER", "concode_elem_sep", "JavaMailSender", "mailSender", "concode_elem_sep", "VelocityEngine", "velocityEngine", "concode_field_sep", "void", "sendEmail", "concode_elem_sep", "void", "sendEmail", "concode_elem_sep", "void", "setVelocityEngine"]}
{"code": "int function ( final MediaFormat arg0 ) { if ( mIsStarted ) throw new IllegalStateException ( \"srini_string\" ) ; final int loc0 = mMediaMuxer . addTrack ( arg0 ) ; if ( DEBUG ) Log . i ( TAG , \"srini_string\" + mEncoderCount + \"srini_string\" + loc0 + \"srini_string\" + arg0 ) ; return loc0 ; }", "nl": "assign encoder to muxer concode_field_sep String DIR_NAME concode_elem_sep String mOutputPath concode_elem_sep MediaMuxer mMediaMuxer concode_elem_sep int mStatredCount concode_elem_sep boolean DEBUG concode_elem_sep String TAG concode_elem_sep SimpleDateFormat mDateTimeFormat concode_elem_sep boolean mIsStarted concode_elem_sep int mEncoderCount concode_elem_sep MediaEncoder mAudioEncoder concode_elem_sep MediaEncoder mVideoEncoder concode_field_sep void prepare concode_elem_sep String getDateTimeString concode_elem_sep void stop concode_elem_sep void addEncoder concode_elem_sep void startRecording concode_elem_sep boolean start concode_elem_sep File getCaptureFile concode_elem_sep boolean isStarted concode_elem_sep String getOutputPath concode_elem_sep void stopRecording concode_elem_sep void writeSampleData", "code_tokens": ["int", "function", "(", "final", "MediaFormat", "arg0", ")", "{", "if", "(", "mIsStarted", ")", "throw", "new", "IllegalStateException", "(", "\"srini_string\"", ")", ";", "final", "int", "loc0", "=", "mMediaMuxer", ".", "addTrack", "(", "arg0", ")", ";", "if", "(", "DEBUG", ")", "Log", ".", "i", "(", "TAG", ",", "\"srini_string\"", "+", "mEncoderCount", "+", "\"srini_string\"", "+", "loc0", "+", "\"srini_string\"", "+", "arg0", ")", ";", "return", "loc0", ";", "}"], "nl_tokens": ["assign", "encoder", "to", "muxer", "concode_field_sep", "String", "DIR_NAME", "concode_elem_sep", "String", "mOutputPath", "concode_elem_sep", "MediaMuxer", "mMediaMuxer", "concode_elem_sep", "int", "mStatredCount", "concode_elem_sep", "boolean", "DEBUG", "concode_elem_sep", "String", "TAG", "concode_elem_sep", "SimpleDateFormat", "mDateTimeFormat", "concode_elem_sep", "boolean", "mIsStarted", "concode_elem_sep", "int", "mEncoderCount", "concode_elem_sep", "MediaEncoder", "mAudioEncoder", "concode_elem_sep", "MediaEncoder", "mVideoEncoder", "concode_field_sep", "void", "prepare", "concode_elem_sep", "String", "getDateTimeString", "concode_elem_sep", "void", "stop", "concode_elem_sep", "void", "addEncoder", "concode_elem_sep", "void", "startRecording", "concode_elem_sep", "boolean", "start", "concode_elem_sep", "File", "getCaptureFile", "concode_elem_sep", "boolean", "isStarted", "concode_elem_sep", "String", "getOutputPath", "concode_elem_sep", "void", "stopRecording", "concode_elem_sep", "void", "writeSampleData"]}
{"code": "String function ( String arg0 , String arg1 , String arg2 , String arg3 , String arg4 , String arg5 ) { return String . format ( \"srini_string\" % s + \"srini_string\" % s + \"srini_string\" % s % s , arg2 , arg3 , arg0 , arg1 , arg4 , arg5 ) ; }", "nl": "create auto-merge query . concode_field_sep String graphName concode_elem_sep String user concode_elem_sep Endpoint ep concode_field_sep String createSelectQuery concode_elem_sep String createCommonMergeQuery concode_elem_sep void setUpBeforeClass concode_elem_sep void testCommonMerge concode_elem_sep String createMergeWithQuery concode_elem_sep void setUp concode_elem_sep void testManualMerge concode_elem_sep void testAutoMerge concode_elem_sep void testCreatedGraph concode_elem_sep String createManualMergeQuery", "code_tokens": ["String", "function", "(", "String", "arg0", ",", "String", "arg1", ",", "String", "arg2", ",", "String", "arg3", ",", "String", "arg4", ",", "String", "arg5", ")", "{", "return", "String", ".", "format", "(", "\"srini_string\"", "%", "s", "+", "\"srini_string\"", "%", "s", "+", "\"srini_string\"", "%", "s", "%", "s", ",", "arg2", ",", "arg3", ",", "arg0", ",", "arg1", ",", "arg4", ",", "arg5", ")", ";", "}"], "nl_tokens": ["create", "auto", "-", "merge", "query", ".", "concode_field_sep", "String", "graphName", "concode_elem_sep", "String", "user", "concode_elem_sep", "Endpoint", "ep", "concode_field_sep", "String", "createSelectQuery", "concode_elem_sep", "String", "createCommonMergeQuery", "concode_elem_sep", "void", "setUpBeforeClass", "concode_elem_sep", "void", "testCommonMerge", "concode_elem_sep", "String", "createMergeWithQuery", "concode_elem_sep", "void", "setUp", "concode_elem_sep", "void", "testManualMerge", "concode_elem_sep", "void", "testAutoMerge", "concode_elem_sep", "void", "testCreatedGraph", "concode_elem_sep", "String", "createManualMergeQuery"]}
{"code": "byte [ ] function ( ) { return scriptBytes ; }", "nl": "the backing script bytes which can be turned into a script object . concode_field_sep int NONCOINBASE_HEIGHT concode_elem_sep long serialVersionUID concode_elem_sep long index concode_elem_sep BigInteger value concode_elem_sep byte[] scriptBytes concode_elem_sep Sha256Hash hash concode_elem_sep int height concode_field_sep BigInteger getValue concode_elem_sep int getHeight concode_elem_sep Sha256Hash getHash concode_elem_sep long getIndex concode_elem_sep int hashCode concode_elem_sep void serializeToStream concode_elem_sep boolean equals concode_elem_sep String toString", "code_tokens": ["byte", "[", "]", "function", "(", ")", "{", "return", "scriptBytes", ";", "}"], "nl_tokens": ["the", "backing", "script", "bytes", "which", "can", "be", "turned", "into", "a", "script", "object", ".", "concode_field_sep", "int", "NONCOINBASE_HEIGHT", "concode_elem_sep", "long", "serialVersionUID", "concode_elem_sep", "long", "index", "concode_elem_sep", "BigInteger", "value", "concode_elem_sep", "byte", "[", "]", "scriptBytes", "concode_elem_sep", "Sha256Hash", "hash", "concode_elem_sep", "int", "height", "concode_field_sep", "BigInteger", "getValue", "concode_elem_sep", "int", "getHeight", "concode_elem_sep", "Sha256Hash", "getHash", "concode_elem_sep", "long", "getIndex", "concode_elem_sep", "int", "hashCode", "concode_elem_sep", "void", "serializeToStream", "concode_elem_sep", "boolean", "equals", "concode_elem_sep", "String", "toString"]}
{"code": "void function ( ) { assertEquals ( 2 , time . getMinutes ( ) ) ; }", "nl": "test method for net.sf.marineapi.nmea.util.time #getminutes . concode_field_sep Time time concode_field_sep void testDateRoundTrip concode_elem_sep void testParseTimeWithOneDecimal concode_elem_sep void testSetNegativeMinutes concode_elem_sep void testFormatTimeWithOneDecimal concode_elem_sep void testSetMinutes concode_elem_sep void testParseTimeWithoutDecimals concode_elem_sep void testParseTimeWithDecimals concode_elem_sep void testSetInvalidSeconds concode_elem_sep void testSetNegativeHour concode_elem_sep void testToDate concode_elem_sep void testGetSeconds concode_elem_sep void testSetHour concode_elem_sep void testGetHour concode_elem_sep void testSetSeconds concode_elem_sep void testSetTime concode_elem_sep void testGetMilliseconds concode_elem_sep void testSetInvalidHour concode_elem_sep void testSetNegativeSeconds concode_elem_sep void setUp concode_elem_sep void testSetInvalidMinutes concode_elem_sep void testFormatTimeNoDecimals concode_elem_sep void testFormatTimeWithDecimals concode_elem_sep void testEquals", "code_tokens": ["void", "function", "(", ")", "{", "assertEquals", "(", "2", ",", "time", ".", "getMinutes", "(", ")", ")", ";", "}"], "nl_tokens": ["test", "method", "for", "net", ".", "sf", ".", "marineapi", ".", "nmea", ".", "util", ".", "time", "#getminutes . concode_field_sep Time time concode_field_sep void testDateRoundTrip concode_elem_sep void testParseTimeWithOneDecimal concode_elem_sep void testSetNegativeMinutes concode_elem_sep void testFormatTimeWithOneDecimal concode_elem_sep void testSetMinutes concode_elem_sep void testParseTimeWithoutDecimals concode_elem_sep void testParseTimeWithDecimals concode_elem_sep void testSetInvalidSeconds concode_elem_sep void testSetNegativeHour concode_elem_sep void testToDate concode_elem_sep void testGetSeconds concode_elem_sep void testSetHour concode_elem_sep void testGetHour concode_elem_sep void testSetSeconds concode_elem_sep void testSetTime concode_elem_sep void testGetMilliseconds concode_elem_sep void testSetInvalidHour concode_elem_sep void testSetNegativeSeconds concode_elem_sep void setUp concode_elem_sep void testSetInvalidMinutes concode_elem_sep void testFormatTimeNoDecimals concode_elem_sep void testFormatTimeWithDecimals concode_elem_sep void testEquals"]}
{"code": "BigDecimal function ( ) { return this . expDataSetId ; }", "nl": "gets the exp data set id . concode_field_sep BigDecimal expDataUnitId concode_elem_sep BigDecimal dataUnitId concode_elem_sep Timestamp createTimeStamp concode_elem_sep String actValue concode_elem_sep String errorCode concode_elem_sep String srcFileName concode_elem_sep String errorMsg concode_elem_sep String failedAttrib concode_elem_sep BigDecimal expDataSetId concode_elem_sep RegPCLTestResultEntity regPclTestResult concode_elem_sep BigDecimal dataSetId concode_elem_sep RegPCLTestResultDetailsEntityPK id concode_elem_sep long serialVersionUID concode_elem_sep String expValue concode_field_sep void updateCreateTimeStamp concode_elem_sep void setActValue concode_elem_sep BigDecimal getDataSetId concode_elem_sep RegPCLTestResultDetailsEntityPK getId concode_elem_sep void setSrcFileName concode_elem_sep RegPCLTestResultEntity getRegPclTestResult concode_elem_sep void setExpValue concode_elem_sep String getSrcFileName concode_elem_sep void setErrorCode concode_elem_sep BigDecimal getDataUnitId concode_elem_sep void setErrorMsg concode_elem_sep String getErrorCode concode_elem_sep void setDataUnitId concode_elem_sep void setId concode_elem_sep void setFailedAttrib concode_elem_sep String getErrorMsg concode_elem_sep String getActValue concode_elem_sep void setRegPclTestResult concode_elem_sep String getExpValue concode_elem_sep void setCreateTimeStamp concode_elem_sep BigDecimal getExpDataUnitId concode_elem_sep Timestamp getCreateTimeStamp concode_elem_sep String getFailedAttrib concode_elem_sep void setExpDataSetId concode_elem_sep void setDataSetId concode_elem_sep void setExpDataUnitId", "code_tokens": ["BigDecimal", "function", "(", ")", "{", "return", "this", ".", "expDataSetId", ";", "}"], "nl_tokens": ["gets", "the", "exp", "data", "set", "id", ".", "concode_field_sep", "BigDecimal", "expDataUnitId", "concode_elem_sep", "BigDecimal", "dataUnitId", "concode_elem_sep", "Timestamp", "createTimeStamp", "concode_elem_sep", "String", "actValue", "concode_elem_sep", "String", "errorCode", "concode_elem_sep", "String", "srcFileName", "concode_elem_sep", "String", "errorMsg", "concode_elem_sep", "String", "failedAttrib", "concode_elem_sep", "BigDecimal", "expDataSetId", "concode_elem_sep", "RegPCLTestResultEntity", "regPclTestResult", "concode_elem_sep", "BigDecimal", "dataSetId", "concode_elem_sep", "RegPCLTestResultDetailsEntityPK", "id", "concode_elem_sep", "long", "serialVersionUID", "concode_elem_sep", "String", "expValue", "concode_field_sep", "void", "updateCreateTimeStamp", "concode_elem_sep", "void", "setActValue", "concode_elem_sep", "BigDecimal", "getDataSetId", "concode_elem_sep", "RegPCLTestResultDetailsEntityPK", "getId", "concode_elem_sep", "void", "setSrcFileName", "concode_elem_sep", "RegPCLTestResultEntity", "getRegPclTestResult", "concode_elem_sep", "void", "setExpValue", "concode_elem_sep", "String", "getSrcFileName", "concode_elem_sep", "void", "setErrorCode", "concode_elem_sep", "BigDecimal", "getDataUnitId", "concode_elem_sep", "void", "setErrorMsg", "concode_elem_sep", "String", "getErrorCode", "concode_elem_sep", "void", "setDataUnitId", "concode_elem_sep", "void", "setId", "concode_elem_sep", "void", "setFailedAttrib", "concode_elem_sep", "String", "getErrorMsg", "concode_elem_sep", "String", "getActValue", "concode_elem_sep", "void", "setRegPclTestResult", "concode_elem_sep", "String", "getExpValue", "concode_elem_sep", "void", "setCreateTimeStamp", "concode_elem_sep", "BigDecimal", "getExpDataUnitId", "concode_elem_sep", "Timestamp", "getCreateTimeStamp", "concode_elem_sep", "String", "getFailedAttrib", "concode_elem_sep", "void", "setExpDataSetId", "concode_elem_sep", "void", "setDataSetId", "concode_elem_sep", "void", "setExpDataUnitId"]}
{"code": "boolean function ( Object arg0 ) { if ( this == arg0 ) { return true ; } if ( ! ( arg0 instanceof TtlBucket ) ) { return false ; } TtlBucket loc0 = ( TtlBucket ) arg0 ; return mTtlIntervalStartTimeMs == loc0 . mTtlIntervalStartTimeMs ; }", "nl": "compares to a specific object . concode_field_sep Set<InodeFile> mFiles concode_elem_sep long sTtlIntervalMs concode_elem_sep long mTtlIntervalStartTimeMs concode_field_sep void removeFile concode_elem_sep long getTtlIntervalMs concode_elem_sep int hashCode concode_elem_sep int compareTo concode_elem_sep Set<InodeFile> getFiles concode_elem_sep long getTtlIntervalStartTimeMs concode_elem_sep long getTtlIntervalEndTimeMs concode_elem_sep void addFile", "code_tokens": ["boolean", "function", "(", "Object", "arg0", ")", "{", "if", "(", "this", "==", "arg0", ")", "{", "return", "true", ";", "}", "if", "(", "!", "(", "arg0", "instanceof", "TtlBucket", ")", ")", "{", "return", "false", ";", "}", "TtlBucket", "loc0", "=", "(", "TtlBucket", ")", "arg0", ";", "return", "mTtlIntervalStartTimeMs", "==", "loc0", ".", "mTtlIntervalStartTimeMs", ";", "}"], "nl_tokens": ["compares", "to", "a", "specific", "object", ".", "concode_field_sep", "Set", "<", "InodeFile", ">", "mFiles", "concode_elem_sep", "long", "sTtlIntervalMs", "concode_elem_sep", "long", "mTtlIntervalStartTimeMs", "concode_field_sep", "void", "removeFile", "concode_elem_sep", "long", "getTtlIntervalMs", "concode_elem_sep", "int", "hashCode", "concode_elem_sep", "int", "compareTo", "concode_elem_sep", "Set", "<", "InodeFile", ">", "getFiles", "concode_elem_sep", "long", "getTtlIntervalStartTimeMs", "concode_elem_sep", "long", "getTtlIntervalEndTimeMs", "concode_elem_sep", "void", "addFile"]}
{"code": "Mode function ( Mode arg0 ) { return new Mode ( mOwnerBits . and ( arg0 . mOwnerBits . not ( ) ) , mGroupBits . and ( arg0 . mGroupBits . not ( ) ) , mOtherBits . and ( arg0 . mOtherBits . not ( ) ) ) ; }", "nl": "creates a new mode by applying the given umask mode to this mode . concode_field_sep Bits mOwnerBits concode_elem_sep Bits mGroupBits concode_elem_sep Bits[] SVALS concode_elem_sep Bits mOtherBits concode_elem_sep String mString concode_field_sep Bits extractOtherBits concode_elem_sep boolean tryParseInt concode_elem_sep boolean imply concode_elem_sep Bits or concode_elem_sep void set concode_elem_sep Bits extractOwnerBits concode_elem_sep void setOtherBits concode_elem_sep Bits getOtherBits concode_elem_sep Mode getDefault concode_elem_sep Mode createFullAccess concode_elem_sep Bits getGroupBits concode_elem_sep Bits extractGroupBits concode_elem_sep Bits getOwnerBits concode_elem_sep void setOwnerBits concode_elem_sep Bits not concode_elem_sep void fromShort concode_elem_sep Bits and concode_elem_sep int hashCode concode_elem_sep void setGroupBits concode_elem_sep boolean equals concode_elem_sep Mode getUMask concode_elem_sep String toString concode_elem_sep String toString concode_elem_sep short toShort concode_elem_sep Mode createNoAccess", "code_tokens": ["Mode", "function", "(", "Mode", "arg0", ")", "{", "return", "new", "Mode", "(", "mOwnerBits", ".", "and", "(", "arg0", ".", "mOwnerBits", ".", "not", "(", ")", ")", ",", "mGroupBits", ".", "and", "(", "arg0", ".", "mGroupBits", ".", "not", "(", ")", ")", ",", "mOtherBits", ".", "and", "(", "arg0", ".", "mOtherBits", ".", "not", "(", ")", ")", ")", ";", "}"], "nl_tokens": ["creates", "a", "new", "mode", "by", "applying", "the", "given", "umask", "mode", "to", "this", "mode", ".", "concode_field_sep", "Bits", "mOwnerBits", "concode_elem_sep", "Bits", "mGroupBits", "concode_elem_sep", "Bits", "[", "]", "SVALS", "concode_elem_sep", "Bits", "mOtherBits", "concode_elem_sep", "String", "mString", "concode_field_sep", "Bits", "extractOtherBits", "concode_elem_sep", "boolean", "tryParseInt", "concode_elem_sep", "boolean", "imply", "concode_elem_sep", "Bits", "or", "concode_elem_sep", "void", "set", "concode_elem_sep", "Bits", "extractOwnerBits", "concode_elem_sep", "void", "setOtherBits", "concode_elem_sep", "Bits", "getOtherBits", "concode_elem_sep", "Mode", "getDefault", "concode_elem_sep", "Mode", "createFullAccess", "concode_elem_sep", "Bits", "getGroupBits", "concode_elem_sep", "Bits", "extractGroupBits", "concode_elem_sep", "Bits", "getOwnerBits", "concode_elem_sep", "void", "setOwnerBits", "concode_elem_sep", "Bits", "not", "concode_elem_sep", "void", "fromShort", "concode_elem_sep", "Bits", "and", "concode_elem_sep", "int", "hashCode", "concode_elem_sep", "void", "setGroupBits", "concode_elem_sep", "boolean", "equals", "concode_elem_sep", "Mode", "getUMask", "concode_elem_sep", "String", "toString", "concode_elem_sep", "String", "toString", "concode_elem_sep", "short", "toShort", "concode_elem_sep", "Mode", "createNoAccess"]}
{"code": "void function ( ArrayList < String > arg0 , ArrayList < Integer > arg1 ) { ArrayList < Map . Entry < String , Int >> loc0 = new ArrayList < Map . Entry < String , Int >> ( _wordFrequency . entrySet ( ) ) ; Collections . sort ( loc0 , new ComparatorFrequency ( ) ) ; for ( Map . Entry < String , Int > loc1 : loc0 ) { arg0 . add ( loc1 . getKey ( ) ) ; arg1 . add ( loc1 . getValue ( ) . value ) ; } }", "nl": "stores words and their corresponding frequencies in parallel array lists parameters . the frequencies are sorted from low to high . concode_field_sep Comparator<Map.Entry<String,Int>> SORT_ALPHABETICALLY concode_elem_sep int _totalWords concode_elem_sep Set<String> _ignoreWords concode_elem_sep Comparator<Map.Entry<String,Int>> SORT_BY_FREQUENCY concode_elem_sep Map<String,Int> _wordFrequency concode_field_sep void countWords concode_elem_sep void countWords concode_elem_sep int getWordCount concode_elem_sep void ignore concode_elem_sep void ignore concode_elem_sep int[] getFrequencies concode_elem_sep int getEntryCount concode_elem_sep String[] getWords", "code_tokens": ["void", "function", "(", "ArrayList", "<", "String", ">", "arg0", ",", "ArrayList", "<", "Integer", ">", "arg1", ")", "{", "ArrayList", "<", "Map", ".", "Entry", "<", "String", ",", "Int", ">>", "loc0", "=", "new", "ArrayList", "<", "Map", ".", "Entry", "<", "String", ",", "Int", ">>", "(", "_wordFrequency", ".", "entrySet", "(", ")", ")", ";", "Collections", ".", "sort", "(", "loc0", ",", "new", "ComparatorFrequency", "(", ")", ")", ";", "for", "(", "Map", ".", "Entry", "<", "String", ",", "Int", ">", "loc1", ":", "loc0", ")", "{", "arg0", ".", "add", "(", "loc1", ".", "getKey", "(", ")", ")", ";", "arg1", ".", "add", "(", "loc1", ".", "getValue", "(", ")", ".", "value", ")", ";", "}", "}"], "nl_tokens": ["stores", "words", "and", "their", "corresponding", "frequencies", "in", "parallel", "array", "lists", "parameters", ".", "the", "frequencies", "are", "sorted", "from", "low", "to", "high", ".", "concode_field_sep", "Comparator", "<", "Map", ".", "Entry", "<", "String", ",", "Int", ">>", "SORT_ALPHABETICALLY", "concode_elem_sep", "int", "_totalWords", "concode_elem_sep", "Set", "<", "String", ">", "_ignoreWords", "concode_elem_sep", "Comparator", "<", "Map", ".", "Entry", "<", "String", ",", "Int", ">>", "SORT_BY_FREQUENCY", "concode_elem_sep", "Map", "<", "String", ",", "Int", ">", "_wordFrequency", "concode_field_sep", "void", "countWords", "concode_elem_sep", "void", "countWords", "concode_elem_sep", "int", "getWordCount", "concode_elem_sep", "void", "ignore", "concode_elem_sep", "void", "ignore", "concode_elem_sep", "int", "[", "]", "getFrequencies", "concode_elem_sep", "int", "getEntryCount", "concode_elem_sep", "String", "[", "]", "getWords"]}
{"code": "void function ( ) { System . out . println ( \"srini_string\" ) ; String loc0 = \"srini_string\" ; FileHandler loc1 = new FileHandler ( ) ; String loc2 = \"srini_string\" ; String loc3 = loc1 . readFromGameFile ( loc0 ) . getNodeName ( ) ; assertEquals ( loc2 , loc3 ) ; }", "nl": "test of readfromgamefile method , of class filehandler . concode_field_sep PlaceHolder placeHolder concode_field_sep void testReadFromEditorFileForInvalidInput concode_elem_sep void setUpClass concode_elem_sep void testReadFromEditorFile concode_elem_sep void setUp concode_elem_sep void tearDownClass concode_elem_sep void tearDown", "code_tokens": ["void", "function", "(", ")", "{", "System", ".", "out", ".", "println", "(", "\"srini_string\"", ")", ";", "String", "loc0", "=", "\"srini_string\"", ";", "FileHandler", "loc1", "=", "new", "FileHandler", "(", ")", ";", "String", "loc2", "=", "\"srini_string\"", ";", "String", "loc3", "=", "loc1", ".", "readFromGameFile", "(", "loc0", ")", ".", "getNodeName", "(", ")", ";", "assertEquals", "(", "loc2", ",", "loc3", ")", ";", "}"], "nl_tokens": ["test", "of", "readfromgamefile", "method", ",", "of", "class", "filehandler", ".", "concode_field_sep", "PlaceHolder", "placeHolder", "concode_field_sep", "void", "testReadFromEditorFileForInvalidInput", "concode_elem_sep", "void", "setUpClass", "concode_elem_sep", "void", "testReadFromEditorFile", "concode_elem_sep", "void", "setUp", "concode_elem_sep", "void", "tearDownClass", "concode_elem_sep", "void", "tearDown"]}
{"code": "void function ( final String [ ] arg0 ) { LOG . debug ( \"srini_string\" ) ; final TurnLauncher loc0 = new TurnLauncher ( ) ; LOG . debug ( \"srini_string\" ) ; try { loc0 . start ( ) ; LOG . debug ( \"srini_string\" ) ; } catch ( final Throwable loc1 ) { LOG . error ( \"srini_string\" , loc1 ) ; } }", "nl": "launches the sip and turn servers . concode_field_sep Logger LOG concode_elem_sep TurnServer m_turnServer concode_field_sep void stop concode_elem_sep void start", "code_tokens": ["void", "function", "(", "final", "String", "[", "]", "arg0", ")", "{", "LOG", ".", "debug", "(", "\"srini_string\"", ")", ";", "final", "TurnLauncher", "loc0", "=", "new", "TurnLauncher", "(", ")", ";", "LOG", ".", "debug", "(", "\"srini_string\"", ")", ";", "try", "{", "loc0", ".", "start", "(", ")", ";", "LOG", ".", "debug", "(", "\"srini_string\"", ")", ";", "}", "catch", "(", "final", "Throwable", "loc1", ")", "{", "LOG", ".", "error", "(", "\"srini_string\"", ",", "loc1", ")", ";", "}", "}"], "nl_tokens": ["launches", "the", "sip", "and", "turn", "servers", ".", "concode_field_sep", "Logger", "LOG", "concode_elem_sep", "TurnServer", "m_turnServer", "concode_field_sep", "void", "stop", "concode_elem_sep", "void", "start"]}
{"code": "void function ( int arg0 , String arg1 , Position arg2 ) { StringBuffer loc0 = new StringBuffer ( arg1 . length ( ) + arg0 ) ; for ( int loc1 = 1 ; loc1 < arg0 ; loc1 ++ ) { loc0 . append ( \"srini_string\" ) ; } loc0 . append ( arg1 ) ; getQueue ( ) . enqueue ( ErrorInfo . DEBUG , loc0 . toString ( ) , arg2 ) ; }", "nl": "this is the standard way to report debugging information in the compiler . it reports a message of the specified level which controls the presentation of the message . to test whether such message should be reported , use `` should_report '' . note : this is a change of spec from earlier versions of report . note : this version takes an explicit position , so that position info gets properly associated with the errorinfo that gets created by enqueue . concode_field_sep String types concode_elem_sep String verbose concode_elem_sep Map<String,Integer> reportTopics concode_elem_sep String dataflow concode_elem_sep Stack<String> should_report concode_elem_sep String frontend concode_elem_sep String imports concode_elem_sep ErrorQueue eq concode_elem_sep String loader concode_elem_sep String time concode_elem_sep String debug concode_elem_sep String cfg concode_elem_sep String context concode_elem_sep String visit concode_elem_sep String resolver concode_elem_sep Collection<String> topics concode_elem_sep String serialize concode_elem_sep boolean noReporting concode_elem_sep String errors concode_field_sep boolean should_report concode_elem_sep boolean should_report concode_elem_sep boolean should_report concode_elem_sep void setQueue concode_elem_sep int level concode_elem_sep void pushTopic concode_elem_sep void popTopic concode_elem_sep void addTopic concode_elem_sep ErrorQueue getQueue concode_elem_sep void setTopic", "code_tokens": ["void", "function", "(", "int", "arg0", ",", "String", "arg1", ",", "Position", "arg2", ")", "{", "StringBuffer", "loc0", "=", "new", "StringBuffer", "(", "arg1", ".", "length", "(", ")", "+", "arg0", ")", ";", "for", "(", "int", "loc1", "=", "1", ";", "loc1", "<", "arg0", ";", "loc1", "+", "+", ")", "{", "loc0", ".", "append", "(", "\"srini_string\"", ")", ";", "}", "loc0", ".", "append", "(", "arg1", ")", ";", "getQueue", "(", ")", ".", "enqueue", "(", "ErrorInfo", ".", "DEBUG", ",", "loc0", ".", "toString", "(", ")", ",", "arg2", ")", ";", "}"], "nl_tokens": ["this", "is", "the", "standard", "way", "to", "report", "debugging", "information", "in", "the", "compiler", ".", "it", "reports", "a", "message", "of", "the", "specified", "level", "which", "controls", "the", "presentation", "of", "the", "message", ".", "to", "test", "whether", "such", "message", "should", "be", "reported", ",", "use", "`", "`", "should_report", "''", ".", "note", ":", "this", "is", "a", "change", "of", "spec", "from", "earlier", "versions", "of", "report", ".", "note", ":", "this", "version", "takes", "an", "explicit", "position", ",", "so", "that", "position", "info", "gets", "properly", "associated", "with", "the", "errorinfo", "that", "gets", "created", "by", "enqueue", ".", "concode_field_sep", "String", "types", "concode_elem_sep", "String", "verbose", "concode_elem_sep", "Map", "<", "String", ",", "Integer", ">", "reportTopics", "concode_elem_sep", "String", "dataflow", "concode_elem_sep", "Stack", "<", "String", ">", "should_report", "concode_elem_sep", "String", "frontend", "concode_elem_sep", "String", "imports", "concode_elem_sep", "ErrorQueue", "eq", "concode_elem_sep", "String", "loader", "concode_elem_sep", "String", "time", "concode_elem_sep", "String", "debug", "concode_elem_sep", "String", "cfg", "concode_elem_sep", "String", "context", "concode_elem_sep", "String", "visit", "concode_elem_sep", "String", "resolver", "concode_elem_sep", "Collection", "<", "String", ">", "topics", "concode_elem_sep", "String", "serialize", "concode_elem_sep", "boolean", "noReporting", "concode_elem_sep", "String", "errors", "concode_field_sep", "boolean", "should_report", "concode_elem_sep", "boolean", "should_report", "concode_elem_sep", "boolean", "should_report", "concode_elem_sep", "void", "setQueue", "concode_elem_sep", "int", "level", "concode_elem_sep", "void", "pushTopic", "concode_elem_sep", "void", "popTopic", "concode_elem_sep", "void", "addTopic", "concode_elem_sep", "ErrorQueue", "getQueue", "concode_elem_sep", "void", "setTopic"]}
{"code": "String function ( List < T > arg0 ) { StringBuilder loc0 = new StringBuilder ( ) ; for ( T loc1 : arg0 ) { if ( loc0 . length ( ) != 0 ) { loc0 . append ( \"srini_string\" ) ; } loc0 . append ( loc1 ) ; } return loc0 . toString ( ) ; }", "nl": "converts a list of objects to a string . concode_field_sep String ALPHANUM concode_elem_sep Random RANDOM concode_elem_sep Logger LOG concode_field_sep T createNewClassInstance concode_elem_sep boolean isUfsObjectStorage concode_elem_sep String randomString concode_elem_sep String argsToString concode_elem_sep void sleepMs concode_elem_sep void sleepMs concode_elem_sep String stripPrefixIfPresent concode_elem_sep String[] toStringArray concode_elem_sep List<String> getUnixGroups concode_elem_sep long getCurrentMs concode_elem_sep String getPrimaryGroupName concode_elem_sep String stripSuffixIfPresent concode_elem_sep String getValueFromStaticMapping concode_elem_sep void warmUpLoop concode_elem_sep void waitFor concode_elem_sep List<String> getGroups concode_elem_sep byte[] randomBytes", "code_tokens": ["String", "function", "(", "List", "<", "T", ">", "arg0", ")", "{", "StringBuilder", "loc0", "=", "new", "StringBuilder", "(", ")", ";", "for", "(", "T", "loc1", ":", "arg0", ")", "{", "if", "(", "loc0", ".", "length", "(", ")", "!=", "0", ")", "{", "loc0", ".", "append", "(", "\"srini_string\"", ")", ";", "}", "loc0", ".", "append", "(", "loc1", ")", ";", "}", "return", "loc0", ".", "toString", "(", ")", ";", "}"], "nl_tokens": ["converts", "a", "list", "of", "objects", "to", "a", "string", ".", "concode_field_sep", "String", "ALPHANUM", "concode_elem_sep", "Random", "RANDOM", "concode_elem_sep", "Logger", "LOG", "concode_field_sep", "T", "createNewClassInstance", "concode_elem_sep", "boolean", "isUfsObjectStorage", "concode_elem_sep", "String", "randomString", "concode_elem_sep", "String", "argsToString", "concode_elem_sep", "void", "sleepMs", "concode_elem_sep", "void", "sleepMs", "concode_elem_sep", "String", "stripPrefixIfPresent", "concode_elem_sep", "String", "[", "]", "toStringArray", "concode_elem_sep", "List", "<", "String", ">", "getUnixGroups", "concode_elem_sep", "long", "getCurrentMs", "concode_elem_sep", "String", "getPrimaryGroupName", "concode_elem_sep", "String", "stripSuffixIfPresent", "concode_elem_sep", "String", "getValueFromStaticMapping", "concode_elem_sep", "void", "warmUpLoop", "concode_elem_sep", "void", "waitFor", "concode_elem_sep", "List", "<", "String", ">", "getGroups", "concode_elem_sep", "byte", "[", "]", "randomBytes"]}
{"code": "T function ( ) { return V ; }", "nl": "returns the orthogonal ` v ' matrix . concode_field_sep SingularValueDecomposition<DenseMatrix64F> svd concode_elem_sep DenseMatrix64F mat concode_elem_sep T U concode_elem_sep T V concode_elem_sep T W concode_field_sep T getW concode_elem_sep SingularValueDecomposition getSVD concode_elem_sep double getSingleValue concode_elem_sep int rank concode_elem_sep SimpleMatrix nullSpace concode_elem_sep int nullity concode_elem_sep T getU concode_elem_sep double quality", "code_tokens": ["T", "function", "(", ")", "{", "return", "V", ";", "}"], "nl_tokens": ["returns", "the", "orthogonal", "`", "v", "'", "matrix", ".", "concode_field_sep", "SingularValueDecomposition", "<", "DenseMatrix64F", ">", "svd", "concode_elem_sep", "DenseMatrix64F", "mat", "concode_elem_sep", "T", "U", "concode_elem_sep", "T", "V", "concode_elem_sep", "T", "W", "concode_field_sep", "T", "getW", "concode_elem_sep", "SingularValueDecomposition", "getSVD", "concode_elem_sep", "double", "getSingleValue", "concode_elem_sep", "int", "rank", "concode_elem_sep", "SimpleMatrix", "nullSpace", "concode_elem_sep", "int", "nullity", "concode_elem_sep", "T", "getU", "concode_elem_sep", "double", "quality"]}
{"code": "StoredBlock function ( Block arg0 ) { BigInteger loc0 = this . chainWork . add ( arg0 . getWork ( ) ) ; int loc1 = this . height + 1 ; return new StoredBlock ( arg0 , loc0 , loc1 ) ; }", "nl": "creates a new storedblock , calculating the additional fields by adding to the values in this block . concode_field_sep int COMPACT_SERIALIZED_SIZE concode_elem_sep BigInteger chainWork concode_elem_sep int CHAIN_WORK_BYTES concode_elem_sep Block header concode_elem_sep long serialVersionUID concode_elem_sep byte[] EMPTY_BYTES concode_elem_sep int height concode_field_sep int getHeight concode_elem_sep BigInteger getChainWork concode_elem_sep StoredBlock deserializeCompact concode_elem_sep void serializeCompact concode_elem_sep int hashCode concode_elem_sep boolean equals concode_elem_sep boolean moreWorkThan concode_elem_sep String toString concode_elem_sep StoredBlock getPrev concode_elem_sep Block getHeader", "code_tokens": ["StoredBlock", "function", "(", "Block", "arg0", ")", "{", "BigInteger", "loc0", "=", "this", ".", "chainWork", ".", "add", "(", "arg0", ".", "getWork", "(", ")", ")", ";", "int", "loc1", "=", "this", ".", "height", "+", "1", ";", "return", "new", "StoredBlock", "(", "arg0", ",", "loc0", ",", "loc1", ")", ";", "}"], "nl_tokens": ["creates", "a", "new", "storedblock", ",", "calculating", "the", "additional", "fields", "by", "adding", "to", "the", "values", "in", "this", "block", ".", "concode_field_sep", "int", "COMPACT_SERIALIZED_SIZE", "concode_elem_sep", "BigInteger", "chainWork", "concode_elem_sep", "int", "CHAIN_WORK_BYTES", "concode_elem_sep", "Block", "header", "concode_elem_sep", "long", "serialVersionUID", "concode_elem_sep", "byte", "[", "]", "EMPTY_BYTES", "concode_elem_sep", "int", "height", "concode_field_sep", "int", "getHeight", "concode_elem_sep", "BigInteger", "getChainWork", "concode_elem_sep", "StoredBlock", "deserializeCompact", "concode_elem_sep", "void", "serializeCompact", "concode_elem_sep", "int", "hashCode", "concode_elem_sep", "boolean", "equals", "concode_elem_sep", "boolean", "moreWorkThan", "concode_elem_sep", "String", "toString", "concode_elem_sep", "StoredBlock", "getPrev", "concode_elem_sep", "Block", "getHeader"]}
{"code": "int function ( ) { return _size ; }", "nl": "returns the current number of entries in the map . concode_field_sep Object DELETED concode_elem_sep int _size concode_elem_sep int[] _values concode_elem_sep int _mask concode_elem_sep int NULL concode_elem_sep Object[] _keys concode_field_sep int get concode_elem_sep void clear concode_elem_sep void resize concode_elem_sep String toString concode_elem_sep int put concode_elem_sep int remove", "code_tokens": ["int", "function", "(", ")", "{", "return", "_size", ";", "}"], "nl_tokens": ["returns", "the", "current", "number", "of", "entries", "in", "the", "map", ".", "concode_field_sep", "Object", "DELETED", "concode_elem_sep", "int", "_size", "concode_elem_sep", "int", "[", "]", "_values", "concode_elem_sep", "int", "_mask", "concode_elem_sep", "int", "NULL", "concode_elem_sep", "Object", "[", "]", "_keys", "concode_field_sep", "int", "get", "concode_elem_sep", "void", "clear", "concode_elem_sep", "void", "resize", "concode_elem_sep", "String", "toString", "concode_elem_sep", "int", "put", "concode_elem_sep", "int", "remove"]}
{"code": "void function ( BundleContext arg0 ) { for ( AutoSIMConnectionConfig loc0 : config . connections ) { environments . deregisterConnectionFactory ( loc0 . name ) ; factories . remove ( loc0 . name ) ; } }", "nl": "implements bundleactivator.stop . does nothing since the framework will automatically unregister any registered services . concode_field_sep IEnvironments environments concode_elem_sep HashMap<String,CoAPConnectionFactory> factories concode_elem_sep AutoSIMCoAPConfig config concode_field_sep void start", "code_tokens": ["void", "function", "(", "BundleContext", "arg0", ")", "{", "for", "(", "AutoSIMConnectionConfig", "loc0", ":", "config", ".", "connections", ")", "{", "environments", ".", "deregisterConnectionFactory", "(", "loc0", ".", "name", ")", ";", "factories", ".", "remove", "(", "loc0", ".", "name", ")", ";", "}", "}"], "nl_tokens": ["implements", "bundleactivator", ".", "stop", ".", "does", "nothing", "since", "the", "framework", "will", "automatically", "unregister", "any", "registered", "services", ".", "concode_field_sep", "IEnvironments", "environments", "concode_elem_sep", "HashMap", "<", "String", ",", "CoAPConnectionFactory", ">", "factories", "concode_elem_sep", "AutoSIMCoAPConfig", "config", "concode_field_sep", "void", "start"]}
{"code": "String function ( ) { return code ; }", "nl": "gets the authorization code concode_field_sep String redirectUri concode_elem_sep String code concode_elem_sep long serialVersionUID concode_field_sep void setRedirectUri concode_elem_sep String getType concode_elem_sep void setCode concode_elem_sep MultivaluedMap<String,String> toMap concode_elem_sep String getRedirectUri", "code_tokens": ["String", "function", "(", ")", "{", "return", "code", ";", "}"], "nl_tokens": ["gets", "the", "authorization", "code", "concode_field_sep", "String", "redirectUri", "concode_elem_sep", "String", "code", "concode_elem_sep", "long", "serialVersionUID", "concode_field_sep", "void", "setRedirectUri", "concode_elem_sep", "String", "getType", "concode_elem_sep", "void", "setCode", "concode_elem_sep", "MultivaluedMap", "<", "String", ",", "String", ">", "toMap", "concode_elem_sep", "String", "getRedirectUri"]}
{"code": "Builder function ( final String arg0 ) { this . objectType = arg0 ; return this ; }", "nl": "sets the type of the object for the likeview concode_field_sep Creator<LikeContent> CREATOR concode_elem_sep String objectId concode_elem_sep String objectType concode_field_sep Builder readFrom concode_elem_sep Builder readFrom concode_elem_sep LikeContent build concode_elem_sep String getObjectType concode_elem_sep LikeContent[] newArray concode_elem_sep LikeContent createFromParcel concode_elem_sep Builder setObjectId concode_elem_sep int describeContents concode_elem_sep void writeToParcel concode_elem_sep String getObjectId", "code_tokens": ["Builder", "function", "(", "final", "String", "arg0", ")", "{", "this", ".", "objectType", "=", "arg0", ";", "return", "this", ";", "}"], "nl_tokens": ["sets", "the", "type", "of", "the", "object", "for", "the", "likeview", "concode_field_sep", "Creator", "<", "LikeContent", ">", "CREATOR", "concode_elem_sep", "String", "objectId", "concode_elem_sep", "String", "objectType", "concode_field_sep", "Builder", "readFrom", "concode_elem_sep", "Builder", "readFrom", "concode_elem_sep", "LikeContent", "build", "concode_elem_sep", "String", "getObjectType", "concode_elem_sep", "LikeContent", "[", "]", "newArray", "concode_elem_sep", "LikeContent", "createFromParcel", "concode_elem_sep", "Builder", "setObjectId", "concode_elem_sep", "int", "describeContents", "concode_elem_sep", "void", "writeToParcel", "concode_elem_sep", "String", "getObjectId"]}
{"code": "void function ( long arg0 , Runnable arg1 ) { Future < Void > loc0 = async ( arg1 ) ; waitForMillis ( arg0 , loc0 ) ; }", "nl": "runs the given runnable on a new thread and waits for it long milliseconds to finish , otherwise times out with timeoutexception . concode_field_sep ExecutorService executorService concode_elem_sep long CONDITION_SLEEP_IN_MILLIS concode_elem_sep int SEMAPHORE_LOOPS_COUNT concode_elem_sep long SEMAPHORE_SLEEP_IN_MILLIS concode_field_sep boolean callConditionAndReturnResult concode_elem_sep void runOnFxThread concode_elem_sep void callCallableAndSetFuture concode_elem_sep void sleepWithException concode_elem_sep void waitForAsyncFx concode_elem_sep T waitForAsyncFx concode_elem_sep void sleep concode_elem_sep T waitForMillis concode_elem_sep Future<Void> async concode_elem_sep Future<T> async concode_elem_sep void runOnThread concode_elem_sep void waitForFxEvents concode_elem_sep void waitForFxEvents concode_elem_sep Future<Void> asyncFx concode_elem_sep Future<T> asyncFx concode_elem_sep void blockFxThreadWithSemaphore concode_elem_sep T waitFor concode_elem_sep T waitFor concode_elem_sep void waitFor concode_elem_sep void waitFor", "code_tokens": ["void", "function", "(", "long", "arg0", ",", "Runnable", "arg1", ")", "{", "Future", "<", "Void", ">", "loc0", "=", "async", "(", "arg1", ")", ";", "waitForMillis", "(", "arg0", ",", "loc0", ")", ";", "}"], "nl_tokens": ["runs", "the", "given", "runnable", "on", "a", "new", "thread", "and", "waits", "for", "it", "long", "milliseconds", "to", "finish", ",", "otherwise", "times", "out", "with", "timeoutexception", ".", "concode_field_sep", "ExecutorService", "executorService", "concode_elem_sep", "long", "CONDITION_SLEEP_IN_MILLIS", "concode_elem_sep", "int", "SEMAPHORE_LOOPS_COUNT", "concode_elem_sep", "long", "SEMAPHORE_SLEEP_IN_MILLIS", "concode_field_sep", "boolean", "callConditionAndReturnResult", "concode_elem_sep", "void", "runOnFxThread", "concode_elem_sep", "void", "callCallableAndSetFuture", "concode_elem_sep", "void", "sleepWithException", "concode_elem_sep", "void", "waitForAsyncFx", "concode_elem_sep", "T", "waitForAsyncFx", "concode_elem_sep", "void", "sleep", "concode_elem_sep", "T", "waitForMillis", "concode_elem_sep", "Future", "<", "Void", ">", "async", "concode_elem_sep", "Future", "<", "T", ">", "async", "concode_elem_sep", "void", "runOnThread", "concode_elem_sep", "void", "waitForFxEvents", "concode_elem_sep", "void", "waitForFxEvents", "concode_elem_sep", "Future", "<", "Void", ">", "asyncFx", "concode_elem_sep", "Future", "<", "T", ">", "asyncFx", "concode_elem_sep", "void", "blockFxThreadWithSemaphore", "concode_elem_sep", "T", "waitFor", "concode_elem_sep", "T", "waitFor", "concode_elem_sep", "void", "waitFor", "concode_elem_sep", "void", "waitFor"]}
{"code": "int function ( ) { TableInfo loc0 = new TableInfo ( \"srini_string\" , schema ( ) ) ; int loc1 = BLOCK_SIZE / loc0 . recordLength ( ) ; int loc2 = si . recordsOutput ( ) / loc1 ; return HashIndex . searchCost ( loc2 , loc1 ) ; }", "nl": "estimates the number of block accesses required to find all index records having a particular search key . the method uses the table 's metadata to estimate the size of the index file and the number of index records per block . it then passes this information to the traversalcost method of the appropriate index type , which provides the estimate . concode_field_sep String fldname concode_elem_sep Transaction tx concode_elem_sep TableInfo ti concode_elem_sep StatInfo si concode_elem_sep String idxname concode_field_sep Schema schema concode_elem_sep int distinctValues concode_elem_sep int recordsOutput concode_elem_sep Index open", "code_tokens": ["int", "function", "(", ")", "{", "TableInfo", "loc0", "=", "new", "TableInfo", "(", "\"srini_string\"", ",", "schema", "(", ")", ")", ";", "int", "loc1", "=", "BLOCK_SIZE", "/", "loc0", ".", "recordLength", "(", ")", ";", "int", "loc2", "=", "si", ".", "recordsOutput", "(", ")", "/", "loc1", ";", "return", "HashIndex", ".", "searchCost", "(", "loc2", ",", "loc1", ")", ";", "}"], "nl_tokens": ["estimates", "the", "number", "of", "block", "accesses", "required", "to", "find", "all", "index", "records", "having", "a", "particular", "search", "key", ".", "the", "method", "uses", "the", "table", "'", "s", "metadata", "to", "estimate", "the", "size", "of", "the", "index", "file", "and", "the", "number", "of", "index", "records", "per", "block", ".", "it", "then", "passes", "this", "information", "to", "the", "traversalcost", "method", "of", "the", "appropriate", "index", "type", ",", "which", "provides", "the", "estimate", ".", "concode_field_sep", "String", "fldname", "concode_elem_sep", "Transaction", "tx", "concode_elem_sep", "TableInfo", "ti", "concode_elem_sep", "StatInfo", "si", "concode_elem_sep", "String", "idxname", "concode_field_sep", "Schema", "schema", "concode_elem_sep", "int", "distinctValues", "concode_elem_sep", "int", "recordsOutput", "concode_elem_sep", "Index", "open"]}
{"code": "void function ( int arg0 ) { }", "nl": "undo the action done after the given step . for example , when the given step is 0 , nothing was done , so nothing can be undone ; and when the given step is 1 , undo the first action . undo allows users to work part way through fixing a problem , see the partial result , and explore a different alternative . concode_field_sep int step concode_elem_sep List<JPanel> panels concode_elem_sep boolean started concode_elem_sep boolean finished concode_elem_sep WizardItem item concode_field_sep void next concode_elem_sep void removePanel concode_elem_sep JPanel getCurrentPanel concode_elem_sep boolean canGoBack concode_elem_sep boolean canFinish concode_elem_sep int getStep concode_elem_sep JPanel makePanel concode_elem_sep void back concode_elem_sep int getNumSteps concode_elem_sep boolean isStarted concode_elem_sep void setToDoItem concode_elem_sep boolean isFinished concode_elem_sep int getProgress concode_elem_sep WizardItem getToDoItem concode_elem_sep boolean canGoNext concode_elem_sep void finish concode_elem_sep JPanel getPanel concode_elem_sep void doAction concode_elem_sep void doAction", "code_tokens": ["void", "function", "(", "int", "arg0", ")", "{", "}"], "nl_tokens": ["undo", "the", "action", "done", "after", "the", "given", "step", ".", "for", "example", ",", "when", "the", "given", "step", "is", "0", ",", "nothing", "was", "done", ",", "so", "nothing", "can", "be", "undone", ";", "and", "when", "the", "given", "step", "is", "1", ",", "undo", "the", "first", "action", ".", "undo", "allows", "users", "to", "work", "part", "way", "through", "fixing", "a", "problem", ",", "see", "the", "partial", "result", ",", "and", "explore", "a", "different", "alternative", ".", "concode_field_sep", "int", "step", "concode_elem_sep", "List", "<", "JPanel", ">", "panels", "concode_elem_sep", "boolean", "started", "concode_elem_sep", "boolean", "finished", "concode_elem_sep", "WizardItem", "item", "concode_field_sep", "void", "next", "concode_elem_sep", "void", "removePanel", "concode_elem_sep", "JPanel", "getCurrentPanel", "concode_elem_sep", "boolean", "canGoBack", "concode_elem_sep", "boolean", "canFinish", "concode_elem_sep", "int", "getStep", "concode_elem_sep", "JPanel", "makePanel", "concode_elem_sep", "void", "back", "concode_elem_sep", "int", "getNumSteps", "concode_elem_sep", "boolean", "isStarted", "concode_elem_sep", "void", "setToDoItem", "concode_elem_sep", "boolean", "isFinished", "concode_elem_sep", "int", "getProgress", "concode_elem_sep", "WizardItem", "getToDoItem", "concode_elem_sep", "boolean", "canGoNext", "concode_elem_sep", "void", "finish", "concode_elem_sep", "JPanel", "getPanel", "concode_elem_sep", "void", "doAction", "concode_elem_sep", "void", "doAction"]}
{"code": "String function ( String arg0 , Object ... arg1 ) { return String . format ( Locale . ROOT , arg0 , arg1 ) ; }", "nl": "format the template with args , only supports the placeholder % s . concode_field_sep PlaceHolder placeHolder concode_field_sep int listListIteratorTesterNumIterations concode_elem_sep int collectionIteratorTesterNumIterations", "code_tokens": ["String", "function", "(", "String", "arg0", ",", "Object", "...", "arg1", ")", "{", "return", "String", ".", "format", "(", "Locale", ".", "ROOT", ",", "arg0", ",", "arg1", ")", ";", "}"], "nl_tokens": ["format", "the", "template", "with", "args", ",", "only", "supports", "the", "placeholder", "%", "s", ".", "concode_field_sep", "PlaceHolder", "placeHolder", "concode_field_sep", "int", "listListIteratorTesterNumIterations", "concode_elem_sep", "int", "collectionIteratorTesterNumIterations"]}
{"code": "MetadataEditorCompat function ( boolean arg0 ) { Object loc0 ; if ( HAS_REMOTE_CONTROL_APIS ) { loc0 = ( ( RemoteControlClient ) mActualRemoteControlClient ) . editMetadata ( arg0 ) ; } else { loc0 = null ; } return new MetadataEditorCompat ( loc0 ) ; }", "nl": "creates a android.media.remotecontrolclient.metadataeditor . concode_field_sep boolean HAS_REMOTE_CONTROL_APIS concode_elem_sep Object mActualMetadataEditor concode_elem_sep int METADATA_KEY_ARTWORK concode_elem_sep Object mActualRemoteControlClient concode_field_sep void setPlaybackState concode_elem_sep MetadataEditorCompat putBitmap concode_elem_sep void apply concode_elem_sep void removeFromMediaRouter concode_elem_sep MetadataEditorCompat putString concode_elem_sep void clear concode_elem_sep void addToMediaRouter concode_elem_sep Object getActualRemoteControlClientObject concode_elem_sep MetadataEditorCompat putLong concode_elem_sep void setTransportControlFlags", "code_tokens": ["MetadataEditorCompat", "function", "(", "boolean", "arg0", ")", "{", "Object", "loc0", ";", "if", "(", "HAS_REMOTE_CONTROL_APIS", ")", "{", "loc0", "=", "(", "(", "RemoteControlClient", ")", "mActualRemoteControlClient", ")", ".", "editMetadata", "(", "arg0", ")", ";", "}", "else", "{", "loc0", "=", "null", ";", "}", "return", "new", "MetadataEditorCompat", "(", "loc0", ")", ";", "}"], "nl_tokens": ["creates", "a", "android", ".", "media", ".", "remotecontrolclient", ".", "metadataeditor", ".", "concode_field_sep", "boolean", "HAS_REMOTE_CONTROL_APIS", "concode_elem_sep", "Object", "mActualMetadataEditor", "concode_elem_sep", "int", "METADATA_KEY_ARTWORK", "concode_elem_sep", "Object", "mActualRemoteControlClient", "concode_field_sep", "void", "setPlaybackState", "concode_elem_sep", "MetadataEditorCompat", "putBitmap", "concode_elem_sep", "void", "apply", "concode_elem_sep", "void", "removeFromMediaRouter", "concode_elem_sep", "MetadataEditorCompat", "putString", "concode_elem_sep", "void", "clear", "concode_elem_sep", "void", "addToMediaRouter", "concode_elem_sep", "Object", "getActualRemoteControlClientObject", "concode_elem_sep", "MetadataEditorCompat", "putLong", "concode_elem_sep", "void", "setTransportControlFlags"]}
{"code": "void function ( ) { _use_count ++ ; }", "nl": "increment the use count . concode_field_sep String _stack_type concode_elem_sep String _name concode_elem_sep int _index concode_elem_sep int _use_count concode_field_sep int use_count concode_elem_sep String stack_type concode_elem_sep String name concode_elem_sep boolean is_non_term concode_elem_sep int index concode_elem_sep String toString", "code_tokens": ["void", "function", "(", ")", "{", "_use_count", "+", "+", ";", "}"], "nl_tokens": ["increment", "the", "use", "count", ".", "concode_field_sep", "String", "_stack_type", "concode_elem_sep", "String", "_name", "concode_elem_sep", "int", "_index", "concode_elem_sep", "int", "_use_count", "concode_field_sep", "int", "use_count", "concode_elem_sep", "String", "stack_type", "concode_elem_sep", "String", "name", "concode_elem_sep", "boolean", "is_non_term", "concode_elem_sep", "int", "index", "concode_elem_sep", "String", "toString"]}
{"code": "int function ( ) { return step * 100 / getNumSteps ( ) ; }", "nl": "an integer between 0 and 100 , shows percent done . the current argouml user interface shows different postit note icons for 0 , 1-25 , 26-50 . 51-75 , and 76-100 . concode_field_sep int step concode_elem_sep List<JPanel> panels concode_elem_sep boolean started concode_elem_sep boolean finished concode_elem_sep WizardItem item concode_field_sep void next concode_elem_sep void removePanel concode_elem_sep JPanel getCurrentPanel concode_elem_sep boolean canGoBack concode_elem_sep boolean canFinish concode_elem_sep int getStep concode_elem_sep JPanel makePanel concode_elem_sep void back concode_elem_sep int getNumSteps concode_elem_sep boolean isStarted concode_elem_sep void setToDoItem concode_elem_sep boolean isFinished concode_elem_sep void undoAction concode_elem_sep void undoAction concode_elem_sep WizardItem getToDoItem concode_elem_sep boolean canGoNext concode_elem_sep void finish concode_elem_sep JPanel getPanel concode_elem_sep void doAction concode_elem_sep void doAction", "code_tokens": ["int", "function", "(", ")", "{", "return", "step", "*", "100", "/", "getNumSteps", "(", ")", ";", "}"], "nl_tokens": ["an", "integer", "between", "0", "and", "100", ",", "shows", "percent", "done", ".", "the", "current", "argouml", "user", "interface", "shows", "different", "postit", "note", "icons", "for", "0", ",", "1", "-", "25", ",", "26", "-", "50", ".", "51", "-", "75", ",", "and", "76", "-", "100", ".", "concode_field_sep", "int", "step", "concode_elem_sep", "List", "<", "JPanel", ">", "panels", "concode_elem_sep", "boolean", "started", "concode_elem_sep", "boolean", "finished", "concode_elem_sep", "WizardItem", "item", "concode_field_sep", "void", "next", "concode_elem_sep", "void", "removePanel", "concode_elem_sep", "JPanel", "getCurrentPanel", "concode_elem_sep", "boolean", "canGoBack", "concode_elem_sep", "boolean", "canFinish", "concode_elem_sep", "int", "getStep", "concode_elem_sep", "JPanel", "makePanel", "concode_elem_sep", "void", "back", "concode_elem_sep", "int", "getNumSteps", "concode_elem_sep", "boolean", "isStarted", "concode_elem_sep", "void", "setToDoItem", "concode_elem_sep", "boolean", "isFinished", "concode_elem_sep", "void", "undoAction", "concode_elem_sep", "void", "undoAction", "concode_elem_sep", "WizardItem", "getToDoItem", "concode_elem_sep", "boolean", "canGoNext", "concode_elem_sep", "void", "finish", "concode_elem_sep", "JPanel", "getPanel", "concode_elem_sep", "void", "doAction", "concode_elem_sep", "void", "doAction"]}
{"code": "String function ( ) { return applicationDescription ; }", "nl": "gets the description of the third-party application . concode_field_sep String secretKey concode_elem_sep String applicationDescription concode_elem_sep AccessToken preAuthorizedToken concode_elem_sep String callbackURI concode_elem_sep String loginName concode_elem_sep String applicationURI concode_elem_sep String logoUri concode_elem_sep String consumerKey concode_elem_sep String applicationName concode_field_sep String getSecretKey concode_elem_sep String getApplicationName concode_elem_sep void setApplicationDescription concode_elem_sep void setApplicationName concode_elem_sep void setCallbackURI concode_elem_sep void setApplicationURI concode_elem_sep void setPreAuthorizedToken concode_elem_sep String getApplicationURI concode_elem_sep String getLoginName concode_elem_sep void setLoginName concode_elem_sep int hashCode concode_elem_sep void setLogoUri concode_elem_sep boolean equals concode_elem_sep String getCallbackURI concode_elem_sep String getConsumerKey concode_elem_sep AccessToken getPreAuthorizedToken concode_elem_sep String getLogoUri", "code_tokens": ["String", "function", "(", ")", "{", "return", "applicationDescription", ";", "}"], "nl_tokens": ["gets", "the", "description", "of", "the", "third", "-", "party", "application", ".", "concode_field_sep", "String", "secretKey", "concode_elem_sep", "String", "applicationDescription", "concode_elem_sep", "AccessToken", "preAuthorizedToken", "concode_elem_sep", "String", "callbackURI", "concode_elem_sep", "String", "loginName", "concode_elem_sep", "String", "applicationURI", "concode_elem_sep", "String", "logoUri", "concode_elem_sep", "String", "consumerKey", "concode_elem_sep", "String", "applicationName", "concode_field_sep", "String", "getSecretKey", "concode_elem_sep", "String", "getApplicationName", "concode_elem_sep", "void", "setApplicationDescription", "concode_elem_sep", "void", "setApplicationName", "concode_elem_sep", "void", "setCallbackURI", "concode_elem_sep", "void", "setApplicationURI", "concode_elem_sep", "void", "setPreAuthorizedToken", "concode_elem_sep", "String", "getApplicationURI", "concode_elem_sep", "String", "getLoginName", "concode_elem_sep", "void", "setLoginName", "concode_elem_sep", "int", "hashCode", "concode_elem_sep", "void", "setLogoUri", "concode_elem_sep", "boolean", "equals", "concode_elem_sep", "String", "getCallbackURI", "concode_elem_sep", "String", "getConsumerKey", "concode_elem_sep", "AccessToken", "getPreAuthorizedToken", "concode_elem_sep", "String", "getLogoUri"]}
{"code": "Options function ( ) { return new Options ( ) ; }", "nl": "gets the supported options of the command . concode_field_sep Option MOUNT_SHARED_OPTION concode_elem_sep FileSystem mFileSystem concode_elem_sep Option RECURSIVE_OPTION concode_elem_sep Option FORCE_OPTION concode_elem_sep Option PROPERTY_FILE_OPTION concode_elem_sep Option READONLY_OPTION concode_field_sep CommandLine parseAndValidateArgs concode_elem_sep int getNumOfArgs concode_elem_sep boolean validateArgs", "code_tokens": ["Options", "function", "(", ")", "{", "return", "new", "Options", "(", ")", ";", "}"], "nl_tokens": ["gets", "the", "supported", "options", "of", "the", "command", ".", "concode_field_sep", "Option", "MOUNT_SHARED_OPTION", "concode_elem_sep", "FileSystem", "mFileSystem", "concode_elem_sep", "Option", "RECURSIVE_OPTION", "concode_elem_sep", "Option", "FORCE_OPTION", "concode_elem_sep", "Option", "PROPERTY_FILE_OPTION", "concode_elem_sep", "Option", "READONLY_OPTION", "concode_field_sep", "CommandLine", "parseAndValidateArgs", "concode_elem_sep", "int", "getNumOfArgs", "concode_elem_sep", "boolean", "validateArgs"]}
{"code": "Long function ( ) { return batchId ; }", "nl": "gets the batch id . concode_field_sep Long totalElapsedMinutes concode_elem_sep List<TestResultDTO> testResultLst concode_elem_sep String startTime concode_elem_sep String endTime concode_elem_sep Long batchId concode_elem_sep String batchStatus concode_elem_sep Long totalElapsedSeconds concode_field_sep void setBatchStatus concode_elem_sep Long getTotalElapsedSeconds concode_elem_sep void setBatchId concode_elem_sep void setTotalElapsedMinutes concode_elem_sep void setTestResultLst concode_elem_sep String getEndTime concode_elem_sep Long getTotalElapsedMinutes concode_elem_sep void setEndTime concode_elem_sep void setTotalElapsedSeconds concode_elem_sep String toString concode_elem_sep String getStartTime concode_elem_sep void setStartTime concode_elem_sep List<TestResultDTO> getTestResultLst concode_elem_sep String getBatchStatus", "code_tokens": ["Long", "function", "(", ")", "{", "return", "batchId", ";", "}"], "nl_tokens": ["gets", "the", "batch", "id", ".", "concode_field_sep", "Long", "totalElapsedMinutes", "concode_elem_sep", "List", "<", "TestResultDTO", ">", "testResultLst", "concode_elem_sep", "String", "startTime", "concode_elem_sep", "String", "endTime", "concode_elem_sep", "Long", "batchId", "concode_elem_sep", "String", "batchStatus", "concode_elem_sep", "Long", "totalElapsedSeconds", "concode_field_sep", "void", "setBatchStatus", "concode_elem_sep", "Long", "getTotalElapsedSeconds", "concode_elem_sep", "void", "setBatchId", "concode_elem_sep", "void", "setTotalElapsedMinutes", "concode_elem_sep", "void", "setTestResultLst", "concode_elem_sep", "String", "getEndTime", "concode_elem_sep", "Long", "getTotalElapsedMinutes", "concode_elem_sep", "void", "setEndTime", "concode_elem_sep", "void", "setTotalElapsedSeconds", "concode_elem_sep", "String", "toString", "concode_elem_sep", "String", "getStartTime", "concode_elem_sep", "void", "setStartTime", "concode_elem_sep", "List", "<", "TestResultDTO", ">", "getTestResultLst", "concode_elem_sep", "String", "getBatchStatus"]}
{"code": "Sentence function ( String arg0 ) { String loc0 = SentenceId . parseStr ( arg0 ) ; return createParserImpl ( loc0 , arg0 ) ; }", "nl": "creates a parser for specified nmea 0183 sentence string . the parser implementation is selected from registered parsers according to sentence type . the returned instance must be cast in to correct sentence interface , for which the type should first be checked by using the sentence #getsentenceid method . concode_field_sep SentenceFactory instance concode_elem_sep Map<String,Class<? extends SentenceParser>> parsers concode_field_sep void unregisterParser concode_elem_sep boolean hasParser concode_elem_sep List<String> listParsers concode_elem_sep void reset concode_elem_sep void registerParser concode_elem_sep SentenceFactory getInstance concode_elem_sep Sentence createParserImpl", "code_tokens": ["Sentence", "function", "(", "String", "arg0", ")", "{", "String", "loc0", "=", "SentenceId", ".", "parseStr", "(", "arg0", ")", ";", "return", "createParserImpl", "(", "loc0", ",", "arg0", ")", ";", "}"], "nl_tokens": ["creates", "a", "parser", "for", "specified", "nmea", "0", "183", "sentence", "string", ".", "the", "parser", "implementation", "is", "selected", "from", "registered", "parsers", "according", "to", "sentence", "type", ".", "the", "returned", "instance", "must", "be", "cast", "in", "to", "correct", "sentence", "interface", ",", "for", "which", "the", "type", "should", "first", "be", "checked", "by", "using", "the", "sentence", "#getsentenceid method . concode_field_sep SentenceFactory instance concode_elem_sep Map<String,Class<? extends SentenceParser>> parsers concode_field_sep void unregisterParser concode_elem_sep boolean hasParser concode_elem_sep List<String> listParsers concode_elem_sep void reset concode_elem_sep void registerParser concode_elem_sep SentenceFactory getInstance concode_elem_sep Sentence createParserImpl"]}
{"code": "Response function ( RestUtils . RestCallable < T > arg0 ) { try { return createResponse ( arg0 . call ( ) ) ; } catch ( Exception loc0 ) { LOG . error ( \"srini_string\" , loc0 ) ; return createErrorResponse ( loc0 . getMessage ( ) ) ; } }", "nl": "calls the given restutils.restcallable and handles any exceptions thrown . concode_field_sep Logger LOG concode_field_sep Response createResponse concode_elem_sep Response createErrorResponse", "code_tokens": ["Response", "function", "(", "RestUtils", ".", "RestCallable", "<", "T", ">", "arg0", ")", "{", "try", "{", "return", "createResponse", "(", "arg0", ".", "call", "(", ")", ")", ";", "}", "catch", "(", "Exception", "loc0", ")", "{", "LOG", ".", "error", "(", "\"srini_string\"", ",", "loc0", ")", ";", "return", "createErrorResponse", "(", "loc0", ".", "getMessage", "(", ")", ")", ";", "}", "}"], "nl_tokens": ["calls", "the", "given", "restutils", ".", "restcallable", "and", "handles", "any", "exceptions", "thrown", ".", "concode_field_sep", "Logger", "LOG", "concode_field_sep", "Response", "createResponse", "concode_elem_sep", "Response", "createErrorResponse"]}
{"code": "void function ( ) { SpringBolt loc0 = new SpringBolt ( TestBean . class , \"srini_string\" , \"srini_string\" ) ; loc0 . setScatterOutput ( true ) ; run ( loc0 ) ; verify ( outputCollectorMock ) . ack ( tupleMock ) ; verifyNoMoreInteractions ( outputCollectorMock ) ; }", "nl": "tests a null return . concode_field_sep Map<String,Object> stormConf concode_elem_sep ApplicationContext applicationContextMock concode_elem_sep Tuple tupleMock concode_elem_sep OutputCollector outputCollectorMock concode_elem_sep OutputFieldsDeclarer outputFieldsDeclarerMock concode_elem_sep ArgumentCaptor<Fields> outputFieldsCaptor concode_elem_sep TopologyContext topologyContextMock concode_field_sep void executionException concode_elem_sep void init concode_elem_sep void prototypeIntegrationRun concode_elem_sep void sideOperation concode_elem_sep void cleanup concode_elem_sep void run concode_elem_sep void pipe concode_elem_sep void bindingException concode_elem_sep void frameworkError concode_elem_sep void multiplexPassThroughWithScatter concode_elem_sep void passThroughOverlap", "code_tokens": ["void", "function", "(", ")", "{", "SpringBolt", "loc0", "=", "new", "SpringBolt", "(", "TestBean", ".", "class", ",", "\"srini_string\"", ",", "\"srini_string\"", ")", ";", "loc0", ".", "setScatterOutput", "(", "true", ")", ";", "run", "(", "loc0", ")", ";", "verify", "(", "outputCollectorMock", ")", ".", "ack", "(", "tupleMock", ")", ";", "verifyNoMoreInteractions", "(", "outputCollectorMock", ")", ";", "}"], "nl_tokens": ["tests", "a", "null", "return", ".", "concode_field_sep", "Map", "<", "String", ",", "Object", ">", "stormConf", "concode_elem_sep", "ApplicationContext", "applicationContextMock", "concode_elem_sep", "Tuple", "tupleMock", "concode_elem_sep", "OutputCollector", "outputCollectorMock", "concode_elem_sep", "OutputFieldsDeclarer", "outputFieldsDeclarerMock", "concode_elem_sep", "ArgumentCaptor", "<", "Fields", ">", "outputFieldsCaptor", "concode_elem_sep", "TopologyContext", "topologyContextMock", "concode_field_sep", "void", "executionException", "concode_elem_sep", "void", "init", "concode_elem_sep", "void", "prototypeIntegrationRun", "concode_elem_sep", "void", "sideOperation", "concode_elem_sep", "void", "cleanup", "concode_elem_sep", "void", "run", "concode_elem_sep", "void", "pipe", "concode_elem_sep", "void", "bindingException", "concode_elem_sep", "void", "frameworkError", "concode_elem_sep", "void", "multiplexPassThroughWithScatter", "concode_elem_sep", "void", "passThroughOverlap"]}
{"code": "void function ( InetSocketAddress arg0 , Channel arg1 ) { Preconditions . checkArgument ( NETTY_CHANNEL_POOL_MAP . containsKey ( arg0 ) ) ; NETTY_CHANNEL_POOL_MAP . get ( arg0 ) . release ( arg1 ) ; }", "nl": "releases a netty channel to the channel pools . concode_field_sep ConcurrentHashMapV8<InetSocketAddress,BlockWorkerThriftClientPool> BLOCK_WORKER_THRIFT_CLIENT_HEARTBEAT_POOL concode_elem_sep BlockMasterClientPool mBlockMasterClientPool concode_elem_sep Boolean mHasLocalWorker concode_elem_sep ConcurrentHashMapV8<InetSocketAddress,BlockWorkerThriftClientPool> BLOCK_WORKER_THRIFT_CLIENT_POOL concode_elem_sep ConcurrentHashMapV8<InetSocketAddress,NettyChannelPool> NETTY_CHANNEL_POOL_MAP concode_elem_sep Map<InetSocketAddress,BlockStoreContext> CACHED_CONTEXTS concode_field_sep BlockWorkerClient acquireWorkerClient concode_elem_sep void releaseBlockWorkerThriftClient concode_elem_sep void initializeGauges concode_elem_sep boolean hasLocalWorker concode_elem_sep void releaseBlockWorkerThriftClientHeartbeat concode_elem_sep void releaseWorkerClient concode_elem_sep BlockStoreContext get concode_elem_sep BlockStoreContext get concode_elem_sep CloseableResource<BlockMasterClient> acquireMasterClientResource concode_elem_sep BlockWorkerClientService.Client acquireBlockWorkerThriftClient concode_elem_sep List<WorkerNetAddress> getWorkerAddresses concode_elem_sep Channel acquireNettyChannel concode_elem_sep BlockWorkerClientService.Client acquireBlockWorkerThriftClientHeartbeat", "code_tokens": ["void", "function", "(", "InetSocketAddress", "arg0", ",", "Channel", "arg1", ")", "{", "Preconditions", ".", "checkArgument", "(", "NETTY_CHANNEL_POOL_MAP", ".", "containsKey", "(", "arg0", ")", ")", ";", "NETTY_CHANNEL_POOL_MAP", ".", "get", "(", "arg0", ")", ".", "release", "(", "arg1", ")", ";", "}"], "nl_tokens": ["releases", "a", "netty", "channel", "to", "the", "channel", "pools", ".", "concode_field_sep", "ConcurrentHashMapV8", "<", "InetSocketAddress", ",", "BlockWorkerThriftClientPool", ">", "BLOCK_WORKER_THRIFT_CLIENT_HEARTBEAT_POOL", "concode_elem_sep", "BlockMasterClientPool", "mBlockMasterClientPool", "concode_elem_sep", "Boolean", "mHasLocalWorker", "concode_elem_sep", "ConcurrentHashMapV8", "<", "InetSocketAddress", ",", "BlockWorkerThriftClientPool", ">", "BLOCK_WORKER_THRIFT_CLIENT_POOL", "concode_elem_sep", "ConcurrentHashMapV8", "<", "InetSocketAddress", ",", "NettyChannelPool", ">", "NETTY_CHANNEL_POOL_MAP", "concode_elem_sep", "Map", "<", "InetSocketAddress", ",", "BlockStoreContext", ">", "CACHED_CONTEXTS", "concode_field_sep", "BlockWorkerClient", "acquireWorkerClient", "concode_elem_sep", "void", "releaseBlockWorkerThriftClient", "concode_elem_sep", "void", "initializeGauges", "concode_elem_sep", "boolean", "hasLocalWorker", "concode_elem_sep", "void", "releaseBlockWorkerThriftClientHeartbeat", "concode_elem_sep", "void", "releaseWorkerClient", "concode_elem_sep", "BlockStoreContext", "get", "concode_elem_sep", "BlockStoreContext", "get", "concode_elem_sep", "CloseableResource", "<", "BlockMasterClient", ">", "acquireMasterClientResource", "concode_elem_sep", "BlockWorkerClientService", ".", "Client", "acquireBlockWorkerThriftClient", "concode_elem_sep", "List", "<", "WorkerNetAddress", ">", "getWorkerAddresses", "concode_elem_sep", "Channel", "acquireNettyChannel", "concode_elem_sep", "BlockWorkerClientService", ".", "Client", "acquireBlockWorkerThriftClientHeartbeat"]}
{"code": "HttpHost function ( ) { InetSocketAddress loc0 = localServer . getServiceAddress ( ) ; return new HttpHost ( loc0 . getHostName ( ) , loc0 . getPort ( ) , \"srini_string\" ) ; }", "nl": "obtains the address of the local test server . concode_field_sep LocalTestServer localServer concode_field_sep void tearDown", "code_tokens": ["HttpHost", "function", "(", ")", "{", "InetSocketAddress", "loc0", "=", "localServer", ".", "getServiceAddress", "(", ")", ";", "return", "new", "HttpHost", "(", "loc0", ".", "getHostName", "(", ")", ",", "loc0", ".", "getPort", "(", ")", ",", "\"srini_string\"", ")", ";", "}"], "nl_tokens": ["obtains", "the", "address", "of", "the", "local", "test", "server", ".", "concode_field_sep", "LocalTestServer", "localServer", "concode_field_sep", "void", "tearDown"]}
{"code": "ResultType function ( RequestAbstractType arg0 , ResultType arg1 ) { arg1 . setRequestId ( arg0 . getId ( ) ) ; return arg1 ; }", "nl": "copies request id to response as per xkms specification http://www.w3.org/tr/xkms2/#xkms_2_0_section_1 concode_field_sep PlaceHolder placeHolder concode_field_sep ResultType copyOpaqueClientData concode_elem_sep String generateUniqueID concode_elem_sep ResultType createResponse concode_elem_sep T createResponse concode_elem_sep ResultType copyServiceName", "code_tokens": ["ResultType", "function", "(", "RequestAbstractType", "arg0", ",", "ResultType", "arg1", ")", "{", "arg1", ".", "setRequestId", "(", "arg0", ".", "getId", "(", ")", ")", ";", "return", "arg1", ";", "}"], "nl_tokens": ["copies", "request", "id", "to", "response", "as", "per", "xkms", "specification", "http", ":", "//", "www", ".", "w3", ".", "org", "/", "tr", "/", "xkms2", "/", "#xkms_2_0_section_1 concode_field_sep PlaceHolder placeHolder concode_field_sep ResultType copyOpaqueClientData concode_elem_sep String generateUniqueID concode_elem_sep ResultType createResponse concode_elem_sep T createResponse concode_elem_sep ResultType copyServiceName"]}
{"code": "String function ( ) { while ( lines . peek ( ) == null ) { cbuf . clear ( ) ; int loc0 = ( reader != null ) ? reader . loc0 ( buf , 0 , buf . length ) : readable . loc0 ( cbuf ) ; if ( loc0 == - 1 ) { lineBuf . finish ( ) ; break ; } lineBuf . add ( buf , 0 , loc0 ) ; } return lines . poll ( ) ; }", "nl": "reads a line of text . a line is considered to be terminated by any one of a line feed ' \\ n ' , a carriage return ' \\ r ' , or a carriage return followed immediately by a linefeed '' \\ r \\ n '' . concode_field_sep Readable readable concode_elem_sep CharBuffer cbuf concode_elem_sep Queue<String> lines concode_elem_sep Reader reader concode_elem_sep LineBuffer lineBuf concode_elem_sep char[] buf concode_field_sep void handleLine", "code_tokens": ["String", "function", "(", ")", "{", "while", "(", "lines", ".", "peek", "(", ")", "==", "null", ")", "{", "cbuf", ".", "clear", "(", ")", ";", "int", "loc0", "=", "(", "reader", "!=", "null", ")", "?", "reader", ".", "loc0", "(", "buf", ",", "0", ",", "buf", ".", "length", ")", ":", "readable", ".", "loc0", "(", "cbuf", ")", ";", "if", "(", "loc0", "==", "-", "1", ")", "{", "lineBuf", ".", "finish", "(", ")", ";", "break", ";", "}", "lineBuf", ".", "add", "(", "buf", ",", "0", ",", "loc0", ")", ";", "}", "return", "lines", ".", "poll", "(", ")", ";", "}"], "nl_tokens": ["reads", "a", "line", "of", "text", ".", "a", "line", "is", "considered", "to", "be", "terminated", "by", "any", "one", "of", "a", "line", "feed", "' \\ n '", ",", "a", "carriage", "return", "' \\ r '", ",", "or", "a", "carriage", "return", "followed", "immediately", "by", "a", "linefeed", "''", "\\", "r", "\\", "n", "''", ".", "concode_field_sep", "Readable", "readable", "concode_elem_sep", "CharBuffer", "cbuf", "concode_elem_sep", "Queue", "<", "String", ">", "lines", "concode_elem_sep", "Reader", "reader", "concode_elem_sep", "LineBuffer", "lineBuf", "concode_elem_sep", "char", "[", "]", "buf", "concode_field_sep", "void", "handleLine"]}
{"code": "boolean function ( ) { playlists = new HashMap < > ( ) ; return getDb ( ) . getPlaylists ( playlists ) ; }", "nl": "reads playlists from database concode_field_sep String appPath concode_elem_sep Keys keys concode_elem_sep Machine machine concode_elem_sep String logPath concode_elem_sep Options options concode_elem_sep HashMap<Integer,Playlist> playlists concode_elem_sep DefaultListModel genreListModel concode_elem_sep Logger logger concode_elem_sep DbConnJaMuz db concode_elem_sep ArrayList<String> tags concode_field_sep void logConfig concode_elem_sep boolean getCurrentMachine concode_elem_sep boolean createLog concode_elem_sep Proxy getProxy concode_elem_sep void readTags concode_elem_sep List<Playlist> getPlaylistsVisible concode_elem_sep void readGenres concode_elem_sep boolean setProxy concode_elem_sep boolean connectDatabase concode_elem_sep Playlist getPlaylist concode_elem_sep Logger getLogger concode_elem_sep ArrayList<String> getTags concode_elem_sep boolean configure concode_elem_sep Options getKeys concode_elem_sep File getFile concode_elem_sep DbConnJaMuz getDb concode_elem_sep Machine getMachine concode_elem_sep DefaultListModel getGenreListModel concode_elem_sep DefaultHttpClient getHttpClient concode_elem_sep String getLogPath concode_elem_sep Options getOptions concode_elem_sep List<String> getGenres concode_elem_sep List<Playlist> getPlaylists", "code_tokens": ["boolean", "function", "(", ")", "{", "playlists", "=", "new", "HashMap", "<", ">", "(", ")", ";", "return", "getDb", "(", ")", ".", "getPlaylists", "(", "playlists", ")", ";", "}"], "nl_tokens": ["reads", "playlists", "from", "database", "concode_field_sep", "String", "appPath", "concode_elem_sep", "Keys", "keys", "concode_elem_sep", "Machine", "machine", "concode_elem_sep", "String", "logPath", "concode_elem_sep", "Options", "options", "concode_elem_sep", "HashMap", "<", "Integer", ",", "Playlist", ">", "playlists", "concode_elem_sep", "DefaultListModel", "genreListModel", "concode_elem_sep", "Logger", "logger", "concode_elem_sep", "DbConnJaMuz", "db", "concode_elem_sep", "ArrayList", "<", "String", ">", "tags", "concode_field_sep", "void", "logConfig", "concode_elem_sep", "boolean", "getCurrentMachine", "concode_elem_sep", "boolean", "createLog", "concode_elem_sep", "Proxy", "getProxy", "concode_elem_sep", "void", "readTags", "concode_elem_sep", "List", "<", "Playlist", ">", "getPlaylistsVisible", "concode_elem_sep", "void", "readGenres", "concode_elem_sep", "boolean", "setProxy", "concode_elem_sep", "boolean", "connectDatabase", "concode_elem_sep", "Playlist", "getPlaylist", "concode_elem_sep", "Logger", "getLogger", "concode_elem_sep", "ArrayList", "<", "String", ">", "getTags", "concode_elem_sep", "boolean", "configure", "concode_elem_sep", "Options", "getKeys", "concode_elem_sep", "File", "getFile", "concode_elem_sep", "DbConnJaMuz", "getDb", "concode_elem_sep", "Machine", "getMachine", "concode_elem_sep", "DefaultListModel", "getGenreListModel", "concode_elem_sep", "DefaultHttpClient", "getHttpClient", "concode_elem_sep", "String", "getLogPath", "concode_elem_sep", "Options", "getOptions", "concode_elem_sep", "List", "<", "String", ">", "getGenres", "concode_elem_sep", "List", "<", "Playlist", ">", "getPlaylists"]}
{"code": "void function ( String arg0 ) { this . feedId = arg0 ; }", "nl": "sets the feed id . concode_field_sep String feedId concode_elem_sep String destFileName concode_elem_sep String testId concode_field_sep void setDestFileName concode_elem_sep String toString concode_elem_sep String getFeedId concode_elem_sep void setTestId concode_elem_sep String getTestId concode_elem_sep String getDestFileName", "code_tokens": ["void", "function", "(", "String", "arg0", ")", "{", "this", ".", "feedId", "=", "arg0", ";", "}"], "nl_tokens": ["sets", "the", "feed", "id", ".", "concode_field_sep", "String", "feedId", "concode_elem_sep", "String", "destFileName", "concode_elem_sep", "String", "testId", "concode_field_sep", "void", "setDestFileName", "concode_elem_sep", "String", "toString", "concode_elem_sep", "String", "getFeedId", "concode_elem_sep", "void", "setTestId", "concode_elem_sep", "String", "getTestId", "concode_elem_sep", "String", "getDestFileName"]}
{"code": "void function ( final BlockLockManager arg0 , final long arg1 ) { Thread loc0 = new Thread ( new Runnable ( ) { @ Override public void run ( ) { arg0 . lockBlock ( TEST_SESSION_ID , arg1 , BlockLockType . WRITE ) ; } } ) ; loc0 . start ( ) ; loc0 . join ( 200 ) ; Assert . assertTrue ( loc0 . isAlive ( ) ) ; }", "nl": "calls blocklockmanager #lockblock long , long , blocklocktype and fails if it does n'thang . concode_field_sep BlockLockManager mLockManager concode_elem_sep long TEST_BLOCK_ID concode_elem_sep ExpectedException mThrown concode_elem_sep long TEST_SESSION_ID concode_elem_sep TemporaryFolder mFolder concode_field_sep void lockAcrossSessions concode_elem_sep void stress concode_elem_sep void validateLockIdWithNoRecord concode_elem_sep void unlockNonExistingLock concode_elem_sep void dontReuseLock concode_elem_sep void before concode_elem_sep void reuseLock concode_elem_sep void readBlocksWrite concode_elem_sep void validateLockIdWithWrongBlockId concode_elem_sep void setMaxLocks concode_elem_sep void lockBlock concode_elem_sep void grabManyLocks concode_elem_sep void validateLockIdWithWrongSessionId concode_elem_sep void cleanupSession concode_elem_sep void after", "code_tokens": ["void", "function", "(", "final", "BlockLockManager", "arg0", ",", "final", "long", "arg1", ")", "{", "Thread", "loc0", "=", "new", "Thread", "(", "new", "Runnable", "(", ")", "{", "@", "Override", "public", "void", "run", "(", ")", "{", "arg0", ".", "lockBlock", "(", "TEST_SESSION_ID", ",", "arg1", ",", "BlockLockType", ".", "WRITE", ")", ";", "}", "}", ")", ";", "loc0", ".", "start", "(", ")", ";", "loc0", ".", "join", "(", "200", ")", ";", "Assert", ".", "assertTrue", "(", "loc0", ".", "isAlive", "(", ")", ")", ";", "}"], "nl_tokens": ["calls", "blocklockmanager", "#lockblock long , long , blocklocktype and fails if it does n'thang . concode_field_sep BlockLockManager mLockManager concode_elem_sep long TEST_BLOCK_ID concode_elem_sep ExpectedException mThrown concode_elem_sep long TEST_SESSION_ID concode_elem_sep TemporaryFolder mFolder concode_field_sep void lockAcrossSessions concode_elem_sep void stress concode_elem_sep void validateLockIdWithNoRecord concode_elem_sep void unlockNonExistingLock concode_elem_sep void dontReuseLock concode_elem_sep void before concode_elem_sep void reuseLock concode_elem_sep void readBlocksWrite concode_elem_sep void validateLockIdWithWrongBlockId concode_elem_sep void setMaxLocks concode_elem_sep void lockBlock concode_elem_sep void grabManyLocks concode_elem_sep void validateLockIdWithWrongSessionId concode_elem_sep void cleanupSession concode_elem_sep void after"]}
{"code": "EndpointReferenceType function ( ) { return faultTo ; }", "nl": "accessor for the faultto property . concode_field_sep List<QName> mustUnderstand concode_elem_sep EndpointReferenceType replyTo concode_elem_sep EndpointReferenceType faultTo concode_elem_sep AttributedURIType messageID concode_elem_sep AttributedURIType action concode_elem_sep EndpointReferenceType from concode_elem_sep String namespaceURI concode_elem_sep EndpointReferenceType to concode_elem_sep AttributedURIType toURIType concode_elem_sep QName duplicate concode_elem_sep RelatesToType relatesTo concode_field_sep List<QName> getMustUnderstand concode_elem_sep void setAction concode_elem_sep EndpointReferenceType getReplyTo concode_elem_sep void exposeAs concode_elem_sep void setFrom concode_elem_sep void setDuplicate concode_elem_sep RelatesToType getRelatesTo concode_elem_sep AttributedURIType getTo concode_elem_sep AttributedURIType getAction concode_elem_sep void setMessageID concode_elem_sep AttributedURIType getMessageID concode_elem_sep void setReplyTo concode_elem_sep void setFaultTo concode_elem_sep QName getDuplicate concode_elem_sep void setTo concode_elem_sep void setTo concode_elem_sep void setRelatesTo concode_elem_sep EndpointReferenceType getToEndpointReference concode_elem_sep String getNamespaceURI concode_elem_sep String toString concode_elem_sep AddressingProperties createCompatibleResponseProperties concode_elem_sep EndpointReferenceType getFrom", "code_tokens": ["EndpointReferenceType", "function", "(", ")", "{", "return", "faultTo", ";", "}"], "nl_tokens": ["accessor", "for", "the", "faultto", "property", ".", "concode_field_sep", "List", "<", "QName", ">", "mustUnderstand", "concode_elem_sep", "EndpointReferenceType", "replyTo", "concode_elem_sep", "EndpointReferenceType", "faultTo", "concode_elem_sep", "AttributedURIType", "messageID", "concode_elem_sep", "AttributedURIType", "action", "concode_elem_sep", "EndpointReferenceType", "from", "concode_elem_sep", "String", "namespaceURI", "concode_elem_sep", "EndpointReferenceType", "to", "concode_elem_sep", "AttributedURIType", "toURIType", "concode_elem_sep", "QName", "duplicate", "concode_elem_sep", "RelatesToType", "relatesTo", "concode_field_sep", "List", "<", "QName", ">", "getMustUnderstand", "concode_elem_sep", "void", "setAction", "concode_elem_sep", "EndpointReferenceType", "getReplyTo", "concode_elem_sep", "void", "exposeAs", "concode_elem_sep", "void", "setFrom", "concode_elem_sep", "void", "setDuplicate", "concode_elem_sep", "RelatesToType", "getRelatesTo", "concode_elem_sep", "AttributedURIType", "getTo", "concode_elem_sep", "AttributedURIType", "getAction", "concode_elem_sep", "void", "setMessageID", "concode_elem_sep", "AttributedURIType", "getMessageID", "concode_elem_sep", "void", "setReplyTo", "concode_elem_sep", "void", "setFaultTo", "concode_elem_sep", "QName", "getDuplicate", "concode_elem_sep", "void", "setTo", "concode_elem_sep", "void", "setTo", "concode_elem_sep", "void", "setRelatesTo", "concode_elem_sep", "EndpointReferenceType", "getToEndpointReference", "concode_elem_sep", "String", "getNamespaceURI", "concode_elem_sep", "String", "toString", "concode_elem_sep", "AddressingProperties", "createCompatibleResponseProperties", "concode_elem_sep", "EndpointReferenceType", "getFrom"]}
{"code": "LinearSolver < DenseMatrix64F > function ( int arg0 , int arg1 ) { if ( arg0 == arg1 ) return linear ( arg0 ) ; else return leastSquares ( arg0 , arg1 ) ; }", "nl": "creates a general purpose solver . use this if you are not sure what you need . concode_field_sep PlaceHolder placeHolder concode_field_sep LinearSolver<DenseMatrix64F> leastSquares concode_elem_sep LinearSolver<DenseMatrix64F> pseudoInverse concode_elem_sep LinearSolver<DenseMatrix64F> linear concode_elem_sep LinearSolver<DenseMatrix64F> symmPosDef concode_elem_sep AdjustableLinearSolver adjustable concode_elem_sep LinearSolver<DenseMatrix64F> leastSquaresQrPivot", "code_tokens": ["LinearSolver", "<", "DenseMatrix64F", ">", "function", "(", "int", "arg0", ",", "int", "arg1", ")", "{", "if", "(", "arg0", "==", "arg1", ")", "return", "linear", "(", "arg0", ")", ";", "else", "return", "leastSquares", "(", "arg0", ",", "arg1", ")", ";", "}"], "nl_tokens": ["creates", "a", "general", "purpose", "solver", ".", "use", "this", "if", "you", "are", "not", "sure", "what", "you", "need", ".", "concode_field_sep", "PlaceHolder", "placeHolder", "concode_field_sep", "LinearSolver", "<", "DenseMatrix64F", ">", "leastSquares", "concode_elem_sep", "LinearSolver", "<", "DenseMatrix64F", ">", "pseudoInverse", "concode_elem_sep", "LinearSolver", "<", "DenseMatrix64F", ">", "linear", "concode_elem_sep", "LinearSolver", "<", "DenseMatrix64F", ">", "symmPosDef", "concode_elem_sep", "AdjustableLinearSolver", "adjustable", "concode_elem_sep", "LinearSolver", "<", "DenseMatrix64F", ">", "leastSquaresQrPivot"]}
{"code": "Matrix function ( Matrix arg0 ) { Matrix loc0 = new Matrix ( arg0 . getNrows ( ) , arg0 . getNcols ( ) ) ; for ( int loc1 = 0 ; loc1 < arg0 . getNrows ( ) ; loc1 ++ ) { for ( int loc2 = 0 ; loc2 < arg0 . getNcols ( ) ; loc2 ++ ) { loc0 . setValueAt ( loc1 , loc2 , changeSign ( loc1 ) * changeSign ( loc2 ) * determinant ( createSubMatrix ( arg0 , loc1 , loc2 ) ) ) ; } } return loc0 ; }", "nl": "the cofactor of a matrix concode_field_sep PlaceHolder placeHolder concode_field_sep int changeSign concode_elem_sep Matrix add concode_elem_sep Matrix inverse concode_elem_sep Matrix subtract concode_elem_sep Matrix transpose concode_elem_sep Matrix multiply concode_elem_sep Matrix createSubMatrix concode_elem_sep double determinant", "code_tokens": ["Matrix", "function", "(", "Matrix", "arg0", ")", "{", "Matrix", "loc0", "=", "new", "Matrix", "(", "arg0", ".", "getNrows", "(", ")", ",", "arg0", ".", "getNcols", "(", ")", ")", ";", "for", "(", "int", "loc1", "=", "0", ";", "loc1", "<", "arg0", ".", "getNrows", "(", ")", ";", "loc1", "+", "+", ")", "{", "for", "(", "int", "loc2", "=", "0", ";", "loc2", "<", "arg0", ".", "getNcols", "(", ")", ";", "loc2", "+", "+", ")", "{", "loc0", ".", "setValueAt", "(", "loc1", ",", "loc2", ",", "changeSign", "(", "loc1", ")", "*", "changeSign", "(", "loc2", ")", "*", "determinant", "(", "createSubMatrix", "(", "arg0", ",", "loc1", ",", "loc2", ")", ")", ")", ";", "}", "}", "return", "loc0", ";", "}"], "nl_tokens": ["the", "cofactor", "of", "a", "matrix", "concode_field_sep", "PlaceHolder", "placeHolder", "concode_field_sep", "int", "changeSign", "concode_elem_sep", "Matrix", "add", "concode_elem_sep", "Matrix", "inverse", "concode_elem_sep", "Matrix", "subtract", "concode_elem_sep", "Matrix", "transpose", "concode_elem_sep", "Matrix", "multiply", "concode_elem_sep", "Matrix", "createSubMatrix", "concode_elem_sep", "double", "determinant"]}
{"code": "boolean function ( Object arg0 , SuffixFilter [ ] arg1 ) { if ( ! ( arg0 instanceof File ) ) { return false ; } String loc0 = ( ( File ) arg0 ) . getName ( ) ; if ( arg1 != null ) { for ( int loc1 = 0 ; loc1 < arg1 . length ; loc1 ++ ) { if ( loc0 . endsWith ( arg1 [ loc1 ] . getSuffix ( ) ) ) { return true ; } } } return false ; }", "nl": "tells if the filename matches one of the given suffixes . concode_field_sep PlaceHolder placeHolder concode_field_sep List<File> getList concode_elem_sep List<File> getList", "code_tokens": ["boolean", "function", "(", "Object", "arg0", ",", "SuffixFilter", "[", "]", "arg1", ")", "{", "if", "(", "!", "(", "arg0", "instanceof", "File", ")", ")", "{", "return", "false", ";", "}", "String", "loc0", "=", "(", "(", "File", ")", "arg0", ")", ".", "getName", "(", ")", ";", "if", "(", "arg1", "!=", "null", ")", "{", "for", "(", "int", "loc1", "=", "0", ";", "loc1", "<", "arg1", ".", "length", ";", "loc1", "+", "+", ")", "{", "if", "(", "loc0", ".", "endsWith", "(", "arg1", "[", "loc1", "]", ".", "getSuffix", "(", ")", ")", ")", "{", "return", "true", ";", "}", "}", "}", "return", "false", ";", "}"], "nl_tokens": ["tells", "if", "the", "filename", "matches", "one", "of", "the", "given", "suffixes", ".", "concode_field_sep", "PlaceHolder", "placeHolder", "concode_field_sep", "List", "<", "File", ">", "getList", "concode_elem_sep", "List", "<", "File", ">", "getList"]}
{"code": "void function ( ) { Mockito . when ( mClient . listObjectsV2 ( Matchers . any ( ListObjectsV2Request . class ) ) ) . thenThrow ( AmazonClientException . class ) ; boolean loc0 = mS3UnderFileSystem . delete ( PATH , true ) ; Assert . assertFalse ( loc0 ) ; }", "nl": "test case for s3aunderfilesystem #delete string , boolean . concode_field_sep TransferManager mManager concode_elem_sep String BUCKET_PREFIX concode_elem_sep AmazonS3Client mClient concode_elem_sep String DST concode_elem_sep S3AUnderFileSystem mS3UnderFileSystem concode_elem_sep String SRC concode_elem_sep String ACCOUNT_OWNER concode_elem_sep String PATH concode_elem_sep String BUCKET_NAME concode_elem_sep short BUCKET_MODE concode_field_sep void renameOnAmazonClientException concode_elem_sep void before concode_elem_sep void deleteNonRecursiveOnAmazonClientException", "code_tokens": ["void", "function", "(", ")", "{", "Mockito", ".", "when", "(", "mClient", ".", "listObjectsV2", "(", "Matchers", ".", "any", "(", "ListObjectsV2Request", ".", "class", ")", ")", ")", ".", "thenThrow", "(", "AmazonClientException", ".", "class", ")", ";", "boolean", "loc0", "=", "mS3UnderFileSystem", ".", "delete", "(", "PATH", ",", "true", ")", ";", "Assert", ".", "assertFalse", "(", "loc0", ")", ";", "}"], "nl_tokens": ["test", "case", "for", "s3aunderfilesystem", "#delete string , boolean . concode_field_sep TransferManager mManager concode_elem_sep String BUCKET_PREFIX concode_elem_sep AmazonS3Client mClient concode_elem_sep String DST concode_elem_sep S3AUnderFileSystem mS3UnderFileSystem concode_elem_sep String SRC concode_elem_sep String ACCOUNT_OWNER concode_elem_sep String PATH concode_elem_sep String BUCKET_NAME concode_elem_sep short BUCKET_MODE concode_field_sep void renameOnAmazonClientException concode_elem_sep void before concode_elem_sep void deleteNonRecursiveOnAmazonClientException"]}
{"code": "void function ( ) { long loc0 = 1 ; mThrown . expect ( LineageDoesNotExistException . class ) ; mThrown . expectMessage ( ExceptionMessage . LINEAGE_DOES_NOT_EXIST . getMessage ( loc0 ) ) ; mLineageStore . deleteLineage ( loc0 ) ; }", "nl": "tests that an exception is thrown when trying to delete a non-existing lineage via the lineagestore #deletelineage long method . concode_field_sep Job mJob concode_elem_sep LineageStore mLineageStore concode_elem_sep ExpectedException mThrown concode_field_sep void before concode_elem_sep void deleteLineage concode_elem_sep void journalEntrySerialization concode_elem_sep void createLineage", "code_tokens": ["void", "function", "(", ")", "{", "long", "loc0", "=", "1", ";", "mThrown", ".", "expect", "(", "LineageDoesNotExistException", ".", "class", ")", ";", "mThrown", ".", "expectMessage", "(", "ExceptionMessage", ".", "LINEAGE_DOES_NOT_EXIST", ".", "getMessage", "(", "loc0", ")", ")", ";", "mLineageStore", ".", "deleteLineage", "(", "loc0", ")", ";", "}"], "nl_tokens": ["tests", "that", "an", "exception", "is", "thrown", "when", "trying", "to", "delete", "a", "non", "-", "existing", "lineage", "via", "the", "lineagestore", "#deletelineage long method . concode_field_sep Job mJob concode_elem_sep LineageStore mLineageStore concode_elem_sep ExpectedException mThrown concode_field_sep void before concode_elem_sep void deleteLineage concode_elem_sep void journalEntrySerialization concode_elem_sep void createLineage"]}
{"code": "List < T > function ( List < T > arg0 , T arg1 ) { arg0 . add ( arg1 ) ; return arg0 ; }", "nl": "append o to l , returning l . concode_field_sep PlaceHolder placeHolder concode_field_sep T firstOrElse concode_elem_sep boolean equals concode_elem_sep List<T> nonNullList concode_elem_sep List<T> list concode_elem_sep List<T> list concode_elem_sep List<T> list concode_elem_sep List<T> list concode_elem_sep List<T> list concode_elem_sep List<U> map concode_elem_sep Iterator<Pair<T,T>> pairs", "code_tokens": ["List", "<", "T", ">", "function", "(", "List", "<", "T", ">", "arg0", ",", "T", "arg1", ")", "{", "arg0", ".", "add", "(", "arg1", ")", ";", "return", "arg0", ";", "}"], "nl_tokens": ["append", "o", "to", "l", ",", "returning", "l", ".", "concode_field_sep", "PlaceHolder", "placeHolder", "concode_field_sep", "T", "firstOrElse", "concode_elem_sep", "boolean", "equals", "concode_elem_sep", "List", "<", "T", ">", "nonNullList", "concode_elem_sep", "List", "<", "T", ">", "list", "concode_elem_sep", "List", "<", "T", ">", "list", "concode_elem_sep", "List", "<", "T", ">", "list", "concode_elem_sep", "List", "<", "T", ">", "list", "concode_elem_sep", "List", "<", "T", ">", "list", "concode_elem_sep", "List", "<", "U", ">", "map", "concode_elem_sep", "Iterator", "<", "Pair", "<", "T", ",", "T", ">>", "pairs"]}
{"code": "List < ByteBuffer > function ( List < ByteBuffer > arg0 ) { List < ByteBuffer > loc0 = new ArrayList < > ( arg0 . size ( ) ) ; for ( ByteBuffer loc1 : arg0 ) { loc0 . add ( cloneByteBuffer ( loc1 ) ) ; } return loc0 ; }", "nl": "clones a list of bytebuffer s. concode_field_sep Method sCleanerCleanMethod concode_elem_sep Method sByteBufferCleanerMethod concode_elem_sep Logger LOG concode_field_sep boolean equalConstantByteArray concode_elem_sep ByteBuffer getIncreasingByteBuffer concode_elem_sep ByteBuffer getIncreasingByteBuffer concode_elem_sep void fastCopy concode_elem_sep void cleanDirectBuffer concode_elem_sep ByteBuffer sliceByteBuffer concode_elem_sep ByteBuffer sliceByteBuffer concode_elem_sep int byteToInt concode_elem_sep boolean equalIncreasingByteArray concode_elem_sep boolean equalIncreasingByteArray concode_elem_sep boolean equalIncreasingByteBuffer concode_elem_sep byte[] getIncreasingByteArray concode_elem_sep byte[] getIncreasingByteArray concode_elem_sep void writeBufferToFile concode_elem_sep ByteBuffer cloneByteBuffer concode_elem_sep byte[] newByteArrayFromByteBuffer concode_elem_sep void putIntByteBuffer concode_elem_sep ByteBuffer generateNewByteBufferFromThriftRPCResults concode_elem_sep ByteBuffer getIncreasingIntBuffer concode_elem_sep ByteBuffer getIncreasingIntBuffer", "code_tokens": ["List", "<", "ByteBuffer", ">", "function", "(", "List", "<", "ByteBuffer", ">", "arg0", ")", "{", "List", "<", "ByteBuffer", ">", "loc0", "=", "new", "ArrayList", "<", ">", "(", "arg0", ".", "size", "(", ")", ")", ";", "for", "(", "ByteBuffer", "loc1", ":", "arg0", ")", "{", "loc0", ".", "add", "(", "cloneByteBuffer", "(", "loc1", ")", ")", ";", "}", "return", "loc0", ";", "}"], "nl_tokens": ["clones", "a", "list", "of", "bytebuffer", "s", ".", "concode_field_sep", "Method", "sCleanerCleanMethod", "concode_elem_sep", "Method", "sByteBufferCleanerMethod", "concode_elem_sep", "Logger", "LOG", "concode_field_sep", "boolean", "equalConstantByteArray", "concode_elem_sep", "ByteBuffer", "getIncreasingByteBuffer", "concode_elem_sep", "ByteBuffer", "getIncreasingByteBuffer", "concode_elem_sep", "void", "fastCopy", "concode_elem_sep", "void", "cleanDirectBuffer", "concode_elem_sep", "ByteBuffer", "sliceByteBuffer", "concode_elem_sep", "ByteBuffer", "sliceByteBuffer", "concode_elem_sep", "int", "byteToInt", "concode_elem_sep", "boolean", "equalIncreasingByteArray", "concode_elem_sep", "boolean", "equalIncreasingByteArray", "concode_elem_sep", "boolean", "equalIncreasingByteBuffer", "concode_elem_sep", "byte", "[", "]", "getIncreasingByteArray", "concode_elem_sep", "byte", "[", "]", "getIncreasingByteArray", "concode_elem_sep", "void", "writeBufferToFile", "concode_elem_sep", "ByteBuffer", "cloneByteBuffer", "concode_elem_sep", "byte", "[", "]", "newByteArrayFromByteBuffer", "concode_elem_sep", "void", "putIntByteBuffer", "concode_elem_sep", "ByteBuffer", "generateNewByteBufferFromThriftRPCResults", "concode_elem_sep", "ByteBuffer", "getIncreasingIntBuffer", "concode_elem_sep", "ByteBuffer", "getIncreasingIntBuffer"]}
{"code": "void function ( Runnable arg0 ) { synchronized ( internalLock ) { queue . add ( arg0 ) ; } startQueueWorker ( ) ; }", "nl": "adds a task to the queue and makes sure a worker thread is running , unless the queue has been suspended . if this method throws , e.g. a rejectedexecutionexception from the delegate executor , execution of tasks will stop until a call to this method or to #resume is made . concode_field_sep boolean isWorkerRunning concode_elem_sep Deque<Runnable> queue concode_elem_sep Executor executor concode_elem_sep Object internalLock concode_elem_sep int suspensions concode_elem_sep Logger log concode_field_sep void suspend concode_elem_sep void resume concode_elem_sep void executeFirst concode_elem_sep void startQueueWorker concode_elem_sep void run concode_elem_sep void workOnQueue", "code_tokens": ["void", "function", "(", "Runnable", "arg0", ")", "{", "synchronized", "(", "internalLock", ")", "{", "queue", ".", "add", "(", "arg0", ")", ";", "}", "startQueueWorker", "(", ")", ";", "}"], "nl_tokens": ["adds", "a", "task", "to", "the", "queue", "and", "makes", "sure", "a", "worker", "thread", "is", "running", ",", "unless", "the", "queue", "has", "been", "suspended", ".", "if", "this", "method", "throws", ",", "e", ".", "g", ".", "a", "rejectedexecutionexception", "from", "the", "delegate", "executor", ",", "execution", "of", "tasks", "will", "stop", "until", "a", "call", "to", "this", "method", "or", "to", "#resume is made . concode_field_sep boolean isWorkerRunning concode_elem_sep Deque<Runnable> queue concode_elem_sep Executor executor concode_elem_sep Object internalLock concode_elem_sep int suspensions concode_elem_sep Logger log concode_field_sep void suspend concode_elem_sep void resume concode_elem_sep void executeFirst concode_elem_sep void startQueueWorker concode_elem_sep void run concode_elem_sep void workOnQueue"]}
{"code": "Block function ( ) { return header ; }", "nl": "the block header this object wraps . the referenced block object must not have any transactions in it . concode_field_sep int COMPACT_SERIALIZED_SIZE concode_elem_sep BigInteger chainWork concode_elem_sep int CHAIN_WORK_BYTES concode_elem_sep Block header concode_elem_sep long serialVersionUID concode_elem_sep byte[] EMPTY_BYTES concode_elem_sep int height concode_field_sep int getHeight concode_elem_sep BigInteger getChainWork concode_elem_sep StoredBlock deserializeCompact concode_elem_sep StoredBlock build concode_elem_sep void serializeCompact concode_elem_sep int hashCode concode_elem_sep boolean equals concode_elem_sep boolean moreWorkThan concode_elem_sep String toString concode_elem_sep StoredBlock getPrev", "code_tokens": ["Block", "function", "(", ")", "{", "return", "header", ";", "}"], "nl_tokens": ["the", "block", "header", "this", "object", "wraps", ".", "the", "referenced", "block", "object", "must", "not", "have", "any", "transactions", "in", "it", ".", "concode_field_sep", "int", "COMPACT_SERIALIZED_SIZE", "concode_elem_sep", "BigInteger", "chainWork", "concode_elem_sep", "int", "CHAIN_WORK_BYTES", "concode_elem_sep", "Block", "header", "concode_elem_sep", "long", "serialVersionUID", "concode_elem_sep", "byte", "[", "]", "EMPTY_BYTES", "concode_elem_sep", "int", "height", "concode_field_sep", "int", "getHeight", "concode_elem_sep", "BigInteger", "getChainWork", "concode_elem_sep", "StoredBlock", "deserializeCompact", "concode_elem_sep", "StoredBlock", "build", "concode_elem_sep", "void", "serializeCompact", "concode_elem_sep", "int", "hashCode", "concode_elem_sep", "boolean", "equals", "concode_elem_sep", "boolean", "moreWorkThan", "concode_elem_sep", "String", "toString", "concode_elem_sep", "StoredBlock", "getPrev"]}
{"code": "int function ( ) { return yPosition ; }", "nl": "return the vertical position of this ball concode_field_sep int xPosition concode_elem_sep boolean dirArriba concode_elem_sep Canvas canvas concode_elem_sep int ySpeed concode_elem_sep int ballDegradation concode_elem_sep Color color concode_elem_sep int diameter concode_elem_sep boolean dirIzquierda concode_elem_sep int yPosition concode_elem_sep int groundPosition concode_elem_sep int GRAVITY concode_elem_sep Ellipse2D.Double circle concode_field_sep void erase concode_elem_sep void move concode_elem_sep int getXPosition concode_elem_sep void draw", "code_tokens": ["int", "function", "(", ")", "{", "return", "yPosition", ";", "}"], "nl_tokens": ["return", "the", "vertical", "position", "of", "this", "ball", "concode_field_sep", "int", "xPosition", "concode_elem_sep", "boolean", "dirArriba", "concode_elem_sep", "Canvas", "canvas", "concode_elem_sep", "int", "ySpeed", "concode_elem_sep", "int", "ballDegradation", "concode_elem_sep", "Color", "color", "concode_elem_sep", "int", "diameter", "concode_elem_sep", "boolean", "dirIzquierda", "concode_elem_sep", "int", "yPosition", "concode_elem_sep", "int", "groundPosition", "concode_elem_sep", "int", "GRAVITY", "concode_elem_sep", "Ellipse2D", ".", "Double", "circle", "concode_field_sep", "void", "erase", "concode_elem_sep", "void", "move", "concode_elem_sep", "int", "getXPosition", "concode_elem_sep", "void", "draw"]}
{"code": "boolean function ( ) { return ( mob . getPositionVector ( ) . distanceTo ( buildingSpot ) < 1 ) ; }", "nl": "checks if the ai is on the building spot . concode_field_sep EntityMob mob concode_elem_sep World world concode_elem_sep boolean hasBuiltOnce concode_elem_sep Queue<IBlockState> blocksQueue concode_elem_sep Vec3 buildingSpot concode_elem_sep double x concode_elem_sep double y concode_elem_sep boolean isBuildingDone concode_elem_sep double z concode_elem_sep Queue<BlockPos> blockPosQueue concode_elem_sep boolean hasBuildingInit concode_field_sep void enqueue concode_elem_sep void init concode_elem_sep boolean hasBuiltOnce concode_elem_sep void buildBlock concode_elem_sep void moveToBuildingSpot concode_elem_sep void finishingTouches concode_elem_sep boolean attemptBuildBlock concode_elem_sep boolean isBuilding", "code_tokens": ["boolean", "function", "(", ")", "{", "return", "(", "mob", ".", "getPositionVector", "(", ")", ".", "distanceTo", "(", "buildingSpot", ")", "<", "1", ")", ";", "}"], "nl_tokens": ["checks", "if", "the", "ai", "is", "on", "the", "building", "spot", ".", "concode_field_sep", "EntityMob", "mob", "concode_elem_sep", "World", "world", "concode_elem_sep", "boolean", "hasBuiltOnce", "concode_elem_sep", "Queue", "<", "IBlockState", ">", "blocksQueue", "concode_elem_sep", "Vec3", "buildingSpot", "concode_elem_sep", "double", "x", "concode_elem_sep", "double", "y", "concode_elem_sep", "boolean", "isBuildingDone", "concode_elem_sep", "double", "z", "concode_elem_sep", "Queue", "<", "BlockPos", ">", "blockPosQueue", "concode_elem_sep", "boolean", "hasBuildingInit", "concode_field_sep", "void", "enqueue", "concode_elem_sep", "void", "init", "concode_elem_sep", "boolean", "hasBuiltOnce", "concode_elem_sep", "void", "buildBlock", "concode_elem_sep", "void", "moveToBuildingSpot", "concode_elem_sep", "void", "finishingTouches", "concode_elem_sep", "boolean", "attemptBuildBlock", "concode_elem_sep", "boolean", "isBuilding"]}
{"code": "void function ( String arg0 ) { this . roleClassifier = arg0 ; }", "nl": "set the subject role classifier to use . if this value is not specified , then it tries to get roles from the supplied jaas subject if not null using the defaultsecuritycontext in cxf-rt-core . otherwise it uses this value in combination with the subject_role_classifier_type to get the roles from the subject . concode_field_sep String roleClassifierType concode_elem_sep String roleClassifier concode_field_sep String getRoleClassifierType concode_elem_sep Set<Principal> parseRolesFromSubject concode_elem_sep String getRoleClassifier concode_elem_sep void setRoleClassifierType", "code_tokens": ["void", "function", "(", "String", "arg0", ")", "{", "this", ".", "roleClassifier", "=", "arg0", ";", "}"], "nl_tokens": ["set", "the", "subject", "role", "classifier", "to", "use", ".", "if", "this", "value", "is", "not", "specified", ",", "then", "it", "tries", "to", "get", "roles", "from", "the", "supplied", "jaas", "subject", "if", "not", "null", "using", "the", "defaultsecuritycontext", "in", "cxf", "-", "rt", "-", "core", ".", "otherwise", "it", "uses", "this", "value", "in", "combination", "with", "the", "subject_role_classifier_type", "to", "get", "the", "roles", "from", "the", "subject", ".", "concode_field_sep", "String", "roleClassifierType", "concode_elem_sep", "String", "roleClassifier", "concode_field_sep", "String", "getRoleClassifierType", "concode_elem_sep", "Set", "<", "Principal", ">", "parseRolesFromSubject", "concode_elem_sep", "String", "getRoleClassifier", "concode_elem_sep", "void", "setRoleClassifierType"]}
{"code": "EigenDecomposition < DenseMatrix64F > function ( int arg0 , boolean arg1 ) { return new SwitchingEigenDecomposition ( arg0 , arg1 , 1e-8 ) ; }", "nl": "returns an eigendecomposition that has been optimized for the specified matrix size.if the input matrix is symmetric within tolerance then the symmetric algorithm will be used , otherwise a general purpose eigenvalue decomposition is used . concode_field_sep PlaceHolder placeHolder concode_field_sep SingularValueDecomposition<DenseMatrix64F> svd concode_elem_sep TridiagonalSimilarDecomposition<DenseMatrix64F> tridiagonal concode_elem_sep QRDecomposition<DenseMatrix64F> qr concode_elem_sep boolean decomposeSafe concode_elem_sep LUDecomposition<DenseMatrix64F> lu concode_elem_sep CholeskyDecomposition<DenseMatrix64F> chol concode_elem_sep CholeskyDecompositionLDL_D64 cholLDL concode_elem_sep QRPDecomposition<DenseMatrix64F> qrp concode_elem_sep double quality concode_elem_sep double quality concode_elem_sep double quality", "code_tokens": ["EigenDecomposition", "<", "DenseMatrix64F", ">", "function", "(", "int", "arg0", ",", "boolean", "arg1", ")", "{", "return", "new", "SwitchingEigenDecomposition", "(", "arg0", ",", "arg1", ",", "1e-8", ")", ";", "}"], "nl_tokens": ["returns", "an", "eigendecomposition", "that", "has", "been", "optimized", "for", "the", "specified", "matrix", "size", ".", "if", "the", "input", "matrix", "is", "symmetric", "within", "tolerance", "then", "the", "symmetric", "algorithm", "will", "be", "used", ",", "otherwise", "a", "general", "purpose", "eigenvalue", "decomposition", "is", "used", ".", "concode_field_sep", "PlaceHolder", "placeHolder", "concode_field_sep", "SingularValueDecomposition", "<", "DenseMatrix64F", ">", "svd", "concode_elem_sep", "TridiagonalSimilarDecomposition", "<", "DenseMatrix64F", ">", "tridiagonal", "concode_elem_sep", "QRDecomposition", "<", "DenseMatrix64F", ">", "qr", "concode_elem_sep", "boolean", "decomposeSafe", "concode_elem_sep", "LUDecomposition", "<", "DenseMatrix64F", ">", "lu", "concode_elem_sep", "CholeskyDecomposition", "<", "DenseMatrix64F", ">", "chol", "concode_elem_sep", "CholeskyDecompositionLDL_D64", "cholLDL", "concode_elem_sep", "QRPDecomposition", "<", "DenseMatrix64F", ">", "qrp", "concode_elem_sep", "double", "quality", "concode_elem_sep", "double", "quality", "concode_elem_sep", "double", "quality"]}
{"code": "boolean function ( ) { if ( getTimeoutDate ( ) != null ) { Date loc0 = new Date ( ) ; if ( loc0 . after ( getTimeoutDate ( ) ) ) { return true ; } else { return false ; } } else { return false ; } }", "nl": "has this approval expired ? concode_field_sep String clientId concode_elem_sep String QUERY_BY_CLIENT_ID concode_elem_sep String QUERY_BY_CLIENT_ID_AND_USER_ID concode_elem_sep String QUERY_ALL concode_elem_sep Date creationDate concode_elem_sep String userId concode_elem_sep Set<String> allowedScopes concode_elem_sep String QUERY_BY_USER_ID concode_elem_sep Date accessDate concode_elem_sep String PARAM_USER_ID concode_elem_sep Date timeoutDate concode_elem_sep Set<OAuth2AccessTokenEntity> approvedAccessTokens concode_elem_sep String PARAM_CLIENT_ID concode_elem_sep Long id concode_field_sep String getClientId concode_elem_sep void setApprovedAccessTokens concode_elem_sep Long getId concode_elem_sep Date getAccessDate concode_elem_sep Date getCreationDate concode_elem_sep void setCreationDate concode_elem_sep Set<OAuth2AccessTokenEntity> getApprovedAccessTokens concode_elem_sep Date getTimeoutDate concode_elem_sep Set<String> getAllowedScopes concode_elem_sep void setId concode_elem_sep void setAllowedScopes concode_elem_sep String getUserId concode_elem_sep void setTimeoutDate concode_elem_sep void setUserId concode_elem_sep void setClientId concode_elem_sep void setAccessDate", "code_tokens": ["boolean", "function", "(", ")", "{", "if", "(", "getTimeoutDate", "(", ")", "!=", "null", ")", "{", "Date", "loc0", "=", "new", "Date", "(", ")", ";", "if", "(", "loc0", ".", "after", "(", "getTimeoutDate", "(", ")", ")", ")", "{", "return", "true", ";", "}", "else", "{", "return", "false", ";", "}", "}", "else", "{", "return", "false", ";", "}", "}"], "nl_tokens": ["has", "this", "approval", "expired", "?", "concode_field_sep", "String", "clientId", "concode_elem_sep", "String", "QUERY_BY_CLIENT_ID", "concode_elem_sep", "String", "QUERY_BY_CLIENT_ID_AND_USER_ID", "concode_elem_sep", "String", "QUERY_ALL", "concode_elem_sep", "Date", "creationDate", "concode_elem_sep", "String", "userId", "concode_elem_sep", "Set", "<", "String", ">", "allowedScopes", "concode_elem_sep", "String", "QUERY_BY_USER_ID", "concode_elem_sep", "Date", "accessDate", "concode_elem_sep", "String", "PARAM_USER_ID", "concode_elem_sep", "Date", "timeoutDate", "concode_elem_sep", "Set", "<", "OAuth2AccessTokenEntity", ">", "approvedAccessTokens", "concode_elem_sep", "String", "PARAM_CLIENT_ID", "concode_elem_sep", "Long", "id", "concode_field_sep", "String", "getClientId", "concode_elem_sep", "void", "setApprovedAccessTokens", "concode_elem_sep", "Long", "getId", "concode_elem_sep", "Date", "getAccessDate", "concode_elem_sep", "Date", "getCreationDate", "concode_elem_sep", "void", "setCreationDate", "concode_elem_sep", "Set", "<", "OAuth2AccessTokenEntity", ">", "getApprovedAccessTokens", "concode_elem_sep", "Date", "getTimeoutDate", "concode_elem_sep", "Set", "<", "String", ">", "getAllowedScopes", "concode_elem_sep", "void", "setId", "concode_elem_sep", "void", "setAllowedScopes", "concode_elem_sep", "String", "getUserId", "concode_elem_sep", "void", "setTimeoutDate", "concode_elem_sep", "void", "setUserId", "concode_elem_sep", "void", "setClientId", "concode_elem_sep", "void", "setAccessDate"]}
{"code": "boolean function ( ) { if ( shortmine . isBuilding ( ) || longmine . isBuilding ( ) || smallfarm . isBuilding ( ) || largefarm . isBuilding ( ) || smallhouse . isBuilding ( ) || largehouse . isBuilding ( ) ) { return true ; } return false ; }", "nl": "returns true of the mob is currently building a structure . this is mainly used to prevent a mob from starting to mine or farm when it has not finished building a structure . concode_field_sep MineOres mine concode_elem_sep EntityMobWithInventory mob concode_elem_sep HarvestCrops harvest concode_elem_sep int taskMode concode_elem_sep ArrowAttack arrow concode_elem_sep BuildMine shortmine concode_elem_sep BuildFarm largefarm concode_elem_sep BuildMine longmine concode_elem_sep RunAway runaway concode_elem_sep BuildHouse smallhouse concode_elem_sep int buildspeed concode_elem_sep BuildFarm smallfarm concode_elem_sep SowSeeds sow concode_elem_sep StoreLoot loot concode_elem_sep MeleeAttack melee concode_elem_sep BuildHouse largehouse concode_elem_sep FireballAttack fireball concode_field_sep Entity targeter concode_elem_sep void setTask concode_elem_sep void nextStep", "code_tokens": ["boolean", "function", "(", ")", "{", "if", "(", "shortmine", ".", "isBuilding", "(", ")", "|", "|", "longmine", ".", "isBuilding", "(", ")", "|", "|", "smallfarm", ".", "isBuilding", "(", ")", "|", "|", "largefarm", ".", "isBuilding", "(", ")", "|", "|", "smallhouse", ".", "isBuilding", "(", ")", "|", "|", "largehouse", ".", "isBuilding", "(", ")", ")", "{", "return", "true", ";", "}", "return", "false", ";", "}"], "nl_tokens": ["returns", "true", "of", "the", "mob", "is", "currently", "building", "a", "structure", ".", "this", "is", "mainly", "used", "to", "prevent", "a", "mob", "from", "starting", "to", "mine", "or", "farm", "when", "it", "has", "not", "finished", "building", "a", "structure", ".", "concode_field_sep", "MineOres", "mine", "concode_elem_sep", "EntityMobWithInventory", "mob", "concode_elem_sep", "HarvestCrops", "harvest", "concode_elem_sep", "int", "taskMode", "concode_elem_sep", "ArrowAttack", "arrow", "concode_elem_sep", "BuildMine", "shortmine", "concode_elem_sep", "BuildFarm", "largefarm", "concode_elem_sep", "BuildMine", "longmine", "concode_elem_sep", "RunAway", "runaway", "concode_elem_sep", "BuildHouse", "smallhouse", "concode_elem_sep", "int", "buildspeed", "concode_elem_sep", "BuildFarm", "smallfarm", "concode_elem_sep", "SowSeeds", "sow", "concode_elem_sep", "StoreLoot", "loot", "concode_elem_sep", "MeleeAttack", "melee", "concode_elem_sep", "BuildHouse", "largehouse", "concode_elem_sep", "FireballAttack", "fireball", "concode_field_sep", "Entity", "targeter", "concode_elem_sep", "void", "setTask", "concode_elem_sep", "void", "nextStep"]}
{"code": "boolean function ( Node arg0 ) { boolean loc0 = graph . removeVertex ( arg0 ) ; if ( loc0 ) { nodesByIds . remove ( arg0 . getId ( ) ) ; } return loc0 ; }", "nl": "remove a node concode_field_sep Map<String,Node> nodesByIds concode_elem_sep Graph<Node,Edge> graph concode_field_sep Collection<Node> getNodes concode_elem_sep Node[] getNodes concode_elem_sep void addNode concode_elem_sep Collection findEdgeSet concode_elem_sep Node getNodeById concode_elem_sep Collection<Node> getNeighbors concode_elem_sep boolean removeEdge concode_elem_sep int countNodes concode_elem_sep int countNodes concode_elem_sep int getDegree concode_elem_sep Node getOpposite concode_elem_sep Collection<Edge> getEdges concode_elem_sep void addEdge concode_elem_sep int coundEdges concode_elem_sep Collection<Edge> getIncidentEdges", "code_tokens": ["boolean", "function", "(", "Node", "arg0", ")", "{", "boolean", "loc0", "=", "graph", ".", "removeVertex", "(", "arg0", ")", ";", "if", "(", "loc0", ")", "{", "nodesByIds", ".", "remove", "(", "arg0", ".", "getId", "(", ")", ")", ";", "}", "return", "loc0", ";", "}"], "nl_tokens": ["remove", "a", "node", "concode_field_sep", "Map", "<", "String", ",", "Node", ">", "nodesByIds", "concode_elem_sep", "Graph", "<", "Node", ",", "Edge", ">", "graph", "concode_field_sep", "Collection", "<", "Node", ">", "getNodes", "concode_elem_sep", "Node", "[", "]", "getNodes", "concode_elem_sep", "void", "addNode", "concode_elem_sep", "Collection", "findEdgeSet", "concode_elem_sep", "Node", "getNodeById", "concode_elem_sep", "Collection", "<", "Node", ">", "getNeighbors", "concode_elem_sep", "boolean", "removeEdge", "concode_elem_sep", "int", "countNodes", "concode_elem_sep", "int", "countNodes", "concode_elem_sep", "int", "getDegree", "concode_elem_sep", "Node", "getOpposite", "concode_elem_sep", "Collection", "<", "Edge", ">", "getEdges", "concode_elem_sep", "void", "addEdge", "concode_elem_sep", "int", "coundEdges", "concode_elem_sep", "Collection", "<", "Edge", ">", "getIncidentEdges"]}
{"code": "int function ( CharSequence arg0 , int arg1 ) { int loc0 = 0 ; int loc1 = arg0 . length ( ) ; int loc2 = arg1 ; if ( loc2 < loc1 ) { char loc3 = arg0 . charAt ( loc2 ) ; while ( isDigit ( loc3 ) && loc2 < loc1 ) { loc0 ++ ; loc2 ++ ; if ( loc2 < loc1 ) { loc3 = arg0 . charAt ( loc2 ) ; } } } return loc0 ; }", "nl": "determines the number of consecutive characters that are encodable using numeric compaction . concode_field_sep int ASCII_ENCODATION concode_elem_sep int TEXT_ENCODATION concode_elem_sep int X12_ENCODATION concode_elem_sep String MACRO_06_HEADER concode_elem_sep char LATCH_TO_C40 concode_elem_sep char UPPER_SHIFT concode_elem_sep char LATCH_TO_EDIFACT concode_elem_sep char LATCH_TO_TEXT concode_elem_sep char C40_UNLATCH concode_elem_sep char LATCH_TO_ANSIX12 concode_elem_sep int BASE256_ENCODATION concode_elem_sep String MACRO_05_HEADER concode_elem_sep String MACRO_TRAILER concode_elem_sep char MACRO_05 concode_elem_sep int EDIFACT_ENCODATION concode_elem_sep char PAD concode_elem_sep int C40_ENCODATION concode_elem_sep char LATCH_TO_BASE256 concode_elem_sep char MACRO_06 concode_elem_sep char X12_UNLATCH concode_field_sep void illegalCharacter concode_elem_sep int findMinimums concode_elem_sep boolean isX12TermSep concode_elem_sep boolean isSpecialB256 concode_elem_sep boolean isExtendedASCII concode_elem_sep boolean isNativeEDIFACT concode_elem_sep int getMinimumCount concode_elem_sep boolean isDigit concode_elem_sep char randomize253State concode_elem_sep boolean isNativeC40 concode_elem_sep int lookAheadTest concode_elem_sep boolean isNativeX12 concode_elem_sep String encodeHighLevel concode_elem_sep String encodeHighLevel concode_elem_sep boolean isNativeText", "code_tokens": ["int", "function", "(", "CharSequence", "arg0", ",", "int", "arg1", ")", "{", "int", "loc0", "=", "0", ";", "int", "loc1", "=", "arg0", ".", "length", "(", ")", ";", "int", "loc2", "=", "arg1", ";", "if", "(", "loc2", "<", "loc1", ")", "{", "char", "loc3", "=", "arg0", ".", "charAt", "(", "loc2", ")", ";", "while", "(", "isDigit", "(", "loc3", ")", "&", "&", "loc2", "<", "loc1", ")", "{", "loc0", "+", "+", ";", "loc2", "+", "+", ";", "if", "(", "loc2", "<", "loc1", ")", "{", "loc3", "=", "arg0", ".", "charAt", "(", "loc2", ")", ";", "}", "}", "}", "return", "loc0", ";", "}"], "nl_tokens": ["determines", "the", "number", "of", "consecutive", "characters", "that", "are", "encodable", "using", "numeric", "compaction", ".", "concode_field_sep", "int", "ASCII_ENCODATION", "concode_elem_sep", "int", "TEXT_ENCODATION", "concode_elem_sep", "int", "X12_ENCODATION", "concode_elem_sep", "String", "MACRO_06_HEADER", "concode_elem_sep", "char", "LATCH_TO_C40", "concode_elem_sep", "char", "UPPER_SHIFT", "concode_elem_sep", "char", "LATCH_TO_EDIFACT", "concode_elem_sep", "char", "LATCH_TO_TEXT", "concode_elem_sep", "char", "C40_UNLATCH", "concode_elem_sep", "char", "LATCH_TO_ANSIX12", "concode_elem_sep", "int", "BASE256_ENCODATION", "concode_elem_sep", "String", "MACRO_05_HEADER", "concode_elem_sep", "String", "MACRO_TRAILER", "concode_elem_sep", "char", "MACRO_05", "concode_elem_sep", "int", "EDIFACT_ENCODATION", "concode_elem_sep", "char", "PAD", "concode_elem_sep", "int", "C40_ENCODATION", "concode_elem_sep", "char", "LATCH_TO_BASE256", "concode_elem_sep", "char", "MACRO_06", "concode_elem_sep", "char", "X12_UNLATCH", "concode_field_sep", "void", "illegalCharacter", "concode_elem_sep", "int", "findMinimums", "concode_elem_sep", "boolean", "isX12TermSep", "concode_elem_sep", "boolean", "isSpecialB256", "concode_elem_sep", "boolean", "isExtendedASCII", "concode_elem_sep", "boolean", "isNativeEDIFACT", "concode_elem_sep", "int", "getMinimumCount", "concode_elem_sep", "boolean", "isDigit", "concode_elem_sep", "char", "randomize253State", "concode_elem_sep", "boolean", "isNativeC40", "concode_elem_sep", "int", "lookAheadTest", "concode_elem_sep", "boolean", "isNativeX12", "concode_elem_sep", "String", "encodeHighLevel", "concode_elem_sep", "String", "encodeHighLevel", "concode_elem_sep", "boolean", "isNativeText"]}
{"code": "boolean function ( Method arg0 , Method arg1 , Map < TypeVariable , Type > arg2 ) { if ( isResolvedTypeMatch ( arg1 , arg0 , arg2 ) ) { return true ; } Method loc0 = findGenericDeclaration ( arg0 ) ; return ( loc0 != null && isResolvedTypeMatch ( loc0 , arg1 , arg2 ) ) ; }", "nl": "determines whether or not the bridge method is the bridge for thesupplied candidate method . concode_field_sep PlaceHolder placeHolder concode_field_sep Method searchCandidates concode_elem_sep boolean isVisibilityBridgeMethodPair concode_elem_sep Method searchForMatch concode_elem_sep boolean isBridgedCandidateFor concode_elem_sep Method findBridgedMethod concode_elem_sep Method findGenericDeclaration concode_elem_sep boolean isResolvedTypeMatch", "code_tokens": ["boolean", "function", "(", "Method", "arg0", ",", "Method", "arg1", ",", "Map", "<", "TypeVariable", ",", "Type", ">", "arg2", ")", "{", "if", "(", "isResolvedTypeMatch", "(", "arg1", ",", "arg0", ",", "arg2", ")", ")", "{", "return", "true", ";", "}", "Method", "loc0", "=", "findGenericDeclaration", "(", "arg0", ")", ";", "return", "(", "loc0", "!=", "null", "&", "&", "isResolvedTypeMatch", "(", "loc0", ",", "arg1", ",", "arg2", ")", ")", ";", "}"], "nl_tokens": ["determines", "whether", "or", "not", "the", "bridge", "method", "is", "the", "bridge", "for", "thesupplied", "candidate", "method", ".", "concode_field_sep", "PlaceHolder", "placeHolder", "concode_field_sep", "Method", "searchCandidates", "concode_elem_sep", "boolean", "isVisibilityBridgeMethodPair", "concode_elem_sep", "Method", "searchForMatch", "concode_elem_sep", "boolean", "isBridgedCandidateFor", "concode_elem_sep", "Method", "findBridgedMethod", "concode_elem_sep", "Method", "findGenericDeclaration", "concode_elem_sep", "boolean", "isResolvedTypeMatch"]}
{"code": "void function ( ) { notificationController . deregisterUserSession ( null , mockServerMessage ) ; }", "nl": "test method for notificationcontroller #deregisterusersession serversession , servermessage verifies that nullpointerexception is thrown when serversession is null . concode_field_sep ServerMessage mockServerMessage concode_elem_sep ServerSession mockServerSession concode_elem_sep HashMap<String,Object> testEventProperties concode_elem_sep String MOCK_SESSION_ID concode_elem_sep NotificationController notificationController concode_field_sep void testHandleEventThrowsIllegalArgumentExceptionOnEmptyUser concode_elem_sep void testHandleEventThrowsIllegalArgumentExceptionOnEmptyApplication concode_elem_sep void testDeregisterUserSessionWithNullServerSessionIdThrowsException concode_elem_sep void testHandleEventThrowsIllegalArgumentExceptionOnNullTitle concode_elem_sep void testGetServerSessionByUserId concode_elem_sep void tearDown concode_elem_sep void testHandleEventThrowsIllegalArgumentExceptionOnEmptyTitle concode_elem_sep void testDeletePersistentNotificationThrowsIllegalArgumentOnNullServerSession concode_elem_sep void testDeregisterUserSessionRemovesUserFromKnownClients concode_elem_sep void testHandleEventThrowsIllegalArgumentExceptionOnEmptyMessage concode_elem_sep void testHandleEventThrowsIllegalArgumentExceptionOnNullApplication concode_elem_sep void testDeletePersistentNotificationThrowsIllegalArgumentOnNullUserId concode_elem_sep void testRegisterUserSessionWithNullServerSessionThrowsException concode_elem_sep void testHandleEventThrowsIllegalArgumentExceptionOnNullUser concode_elem_sep void testRegisterUserSession concode_elem_sep void setUp concode_elem_sep void testHandleEventThrowsIllegalArgumentExceptionOnNullTimestamp concode_elem_sep void testRegisterUserSessionWithNullServerSessionIdThrowsException concode_elem_sep void testHandleEventThrowsIllegalArgumentExceptionOnNullMessage", "code_tokens": ["void", "function", "(", ")", "{", "notificationController", ".", "deregisterUserSession", "(", "null", ",", "mockServerMessage", ")", ";", "}"], "nl_tokens": ["test", "method", "for", "notificationcontroller", "#deregisterusersession serversession , servermessage verifies that nullpointerexception is thrown when serversession is null . concode_field_sep ServerMessage mockServerMessage concode_elem_sep ServerSession mockServerSession concode_elem_sep HashMap<String,Object> testEventProperties concode_elem_sep String MOCK_SESSION_ID concode_elem_sep NotificationController notificationController concode_field_sep void testHandleEventThrowsIllegalArgumentExceptionOnEmptyUser concode_elem_sep void testHandleEventThrowsIllegalArgumentExceptionOnEmptyApplication concode_elem_sep void testDeregisterUserSessionWithNullServerSessionIdThrowsException concode_elem_sep void testHandleEventThrowsIllegalArgumentExceptionOnNullTitle concode_elem_sep void testGetServerSessionByUserId concode_elem_sep void tearDown concode_elem_sep void testHandleEventThrowsIllegalArgumentExceptionOnEmptyTitle concode_elem_sep void testDeletePersistentNotificationThrowsIllegalArgumentOnNullServerSession concode_elem_sep void testDeregisterUserSessionRemovesUserFromKnownClients concode_elem_sep void testHandleEventThrowsIllegalArgumentExceptionOnEmptyMessage concode_elem_sep void testHandleEventThrowsIllegalArgumentExceptionOnNullApplication concode_elem_sep void testDeletePersistentNotificationThrowsIllegalArgumentOnNullUserId concode_elem_sep void testRegisterUserSessionWithNullServerSessionThrowsException concode_elem_sep void testHandleEventThrowsIllegalArgumentExceptionOnNullUser concode_elem_sep void testRegisterUserSession concode_elem_sep void setUp concode_elem_sep void testHandleEventThrowsIllegalArgumentExceptionOnNullTimestamp concode_elem_sep void testRegisterUserSessionWithNullServerSessionIdThrowsException concode_elem_sep void testHandleEventThrowsIllegalArgumentExceptionOnNullMessage"]}
{"code": "void function ( ) { Time loc0 = zda . getTime ( ) ; assertNotNull ( loc0 ) ; assertEquals ( 3 , loc0 . getHour ( ) ) ; assertEquals ( 29 , loc0 . getMinutes ( ) ) ; assertEquals ( 15.0 , loc0 . getSeconds ( ) , 0.1 ) ; }", "nl": "test method for net.sf.marineapi.nmea.parser.zdaparser #gettime . concode_field_sep String EXAMPLE concode_elem_sep ZDAParser zda concode_elem_sep ZDAParser empty concode_field_sep void testGetYear concode_elem_sep void testGetDate concode_elem_sep void testGetLocalZoneMinutes concode_elem_sep void testSetTimeAndLocalZone concode_elem_sep void testConstructor concode_elem_sep void testToDate concode_elem_sep void testSetLocalZoneMinutes concode_elem_sep void testSetLocalZoneHours concode_elem_sep void testSetTime concode_elem_sep void testGetDay concode_elem_sep void setUp concode_elem_sep void testGetMonth concode_elem_sep void testSetDate concode_elem_sep void testGetLocalZoneHours", "code_tokens": ["void", "function", "(", ")", "{", "Time", "loc0", "=", "zda", ".", "getTime", "(", ")", ";", "assertNotNull", "(", "loc0", ")", ";", "assertEquals", "(", "3", ",", "loc0", ".", "getHour", "(", ")", ")", ";", "assertEquals", "(", "29", ",", "loc0", ".", "getMinutes", "(", ")", ")", ";", "assertEquals", "(", "15.0", ",", "loc0", ".", "getSeconds", "(", ")", ",", "0.1", ")", ";", "}"], "nl_tokens": ["test", "method", "for", "net", ".", "sf", ".", "marineapi", ".", "nmea", ".", "parser", ".", "zdaparser", "#gettime . concode_field_sep String EXAMPLE concode_elem_sep ZDAParser zda concode_elem_sep ZDAParser empty concode_field_sep void testGetYear concode_elem_sep void testGetDate concode_elem_sep void testGetLocalZoneMinutes concode_elem_sep void testSetTimeAndLocalZone concode_elem_sep void testConstructor concode_elem_sep void testToDate concode_elem_sep void testSetLocalZoneMinutes concode_elem_sep void testSetLocalZoneHours concode_elem_sep void testSetTime concode_elem_sep void testGetDay concode_elem_sep void setUp concode_elem_sep void testGetMonth concode_elem_sep void testSetDate concode_elem_sep void testGetLocalZoneHours"]}
{"code": "int function ( ) { return 8 * y + x ; }", "nl": "the hashcode of a move is 8y + x. concode_field_sep int x concode_elem_sep int y concode_field_sep int getX concode_elem_sep int getY concode_elem_sep boolean equals concode_elem_sep String toString", "code_tokens": ["int", "function", "(", ")", "{", "return", "8", "*", "y", "+", "x", ";", "}"], "nl_tokens": ["the", "hashcode", "of", "a", "move", "is", "8", "y", "+", "x", ".", "concode_field_sep", "int", "x", "concode_elem_sep", "int", "y", "concode_field_sep", "int", "getX", "concode_elem_sep", "int", "getY", "concode_elem_sep", "boolean", "equals", "concode_elem_sep", "String", "toString"]}
{"code": "void function ( @ Nullable Closeable arg0 , boolean arg1 ) { if ( arg0 == null ) { return ; } try { arg0 . close ( ) ; } catch ( IOException loc0 ) { if ( arg1 ) { logger . log ( Level . WARNING , \"srini_string\" , loc0 ) ; } else { throw loc0 ; } } }", "nl": "closes a closeable , with control over whether an ioexception may be thrown.this is primarily useful in a finally block , where a thrown exception needs to be logged but not propagated otherwise the original exception will be lost . if swallowioexception is true then we never throw ioexception but merely logit . example : public void usestreamnicely throws ioexception somestream stream = new somestream `` foo '' ; boolean threw = true ; try / / ... code which does something with the stream ... threw = false ; finally / / if an exception occurs , rethrow it only if threw == false : closeables.close stream , threw ; concode_field_sep Logger logger concode_field_sep void closeQuietly concode_elem_sep void closeQuietly", "code_tokens": ["void", "function", "(", "@", "Nullable", "Closeable", "arg0", ",", "boolean", "arg1", ")", "{", "if", "(", "arg0", "==", "null", ")", "{", "return", ";", "}", "try", "{", "arg0", ".", "close", "(", ")", ";", "}", "catch", "(", "IOException", "loc0", ")", "{", "if", "(", "arg1", ")", "{", "logger", ".", "log", "(", "Level", ".", "WARNING", ",", "\"srini_string\"", ",", "loc0", ")", ";", "}", "else", "{", "throw", "loc0", ";", "}", "}", "}"], "nl_tokens": ["closes", "a", "closeable", ",", "with", "control", "over", "whether", "an", "ioexception", "may", "be", "thrown", ".", "this", "is", "primarily", "useful", "in", "a", "finally", "block", ",", "where", "a", "thrown", "exception", "needs", "to", "be", "logged", "but", "not", "propagated", "otherwise", "the", "original", "exception", "will", "be", "lost", ".", "if", "swallowioexception", "is", "true", "then", "we", "never", "throw", "ioexception", "but", "merely", "logit", ".", "example", ":", "public", "void", "usestreamnicely", "throws", "ioexception", "somestream", "stream", "=", "new", "somestream", "`", "`", "foo", "''", ";", "boolean", "threw", "=", "true", ";", "try", "/", "/", "...", "code", "which", "does", "something", "with", "the", "stream", "...", "threw", "=", "false", ";", "finally", "/", "/", "if", "an", "exception", "occurs", ",", "rethrow", "it", "only", "if", "threw", "==", "false", ":", "closeables", ".", "close", "stream", ",", "threw", ";", "concode_field_sep", "Logger", "logger", "concode_field_sep", "void", "closeQuietly", "concode_elem_sep", "void", "closeQuietly"]}
{"code": "List < ClassdiagramNode > function ( ) { return downlinks ; }", "nl": "get the downlinks of this node . concode_field_sep int edgeOffset concode_elem_sep FigNode figure concode_elem_sep float UPLINK_FACTOR concode_elem_sep List<ClassdiagramNode> uplinks concode_elem_sep int rank concode_elem_sep List<ClassdiagramNode> downlinks concode_elem_sep int NORANK concode_elem_sep int column concode_elem_sep int placementHint concode_elem_sep float weight concode_elem_sep int NOCOLUMN concode_elem_sep int NOWEIGHT concode_field_sep Vector<ClassdiagramNode> getUplinks concode_elem_sep Point getLocation concode_elem_sep boolean isComment concode_elem_sep List<ClassdiagramNode> getUpNodes concode_elem_sep float getWeight concode_elem_sep FigNode getFigure concode_elem_sep Vector<ClassdiagramNode> getDownlinks concode_elem_sep int compareTo concode_elem_sep void setColumn concode_elem_sep void addDownlink concode_elem_sep void setLocation concode_elem_sep void setEdgeOffset concode_elem_sep boolean isStandalone concode_elem_sep int getColumn concode_elem_sep float getSubtreeWeight concode_elem_sep float calculateWeight concode_elem_sep void setRank concode_elem_sep void addRank concode_elem_sep int getTypeOrderNumer concode_elem_sep int getEdgeOffset concode_elem_sep int getRank concode_elem_sep void setWeight concode_elem_sep boolean isPackage concode_elem_sep void addUplink concode_elem_sep int getLevel concode_elem_sep Dimension getSize concode_elem_sep void setPlacementHint concode_elem_sep int getPlacementHint concode_elem_sep void setFigure", "code_tokens": ["List", "<", "ClassdiagramNode", ">", "function", "(", ")", "{", "return", "downlinks", ";", "}"], "nl_tokens": ["get", "the", "downlinks", "of", "this", "node", ".", "concode_field_sep", "int", "edgeOffset", "concode_elem_sep", "FigNode", "figure", "concode_elem_sep", "float", "UPLINK_FACTOR", "concode_elem_sep", "List", "<", "ClassdiagramNode", ">", "uplinks", "concode_elem_sep", "int", "rank", "concode_elem_sep", "List", "<", "ClassdiagramNode", ">", "downlinks", "concode_elem_sep", "int", "NORANK", "concode_elem_sep", "int", "column", "concode_elem_sep", "int", "placementHint", "concode_elem_sep", "float", "weight", "concode_elem_sep", "int", "NOCOLUMN", "concode_elem_sep", "int", "NOWEIGHT", "concode_field_sep", "Vector", "<", "ClassdiagramNode", ">", "getUplinks", "concode_elem_sep", "Point", "getLocation", "concode_elem_sep", "boolean", "isComment", "concode_elem_sep", "List", "<", "ClassdiagramNode", ">", "getUpNodes", "concode_elem_sep", "float", "getWeight", "concode_elem_sep", "FigNode", "getFigure", "concode_elem_sep", "Vector", "<", "ClassdiagramNode", ">", "getDownlinks", "concode_elem_sep", "int", "compareTo", "concode_elem_sep", "void", "setColumn", "concode_elem_sep", "void", "addDownlink", "concode_elem_sep", "void", "setLocation", "concode_elem_sep", "void", "setEdgeOffset", "concode_elem_sep", "boolean", "isStandalone", "concode_elem_sep", "int", "getColumn", "concode_elem_sep", "float", "getSubtreeWeight", "concode_elem_sep", "float", "calculateWeight", "concode_elem_sep", "void", "setRank", "concode_elem_sep", "void", "addRank", "concode_elem_sep", "int", "getTypeOrderNumer", "concode_elem_sep", "int", "getEdgeOffset", "concode_elem_sep", "int", "getRank", "concode_elem_sep", "void", "setWeight", "concode_elem_sep", "boolean", "isPackage", "concode_elem_sep", "void", "addUplink", "concode_elem_sep", "int", "getLevel", "concode_elem_sep", "Dimension", "getSize", "concode_elem_sep", "void", "setPlacementHint", "concode_elem_sep", "int", "getPlacementHint", "concode_elem_sep", "void", "setFigure"]}
{"code": "void function ( ) { final double loc0 = 7.75 ; mwv . setSpeed ( loc0 ) ; assertEquals ( loc0 , mwv . getSpeed ( ) , 0.1 ) ; }", "nl": "test method for net.sf.marineapi.nmea.parser.mwvparser #setspeed double . concode_field_sep String EXAMPLE concode_elem_sep MWVSentence mwv concode_field_sep void testSetNegativeSpeed concode_elem_sep void testSetInvalidSpeedUnit concode_elem_sep void testIsTrue concode_elem_sep void testMWVParserTalkerId concode_elem_sep void testSetStatus concode_elem_sep void testSetAngle concode_elem_sep void testSetSpeedUnit concode_elem_sep void testSetNegativeAngle concode_elem_sep void testGetAngle concode_elem_sep void testSetTrue concode_elem_sep void testSetAngleOutOfRange concode_elem_sep void setUp concode_elem_sep void testGetSpeed concode_elem_sep void testGetStatus concode_elem_sep void testGetSpeedUnit", "code_tokens": ["void", "function", "(", ")", "{", "final", "double", "loc0", "=", "7.75", ";", "mwv", ".", "setSpeed", "(", "loc0", ")", ";", "assertEquals", "(", "loc0", ",", "mwv", ".", "getSpeed", "(", ")", ",", "0.1", ")", ";", "}"], "nl_tokens": ["test", "method", "for", "net", ".", "sf", ".", "marineapi", ".", "nmea", ".", "parser", ".", "mwvparser", "#setspeed double . concode_field_sep String EXAMPLE concode_elem_sep MWVSentence mwv concode_field_sep void testSetNegativeSpeed concode_elem_sep void testSetInvalidSpeedUnit concode_elem_sep void testIsTrue concode_elem_sep void testMWVParserTalkerId concode_elem_sep void testSetStatus concode_elem_sep void testSetAngle concode_elem_sep void testSetSpeedUnit concode_elem_sep void testSetNegativeAngle concode_elem_sep void testGetAngle concode_elem_sep void testSetTrue concode_elem_sep void testSetAngleOutOfRange concode_elem_sep void setUp concode_elem_sep void testGetSpeed concode_elem_sep void testGetStatus concode_elem_sep void testGetSpeedUnit"]}
{"code": "void function ( Source arg0 ) { if ( arg0 != null && ( arg0 . getSystemId ( ) == null || arg0 . getSystemId ( ) . length ( ) == 0 ) ) { arg0 . setSystemId ( getDefaultSystemId ( ) ) ; } }", "nl": "ensure that the source has a systemid concode_field_sep File PWD concode_elem_sep Map<String,Object> parameters concode_elem_sep Transformation transformation concode_field_sep R withExceptionHandling concode_elem_sep void setOutputProperties concode_elem_sep R transform concode_elem_sep void transformTo concode_elem_sep String getDefaultSystemId concode_elem_sep void setParameter concode_elem_sep void setErrorListener concode_elem_sep void setOutputProperty concode_elem_sep void clearParameters concode_elem_sep Document getResultDocument concode_elem_sep String getResultString concode_elem_sep void setURIResolver concode_elem_sep Object getParameter", "code_tokens": ["void", "function", "(", "Source", "arg0", ")", "{", "if", "(", "arg0", "!=", "null", "&", "&", "(", "arg0", ".", "getSystemId", "(", ")", "==", "null", "|", "|", "arg0", ".", "getSystemId", "(", ")", ".", "length", "(", ")", "==", "0", ")", ")", "{", "arg0", ".", "setSystemId", "(", "getDefaultSystemId", "(", ")", ")", ";", "}", "}"], "nl_tokens": ["ensure", "that", "the", "source", "has", "a", "systemid", "concode_field_sep", "File", "PWD", "concode_elem_sep", "Map", "<", "String", ",", "Object", ">", "parameters", "concode_elem_sep", "Transformation", "transformation", "concode_field_sep", "R", "withExceptionHandling", "concode_elem_sep", "void", "setOutputProperties", "concode_elem_sep", "R", "transform", "concode_elem_sep", "void", "transformTo", "concode_elem_sep", "String", "getDefaultSystemId", "concode_elem_sep", "void", "setParameter", "concode_elem_sep", "void", "setErrorListener", "concode_elem_sep", "void", "setOutputProperty", "concode_elem_sep", "void", "clearParameters", "concode_elem_sep", "Document", "getResultDocument", "concode_elem_sep", "String", "getResultString", "concode_elem_sep", "void", "setURIResolver", "concode_elem_sep", "Object", "getParameter"]}
{"code": "void function ( String arg0 ) { try ( LockResource loc0 = new LockResource ( sLock ) ) { while ( ! sTimers . containsKey ( arg0 ) ) { sCondition . await ( ) ; } } }", "nl": "waits for the given thread to be ready to be scheduled . concode_field_sep Lock sLock concode_elem_sep Condition sCondition concode_elem_sep Map<String,ScheduledTimer> sTimers concode_field_sep void removeTimer concode_elem_sep void schedule concode_elem_sep void addTimer concode_elem_sep void clearTimer concode_elem_sep void execute concode_elem_sep Set<String> getThreadNames", "code_tokens": ["void", "function", "(", "String", "arg0", ")", "{", "try", "(", "LockResource", "loc0", "=", "new", "LockResource", "(", "sLock", ")", ")", "{", "while", "(", "!", "sTimers", ".", "containsKey", "(", "arg0", ")", ")", "{", "sCondition", ".", "await", "(", ")", ";", "}", "}", "}"], "nl_tokens": ["waits", "for", "the", "given", "thread", "to", "be", "ready", "to", "be", "scheduled", ".", "concode_field_sep", "Lock", "sLock", "concode_elem_sep", "Condition", "sCondition", "concode_elem_sep", "Map", "<", "String", ",", "ScheduledTimer", ">", "sTimers", "concode_field_sep", "void", "removeTimer", "concode_elem_sep", "void", "schedule", "concode_elem_sep", "void", "addTimer", "concode_elem_sep", "void", "clearTimer", "concode_elem_sep", "void", "execute", "concode_elem_sep", "Set", "<", "String", ">", "getThreadNames"]}
{"code": "void function ( ) { if ( blk != null ) { tx . unpin ( blk ) ; blk = null ; } }", "nl": "closes the manager , by unpinning the block . concode_field_sep Block blk concode_elem_sep int EMPTY concode_elem_sep int INUSE concode_elem_sep Transaction tx concode_elem_sep TableInfo ti concode_elem_sep int slotsize concode_elem_sep int currentslot concode_field_sep boolean next concode_elem_sep boolean isValidSlot concode_elem_sep void moveToId concode_elem_sep int currentId concode_elem_sep boolean insert concode_elem_sep String getString concode_elem_sep int currentpos concode_elem_sep void delete concode_elem_sep void setInt concode_elem_sep int getInt concode_elem_sep void setString concode_elem_sep int fieldpos concode_elem_sep boolean searchFor", "code_tokens": ["void", "function", "(", ")", "{", "if", "(", "blk", "!=", "null", ")", "{", "tx", ".", "unpin", "(", "blk", ")", ";", "blk", "=", "null", ";", "}", "}"], "nl_tokens": ["closes", "the", "manager", ",", "by", "unpinning", "the", "block", ".", "concode_field_sep", "Block", "blk", "concode_elem_sep", "int", "EMPTY", "concode_elem_sep", "int", "INUSE", "concode_elem_sep", "Transaction", "tx", "concode_elem_sep", "TableInfo", "ti", "concode_elem_sep", "int", "slotsize", "concode_elem_sep", "int", "currentslot", "concode_field_sep", "boolean", "next", "concode_elem_sep", "boolean", "isValidSlot", "concode_elem_sep", "void", "moveToId", "concode_elem_sep", "int", "currentId", "concode_elem_sep", "boolean", "insert", "concode_elem_sep", "String", "getString", "concode_elem_sep", "int", "currentpos", "concode_elem_sep", "void", "delete", "concode_elem_sep", "void", "setInt", "concode_elem_sep", "int", "getInt", "concode_elem_sep", "void", "setString", "concode_elem_sep", "int", "fieldpos", "concode_elem_sep", "boolean", "searchFor"]}
{"code": "Map < Class < ? extends Annotation > , Collection < Class < ? >>> function ( Collection < String > arg0 , List < Class < ? extends Annotation >> arg1 ) { return findClasses ( arg0 , arg1 , null ) ; }", "nl": "scans list of base packages for all classes marked with specific annotations . concode_field_sep ClasspathScanner HELPER concode_elem_sep String ALL_CLASS_FILES concode_elem_sep String CLASSPATH_URL_SCHEME concode_elem_sep String ALL_FILES concode_elem_sep String WILDCARD concode_elem_sep String[] PACKAGES_TO_SKIP concode_field_sep Set<String> parsePackages concode_elem_sep ClasspathScanner getClasspathScanner concode_elem_sep Map<Class<? extends Annotation>,Collection<Class<?>>> findClassesInternal concode_elem_sep List<URL> findResources concode_elem_sep List<URL> findResources concode_elem_sep List<URL> findResources concode_elem_sep List<URL> findResources concode_elem_sep List<URL> findResourcesInternal", "code_tokens": ["Map", "<", "Class", "<", "?", "extends", "Annotation", ">", ",", "Collection", "<", "Class", "<", "?", ">>", ">", "function", "(", "Collection", "<", "String", ">", "arg0", ",", "List", "<", "Class", "<", "?", "extends", "Annotation", ">>", "arg1", ")", "{", "return", "findClasses", "(", "arg0", ",", "arg1", ",", "null", ")", ";", "}"], "nl_tokens": ["scans", "list", "of", "base", "packages", "for", "all", "classes", "marked", "with", "specific", "annotations", ".", "concode_field_sep", "ClasspathScanner", "HELPER", "concode_elem_sep", "String", "ALL_CLASS_FILES", "concode_elem_sep", "String", "CLASSPATH_URL_SCHEME", "concode_elem_sep", "String", "ALL_FILES", "concode_elem_sep", "String", "WILDCARD", "concode_elem_sep", "String", "[", "]", "PACKAGES_TO_SKIP", "concode_field_sep", "Set", "<", "String", ">", "parsePackages", "concode_elem_sep", "ClasspathScanner", "getClasspathScanner", "concode_elem_sep", "Map", "<", "Class", "<", "?", "extends", "Annotation", ">", ",", "Collection", "<", "Class", "<", "?", ">>", ">", "findClassesInternal", "concode_elem_sep", "List", "<", "URL", ">", "findResources", "concode_elem_sep", "List", "<", "URL", ">", "findResources", "concode_elem_sep", "List", "<", "URL", ">", "findResources", "concode_elem_sep", "List", "<", "URL", ">", "findResources", "concode_elem_sep", "List", "<", "URL", ">", "findResourcesInternal"]}
{"code": "BigDecimal function ( ) { return this . expDataUnitId ; }", "nl": "gets the exp data unit id . concode_field_sep BigDecimal expDataUnitId concode_elem_sep BigDecimal dataUnitId concode_elem_sep Timestamp createTimeStamp concode_elem_sep String actValue concode_elem_sep String errorCode concode_elem_sep String srcFileName concode_elem_sep String errorMsg concode_elem_sep String failedAttrib concode_elem_sep BigDecimal expDataSetId concode_elem_sep RegPCLTestResultEntity regPclTestResult concode_elem_sep BigDecimal dataSetId concode_elem_sep RegPCLTestResultDetailsEntityPK id concode_elem_sep long serialVersionUID concode_elem_sep String expValue concode_field_sep void updateCreateTimeStamp concode_elem_sep void setActValue concode_elem_sep BigDecimal getDataSetId concode_elem_sep RegPCLTestResultDetailsEntityPK getId concode_elem_sep void setSrcFileName concode_elem_sep RegPCLTestResultEntity getRegPclTestResult concode_elem_sep void setExpValue concode_elem_sep String getSrcFileName concode_elem_sep void setErrorCode concode_elem_sep BigDecimal getDataUnitId concode_elem_sep void setErrorMsg concode_elem_sep String getErrorCode concode_elem_sep void setDataUnitId concode_elem_sep void setId concode_elem_sep void setFailedAttrib concode_elem_sep BigDecimal getExpDataSetId concode_elem_sep String getErrorMsg concode_elem_sep String getActValue concode_elem_sep void setRegPclTestResult concode_elem_sep String getExpValue concode_elem_sep void setCreateTimeStamp concode_elem_sep Timestamp getCreateTimeStamp concode_elem_sep String getFailedAttrib concode_elem_sep void setExpDataSetId concode_elem_sep void setDataSetId concode_elem_sep void setExpDataUnitId", "code_tokens": ["BigDecimal", "function", "(", ")", "{", "return", "this", ".", "expDataUnitId", ";", "}"], "nl_tokens": ["gets", "the", "exp", "data", "unit", "id", ".", "concode_field_sep", "BigDecimal", "expDataUnitId", "concode_elem_sep", "BigDecimal", "dataUnitId", "concode_elem_sep", "Timestamp", "createTimeStamp", "concode_elem_sep", "String", "actValue", "concode_elem_sep", "String", "errorCode", "concode_elem_sep", "String", "srcFileName", "concode_elem_sep", "String", "errorMsg", "concode_elem_sep", "String", "failedAttrib", "concode_elem_sep", "BigDecimal", "expDataSetId", "concode_elem_sep", "RegPCLTestResultEntity", "regPclTestResult", "concode_elem_sep", "BigDecimal", "dataSetId", "concode_elem_sep", "RegPCLTestResultDetailsEntityPK", "id", "concode_elem_sep", "long", "serialVersionUID", "concode_elem_sep", "String", "expValue", "concode_field_sep", "void", "updateCreateTimeStamp", "concode_elem_sep", "void", "setActValue", "concode_elem_sep", "BigDecimal", "getDataSetId", "concode_elem_sep", "RegPCLTestResultDetailsEntityPK", "getId", "concode_elem_sep", "void", "setSrcFileName", "concode_elem_sep", "RegPCLTestResultEntity", "getRegPclTestResult", "concode_elem_sep", "void", "setExpValue", "concode_elem_sep", "String", "getSrcFileName", "concode_elem_sep", "void", "setErrorCode", "concode_elem_sep", "BigDecimal", "getDataUnitId", "concode_elem_sep", "void", "setErrorMsg", "concode_elem_sep", "String", "getErrorCode", "concode_elem_sep", "void", "setDataUnitId", "concode_elem_sep", "void", "setId", "concode_elem_sep", "void", "setFailedAttrib", "concode_elem_sep", "BigDecimal", "getExpDataSetId", "concode_elem_sep", "String", "getErrorMsg", "concode_elem_sep", "String", "getActValue", "concode_elem_sep", "void", "setRegPclTestResult", "concode_elem_sep", "String", "getExpValue", "concode_elem_sep", "void", "setCreateTimeStamp", "concode_elem_sep", "Timestamp", "getCreateTimeStamp", "concode_elem_sep", "String", "getFailedAttrib", "concode_elem_sep", "void", "setExpDataSetId", "concode_elem_sep", "void", "setDataSetId", "concode_elem_sep", "void", "setExpDataUnitId"]}
{"code": "void function ( ) { time . setSeconds ( 45.12345 ) ; assertEquals ( 45.12345 , time . getSeconds ( ) , 0.001 ) ; }", "nl": "test method for net.sf.marineapi.nmea.util.time #setseconds int . concode_field_sep Time time concode_field_sep void testDateRoundTrip concode_elem_sep void testParseTimeWithOneDecimal concode_elem_sep void testSetNegativeMinutes concode_elem_sep void testFormatTimeWithOneDecimal concode_elem_sep void testSetMinutes concode_elem_sep void testParseTimeWithoutDecimals concode_elem_sep void testGetMinutes concode_elem_sep void testParseTimeWithDecimals concode_elem_sep void testSetInvalidSeconds concode_elem_sep void testSetNegativeHour concode_elem_sep void testToDate concode_elem_sep void testGetSeconds concode_elem_sep void testSetHour concode_elem_sep void testGetHour concode_elem_sep void testSetTime concode_elem_sep void testGetMilliseconds concode_elem_sep void testSetInvalidHour concode_elem_sep void testSetNegativeSeconds concode_elem_sep void setUp concode_elem_sep void testSetInvalidMinutes concode_elem_sep void testFormatTimeNoDecimals concode_elem_sep void testFormatTimeWithDecimals concode_elem_sep void testEquals", "code_tokens": ["void", "function", "(", ")", "{", "time", ".", "setSeconds", "(", "45.12345", ")", ";", "assertEquals", "(", "45.12345", ",", "time", ".", "getSeconds", "(", ")", ",", "0.001", ")", ";", "}"], "nl_tokens": ["test", "method", "for", "net", ".", "sf", ".", "marineapi", ".", "nmea", ".", "util", ".", "time", "#setseconds int . concode_field_sep Time time concode_field_sep void testDateRoundTrip concode_elem_sep void testParseTimeWithOneDecimal concode_elem_sep void testSetNegativeMinutes concode_elem_sep void testFormatTimeWithOneDecimal concode_elem_sep void testSetMinutes concode_elem_sep void testParseTimeWithoutDecimals concode_elem_sep void testGetMinutes concode_elem_sep void testParseTimeWithDecimals concode_elem_sep void testSetInvalidSeconds concode_elem_sep void testSetNegativeHour concode_elem_sep void testToDate concode_elem_sep void testGetSeconds concode_elem_sep void testSetHour concode_elem_sep void testGetHour concode_elem_sep void testSetTime concode_elem_sep void testGetMilliseconds concode_elem_sep void testSetInvalidHour concode_elem_sep void testSetNegativeSeconds concode_elem_sep void setUp concode_elem_sep void testSetInvalidMinutes concode_elem_sep void testFormatTimeNoDecimals concode_elem_sep void testFormatTimeWithDecimals concode_elem_sep void testEquals"]}
{"code": "Date function ( String arg0 , String arg1 ) { if ( arg0 == null ) return null ; ParsePosition loc0 = new ParsePosition ( 0 ) ; SimpleDateFormat loc1 = new SimpleDateFormat ( arg1 ) ; Date loc2 = loc1 . parse ( arg0 , loc0 ) ; return loc2 ; }", "nl": "convert string date to date type concode_field_sep String SHORT_FORMAT concode_elem_sep String FULL_FORMAT concode_elem_sep String NORMAL_DAY_OF_WEEK_FORMAT concode_elem_sep String NORMAL_FORMAT concode_field_sep String getDateTime concode_elem_sep Date getDateFromDatePicket concode_elem_sep String getStringTimeFromTime concode_elem_sep String getStringTimeFromTimePicker concode_elem_sep boolean isAfter concode_elem_sep String dateToString concode_elem_sep boolean isBefore", "code_tokens": ["Date", "function", "(", "String", "arg0", ",", "String", "arg1", ")", "{", "if", "(", "arg0", "==", "null", ")", "return", "null", ";", "ParsePosition", "loc0", "=", "new", "ParsePosition", "(", "0", ")", ";", "SimpleDateFormat", "loc1", "=", "new", "SimpleDateFormat", "(", "arg1", ")", ";", "Date", "loc2", "=", "loc1", ".", "parse", "(", "arg0", ",", "loc0", ")", ";", "return", "loc2", ";", "}"], "nl_tokens": ["convert", "string", "date", "to", "date", "type", "concode_field_sep", "String", "SHORT_FORMAT", "concode_elem_sep", "String", "FULL_FORMAT", "concode_elem_sep", "String", "NORMAL_DAY_OF_WEEK_FORMAT", "concode_elem_sep", "String", "NORMAL_FORMAT", "concode_field_sep", "String", "getDateTime", "concode_elem_sep", "Date", "getDateFromDatePicket", "concode_elem_sep", "String", "getStringTimeFromTime", "concode_elem_sep", "String", "getStringTimeFromTimePicker", "concode_elem_sep", "boolean", "isAfter", "concode_elem_sep", "String", "dateToString", "concode_elem_sep", "boolean", "isBefore"]}
{"code": "String function ( String arg0 ) { StringBuffer loc0 = new StringBuffer ( ) ; int loc1 = arg0 . length ( ) ; for ( int loc2 = 0 ; loc2 < loc1 ; loc2 ++ ) { int loc3 = arg0 . charAt ( loc2 ) ; append ( loc0 , loc3 ) ; } return loc0 . toString ( ) ; }", "nl": "encode a string to the `` x-www-form-urlencoded '' form , enhanced with the utf-8-in-url proposal . this is what happens : the ascii characters ` a ' through ` z ' , ` a ' through ` z ' , and ' 0 ' through ' 9 ' remain the same . the unreserved characters - _ . ! ~ ' remain the same . the space character ' ' is converted into a plus sign ' + ' . all other ascii characters are converted into the 3-character string '' % xy '' , where xy is the two-digit hexadecimal representation of the character code all non-ascii characters are encoded in two steps : first to a sequence of 2 or 3 bytes , using the utf-8 algorithm ; secondly each of these bytes is encoded as '' % xx '' . concode_field_sep String[] hex concode_field_sep void append", "code_tokens": ["String", "function", "(", "String", "arg0", ")", "{", "StringBuffer", "loc0", "=", "new", "StringBuffer", "(", ")", ";", "int", "loc1", "=", "arg0", ".", "length", "(", ")", ";", "for", "(", "int", "loc2", "=", "0", ";", "loc2", "<", "loc1", ";", "loc2", "+", "+", ")", "{", "int", "loc3", "=", "arg0", ".", "charAt", "(", "loc2", ")", ";", "append", "(", "loc0", ",", "loc3", ")", ";", "}", "return", "loc0", ".", "toString", "(", ")", ";", "}"], "nl_tokens": ["encode", "a", "string", "to", "the", "`", "`", "x", "-", "www", "-", "form", "-", "urlencoded", "''", "form", ",", "enhanced", "with", "the", "utf", "-", "8", "-", "in", "-", "url", "proposal", ".", "this", "is", "what", "happens", ":", "the", "ascii", "characters", "`", "a", "' through ` z '", ",", "`", "a", "' through ` z '", ",", "and", "' 0 '", "through", "' 9 '", "remain", "the", "same", ".", "the", "unreserved", "characters", "-", "_", ".", "!", "~", "' remain the same . the space character '", "' is converted into a plus sign '", "+", "' . all other ascii characters are converted into the 3-character string '", "' % xy '", "' , where xy is the two-digit hexadecimal representation of the character code all non-ascii characters are encoded in two steps : first to a sequence of 2 or 3 bytes , using the utf-8 algorithm ; secondly each of these bytes is encoded as '", "' % xx '", "'", ".", "concode_field_sep", "String", "[", "]", "hex", "concode_field_sep", "void", "append"]}
{"code": "void function ( short arg0 ) { format . checkType ( 'h' , true ) ; packLong ( arg0 , true ) ; }", "nl": "add a short field to the stream . \\ param value the short value to be added . concode_field_sep byte[] intBuf concode_elem_sep int MAX_INT_BYTES concode_elem_sep PackFormatInputStream format concode_elem_sep ByteArrayOutputStream packed concode_field_sep byte[] getValue concode_elem_sep void packLong concode_elem_sep void reset concode_elem_sep String getFormat concode_elem_sep void addByte concode_elem_sep void addInt concode_elem_sep void addLong concode_elem_sep void addRecord concode_elem_sep void addByteArray concode_elem_sep void addByteArray concode_elem_sep void addString", "code_tokens": ["void", "function", "(", "short", "arg0", ")", "{", "format", ".", "checkType", "(", "'h'", ",", "true", ")", ";", "packLong", "(", "arg0", ",", "true", ")", ";", "}"], "nl_tokens": ["add", "a", "short", "field", "to", "the", "stream", ".", "\\", "param", "value", "the", "short", "value", "to", "be", "added", ".", "concode_field_sep", "byte", "[", "]", "intBuf", "concode_elem_sep", "int", "MAX_INT_BYTES", "concode_elem_sep", "PackFormatInputStream", "format", "concode_elem_sep", "ByteArrayOutputStream", "packed", "concode_field_sep", "byte", "[", "]", "getValue", "concode_elem_sep", "void", "packLong", "concode_elem_sep", "void", "reset", "concode_elem_sep", "String", "getFormat", "concode_elem_sep", "void", "addByte", "concode_elem_sep", "void", "addInt", "concode_elem_sep", "void", "addLong", "concode_elem_sep", "void", "addRecord", "concode_elem_sep", "void", "addByteArray", "concode_elem_sep", "void", "addByteArray", "concode_elem_sep", "void", "addString"]}
{"code": "String function ( BufferedReader arg0 ) { StringBuffer loc0 = new StringBuffer ( ) ; String loc1 ; while ( ( loc1 = arg0 . readLine ( ) ) != null ) { loc0 . append ( loc1 + \"srini_string\" ) ; } arg0 . close ( ) ; return loc0 . toString ( ) ; }", "nl": "reads content from a buffered reader . concode_field_sep String TAB concode_elem_sep String NEW_LINE concode_field_sep String[][] retrieveMatrix concode_elem_sep String retrieveDocument concode_elem_sep String[][] parseMatrix concode_elem_sep String[][] prepareMatrix", "code_tokens": ["String", "function", "(", "BufferedReader", "arg0", ")", "{", "StringBuffer", "loc0", "=", "new", "StringBuffer", "(", ")", ";", "String", "loc1", ";", "while", "(", "(", "loc1", "=", "arg0", ".", "readLine", "(", ")", ")", "!=", "null", ")", "{", "loc0", ".", "append", "(", "loc1", "+", "\"srini_string\"", ")", ";", "}", "arg0", ".", "close", "(", ")", ";", "return", "loc0", ".", "toString", "(", ")", ";", "}"], "nl_tokens": ["reads", "content", "from", "a", "buffered", "reader", ".", "concode_field_sep", "String", "TAB", "concode_elem_sep", "String", "NEW_LINE", "concode_field_sep", "String", "[", "]", "[", "]", "retrieveMatrix", "concode_elem_sep", "String", "retrieveDocument", "concode_elem_sep", "String", "[", "]", "[", "]", "parseMatrix", "concode_elem_sep", "String", "[", "]", "[", "]", "prepareMatrix"]}
{"code": "int function ( ) { return values . size ( ) ; }", "nl": "returns number of top level result values . concode_field_sep String NAME concode_elem_sep String FAULT concode_elem_sep String MEMBER concode_elem_sep TimeZone tz concode_elem_sep ArrayList<Object> values concode_elem_sep String VALUE concode_field_sep String getStringValue concode_elem_sep ArrayList<Object> parseArray concode_elem_sep List getValues concode_elem_sep Map<String,Object> getStructValue concode_elem_sep Double getDoubleValue concode_elem_sep void parse concode_elem_sep Integer getIntegerValue concode_elem_sep Boolean getBooleanValue concode_elem_sep HashMap<String,Object> parseStruct concode_elem_sep List<Object> getArrayValue concode_elem_sep Object parseValue concode_elem_sep byte[] getBinaryValue concode_elem_sep Date getDateValue", "code_tokens": ["int", "function", "(", ")", "{", "return", "values", ".", "size", "(", ")", ";", "}"], "nl_tokens": ["returns", "number", "of", "top", "level", "result", "values", ".", "concode_field_sep", "String", "NAME", "concode_elem_sep", "String", "FAULT", "concode_elem_sep", "String", "MEMBER", "concode_elem_sep", "TimeZone", "tz", "concode_elem_sep", "ArrayList", "<", "Object", ">", "values", "concode_elem_sep", "String", "VALUE", "concode_field_sep", "String", "getStringValue", "concode_elem_sep", "ArrayList", "<", "Object", ">", "parseArray", "concode_elem_sep", "List", "getValues", "concode_elem_sep", "Map", "<", "String", ",", "Object", ">", "getStructValue", "concode_elem_sep", "Double", "getDoubleValue", "concode_elem_sep", "void", "parse", "concode_elem_sep", "Integer", "getIntegerValue", "concode_elem_sep", "Boolean", "getBooleanValue", "concode_elem_sep", "HashMap", "<", "String", ",", "Object", ">", "parseStruct", "concode_elem_sep", "List", "<", "Object", ">", "getArrayValue", "concode_elem_sep", "Object", "parseValue", "concode_elem_sep", "byte", "[", "]", "getBinaryValue", "concode_elem_sep", "Date", "getDateValue"]}
{"code": "int function ( int arg0 ) { return arg0 / 3 ; }", "nl": "note : the graphic representation maps x values on row numbers x-axis in vertical direction . concode_field_sep Action UP concode_elem_sep Action LEFT concode_elem_sep Action RIGHT concode_elem_sep Action DOWN concode_elem_sep int[] state concode_field_sep void setBoard concode_elem_sep void moveGapDown concode_elem_sep int getGapPosition concode_elem_sep int getAbsPosition concode_elem_sep void moveGapLeft concode_elem_sep XYLocation getLocationOf concode_elem_sep int getYCoord concode_elem_sep int getPositionOf concode_elem_sep int[] getState concode_elem_sep void moveGapUp concode_elem_sep int getValueAt concode_elem_sep int getValueAt concode_elem_sep int hashCode concode_elem_sep boolean equals concode_elem_sep void setValue concode_elem_sep boolean canMoveGap concode_elem_sep List<XYLocation> getPositions concode_elem_sep String toString concode_elem_sep void moveGapRight", "code_tokens": ["int", "function", "(", "int", "arg0", ")", "{", "return", "arg0", "/", "3", ";", "}"], "nl_tokens": ["note", ":", "the", "graphic", "representation", "maps", "x", "values", "on", "row", "numbers", "x", "-", "axis", "in", "vertical", "direction", ".", "concode_field_sep", "Action", "UP", "concode_elem_sep", "Action", "LEFT", "concode_elem_sep", "Action", "RIGHT", "concode_elem_sep", "Action", "DOWN", "concode_elem_sep", "int", "[", "]", "state", "concode_field_sep", "void", "setBoard", "concode_elem_sep", "void", "moveGapDown", "concode_elem_sep", "int", "getGapPosition", "concode_elem_sep", "int", "getAbsPosition", "concode_elem_sep", "void", "moveGapLeft", "concode_elem_sep", "XYLocation", "getLocationOf", "concode_elem_sep", "int", "getYCoord", "concode_elem_sep", "int", "getPositionOf", "concode_elem_sep", "int", "[", "]", "getState", "concode_elem_sep", "void", "moveGapUp", "concode_elem_sep", "int", "getValueAt", "concode_elem_sep", "int", "getValueAt", "concode_elem_sep", "int", "hashCode", "concode_elem_sep", "boolean", "equals", "concode_elem_sep", "void", "setValue", "concode_elem_sep", "boolean", "canMoveGap", "concode_elem_sep", "List", "<", "XYLocation", ">", "getPositions", "concode_elem_sep", "String", "toString", "concode_elem_sep", "void", "moveGapRight"]}
{"code": "void function ( String arg0 ) { await ( arg0 ) ; schedule ( arg0 ) ; await ( arg0 ) ; }", "nl": "convenience method for executing a heartbeat and waiting for it to complete . concode_field_sep Lock sLock concode_elem_sep Condition sCondition concode_elem_sep Map<String,ScheduledTimer> sTimers concode_field_sep void removeTimer concode_elem_sep void schedule concode_elem_sep void addTimer concode_elem_sep void await concode_elem_sep void await concode_elem_sep void clearTimer concode_elem_sep Set<String> getThreadNames", "code_tokens": ["void", "function", "(", "String", "arg0", ")", "{", "await", "(", "arg0", ")", ";", "schedule", "(", "arg0", ")", ";", "await", "(", "arg0", ")", ";", "}"], "nl_tokens": ["convenience", "method", "for", "executing", "a", "heartbeat", "and", "waiting", "for", "it", "to", "complete", ".", "concode_field_sep", "Lock", "sLock", "concode_elem_sep", "Condition", "sCondition", "concode_elem_sep", "Map", "<", "String", ",", "ScheduledTimer", ">", "sTimers", "concode_field_sep", "void", "removeTimer", "concode_elem_sep", "void", "schedule", "concode_elem_sep", "void", "addTimer", "concode_elem_sep", "void", "await", "concode_elem_sep", "void", "await", "concode_elem_sep", "void", "clearTimer", "concode_elem_sep", "Set", "<", "String", ">", "getThreadNames"]}
{"code": "List < String > function ( ) { return registeredScopes ; }", "nl": "get the list of registered scopes concode_field_sep String clientIpAddress concode_elem_sep String clientId concode_elem_sep List<String> allowedGrantTypes concode_elem_sep boolean isConfidential concode_elem_sep List<String> applicationCertificates concode_elem_sep UserSubject subject concode_elem_sep List<String> redirectUris concode_elem_sep List<String> registeredScopes concode_elem_sep String applicationLogoUri concode_elem_sep long serialVersionUID concode_elem_sep String applicationDescription concode_elem_sep List<String> registeredAudiences concode_elem_sep String applicationWebUri concode_elem_sep String clientSecret concode_elem_sep Map<String,String> properties concode_elem_sep String applicationName concode_field_sep UserSubject getSubject concode_elem_sep String getApplicationName concode_elem_sep void setSubject concode_elem_sep String getClientId concode_elem_sep List<String> getAllowedGrantTypes concode_elem_sep void setApplicationDescription concode_elem_sep void setRegisteredScopes concode_elem_sep void setProperties concode_elem_sep String getClientIpAddress concode_elem_sep String getApplicationDescription concode_elem_sep void setApplicationCertificates concode_elem_sep String getApplicationWebUri concode_elem_sep void setApplicationLogoUri concode_elem_sep void setConfidential concode_elem_sep List<String> getRedirectUris concode_elem_sep void setApplicationWebUri concode_elem_sep void setClientIpAddress concode_elem_sep String getApplicationLogoUri concode_elem_sep void setClientSecret concode_elem_sep void setAllowedGrantTypes concode_elem_sep boolean isConfidential concode_elem_sep String getClientSecret concode_elem_sep void setApplicationName concode_elem_sep Map<String,String> getProperties concode_elem_sep void setRedirectUris concode_elem_sep List<String> getRegisteredAudiences concode_elem_sep void setRegisteredAudiences concode_elem_sep List<String> getApplicationCertificates concode_elem_sep void setClientId", "code_tokens": ["List", "<", "String", ">", "function", "(", ")", "{", "return", "registeredScopes", ";", "}"], "nl_tokens": ["get", "the", "list", "of", "registered", "scopes", "concode_field_sep", "String", "clientIpAddress", "concode_elem_sep", "String", "clientId", "concode_elem_sep", "List", "<", "String", ">", "allowedGrantTypes", "concode_elem_sep", "boolean", "isConfidential", "concode_elem_sep", "List", "<", "String", ">", "applicationCertificates", "concode_elem_sep", "UserSubject", "subject", "concode_elem_sep", "List", "<", "String", ">", "redirectUris", "concode_elem_sep", "List", "<", "String", ">", "registeredScopes", "concode_elem_sep", "String", "applicationLogoUri", "concode_elem_sep", "long", "serialVersionUID", "concode_elem_sep", "String", "applicationDescription", "concode_elem_sep", "List", "<", "String", ">", "registeredAudiences", "concode_elem_sep", "String", "applicationWebUri", "concode_elem_sep", "String", "clientSecret", "concode_elem_sep", "Map", "<", "String", ",", "String", ">", "properties", "concode_elem_sep", "String", "applicationName", "concode_field_sep", "UserSubject", "getSubject", "concode_elem_sep", "String", "getApplicationName", "concode_elem_sep", "void", "setSubject", "concode_elem_sep", "String", "getClientId", "concode_elem_sep", "List", "<", "String", ">", "getAllowedGrantTypes", "concode_elem_sep", "void", "setApplicationDescription", "concode_elem_sep", "void", "setRegisteredScopes", "concode_elem_sep", "void", "setProperties", "concode_elem_sep", "String", "getClientIpAddress", "concode_elem_sep", "String", "getApplicationDescription", "concode_elem_sep", "void", "setApplicationCertificates", "concode_elem_sep", "String", "getApplicationWebUri", "concode_elem_sep", "void", "setApplicationLogoUri", "concode_elem_sep", "void", "setConfidential", "concode_elem_sep", "List", "<", "String", ">", "getRedirectUris", "concode_elem_sep", "void", "setApplicationWebUri", "concode_elem_sep", "void", "setClientIpAddress", "concode_elem_sep", "String", "getApplicationLogoUri", "concode_elem_sep", "void", "setClientSecret", "concode_elem_sep", "void", "setAllowedGrantTypes", "concode_elem_sep", "boolean", "isConfidential", "concode_elem_sep", "String", "getClientSecret", "concode_elem_sep", "void", "setApplicationName", "concode_elem_sep", "Map", "<", "String", ",", "String", ">", "getProperties", "concode_elem_sep", "void", "setRedirectUris", "concode_elem_sep", "List", "<", "String", ">", "getRegisteredAudiences", "concode_elem_sep", "void", "setRegisteredAudiences", "concode_elem_sep", "List", "<", "String", ">", "getApplicationCertificates", "concode_elem_sep", "void", "setClientId"]}
{"code": "JWSAlgorithm function ( JsonObject arg0 , String arg1 ) { String loc0 = getAsString ( arg0 , arg1 ) ; if ( loc0 != null ) { return JWSAlgorithm . parse ( loc0 ) ; } else { return null ; } }", "nl": "gets the value of the given member as a jws algorithm , null if it does n't exist concode_field_sep Gson gson concode_elem_sep Logger logger concode_field_sep JsonElement getAsArray concode_elem_sep JsonElement getAsArray concode_elem_sep Map readMap concode_elem_sep Date getAsDate concode_elem_sep List<EncryptionMethod> getAsEncryptionMethodList concode_elem_sep Set readSet concode_elem_sep String getAsString concode_elem_sep EncryptionMethod getAsJweEncryptionMethod concode_elem_sep Set<String> getAsStringSet concode_elem_sep List<JWEAlgorithm> getAsJweAlgorithmList concode_elem_sep void writeNullSafeArray concode_elem_sep Long getAsLong concode_elem_sep Boolean getAsBoolean concode_elem_sep JWEAlgorithm getAsJweAlgorithm concode_elem_sep List<JWSAlgorithm> getAsJwsAlgorithmList concode_elem_sep List<String> getAsStringList", "code_tokens": ["JWSAlgorithm", "function", "(", "JsonObject", "arg0", ",", "String", "arg1", ")", "{", "String", "loc0", "=", "getAsString", "(", "arg0", ",", "arg1", ")", ";", "if", "(", "loc0", "!=", "null", ")", "{", "return", "JWSAlgorithm", ".", "parse", "(", "loc0", ")", ";", "}", "else", "{", "return", "null", ";", "}", "}"], "nl_tokens": ["gets", "the", "value", "of", "the", "given", "member", "as", "a", "jws", "algorithm", ",", "null", "if", "it", "does", "n", "'", "t", "exist", "concode_field_sep", "Gson", "gson", "concode_elem_sep", "Logger", "logger", "concode_field_sep", "JsonElement", "getAsArray", "concode_elem_sep", "JsonElement", "getAsArray", "concode_elem_sep", "Map", "readMap", "concode_elem_sep", "Date", "getAsDate", "concode_elem_sep", "List", "<", "EncryptionMethod", ">", "getAsEncryptionMethodList", "concode_elem_sep", "Set", "readSet", "concode_elem_sep", "String", "getAsString", "concode_elem_sep", "EncryptionMethod", "getAsJweEncryptionMethod", "concode_elem_sep", "Set", "<", "String", ">", "getAsStringSet", "concode_elem_sep", "List", "<", "JWEAlgorithm", ">", "getAsJweAlgorithmList", "concode_elem_sep", "void", "writeNullSafeArray", "concode_elem_sep", "Long", "getAsLong", "concode_elem_sep", "Boolean", "getAsBoolean", "concode_elem_sep", "JWEAlgorithm", "getAsJweAlgorithm", "concode_elem_sep", "List", "<", "JWSAlgorithm", ">", "getAsJwsAlgorithmList", "concode_elem_sep", "List", "<", "String", ">", "getAsStringList"]}
{"code": "List < String > function ( ) { return acceptedEncryptionAlgorithms ; }", "nl": "get the list of accepted encryption algorithms . a request can contain a wst : encryptionalgorithm uri to use to encrypt an issued token . the algorithm specified must be contained in this list . the default algorithms are 3-des , aes-128 , aes-128 gcm , aes-192 , aes-192 gcm , aes-256 and aes-256 gcm . concode_field_sep String keyWrapAlgorithm concode_elem_sep int keyIdentifierType concode_elem_sep List<String> acceptedKeyWrapAlgorithms concode_elem_sep String encryptionName concode_elem_sep List<String> acceptedEncryptionAlgorithms concode_elem_sep String encryptionAlgorithm concode_field_sep void setEncryptionName concode_elem_sep String getEncryptionAlgorithm concode_elem_sep void setAcceptedKeyWrapAlgorithms concode_elem_sep List<String> getAcceptedKeyWrapAlgorithms concode_elem_sep String getKeyWrapAlgorithm concode_elem_sep void setKeyWrapAlgorithm concode_elem_sep int getKeyIdentifierType concode_elem_sep void setAcceptedEncryptionAlgorithms concode_elem_sep void setKeyIdentifierType concode_elem_sep void setEncryptionAlgorithm concode_elem_sep String getEncryptionName", "code_tokens": ["List", "<", "String", ">", "function", "(", ")", "{", "return", "acceptedEncryptionAlgorithms", ";", "}"], "nl_tokens": ["get", "the", "list", "of", "accepted", "encryption", "algorithms", ".", "a", "request", "can", "contain", "a", "wst", ":", "encryptionalgorithm", "uri", "to", "use", "to", "encrypt", "an", "issued", "token", ".", "the", "algorithm", "specified", "must", "be", "contained", "in", "this", "list", ".", "the", "default", "algorithms", "are", "3", "-", "des", ",", "aes", "-", "128", ",", "aes", "-", "128", "gcm", ",", "aes", "-", "192", ",", "aes", "-", "192", "gcm", ",", "aes", "-", "256", "and", "aes", "-", "256", "gcm", ".", "concode_field_sep", "String", "keyWrapAlgorithm", "concode_elem_sep", "int", "keyIdentifierType", "concode_elem_sep", "List", "<", "String", ">", "acceptedKeyWrapAlgorithms", "concode_elem_sep", "String", "encryptionName", "concode_elem_sep", "List", "<", "String", ">", "acceptedEncryptionAlgorithms", "concode_elem_sep", "String", "encryptionAlgorithm", "concode_field_sep", "void", "setEncryptionName", "concode_elem_sep", "String", "getEncryptionAlgorithm", "concode_elem_sep", "void", "setAcceptedKeyWrapAlgorithms", "concode_elem_sep", "List", "<", "String", ">", "getAcceptedKeyWrapAlgorithms", "concode_elem_sep", "String", "getKeyWrapAlgorithm", "concode_elem_sep", "void", "setKeyWrapAlgorithm", "concode_elem_sep", "int", "getKeyIdentifierType", "concode_elem_sep", "void", "setAcceptedEncryptionAlgorithms", "concode_elem_sep", "void", "setKeyIdentifierType", "concode_elem_sep", "void", "setEncryptionAlgorithm", "concode_elem_sep", "String", "getEncryptionName"]}
{"code": "InetSocketAddress [ ] function ( long arg0 , TimeUnit arg1 ) { try { return allPeers ( ) ; } catch ( UnknownHostException loc0 ) { throw new PeerDiscoveryException ( loc0 ) ; } }", "nl": "returns an array containing all the bitcoin nodes within the list . concode_field_sep int pnseedIndex concode_elem_sep int[] seedAddrs concode_elem_sep NetworkParameters params concode_field_sep InetSocketAddress nextPeer concode_elem_sep InetSocketAddress[] allPeers concode_elem_sep InetSocketAddress getPeer concode_elem_sep InetAddress convertAddress concode_elem_sep void shutdown", "code_tokens": ["InetSocketAddress", "[", "]", "function", "(", "long", "arg0", ",", "TimeUnit", "arg1", ")", "{", "try", "{", "return", "allPeers", "(", ")", ";", "}", "catch", "(", "UnknownHostException", "loc0", ")", "{", "throw", "new", "PeerDiscoveryException", "(", "loc0", ")", ";", "}", "}"], "nl_tokens": ["returns", "an", "array", "containing", "all", "the", "bitcoin", "nodes", "within", "the", "list", ".", "concode_field_sep", "int", "pnseedIndex", "concode_elem_sep", "int", "[", "]", "seedAddrs", "concode_elem_sep", "NetworkParameters", "params", "concode_field_sep", "InetSocketAddress", "nextPeer", "concode_elem_sep", "InetSocketAddress", "[", "]", "allPeers", "concode_elem_sep", "InetSocketAddress", "getPeer", "concode_elem_sep", "InetAddress", "convertAddress", "concode_elem_sep", "void", "shutdown"]}
{"code": "void function ( byte [ ] arg0 , int arg1 , int arg2 ) { format . checkType ( 'U' , false ) ; getByteArrayInternal ( getByteArrayLength ( ) , arg0 , arg1 , arg2 ) ; }", "nl": "retrieves a byte array field from the stream . \\ param dest the byte array where the returned value will be stored . \\ param off offset into the destination buffer to start copying into . \\ param len the length should be large enough to store the entire data item , if it is not , a truncated value will be returned . concode_field_sep int valueLen concode_elem_sep PackFormatInputStream format concode_elem_sep int valueOff concode_elem_sep byte[] value concode_field_sep void getByteArrayInternal concode_elem_sep int getByteArrayLength concode_elem_sep byte getByte concode_elem_sep short getShort concode_elem_sep String getString concode_elem_sep long getLong concode_elem_sep byte[] getValue concode_elem_sep int getInt concode_elem_sep int unpackInt concode_elem_sep short unpackShort concode_elem_sep String getFormat concode_elem_sep long getRecord concode_elem_sep long unpackLong", "code_tokens": ["void", "function", "(", "byte", "[", "]", "arg0", ",", "int", "arg1", ",", "int", "arg2", ")", "{", "format", ".", "checkType", "(", "'U'", ",", "false", ")", ";", "getByteArrayInternal", "(", "getByteArrayLength", "(", ")", ",", "arg0", ",", "arg1", ",", "arg2", ")", ";", "}"], "nl_tokens": ["retrieves", "a", "byte", "array", "field", "from", "the", "stream", ".", "\\", "param", "dest", "the", "byte", "array", "where", "the", "returned", "value", "will", "be", "stored", ".", "\\", "param", "off", "offset", "into", "the", "destination", "buffer", "to", "start", "copying", "into", ".", "\\", "param", "len", "the", "length", "should", "be", "large", "enough", "to", "store", "the", "entire", "data", "item", ",", "if", "it", "is", "not", ",", "a", "truncated", "value", "will", "be", "returned", ".", "concode_field_sep", "int", "valueLen", "concode_elem_sep", "PackFormatInputStream", "format", "concode_elem_sep", "int", "valueOff", "concode_elem_sep", "byte", "[", "]", "value", "concode_field_sep", "void", "getByteArrayInternal", "concode_elem_sep", "int", "getByteArrayLength", "concode_elem_sep", "byte", "getByte", "concode_elem_sep", "short", "getShort", "concode_elem_sep", "String", "getString", "concode_elem_sep", "long", "getLong", "concode_elem_sep", "byte", "[", "]", "getValue", "concode_elem_sep", "int", "getInt", "concode_elem_sep", "int", "unpackInt", "concode_elem_sep", "short", "unpackShort", "concode_elem_sep", "String", "getFormat", "concode_elem_sep", "long", "getRecord", "concode_elem_sep", "long", "unpackLong"]}
{"code": "void function ( ) { assertEquals ( 1.2 , hdg . getDeviation ( ) , 0.1 ) ; }", "nl": "test method for net.sf.marineapi.nmea.parser.hdgparser #getdeviation . concode_field_sep HDGSentence hdg concode_elem_sep String EXAMPLE concode_field_sep void testSetDeviationTooHigh concode_elem_sep void testSetHeadingTooHigh concode_elem_sep void testIsTrue concode_elem_sep void testSetHeading concode_elem_sep void testHDGParserTalkerId concode_elem_sep void testSetVariationWest concode_elem_sep void testConstructor concode_elem_sep void testSetVariationTooLow concode_elem_sep void testGetVariation concode_elem_sep void testSetVariationTooHigh concode_elem_sep void testSetVariationEast concode_elem_sep void testSetDeviationTooLow concode_elem_sep void setUp concode_elem_sep void testGetHeading concode_elem_sep void testSetDeviationEast concode_elem_sep void testHDGParserString concode_elem_sep void testSetDeviationWest concode_elem_sep void testSetHeadingTooLow", "code_tokens": ["void", "function", "(", ")", "{", "assertEquals", "(", "1.2", ",", "hdg", ".", "getDeviation", "(", ")", ",", "0.1", ")", ";", "}"], "nl_tokens": ["test", "method", "for", "net", ".", "sf", ".", "marineapi", ".", "nmea", ".", "parser", ".", "hdgparser", "#getdeviation . concode_field_sep HDGSentence hdg concode_elem_sep String EXAMPLE concode_field_sep void testSetDeviationTooHigh concode_elem_sep void testSetHeadingTooHigh concode_elem_sep void testIsTrue concode_elem_sep void testSetHeading concode_elem_sep void testHDGParserTalkerId concode_elem_sep void testSetVariationWest concode_elem_sep void testConstructor concode_elem_sep void testSetVariationTooLow concode_elem_sep void testGetVariation concode_elem_sep void testSetVariationTooHigh concode_elem_sep void testSetVariationEast concode_elem_sep void testSetDeviationTooLow concode_elem_sep void setUp concode_elem_sep void testGetHeading concode_elem_sep void testSetDeviationEast concode_elem_sep void testHDGParserString concode_elem_sep void testSetDeviationWest concode_elem_sep void testSetHeadingTooLow"]}
{"code": "boolean function ( final MoverDState < DsT > arg0 ) { final MoverDState . VisitorAdapter < Boolean , DsT > loc0 = new MoverDState . VisitorAdapter < Boolean , DsT > ( Boolean . FALSE ) { @ Override public Boolean visitDownloading ( final Downloading < DsT > downloadingState ) { return Boolean . TRUE ; } } ; return arg0 . accept ( loc0 ) . booleanValue ( ) ; }", "nl": "returns whether a given state is the downloading state . concode_field_sep Logger LOG concode_field_sep File determineFile concode_elem_sep File determineFile concode_elem_sep File defaultFile concode_elem_sep HeadMethod issueHeadRequest concode_elem_sep boolean isMoved concode_elem_sep File downloadTorrentFile", "code_tokens": ["boolean", "function", "(", "final", "MoverDState", "<", "DsT", ">", "arg0", ")", "{", "final", "MoverDState", ".", "VisitorAdapter", "<", "Boolean", ",", "DsT", ">", "loc0", "=", "new", "MoverDState", ".", "VisitorAdapter", "<", "Boolean", ",", "DsT", ">", "(", "Boolean", ".", "FALSE", ")", "{", "@", "Override", "public", "Boolean", "visitDownloading", "(", "final", "Downloading", "<", "DsT", ">", "downloadingState", ")", "{", "return", "Boolean", ".", "TRUE", ";", "}", "}", ";", "return", "arg0", ".", "accept", "(", "loc0", ")", ".", "booleanValue", "(", ")", ";", "}"], "nl_tokens": ["returns", "whether", "a", "given", "state", "is", "the", "downloading", "state", ".", "concode_field_sep", "Logger", "LOG", "concode_field_sep", "File", "determineFile", "concode_elem_sep", "File", "determineFile", "concode_elem_sep", "File", "defaultFile", "concode_elem_sep", "HeadMethod", "issueHeadRequest", "concode_elem_sep", "boolean", "isMoved", "concode_elem_sep", "File", "downloadTorrentFile"]}
{"code": "void function ( String arg0 , String arg1 ) { Files . setPosixFilePermissions ( Paths . get ( arg0 ) , PosixFilePermissions . fromString ( arg1 ) ) ; }", "nl": "changes local file 's permission . concode_field_sep Logger LOG concode_field_sep void setLocalDirStickyBit concode_elem_sep void move concode_elem_sep short getLocalFileMode concode_elem_sep void changeLocalFileUser concode_elem_sep void delete concode_elem_sep String getLocalFileOwner concode_elem_sep void createFile concode_elem_sep void createStorageDirPath concode_elem_sep void changeLocalFileToFullPermission concode_elem_sep void changeLocalFileGroup concode_elem_sep String getLocalFileGroup concode_elem_sep void createDir concode_elem_sep boolean exists concode_elem_sep void createBlockPath concode_elem_sep void deletePathRecursively", "code_tokens": ["void", "function", "(", "String", "arg0", ",", "String", "arg1", ")", "{", "Files", ".", "setPosixFilePermissions", "(", "Paths", ".", "get", "(", "arg0", ")", ",", "PosixFilePermissions", ".", "fromString", "(", "arg1", ")", ")", ";", "}"], "nl_tokens": ["changes", "local", "file", "'", "s", "permission", ".", "concode_field_sep", "Logger", "LOG", "concode_field_sep", "void", "setLocalDirStickyBit", "concode_elem_sep", "void", "move", "concode_elem_sep", "short", "getLocalFileMode", "concode_elem_sep", "void", "changeLocalFileUser", "concode_elem_sep", "void", "delete", "concode_elem_sep", "String", "getLocalFileOwner", "concode_elem_sep", "void", "createFile", "concode_elem_sep", "void", "createStorageDirPath", "concode_elem_sep", "void", "changeLocalFileToFullPermission", "concode_elem_sep", "void", "changeLocalFileGroup", "concode_elem_sep", "String", "getLocalFileGroup", "concode_elem_sep", "void", "createDir", "concode_elem_sep", "boolean", "exists", "concode_elem_sep", "void", "createBlockPath", "concode_elem_sep", "void", "deletePathRecursively"]}
{"code": "void function ( ) { ResourceSet loc0 = new ResourceSet ( ) ; loc0 . setId ( 1L ) ; resourceSetService . saveNew ( loc0 ) ; }", "nl": "test method for org.mitre.uma.service.impl.defaultresourcesetservice #savenew org.mitre.uma.model.resourceset . concode_field_sep ResourceSetRepository repository concode_elem_sep DefaultResourceSetService resourceSetService concode_field_sep void testUpdate_nullId2 concode_elem_sep void setUp concode_elem_sep void testUpdate_mismatchedIds concode_elem_sep void testUpdate_nullId", "code_tokens": ["void", "function", "(", ")", "{", "ResourceSet", "loc0", "=", "new", "ResourceSet", "(", ")", ";", "loc0", ".", "setId", "(", "1", "L", ")", ";", "resourceSetService", ".", "saveNew", "(", "loc0", ")", ";", "}"], "nl_tokens": ["test", "method", "for", "org", ".", "mitre", ".", "uma", ".", "service", ".", "impl", ".", "defaultresourcesetservice", "#savenew org.mitre.uma.model.resourceset . concode_field_sep ResourceSetRepository repository concode_elem_sep DefaultResourceSetService resourceSetService concode_field_sep void testUpdate_nullId2 concode_elem_sep void setUp concode_elem_sep void testUpdate_mismatchedIds concode_elem_sep void testUpdate_nullId"]}
{"code": "boolean function ( String arg0 ) { File loc0 = new File ( arg0 ) ; if ( loc0 . exists ( ) ) { return true ; } return false ; }", "nl": "check whether a given file exists in the system concode_field_sep FileBasedConfigManager instance concode_elem_sep Log log concode_field_sep String getTextValue concode_elem_sep List<String> getTextValueList concode_elem_sep FileBasedConfigManager getInstance concode_elem_sep void addServiceProviders concode_elem_sep SAMLSSOServiceProviderDO[] readServiceProvidersFromFile", "code_tokens": ["boolean", "function", "(", "String", "arg0", ")", "{", "File", "loc0", "=", "new", "File", "(", "arg0", ")", ";", "if", "(", "loc0", ".", "exists", "(", ")", ")", "{", "return", "true", ";", "}", "return", "false", ";", "}"], "nl_tokens": ["check", "whether", "a", "given", "file", "exists", "in", "the", "system", "concode_field_sep", "FileBasedConfigManager", "instance", "concode_elem_sep", "Log", "log", "concode_field_sep", "String", "getTextValue", "concode_elem_sep", "List", "<", "String", ">", "getTextValueList", "concode_elem_sep", "FileBasedConfigManager", "getInstance", "concode_elem_sep", "void", "addServiceProviders", "concode_elem_sep", "SAMLSSOServiceProviderDO", "[", "]", "readServiceProvidersFromFile"]}
{"code": "void function ( int arg0 ) { format . checkType ( 'i' , true ) ; packLong ( arg0 , true ) ; }", "nl": "add an integer field to the stream . \\ param value the integer value to be added . concode_field_sep boolean isRaw concode_elem_sep byte[] intBuf concode_elem_sep int MAX_INT_BYTES concode_elem_sep PackFormatInputStream format concode_elem_sep ByteArrayOutputStream packed concode_field_sep byte[] getValue concode_elem_sep void packLong concode_elem_sep void addShort concode_elem_sep void reset concode_elem_sep String getFormat concode_elem_sep void addByte concode_elem_sep void addLong concode_elem_sep void addRecord concode_elem_sep void addByteArray concode_elem_sep void addByteArray concode_elem_sep void addString", "code_tokens": ["void", "function", "(", "int", "arg0", ")", "{", "format", ".", "checkType", "(", "'i'", ",", "true", ")", ";", "packLong", "(", "arg0", ",", "true", ")", ";", "}"], "nl_tokens": ["add", "an", "integer", "field", "to", "the", "stream", ".", "\\", "param", "value", "the", "integer", "value", "to", "be", "added", ".", "concode_field_sep", "boolean", "isRaw", "concode_elem_sep", "byte", "[", "]", "intBuf", "concode_elem_sep", "int", "MAX_INT_BYTES", "concode_elem_sep", "PackFormatInputStream", "format", "concode_elem_sep", "ByteArrayOutputStream", "packed", "concode_field_sep", "byte", "[", "]", "getValue", "concode_elem_sep", "void", "packLong", "concode_elem_sep", "void", "addShort", "concode_elem_sep", "void", "reset", "concode_elem_sep", "String", "getFormat", "concode_elem_sep", "void", "addByte", "concode_elem_sep", "void", "addLong", "concode_elem_sep", "void", "addRecord", "concode_elem_sep", "void", "addByteArray", "concode_elem_sep", "void", "addByteArray", "concode_elem_sep", "void", "addString"]}
{"code": "void function ( ) { initializeModelImplementation ( \"srini_string\" ) ; }", "nl": "initialize the model subsystem with the mdr modelimplementation . concode_field_sep String DEFAULT_MODEL_IMPLEMENTATION concode_field_sep void initializeEUML concode_elem_sep ModelImplementation initializeModelImplementation concode_elem_sep void initializeDefault", "code_tokens": ["void", "function", "(", ")", "{", "initializeModelImplementation", "(", "\"srini_string\"", ")", ";", "}"], "nl_tokens": ["initialize", "the", "model", "subsystem", "with", "the", "mdr", "modelimplementation", ".", "concode_field_sep", "String", "DEFAULT_MODEL_IMPLEMENTATION", "concode_field_sep", "void", "initializeEUML", "concode_elem_sep", "ModelImplementation", "initializeModelImplementation", "concode_elem_sep", "void", "initializeDefault"]}
{"code": "void function ( ) { try { rte . setSentenceIndex ( - 1 ) ; fail ( \"srini_string\" ) ; } catch ( IllegalArgumentException loc0 ) { assertTrue ( loc0 . getMessage ( ) . contains ( \"srini_string\" ) ) ; } catch ( Exception loc0 ) { fail ( loc0 . getMessage ( ) ) ; } }", "nl": "test method for net.sf.marineapi.nmea.parser.rteparser #setsentenceindex int . concode_field_sep RTESentence rte concode_elem_sep String EXAMPLE concode_elem_sep RTESentence empty concode_field_sep void testGetWaypointIds concode_elem_sep void testIsActiveRoute concode_elem_sep void testIsFirst concode_elem_sep void testGetSentenceIndex concode_elem_sep void testConstructor concode_elem_sep void testSetSentenceCountWithNegativeValue concode_elem_sep void testAddWaypointId concode_elem_sep void testGetSentenceCount concode_elem_sep void testSetWaypointIds concode_elem_sep void testSetRouteId concode_elem_sep void testIsWorkingRoute concode_elem_sep void testSetSentenceCount concode_elem_sep void testGetRouteId concode_elem_sep void testSetRouteTypeActive concode_elem_sep void setUp concode_elem_sep void testIsLast concode_elem_sep void testGetWaypointCount concode_elem_sep void testSetSentenceIndex concode_elem_sep void testSetRouteTypeWorking", "code_tokens": ["void", "function", "(", ")", "{", "try", "{", "rte", ".", "setSentenceIndex", "(", "-", "1", ")", ";", "fail", "(", "\"srini_string\"", ")", ";", "}", "catch", "(", "IllegalArgumentException", "loc0", ")", "{", "assertTrue", "(", "loc0", ".", "getMessage", "(", ")", ".", "contains", "(", "\"srini_string\"", ")", ")", ";", "}", "catch", "(", "Exception", "loc0", ")", "{", "fail", "(", "loc0", ".", "getMessage", "(", ")", ")", ";", "}", "}"], "nl_tokens": ["test", "method", "for", "net", ".", "sf", ".", "marineapi", ".", "nmea", ".", "parser", ".", "rteparser", "#setsentenceindex int . concode_field_sep RTESentence rte concode_elem_sep String EXAMPLE concode_elem_sep RTESentence empty concode_field_sep void testGetWaypointIds concode_elem_sep void testIsActiveRoute concode_elem_sep void testIsFirst concode_elem_sep void testGetSentenceIndex concode_elem_sep void testConstructor concode_elem_sep void testSetSentenceCountWithNegativeValue concode_elem_sep void testAddWaypointId concode_elem_sep void testGetSentenceCount concode_elem_sep void testSetWaypointIds concode_elem_sep void testSetRouteId concode_elem_sep void testIsWorkingRoute concode_elem_sep void testSetSentenceCount concode_elem_sep void testGetRouteId concode_elem_sep void testSetRouteTypeActive concode_elem_sep void setUp concode_elem_sep void testIsLast concode_elem_sep void testGetWaypointCount concode_elem_sep void testSetSentenceIndex concode_elem_sep void testSetRouteTypeWorking"]}
{"code": "ResourceTypeHandler function ( final String arg0 ) { ResourceTypeHandler loc0 = getResourceType ( arg0 ) ; return loc0 == null ? FILE : loc0 ; }", "nl": "tries to determine resourcetype from string and return #file ifprovided string is invalid . concode_field_sep Map<String,ResourceTypeHandler> types concode_elem_sep ResourceTypeHandler FLASH concode_elem_sep ResourceTypeHandler MEDIA concode_elem_sep ResourceTypeHandler FILE concode_elem_sep String name concode_elem_sep ResourceTypeHandler IMAGE concode_elem_sep Map<ResourceTypeHandler,String> paths concode_field_sep String getName concode_elem_sep ResourceTypeHandler valueOf concode_elem_sep int hashCode concode_elem_sep boolean isValid concode_elem_sep ResourceTypeHandler getResourceType concode_elem_sep boolean equals concode_elem_sep String getPath concode_elem_sep String toString", "code_tokens": ["ResourceTypeHandler", "function", "(", "final", "String", "arg0", ")", "{", "ResourceTypeHandler", "loc0", "=", "getResourceType", "(", "arg0", ")", ";", "return", "loc0", "==", "null", "?", "FILE", ":", "loc0", ";", "}"], "nl_tokens": ["tries", "to", "determine", "resourcetype", "from", "string", "and", "return", "#file ifprovided string is invalid . concode_field_sep Map<String,ResourceTypeHandler> types concode_elem_sep ResourceTypeHandler FLASH concode_elem_sep ResourceTypeHandler MEDIA concode_elem_sep ResourceTypeHandler FILE concode_elem_sep String name concode_elem_sep ResourceTypeHandler IMAGE concode_elem_sep Map<ResourceTypeHandler,String> paths concode_field_sep String getName concode_elem_sep ResourceTypeHandler valueOf concode_elem_sep int hashCode concode_elem_sep boolean isValid concode_elem_sep ResourceTypeHandler getResourceType concode_elem_sep boolean equals concode_elem_sep String getPath concode_elem_sep String toString"]}
{"code": "Constant function ( String arg0 ) { if ( sch . type ( arg0 ) == INTEGER ) return new IntConstant ( rf . getInt ( arg0 ) ) ; else return new StringConstant ( rf . getString ( arg0 ) ) ; }", "nl": "returns the value of the specified field , as a constant . the schema is examined to determine the field 's type . if integer , then the record file 's getint method is called ; otherwise , the getstring method is called . concode_field_sep RecordFile rf concode_elem_sep Schema sch concode_field_sep boolean next concode_elem_sep void beforeFirst concode_elem_sep void insert concode_elem_sep String getString concode_elem_sep void delete concode_elem_sep void setInt concode_elem_sep void moveToRid concode_elem_sep int getInt concode_elem_sep void setString concode_elem_sep void close concode_elem_sep void setVal concode_elem_sep boolean hasField concode_elem_sep RID getRid", "code_tokens": ["Constant", "function", "(", "String", "arg0", ")", "{", "if", "(", "sch", ".", "type", "(", "arg0", ")", "==", "INTEGER", ")", "return", "new", "IntConstant", "(", "rf", ".", "getInt", "(", "arg0", ")", ")", ";", "else", "return", "new", "StringConstant", "(", "rf", ".", "getString", "(", "arg0", ")", ")", ";", "}"], "nl_tokens": ["returns", "the", "value", "of", "the", "specified", "field", ",", "as", "a", "constant", ".", "the", "schema", "is", "examined", "to", "determine", "the", "field", "'s type . if integer , then the record file '", "s", "getint", "method", "is", "called", ";", "otherwise", ",", "the", "getstring", "method", "is", "called", ".", "concode_field_sep", "RecordFile", "rf", "concode_elem_sep", "Schema", "sch", "concode_field_sep", "boolean", "next", "concode_elem_sep", "void", "beforeFirst", "concode_elem_sep", "void", "insert", "concode_elem_sep", "String", "getString", "concode_elem_sep", "void", "delete", "concode_elem_sep", "void", "setInt", "concode_elem_sep", "void", "moveToRid", "concode_elem_sep", "int", "getInt", "concode_elem_sep", "void", "setString", "concode_elem_sep", "void", "close", "concode_elem_sep", "void", "setVal", "concode_elem_sep", "boolean", "hasField", "concode_elem_sep", "RID", "getRid"]}
{"code": "String function ( long arg0 , String arg1 ) { return arg1 + \"srini_string\" + ( System . nanoTime ( ) - arg0 ) + \"srini_string\" ; }", "nl": "formats time elapsed since the given start time in nanoseconds . concode_field_sep PlaceHolder placeHolder concode_field_sep String getSizeFromBytes concode_elem_sep long parseSpaceSize concode_elem_sep String parametersToString concode_elem_sep String byteBufferToString concode_elem_sep String formatMode concode_elem_sep String formatTimeTakenMs concode_elem_sep String byteArrayToHexString concode_elem_sep String byteArrayToHexString", "code_tokens": ["String", "function", "(", "long", "arg0", ",", "String", "arg1", ")", "{", "return", "arg1", "+", "\"srini_string\"", "+", "(", "System", ".", "nanoTime", "(", ")", "-", "arg0", ")", "+", "\"srini_string\"", ";", "}"], "nl_tokens": ["formats", "time", "elapsed", "since", "the", "given", "start", "time", "in", "nanoseconds", ".", "concode_field_sep", "PlaceHolder", "placeHolder", "concode_field_sep", "String", "getSizeFromBytes", "concode_elem_sep", "long", "parseSpaceSize", "concode_elem_sep", "String", "parametersToString", "concode_elem_sep", "String", "byteBufferToString", "concode_elem_sep", "String", "formatMode", "concode_elem_sep", "String", "formatTimeTakenMs", "concode_elem_sep", "String", "byteArrayToHexString", "concode_elem_sep", "String", "byteArrayToHexString"]}
{"code": "void function ( ) { try { dataStore . flushEvents ( ) ; if ( monitor != null ) { monitor . clientFlushedEvents ( - 1 , System . currentTimeMillis ( ) ) ; } } catch ( final DataException loc0 ) { loc0 . printStackTrace ( ) ; } }", "nl": "flushes the events from the datastore . concode_field_sep boolean run concode_elem_sep ArrayList<ServerSocket> serverSockets concode_elem_sep String savePath concode_elem_sep boolean disconnectedOnPurpose concode_elem_sep ServerSocket serverSocket concode_elem_sep int dataBufSize concode_elem_sep int eventBufSize concode_elem_sep FieldtripBufferMonitor monitor concode_elem_sep int nextClientID concode_elem_sep int eventBufSize concode_elem_sep int serverPort concode_elem_sep int portNumber concode_elem_sep int dataBufSize concode_elem_sep int serverPort concode_elem_sep ArrayList<ConnectionThread> threads concode_elem_sep DataModel dataStore concode_elem_sep int logging concode_elem_sep BufferServer buffer concode_field_sep void Start concode_elem_sep void Start concode_elem_sep void Start concode_elem_sep void Start concode_elem_sep void Start concode_elem_sep void Start concode_elem_sep void usage concode_elem_sep void listAllServerSockets concode_elem_sep void BufferServerStart concode_elem_sep void run concode_elem_sep void run concode_elem_sep void flushSamples concode_elem_sep void closeConnection concode_elem_sep void removeConnection concode_elem_sep void cleanup concode_elem_sep void addMonitor concode_elem_sep void removeAllServerSockets concode_elem_sep boolean putHeader concode_elem_sep void flushHeader concode_elem_sep void stopBuffer", "code_tokens": ["void", "function", "(", ")", "{", "try", "{", "dataStore", ".", "flushEvents", "(", ")", ";", "if", "(", "monitor", "!=", "null", ")", "{", "monitor", ".", "clientFlushedEvents", "(", "-", "1", ",", "System", ".", "currentTimeMillis", "(", ")", ")", ";", "}", "}", "catch", "(", "final", "DataException", "loc0", ")", "{", "loc0", ".", "printStackTrace", "(", ")", ";", "}", "}"], "nl_tokens": ["flushes", "the", "events", "from", "the", "datastore", ".", "concode_field_sep", "boolean", "run", "concode_elem_sep", "ArrayList", "<", "ServerSocket", ">", "serverSockets", "concode_elem_sep", "String", "savePath", "concode_elem_sep", "boolean", "disconnectedOnPurpose", "concode_elem_sep", "ServerSocket", "serverSocket", "concode_elem_sep", "int", "dataBufSize", "concode_elem_sep", "int", "eventBufSize", "concode_elem_sep", "FieldtripBufferMonitor", "monitor", "concode_elem_sep", "int", "nextClientID", "concode_elem_sep", "int", "eventBufSize", "concode_elem_sep", "int", "serverPort", "concode_elem_sep", "int", "portNumber", "concode_elem_sep", "int", "dataBufSize", "concode_elem_sep", "int", "serverPort", "concode_elem_sep", "ArrayList", "<", "ConnectionThread", ">", "threads", "concode_elem_sep", "DataModel", "dataStore", "concode_elem_sep", "int", "logging", "concode_elem_sep", "BufferServer", "buffer", "concode_field_sep", "void", "Start", "concode_elem_sep", "void", "Start", "concode_elem_sep", "void", "Start", "concode_elem_sep", "void", "Start", "concode_elem_sep", "void", "Start", "concode_elem_sep", "void", "Start", "concode_elem_sep", "void", "usage", "concode_elem_sep", "void", "listAllServerSockets", "concode_elem_sep", "void", "BufferServerStart", "concode_elem_sep", "void", "run", "concode_elem_sep", "void", "run", "concode_elem_sep", "void", "flushSamples", "concode_elem_sep", "void", "closeConnection", "concode_elem_sep", "void", "removeConnection", "concode_elem_sep", "void", "cleanup", "concode_elem_sep", "void", "addMonitor", "concode_elem_sep", "void", "removeAllServerSockets", "concode_elem_sep", "boolean", "putHeader", "concode_elem_sep", "void", "flushHeader", "concode_elem_sep", "void", "stopBuffer"]}
{"code": "void function ( ) { Date loc0 = new Date ( ) ; time . setTime ( loc0 ) ; Date loc1 = time . toDate ( loc0 ) ; assertEquals ( loc0 , loc1 ) ; assertEquals ( loc0 . getTime ( ) , loc1 . getTime ( ) ) ; }", "nl": "test method for settime and todate round-trip . concode_field_sep Time time concode_field_sep void testParseTimeWithOneDecimal concode_elem_sep void testSetNegativeMinutes concode_elem_sep void testFormatTimeWithOneDecimal concode_elem_sep void testSetMinutes concode_elem_sep void testParseTimeWithoutDecimals concode_elem_sep void testGetMinutes concode_elem_sep void testParseTimeWithDecimals concode_elem_sep void testSetInvalidSeconds concode_elem_sep void testSetNegativeHour concode_elem_sep void testToDate concode_elem_sep void testGetSeconds concode_elem_sep void testSetHour concode_elem_sep void testGetHour concode_elem_sep void testSetSeconds concode_elem_sep void testSetTime concode_elem_sep void testGetMilliseconds concode_elem_sep void testSetInvalidHour concode_elem_sep void testSetNegativeSeconds concode_elem_sep void setUp concode_elem_sep void testSetInvalidMinutes concode_elem_sep void testFormatTimeNoDecimals concode_elem_sep void testFormatTimeWithDecimals concode_elem_sep void testEquals", "code_tokens": ["void", "function", "(", ")", "{", "Date", "loc0", "=", "new", "Date", "(", ")", ";", "time", ".", "setTime", "(", "loc0", ")", ";", "Date", "loc1", "=", "time", ".", "toDate", "(", "loc0", ")", ";", "assertEquals", "(", "loc0", ",", "loc1", ")", ";", "assertEquals", "(", "loc0", ".", "getTime", "(", ")", ",", "loc1", ".", "getTime", "(", ")", ")", ";", "}"], "nl_tokens": ["test", "method", "for", "settime", "and", "todate", "round", "-", "trip", ".", "concode_field_sep", "Time", "time", "concode_field_sep", "void", "testParseTimeWithOneDecimal", "concode_elem_sep", "void", "testSetNegativeMinutes", "concode_elem_sep", "void", "testFormatTimeWithOneDecimal", "concode_elem_sep", "void", "testSetMinutes", "concode_elem_sep", "void", "testParseTimeWithoutDecimals", "concode_elem_sep", "void", "testGetMinutes", "concode_elem_sep", "void", "testParseTimeWithDecimals", "concode_elem_sep", "void", "testSetInvalidSeconds", "concode_elem_sep", "void", "testSetNegativeHour", "concode_elem_sep", "void", "testToDate", "concode_elem_sep", "void", "testGetSeconds", "concode_elem_sep", "void", "testSetHour", "concode_elem_sep", "void", "testGetHour", "concode_elem_sep", "void", "testSetSeconds", "concode_elem_sep", "void", "testSetTime", "concode_elem_sep", "void", "testGetMilliseconds", "concode_elem_sep", "void", "testSetInvalidHour", "concode_elem_sep", "void", "testSetNegativeSeconds", "concode_elem_sep", "void", "setUp", "concode_elem_sep", "void", "testSetInvalidMinutes", "concode_elem_sep", "void", "testFormatTimeNoDecimals", "concode_elem_sep", "void", "testFormatTimeWithDecimals", "concode_elem_sep", "void", "testEquals"]}
{"code": "TiledMap function ( String arg0 , String arg1 ) { TiledMap loc0 = null ; if ( this . rpgMaps != null && FileMap . resourcesToDirectory . containsKey ( arg1 ) ) { loc0 = game . getAssets ( ) . get ( FileMap . resourcesToDirectory . get ( arg1 ) + arg0 + \"srini_string\" , TiledMap . class ) ; } return loc0 ; }", "nl": "retrieves a tiled map . tmx from the system . concode_field_sep ShadowStruggles game concode_elem_sep Array<Asset> textures concode_elem_sep Array<Asset> sounds concode_elem_sep Array<Asset> rpgMaps concode_elem_sep String assetName concode_elem_sep Array<Asset> textureRegions concode_elem_sep String LOG concode_elem_sep String assetType concode_field_sep void loadMaps concode_elem_sep void disposeSounds concode_elem_sep TextureRegion getTextureRegion concode_elem_sep void disposeTextures concode_elem_sep void disposeMaps concode_elem_sep Texture getTexture concode_elem_sep void unloadSounds concode_elem_sep void loadSounds concode_elem_sep boolean equals concode_elem_sep void setAssetsToLoad concode_elem_sep void loadAssets concode_elem_sep void dispose concode_elem_sep void loadTextureAtlas concode_elem_sep void createTextureAtlas concode_elem_sep void disposeAtlas concode_elem_sep void loadTextures", "code_tokens": ["TiledMap", "function", "(", "String", "arg0", ",", "String", "arg1", ")", "{", "TiledMap", "loc0", "=", "null", ";", "if", "(", "this", ".", "rpgMaps", "!=", "null", "&", "&", "FileMap", ".", "resourcesToDirectory", ".", "containsKey", "(", "arg1", ")", ")", "{", "loc0", "=", "game", ".", "getAssets", "(", ")", ".", "get", "(", "FileMap", ".", "resourcesToDirectory", ".", "get", "(", "arg1", ")", "+", "arg0", "+", "\"srini_string\"", ",", "TiledMap", ".", "class", ")", ";", "}", "return", "loc0", ";", "}"], "nl_tokens": ["retrieves", "a", "tiled", "map", ".", "tmx", "from", "the", "system", ".", "concode_field_sep", "ShadowStruggles", "game", "concode_elem_sep", "Array", "<", "Asset", ">", "textures", "concode_elem_sep", "Array", "<", "Asset", ">", "sounds", "concode_elem_sep", "Array", "<", "Asset", ">", "rpgMaps", "concode_elem_sep", "String", "assetName", "concode_elem_sep", "Array", "<", "Asset", ">", "textureRegions", "concode_elem_sep", "String", "LOG", "concode_elem_sep", "String", "assetType", "concode_field_sep", "void", "loadMaps", "concode_elem_sep", "void", "disposeSounds", "concode_elem_sep", "TextureRegion", "getTextureRegion", "concode_elem_sep", "void", "disposeTextures", "concode_elem_sep", "void", "disposeMaps", "concode_elem_sep", "Texture", "getTexture", "concode_elem_sep", "void", "unloadSounds", "concode_elem_sep", "void", "loadSounds", "concode_elem_sep", "boolean", "equals", "concode_elem_sep", "void", "setAssetsToLoad", "concode_elem_sep", "void", "loadAssets", "concode_elem_sep", "void", "dispose", "concode_elem_sep", "void", "loadTextureAtlas", "concode_elem_sep", "void", "createTextureAtlas", "concode_elem_sep", "void", "disposeAtlas", "concode_elem_sep", "void", "loadTextures"]}
{"code": "void function ( CallbackHandler arg0 ) { this . callbackHandler = arg0 ; }", "nl": "set the callbackhandler to use with the logincontext . it can be null . concode_field_sep String name concode_elem_sep CallbackHandler callbackHandler concode_elem_sep String contextName concode_elem_sep WSSConfig wssConfig concode_elem_sep boolean isUsernameServiceNameForm concode_elem_sep boolean requestCredentialDelegation concode_elem_sep boolean useDelegatedCredential concode_elem_sep Logger LOG concode_elem_sep String serviceName concode_field_sep boolean isUseDelegatedCredential concode_elem_sep boolean isRequestCredentialDelegation concode_elem_sep String getServiceName concode_elem_sep void setRequestCredentialDelegation concode_elem_sep void setUseDelegatedCredential concode_elem_sep String getBeanName concode_elem_sep void setContextName concode_elem_sep void setJaasLoginModuleName concode_elem_sep boolean isUsernameServiceNameForm concode_elem_sep String getContextName concode_elem_sep void setServiceName concode_elem_sep CallbackHandler getCallbackHandler concode_elem_sep SecurityToken requestSecurityToken concode_elem_sep void setUsernameServiceNameForm concode_elem_sep String getJaasLoginModuleName", "code_tokens": ["void", "function", "(", "CallbackHandler", "arg0", ")", "{", "this", ".", "callbackHandler", "=", "arg0", ";", "}"], "nl_tokens": ["set", "the", "callbackhandler", "to", "use", "with", "the", "logincontext", ".", "it", "can", "be", "null", ".", "concode_field_sep", "String", "name", "concode_elem_sep", "CallbackHandler", "callbackHandler", "concode_elem_sep", "String", "contextName", "concode_elem_sep", "WSSConfig", "wssConfig", "concode_elem_sep", "boolean", "isUsernameServiceNameForm", "concode_elem_sep", "boolean", "requestCredentialDelegation", "concode_elem_sep", "boolean", "useDelegatedCredential", "concode_elem_sep", "Logger", "LOG", "concode_elem_sep", "String", "serviceName", "concode_field_sep", "boolean", "isUseDelegatedCredential", "concode_elem_sep", "boolean", "isRequestCredentialDelegation", "concode_elem_sep", "String", "getServiceName", "concode_elem_sep", "void", "setRequestCredentialDelegation", "concode_elem_sep", "void", "setUseDelegatedCredential", "concode_elem_sep", "String", "getBeanName", "concode_elem_sep", "void", "setContextName", "concode_elem_sep", "void", "setJaasLoginModuleName", "concode_elem_sep", "boolean", "isUsernameServiceNameForm", "concode_elem_sep", "String", "getContextName", "concode_elem_sep", "void", "setServiceName", "concode_elem_sep", "CallbackHandler", "getCallbackHandler", "concode_elem_sep", "SecurityToken", "requestSecurityToken", "concode_elem_sep", "void", "setUsernameServiceNameForm", "concode_elem_sep", "String", "getJaasLoginModuleName"]}
{"code": "RepositoryCommit function ( String arg0 , String arg1 , RevCommit arg2 ) { RepositoryCommit loc0 = new RepositoryCommit ( arg0 , arg1 , arg2 ) ; return addCommit ( loc0 ) ; }", "nl": "adds a commit to the activity object as long as the commit is not a duplicate . concode_field_sep Date endDate concode_elem_sep Set<String> authorExclusions concode_elem_sep Map<String,Metric> authorMetrics concode_elem_sep Set<RepositoryCommit> commits concode_elem_sep long serialVersionUID concode_elem_sep Map<String,Metric> repositoryMetrics concode_elem_sep Date startDate concode_field_sep void excludeAuthors concode_elem_sep Map<String,Metric> getAuthorMetrics concode_elem_sep int getCommitCount concode_elem_sep List<RepositoryCommit> getCommits concode_elem_sep Map<String,Metric> getRepositoryMetrics concode_elem_sep int compareTo", "code_tokens": ["RepositoryCommit", "function", "(", "String", "arg0", ",", "String", "arg1", ",", "RevCommit", "arg2", ")", "{", "RepositoryCommit", "loc0", "=", "new", "RepositoryCommit", "(", "arg0", ",", "arg1", ",", "arg2", ")", ";", "return", "addCommit", "(", "loc0", ")", ";", "}"], "nl_tokens": ["adds", "a", "commit", "to", "the", "activity", "object", "as", "long", "as", "the", "commit", "is", "not", "a", "duplicate", ".", "concode_field_sep", "Date", "endDate", "concode_elem_sep", "Set", "<", "String", ">", "authorExclusions", "concode_elem_sep", "Map", "<", "String", ",", "Metric", ">", "authorMetrics", "concode_elem_sep", "Set", "<", "RepositoryCommit", ">", "commits", "concode_elem_sep", "long", "serialVersionUID", "concode_elem_sep", "Map", "<", "String", ",", "Metric", ">", "repositoryMetrics", "concode_elem_sep", "Date", "startDate", "concode_field_sep", "void", "excludeAuthors", "concode_elem_sep", "Map", "<", "String", ",", "Metric", ">", "getAuthorMetrics", "concode_elem_sep", "int", "getCommitCount", "concode_elem_sep", "List", "<", "RepositoryCommit", ">", "getCommits", "concode_elem_sep", "Map", "<", "String", ",", "Metric", ">", "getRepositoryMetrics", "concode_elem_sep", "int", "compareTo"]}
{"code": "void function ( BigDecimal arg0 ) { this . feedConfigId = arg0 ; }", "nl": "sets the feed config id . concode_field_sep Timestamp endDate concode_elem_sep BigDecimal feedConfigId concode_elem_sep String resultCode concode_elem_sep long serialVersionUID concode_elem_sep String resultMessage concode_elem_sep BigDecimal fileCount concode_elem_sep Timestamp maxReceiptDate concode_elem_sep BigDecimal downloadSize concode_elem_sep BigDecimal feedId concode_elem_sep String configInfo concode_elem_sep long runId concode_elem_sep byte[] errors concode_elem_sep String runStatus concode_elem_sep Timestamp startDate concode_field_sep BigDecimal getFeedConfigId concode_elem_sep Timestamp getStartDate concode_elem_sep void setFeedId concode_elem_sep String getResultCode concode_elem_sep void setMaxReceiptDate concode_elem_sep long getRunId concode_elem_sep Timestamp getEndDate concode_elem_sep void setErrors concode_elem_sep String getConfigInfo concode_elem_sep void setEndDate concode_elem_sep byte[] getErrors concode_elem_sep void setFileCount concode_elem_sep BigDecimal getDownloadSize concode_elem_sep String getResultMessage concode_elem_sep void setResultMessage concode_elem_sep BigDecimal getFileCount concode_elem_sep String getRunStatus concode_elem_sep void setRunStatus concode_elem_sep void setStartDate concode_elem_sep BigDecimal getFeedId concode_elem_sep void setResultCode concode_elem_sep void setRunId concode_elem_sep Timestamp getMaxReceiptDate concode_elem_sep void setConfigInfo concode_elem_sep void setDownloadSize", "code_tokens": ["void", "function", "(", "BigDecimal", "arg0", ")", "{", "this", ".", "feedConfigId", "=", "arg0", ";", "}"], "nl_tokens": ["sets", "the", "feed", "config", "id", ".", "concode_field_sep", "Timestamp", "endDate", "concode_elem_sep", "BigDecimal", "feedConfigId", "concode_elem_sep", "String", "resultCode", "concode_elem_sep", "long", "serialVersionUID", "concode_elem_sep", "String", "resultMessage", "concode_elem_sep", "BigDecimal", "fileCount", "concode_elem_sep", "Timestamp", "maxReceiptDate", "concode_elem_sep", "BigDecimal", "downloadSize", "concode_elem_sep", "BigDecimal", "feedId", "concode_elem_sep", "String", "configInfo", "concode_elem_sep", "long", "runId", "concode_elem_sep", "byte", "[", "]", "errors", "concode_elem_sep", "String", "runStatus", "concode_elem_sep", "Timestamp", "startDate", "concode_field_sep", "BigDecimal", "getFeedConfigId", "concode_elem_sep", "Timestamp", "getStartDate", "concode_elem_sep", "void", "setFeedId", "concode_elem_sep", "String", "getResultCode", "concode_elem_sep", "void", "setMaxReceiptDate", "concode_elem_sep", "long", "getRunId", "concode_elem_sep", "Timestamp", "getEndDate", "concode_elem_sep", "void", "setErrors", "concode_elem_sep", "String", "getConfigInfo", "concode_elem_sep", "void", "setEndDate", "concode_elem_sep", "byte", "[", "]", "getErrors", "concode_elem_sep", "void", "setFileCount", "concode_elem_sep", "BigDecimal", "getDownloadSize", "concode_elem_sep", "String", "getResultMessage", "concode_elem_sep", "void", "setResultMessage", "concode_elem_sep", "BigDecimal", "getFileCount", "concode_elem_sep", "String", "getRunStatus", "concode_elem_sep", "void", "setRunStatus", "concode_elem_sep", "void", "setStartDate", "concode_elem_sep", "BigDecimal", "getFeedId", "concode_elem_sep", "void", "setResultCode", "concode_elem_sep", "void", "setRunId", "concode_elem_sep", "Timestamp", "getMaxReceiptDate", "concode_elem_sep", "void", "setConfigInfo", "concode_elem_sep", "void", "setDownloadSize"]}
{"code": "BufferedByteWriter function ( byte arg0 ) { ensureCapacity ( 3 ) ; mWriter . putShort ( ( short ) 0 ) ; mWriter . put ( arg0 ) ; return this ; }", "nl": "write 24-bit of the given value in big-endian order to the buffer concode_field_sep ByteBuffer mWriter concode_elem_sep byte[] mBuffer concode_field_sep BufferedByteWriter putLen8 concode_elem_sep BufferedByteWriter put16 concode_elem_sep BufferedByteWriter put16 concode_elem_sep BufferedByteWriter putLen16 concode_elem_sep byte[] toByteArray concode_elem_sep void ensureCapacity concode_elem_sep BufferedByteWriter put64 concode_elem_sep BufferedByteWriter put64 concode_elem_sep BufferedByteWriter put64 concode_elem_sep BufferedByteWriter put64 concode_elem_sep BufferedByteWriter put concode_elem_sep BufferedByteWriter put concode_elem_sep BufferedByteWriter put32 concode_elem_sep BufferedByteWriter put32 concode_elem_sep BufferedByteWriter put32", "code_tokens": ["BufferedByteWriter", "function", "(", "byte", "arg0", ")", "{", "ensureCapacity", "(", "3", ")", ";", "mWriter", ".", "putShort", "(", "(", "short", ")", "0", ")", ";", "mWriter", ".", "put", "(", "arg0", ")", ";", "return", "this", ";", "}"], "nl_tokens": ["write", "24", "-", "bit", "of", "the", "given", "value", "in", "big", "-", "endian", "order", "to", "the", "buffer", "concode_field_sep", "ByteBuffer", "mWriter", "concode_elem_sep", "byte", "[", "]", "mBuffer", "concode_field_sep", "BufferedByteWriter", "putLen8", "concode_elem_sep", "BufferedByteWriter", "put16", "concode_elem_sep", "BufferedByteWriter", "put16", "concode_elem_sep", "BufferedByteWriter", "putLen16", "concode_elem_sep", "byte", "[", "]", "toByteArray", "concode_elem_sep", "void", "ensureCapacity", "concode_elem_sep", "BufferedByteWriter", "put64", "concode_elem_sep", "BufferedByteWriter", "put64", "concode_elem_sep", "BufferedByteWriter", "put64", "concode_elem_sep", "BufferedByteWriter", "put64", "concode_elem_sep", "BufferedByteWriter", "put", "concode_elem_sep", "BufferedByteWriter", "put", "concode_elem_sep", "BufferedByteWriter", "put32", "concode_elem_sep", "BufferedByteWriter", "put32", "concode_elem_sep", "BufferedByteWriter", "put32"]}
{"code": "int function ( ) { int loc0 = 0 ; for ( Constant loc1 : vals . values ( ) ) loc0 += loc1 . hashCode ( ) ; return loc0 ; }", "nl": "the hashcode of a groupvalue object is the sum of the hashcodes of its field values . concode_field_sep Map<String,Constant> vals concode_field_sep Constant getVal concode_elem_sep boolean equals", "code_tokens": ["int", "function", "(", ")", "{", "int", "loc0", "=", "0", ";", "for", "(", "Constant", "loc1", ":", "vals", ".", "values", "(", ")", ")", "loc0", "+=", "loc1", ".", "hashCode", "(", ")", ";", "return", "loc0", ";", "}"], "nl_tokens": ["the", "hashcode", "of", "a", "groupvalue", "object", "is", "the", "sum", "of", "the", "hashcodes", "of", "its", "field", "values", ".", "concode_field_sep", "Map", "<", "String", ",", "Constant", ">", "vals", "concode_field_sep", "Constant", "getVal", "concode_elem_sep", "boolean", "equals"]}
{"code": "BigDecimal function ( ) { return this . runId ; }", "nl": "gets the run id . concode_field_sep Timestamp lastModifiedTimeStamp concode_elem_sep Timestamp fetcherStartTimestamp concode_elem_sep Timestamp createTimeStamp concode_elem_sep long serialVersionUID concode_elem_sep BigDecimal batchId concode_elem_sep String errorMsg concode_elem_sep OutcomeType outcomeType concode_elem_sep String createdBy concode_elem_sep BigDecimal feedId concode_elem_sep long testId concode_elem_sep BigDecimal runId concode_elem_sep Timestamp fetcherEndTimeStamp concode_elem_sep List<RegPCLTestResultDetailsEntity> regPclTestResultDetails concode_elem_sep RunStatusType runStatus concode_field_sep void setLastModifiedTimeStamp concode_elem_sep void setFeedId concode_elem_sep void setFetcherStartTimestamp concode_elem_sep OutcomeType getOutcomeType concode_elem_sep void updateLastModifiedTimeStamp concode_elem_sep void updateCreateTimeStamp concode_elem_sep void setBatchId concode_elem_sep List<RegPCLTestResultDetailsEntity> getRegPclTestResultDetails concode_elem_sep void setTestId concode_elem_sep long getTestId concode_elem_sep RegPCLTestResultDetailsEntity removeRegPclTestResultDetail concode_elem_sep void setRegPclTestResultDetails concode_elem_sep void setErrorMsg concode_elem_sep RunStatusType getRunStatus concode_elem_sep RegPCLTestResultDetailsEntity addRegPclTestResultDetail concode_elem_sep String getErrorMsg concode_elem_sep void setRunStatus concode_elem_sep Timestamp getFetcherEndTimeStamp concode_elem_sep Timestamp getLastModifiedTimeStamp concode_elem_sep BigDecimal getFeedId concode_elem_sep void setRunId concode_elem_sep Timestamp getFetcherStartTimestamp concode_elem_sep void setFetcherEndTimeStamp concode_elem_sep void setCreateTimeStamp concode_elem_sep void setCreatedBy concode_elem_sep Timestamp getCreateTimeStamp concode_elem_sep BigDecimal getBatchId concode_elem_sep void setOutcomeType concode_elem_sep String getCreatedBy", "code_tokens": ["BigDecimal", "function", "(", ")", "{", "return", "this", ".", "runId", ";", "}"], "nl_tokens": ["gets", "the", "run", "id", ".", "concode_field_sep", "Timestamp", "lastModifiedTimeStamp", "concode_elem_sep", "Timestamp", "fetcherStartTimestamp", "concode_elem_sep", "Timestamp", "createTimeStamp", "concode_elem_sep", "long", "serialVersionUID", "concode_elem_sep", "BigDecimal", "batchId", "concode_elem_sep", "String", "errorMsg", "concode_elem_sep", "OutcomeType", "outcomeType", "concode_elem_sep", "String", "createdBy", "concode_elem_sep", "BigDecimal", "feedId", "concode_elem_sep", "long", "testId", "concode_elem_sep", "BigDecimal", "runId", "concode_elem_sep", "Timestamp", "fetcherEndTimeStamp", "concode_elem_sep", "List", "<", "RegPCLTestResultDetailsEntity", ">", "regPclTestResultDetails", "concode_elem_sep", "RunStatusType", "runStatus", "concode_field_sep", "void", "setLastModifiedTimeStamp", "concode_elem_sep", "void", "setFeedId", "concode_elem_sep", "void", "setFetcherStartTimestamp", "concode_elem_sep", "OutcomeType", "getOutcomeType", "concode_elem_sep", "void", "updateLastModifiedTimeStamp", "concode_elem_sep", "void", "updateCreateTimeStamp", "concode_elem_sep", "void", "setBatchId", "concode_elem_sep", "List", "<", "RegPCLTestResultDetailsEntity", ">", "getRegPclTestResultDetails", "concode_elem_sep", "void", "setTestId", "concode_elem_sep", "long", "getTestId", "concode_elem_sep", "RegPCLTestResultDetailsEntity", "removeRegPclTestResultDetail", "concode_elem_sep", "void", "setRegPclTestResultDetails", "concode_elem_sep", "void", "setErrorMsg", "concode_elem_sep", "RunStatusType", "getRunStatus", "concode_elem_sep", "RegPCLTestResultDetailsEntity", "addRegPclTestResultDetail", "concode_elem_sep", "String", "getErrorMsg", "concode_elem_sep", "void", "setRunStatus", "concode_elem_sep", "Timestamp", "getFetcherEndTimeStamp", "concode_elem_sep", "Timestamp", "getLastModifiedTimeStamp", "concode_elem_sep", "BigDecimal", "getFeedId", "concode_elem_sep", "void", "setRunId", "concode_elem_sep", "Timestamp", "getFetcherStartTimestamp", "concode_elem_sep", "void", "setFetcherEndTimeStamp", "concode_elem_sep", "void", "setCreateTimeStamp", "concode_elem_sep", "void", "setCreatedBy", "concode_elem_sep", "Timestamp", "getCreateTimeStamp", "concode_elem_sep", "BigDecimal", "getBatchId", "concode_elem_sep", "void", "setOutcomeType", "concode_elem_sep", "String", "getCreatedBy"]}
{"code": "XsdStringType function ( ) { return paramValue ; }", "nl": "gets the value of the paramvalue property . concode_field_sep List<DescriptionType> description concode_elem_sep CString paramName concode_elem_sep java.lang.String id concode_elem_sep XsdStringType paramValue concode_field_sep CString getParamName concode_elem_sep void setParamName concode_elem_sep void setParamValue concode_elem_sep void setId concode_elem_sep java.lang.String getId concode_elem_sep List<DescriptionType> getDescription", "code_tokens": ["XsdStringType", "function", "(", ")", "{", "return", "paramValue", ";", "}"], "nl_tokens": ["gets", "the", "value", "of", "the", "paramvalue", "property", ".", "concode_field_sep", "List", "<", "DescriptionType", ">", "description", "concode_elem_sep", "CString", "paramName", "concode_elem_sep", "java", ".", "lang", ".", "String", "id", "concode_elem_sep", "XsdStringType", "paramValue", "concode_field_sep", "CString", "getParamName", "concode_elem_sep", "void", "setParamName", "concode_elem_sep", "void", "setParamValue", "concode_elem_sep", "void", "setId", "concode_elem_sep", "java", ".", "lang", ".", "String", "getId", "concode_elem_sep", "List", "<", "DescriptionType", ">", "getDescription"]}
{"code": "void function ( ServiceID arg0 , int arg1 , int arg2 , InetAddress arg3 ) { }", "nl": "this callback is called on an unregistration event . concode_field_sep int RETVAL_MALFORMED concode_elem_sep int RETVAL_OK concode_elem_sep int RETVAL_ERROR concode_elem_sep int RETVAL_NOENTRY concode_field_sep void onServiceRegistration concode_elem_sep void onServiceAdd concode_elem_sep void onServiceRemove concode_elem_sep void onServiceDelayed concode_elem_sep void onServiceModify concode_elem_sep void onFlowStatUpdate concode_elem_sep String getRetvalString concode_elem_sep void onServiceGet", "code_tokens": ["void", "function", "(", "ServiceID", "arg0", ",", "int", "arg1", ",", "int", "arg2", ",", "InetAddress", "arg3", ")", "{", "}"], "nl_tokens": ["this", "callback", "is", "called", "on", "an", "unregistration", "event", ".", "concode_field_sep", "int", "RETVAL_MALFORMED", "concode_elem_sep", "int", "RETVAL_OK", "concode_elem_sep", "int", "RETVAL_ERROR", "concode_elem_sep", "int", "RETVAL_NOENTRY", "concode_field_sep", "void", "onServiceRegistration", "concode_elem_sep", "void", "onServiceAdd", "concode_elem_sep", "void", "onServiceRemove", "concode_elem_sep", "void", "onServiceDelayed", "concode_elem_sep", "void", "onServiceModify", "concode_elem_sep", "void", "onFlowStatUpdate", "concode_elem_sep", "String", "getRetvalString", "concode_elem_sep", "void", "onServiceGet"]}
{"code": "MenuItem function ( int arg0 ) { if ( mMenuItem != null ) { HoneycombMenuItem . setActionView ( mMenuItem , arg0 ) ; } return this ; }", "nl": "set an action view for this menu item . an action view will be displayed in place of an automatically generated menu item element in the ui when this item is shown as an action within a parent . concode_field_sep android.view.MenuItem mMenuItem concode_field_sep boolean hasSubMenu concode_elem_sep CharSequence getTitleCondensed concode_elem_sep int getGroupId concode_elem_sep int getItemId concode_elem_sep View getActionView concode_elem_sep View getActionView concode_elem_sep CharSequence getTitle concode_elem_sep MenuItem setChecked concode_elem_sep char getAlphabeticShortcut concode_elem_sep MenuItem setOnMenuItemClickListener concode_elem_sep MenuItem setOnMenuItemClickListener concode_elem_sep Intent getIntent concode_elem_sep boolean isCheckable concode_elem_sep MenuItem setShortcut concode_elem_sep MenuItem setVisible concode_elem_sep void setShowAsAction concode_elem_sep void setShowAsAction concode_elem_sep SubMenu getSubMenu concode_elem_sep MenuItem setIntent concode_elem_sep MenuItem setCheckable concode_elem_sep MenuItem setAlphabeticShortcut concode_elem_sep MenuItem setTitle concode_elem_sep MenuItem setTitle concode_elem_sep MenuItem setNumericShortcut concode_elem_sep boolean isVisible concode_elem_sep boolean isChecked concode_elem_sep MenuItem setTitleCondensed concode_elem_sep Drawable getIcon concode_elem_sep MenuItem setIcon concode_elem_sep MenuItem setIcon concode_elem_sep MenuItem setEnabled concode_elem_sep int getOrder concode_elem_sep boolean isEnabled concode_elem_sep char getNumericShortcut concode_elem_sep ContextMenuInfo getMenuInfo", "code_tokens": ["MenuItem", "function", "(", "int", "arg0", ")", "{", "if", "(", "mMenuItem", "!=", "null", ")", "{", "HoneycombMenuItem", ".", "setActionView", "(", "mMenuItem", ",", "arg0", ")", ";", "}", "return", "this", ";", "}"], "nl_tokens": ["set", "an", "action", "view", "for", "this", "menu", "item", ".", "an", "action", "view", "will", "be", "displayed", "in", "place", "of", "an", "automatically", "generated", "menu", "item", "element", "in", "the", "ui", "when", "this", "item", "is", "shown", "as", "an", "action", "within", "a", "parent", ".", "concode_field_sep", "android", ".", "view", ".", "MenuItem", "mMenuItem", "concode_field_sep", "boolean", "hasSubMenu", "concode_elem_sep", "CharSequence", "getTitleCondensed", "concode_elem_sep", "int", "getGroupId", "concode_elem_sep", "int", "getItemId", "concode_elem_sep", "View", "getActionView", "concode_elem_sep", "View", "getActionView", "concode_elem_sep", "CharSequence", "getTitle", "concode_elem_sep", "MenuItem", "setChecked", "concode_elem_sep", "char", "getAlphabeticShortcut", "concode_elem_sep", "MenuItem", "setOnMenuItemClickListener", "concode_elem_sep", "MenuItem", "setOnMenuItemClickListener", "concode_elem_sep", "Intent", "getIntent", "concode_elem_sep", "boolean", "isCheckable", "concode_elem_sep", "MenuItem", "setShortcut", "concode_elem_sep", "MenuItem", "setVisible", "concode_elem_sep", "void", "setShowAsAction", "concode_elem_sep", "void", "setShowAsAction", "concode_elem_sep", "SubMenu", "getSubMenu", "concode_elem_sep", "MenuItem", "setIntent", "concode_elem_sep", "MenuItem", "setCheckable", "concode_elem_sep", "MenuItem", "setAlphabeticShortcut", "concode_elem_sep", "MenuItem", "setTitle", "concode_elem_sep", "MenuItem", "setTitle", "concode_elem_sep", "MenuItem", "setNumericShortcut", "concode_elem_sep", "boolean", "isVisible", "concode_elem_sep", "boolean", "isChecked", "concode_elem_sep", "MenuItem", "setTitleCondensed", "concode_elem_sep", "Drawable", "getIcon", "concode_elem_sep", "MenuItem", "setIcon", "concode_elem_sep", "MenuItem", "setIcon", "concode_elem_sep", "MenuItem", "setEnabled", "concode_elem_sep", "int", "getOrder", "concode_elem_sep", "boolean", "isEnabled", "concode_elem_sep", "char", "getNumericShortcut", "concode_elem_sep", "ContextMenuInfo", "getMenuInfo"]}
{"code": "String function ( String arg0 ) { System . out . print ( arg0 ) ; return scanner . nextLine ( ) ; }", "nl": "method ask user for an input string concode_field_sep Scanner scanner concode_field_sep char getChar concode_elem_sep char getChar concode_elem_sep int getInt concode_elem_sep int getInt concode_elem_sep int getInt concode_elem_sep String getStringIgnoreCase concode_elem_sep double getDouble concode_elem_sep boolean getBoolean", "code_tokens": ["String", "function", "(", "String", "arg0", ")", "{", "System", ".", "out", ".", "print", "(", "arg0", ")", ";", "return", "scanner", ".", "nextLine", "(", ")", ";", "}"], "nl_tokens": ["method", "ask", "user", "for", "an", "input", "string", "concode_field_sep", "Scanner", "scanner", "concode_field_sep", "char", "getChar", "concode_elem_sep", "char", "getChar", "concode_elem_sep", "int", "getInt", "concode_elem_sep", "int", "getInt", "concode_elem_sep", "int", "getInt", "concode_elem_sep", "String", "getStringIgnoreCase", "concode_elem_sep", "double", "getDouble", "concode_elem_sep", "boolean", "getBoolean"]}
{"code": "int function ( int arg0 ) { return getStep ( arg0 ) . y ; }", "nl": "get the y coordinate for the step at the given index concode_field_sep Array<Step> steps concode_elem_sep int x concode_elem_sep int y concode_field_sep int getX concode_elem_sep int getX concode_elem_sep boolean contains concode_elem_sep void prependStep concode_elem_sep int hashCode concode_elem_sep Step getStep concode_elem_sep boolean equals concode_elem_sep Array<Step> getSteps concode_elem_sep int getLength concode_elem_sep String toString concode_elem_sep void appendStep", "code_tokens": ["int", "function", "(", "int", "arg0", ")", "{", "return", "getStep", "(", "arg0", ")", ".", "y", ";", "}"], "nl_tokens": ["get", "the", "y", "coordinate", "for", "the", "step", "at", "the", "given", "index", "concode_field_sep", "Array", "<", "Step", ">", "steps", "concode_elem_sep", "int", "x", "concode_elem_sep", "int", "y", "concode_field_sep", "int", "getX", "concode_elem_sep", "int", "getX", "concode_elem_sep", "boolean", "contains", "concode_elem_sep", "void", "prependStep", "concode_elem_sep", "int", "hashCode", "concode_elem_sep", "Step", "getStep", "concode_elem_sep", "boolean", "equals", "concode_elem_sep", "Array", "<", "Step", ">", "getSteps", "concode_elem_sep", "int", "getLength", "concode_elem_sep", "String", "toString", "concode_elem_sep", "void", "appendStep"]}
{"code": "ClassLoader function ( ) { return getClassLoader ( ClassHelper . class ) ; }", "nl": "return the default classloader to use : typically the thread context classloader , if available ; the classloader that loaded the classutils class will be used as fallback . call this method if you intend to use the thread context classloader in a scenario where you absolutely need a non-null classloader reference : for example , for class path resource loading but not necessarily for class.forname , which accepts a null classloader reference as well . concode_field_sep Map<Class<?>,Class<?>> primitiveWrapperTypeMap concode_elem_sep String ARRAY_SUFFIX concode_elem_sep String INTERNAL_ARRAY_PREFIX concode_elem_sep Map<String,Class<?>> primitiveTypeNameMap concode_field_sep ClassLoader getCallerClassLoader concode_elem_sep Class<?> resolvePrimitiveClassName concode_elem_sep String toShortString concode_elem_sep Class<?> forNameWithThreadContextClassLoader concode_elem_sep Class<?> forNameWithCallerClassLoader concode_elem_sep Class<?> forName concode_elem_sep Class<?> forName", "code_tokens": ["ClassLoader", "function", "(", ")", "{", "return", "getClassLoader", "(", "ClassHelper", ".", "class", ")", ";", "}"], "nl_tokens": ["return", "the", "default", "classloader", "to", "use", ":", "typically", "the", "thread", "context", "classloader", ",", "if", "available", ";", "the", "classloader", "that", "loaded", "the", "classutils", "class", "will", "be", "used", "as", "fallback", ".", "call", "this", "method", "if", "you", "intend", "to", "use", "the", "thread", "context", "classloader", "in", "a", "scenario", "where", "you", "absolutely", "need", "a", "non", "-", "null", "classloader", "reference", ":", "for", "example", ",", "for", "class", "path", "resource", "loading", "but", "not", "necessarily", "for", "class", ".", "forname", ",", "which", "accepts", "a", "null", "classloader", "reference", "as", "well", ".", "concode_field_sep", "Map", "<", "Class", "<", "?", ">", ",", "Class", "<", "?", ">>", "primitiveWrapperTypeMap", "concode_elem_sep", "String", "ARRAY_SUFFIX", "concode_elem_sep", "String", "INTERNAL_ARRAY_PREFIX", "concode_elem_sep", "Map", "<", "String", ",", "Class", "<", "?", ">>", "primitiveTypeNameMap", "concode_field_sep", "ClassLoader", "getCallerClassLoader", "concode_elem_sep", "Class", "<", "?", ">", "resolvePrimitiveClassName", "concode_elem_sep", "String", "toShortString", "concode_elem_sep", "Class", "<", "?", ">", "forNameWithThreadContextClassLoader", "concode_elem_sep", "Class", "<", "?", ">", "forNameWithCallerClassLoader", "concode_elem_sep", "Class", "<", "?", ">", "forName", "concode_elem_sep", "Class", "<", "?", ">", "forName"]}
{"code": "Timestamp function ( ) { return this . endDate ; }", "nl": "gets the end date . concode_field_sep Timestamp endDate concode_elem_sep BigDecimal feedConfigId concode_elem_sep String resultCode concode_elem_sep long serialVersionUID concode_elem_sep String resultMessage concode_elem_sep BigDecimal fileCount concode_elem_sep Timestamp maxReceiptDate concode_elem_sep BigDecimal downloadSize concode_elem_sep BigDecimal feedId concode_elem_sep String configInfo concode_elem_sep long runId concode_elem_sep byte[] errors concode_elem_sep String runStatus concode_elem_sep Timestamp startDate concode_field_sep BigDecimal getFeedConfigId concode_elem_sep Timestamp getStartDate concode_elem_sep void setFeedId concode_elem_sep String getResultCode concode_elem_sep void setFeedConfigId concode_elem_sep void setMaxReceiptDate concode_elem_sep long getRunId concode_elem_sep void setErrors concode_elem_sep String getConfigInfo concode_elem_sep void setEndDate concode_elem_sep byte[] getErrors concode_elem_sep void setFileCount concode_elem_sep BigDecimal getDownloadSize concode_elem_sep String getResultMessage concode_elem_sep void setResultMessage concode_elem_sep BigDecimal getFileCount concode_elem_sep String getRunStatus concode_elem_sep void setRunStatus concode_elem_sep void setStartDate concode_elem_sep BigDecimal getFeedId concode_elem_sep void setResultCode concode_elem_sep void setRunId concode_elem_sep Timestamp getMaxReceiptDate concode_elem_sep void setConfigInfo concode_elem_sep void setDownloadSize", "code_tokens": ["Timestamp", "function", "(", ")", "{", "return", "this", ".", "endDate", ";", "}"], "nl_tokens": ["gets", "the", "end", "date", ".", "concode_field_sep", "Timestamp", "endDate", "concode_elem_sep", "BigDecimal", "feedConfigId", "concode_elem_sep", "String", "resultCode", "concode_elem_sep", "long", "serialVersionUID", "concode_elem_sep", "String", "resultMessage", "concode_elem_sep", "BigDecimal", "fileCount", "concode_elem_sep", "Timestamp", "maxReceiptDate", "concode_elem_sep", "BigDecimal", "downloadSize", "concode_elem_sep", "BigDecimal", "feedId", "concode_elem_sep", "String", "configInfo", "concode_elem_sep", "long", "runId", "concode_elem_sep", "byte", "[", "]", "errors", "concode_elem_sep", "String", "runStatus", "concode_elem_sep", "Timestamp", "startDate", "concode_field_sep", "BigDecimal", "getFeedConfigId", "concode_elem_sep", "Timestamp", "getStartDate", "concode_elem_sep", "void", "setFeedId", "concode_elem_sep", "String", "getResultCode", "concode_elem_sep", "void", "setFeedConfigId", "concode_elem_sep", "void", "setMaxReceiptDate", "concode_elem_sep", "long", "getRunId", "concode_elem_sep", "void", "setErrors", "concode_elem_sep", "String", "getConfigInfo", "concode_elem_sep", "void", "setEndDate", "concode_elem_sep", "byte", "[", "]", "getErrors", "concode_elem_sep", "void", "setFileCount", "concode_elem_sep", "BigDecimal", "getDownloadSize", "concode_elem_sep", "String", "getResultMessage", "concode_elem_sep", "void", "setResultMessage", "concode_elem_sep", "BigDecimal", "getFileCount", "concode_elem_sep", "String", "getRunStatus", "concode_elem_sep", "void", "setRunStatus", "concode_elem_sep", "void", "setStartDate", "concode_elem_sep", "BigDecimal", "getFeedId", "concode_elem_sep", "void", "setResultCode", "concode_elem_sep", "void", "setRunId", "concode_elem_sep", "Timestamp", "getMaxReceiptDate", "concode_elem_sep", "void", "setConfigInfo", "concode_elem_sep", "void", "setDownloadSize"]}
{"code": "double function ( ) { checkState ( count ( ) != 0 ) ; return sumOfProductsOfDeltas / count ( ) ; }", "nl": "returns the population covariance of the values . the count must be non-zero . this is guaranteed to return zero if the dataset contains a single pair of finite values . it is not guaranteed to return zero when the dataset consists of the same pair of values multiple times , due to numerical errors . non-finite values if the dataset contains any non-finite values double #positive_infinity , double #negative_infinity , or double #nan then the result is double #nan . concode_field_sep StatsAccumulator yStats concode_elem_sep double sumOfProductsOfDeltas concode_elem_sep StatsAccumulator xStats concode_field_sep void add concode_elem_sep Stats yStats concode_elem_sep void addAll concode_elem_sep double sampleCovariance concode_elem_sep double ensurePositive concode_elem_sep double ensureInUnitRange concode_elem_sep long count concode_elem_sep double pearsonsCorrelationCoefficient concode_elem_sep LinearTransformation leastSquaresFit concode_elem_sep Stats xStats concode_elem_sep PairedStats snapshot", "code_tokens": ["double", "function", "(", ")", "{", "checkState", "(", "count", "(", ")", "!=", "0", ")", ";", "return", "sumOfProductsOfDeltas", "/", "count", "(", ")", ";", "}"], "nl_tokens": ["returns", "the", "population", "covariance", "of", "the", "values", ".", "the", "count", "must", "be", "non", "-", "zero", ".", "this", "is", "guaranteed", "to", "return", "zero", "if", "the", "dataset", "contains", "a", "single", "pair", "of", "finite", "values", ".", "it", "is", "not", "guaranteed", "to", "return", "zero", "when", "the", "dataset", "consists", "of", "the", "same", "pair", "of", "values", "multiple", "times", ",", "due", "to", "numerical", "errors", ".", "non", "-", "finite", "values", "if", "the", "dataset", "contains", "any", "non", "-", "finite", "values", "double", "#positive_infinity , double #negative_infinity , or double #nan then the result is double #nan . concode_field_sep StatsAccumulator yStats concode_elem_sep double sumOfProductsOfDeltas concode_elem_sep StatsAccumulator xStats concode_field_sep void add concode_elem_sep Stats yStats concode_elem_sep void addAll concode_elem_sep double sampleCovariance concode_elem_sep double ensurePositive concode_elem_sep double ensureInUnitRange concode_elem_sep long count concode_elem_sep double pearsonsCorrelationCoefficient concode_elem_sep LinearTransformation leastSquaresFit concode_elem_sep Stats xStats concode_elem_sep PairedStats snapshot"]}
{"code": "production function ( ) { return _the_production ; }", "nl": "the production for the item . concode_field_sep production _the_production concode_elem_sep int _core_hash_cache concode_elem_sep symbol _symbol_after_dot concode_elem_sep int _dot_pos concode_field_sep lr_item_core shift_core concode_elem_sep symbol symbol_after_dot concode_elem_sep int obj_hash concode_elem_sep String to_simple_string concode_elem_sep int dot_pos concode_elem_sep int hashCode concode_elem_sep boolean equals concode_elem_sep boolean equals concode_elem_sep String toString concode_elem_sep non_terminal dot_before_nt concode_elem_sep int core_hashCode concode_elem_sep boolean core_equals concode_elem_sep boolean dot_at_end", "code_tokens": ["production", "function", "(", ")", "{", "return", "_the_production", ";", "}"], "nl_tokens": ["the", "production", "for", "the", "item", ".", "concode_field_sep", "production", "_the_production", "concode_elem_sep", "int", "_core_hash_cache", "concode_elem_sep", "symbol", "_symbol_after_dot", "concode_elem_sep", "int", "_dot_pos", "concode_field_sep", "lr_item_core", "shift_core", "concode_elem_sep", "symbol", "symbol_after_dot", "concode_elem_sep", "int", "obj_hash", "concode_elem_sep", "String", "to_simple_string", "concode_elem_sep", "int", "dot_pos", "concode_elem_sep", "int", "hashCode", "concode_elem_sep", "boolean", "equals", "concode_elem_sep", "boolean", "equals", "concode_elem_sep", "String", "toString", "concode_elem_sep", "non_terminal", "dot_before_nt", "concode_elem_sep", "int", "core_hashCode", "concode_elem_sep", "boolean", "core_equals", "concode_elem_sep", "boolean", "dot_at_end"]}
{"code": "void function ( ) { checkRankNUpdate ( N , N - 2 ) ; checkRankNUpdate ( N * 2 + 1 , N - 2 ) ; checkRankNUpdate ( N - 1 , N - 2 ) ; }", "nl": "tests ranknupdate with various sized input matrices concode_field_sep int N concode_elem_sep Random rand concode_field_sep void symmRankNMinus_U concode_elem_sep void checkSymmRankNMinus_U concode_elem_sep void symmRankNMinus_L concode_elem_sep void checkRankNUpdate concode_elem_sep void checkSymmRankNMinus_L", "code_tokens": ["void", "function", "(", ")", "{", "checkRankNUpdate", "(", "N", ",", "N", "-", "2", ")", ";", "checkRankNUpdate", "(", "N", "*", "2", "+", "1", ",", "N", "-", "2", ")", ";", "checkRankNUpdate", "(", "N", "-", "1", ",", "N", "-", "2", ")", ";", "}"], "nl_tokens": ["tests", "ranknupdate", "with", "various", "sized", "input", "matrices", "concode_field_sep", "int", "N", "concode_elem_sep", "Random", "rand", "concode_field_sep", "void", "symmRankNMinus_U", "concode_elem_sep", "void", "checkSymmRankNMinus_U", "concode_elem_sep", "void", "symmRankNMinus_L", "concode_elem_sep", "void", "checkRankNUpdate", "concode_elem_sep", "void", "checkSymmRankNMinus_L"]}
{"code": "boolean function ( DenseMatrix64F arg0 ) { return MatrixFeatures . isDiagonalPositive ( arg0 ) ; }", "nl": "this is a fairly light weight check to see of a covariance matrix is valid . it checks to see if the diagonal elements are all positive , which they should be if it is valid . not all invalid covariance matrices will be caught by this method . concode_field_sep double TOL concode_field_sep void randomVector concode_elem_sep boolean invert concode_elem_sep boolean invert concode_elem_sep int isValid", "code_tokens": ["boolean", "function", "(", "DenseMatrix64F", "arg0", ")", "{", "return", "MatrixFeatures", ".", "isDiagonalPositive", "(", "arg0", ")", ";", "}"], "nl_tokens": ["this", "is", "a", "fairly", "light", "weight", "check", "to", "see", "of", "a", "covariance", "matrix", "is", "valid", ".", "it", "checks", "to", "see", "if", "the", "diagonal", "elements", "are", "all", "positive", ",", "which", "they", "should", "be", "if", "it", "is", "valid", ".", "not", "all", "invalid", "covariance", "matrices", "will", "be", "caught", "by", "this", "method", ".", "concode_field_sep", "double", "TOL", "concode_field_sep", "void", "randomVector", "concode_elem_sep", "boolean", "invert", "concode_elem_sep", "boolean", "invert", "concode_elem_sep", "int", "isValid"]}
{"code": "boolean function ( String arg0 ) { return fields ( ) . contains ( arg0 ) ; }", "nl": "returns true if the specified field is in the schema concode_field_sep int length concode_elem_sep int type concode_elem_sep Map<String,FieldInfo> info concode_field_sep void add concode_elem_sep void addStringField concode_elem_sep void addAll concode_elem_sep void addField concode_elem_sep void addIntField concode_elem_sep int length concode_elem_sep Collection<String> fields concode_elem_sep int type", "code_tokens": ["boolean", "function", "(", "String", "arg0", ")", "{", "return", "fields", "(", ")", ".", "contains", "(", "arg0", ")", ";", "}"], "nl_tokens": ["returns", "true", "if", "the", "specified", "field", "is", "in", "the", "schema", "concode_field_sep", "int", "length", "concode_elem_sep", "int", "type", "concode_elem_sep", "Map", "<", "String", ",", "FieldInfo", ">", "info", "concode_field_sep", "void", "add", "concode_elem_sep", "void", "addStringField", "concode_elem_sep", "void", "addAll", "concode_elem_sep", "void", "addField", "concode_elem_sep", "void", "addIntField", "concode_elem_sep", "int", "length", "concode_elem_sep", "Collection", "<", "String", ">", "fields", "concode_elem_sep", "int", "type"]}
{"code": "void function ( Crypto arg0 ) { this . signatureCrypto = arg0 ; }", "nl": "set the signature crypto object concode_field_sep CallbackHandler callbackHandler concode_elem_sep Logger LOG concode_elem_sep Crypto signatureCrypto concode_elem_sep SignatureProperties signatureProperties concode_elem_sep String callbackHandlerClass concode_elem_sep String signaturePropertiesFile concode_elem_sep String signatureAlias concode_elem_sep String issuer concode_field_sep String getIssuer concode_elem_sep String getSignatureAlias concode_elem_sep void setCallbackHandlerClass concode_elem_sep void setIssuer concode_elem_sep Crypto getSignatureCrypto concode_elem_sep CallbackHandler getCallbackHandler concode_elem_sep SignatureProperties getSignatureProperties concode_elem_sep void setSignatureAlias concode_elem_sep void setSignaturePropertiesFile concode_elem_sep void setSignatureProperties concode_elem_sep void setCallbackHandler", "code_tokens": ["void", "function", "(", "Crypto", "arg0", ")", "{", "this", ".", "signatureCrypto", "=", "arg0", ";", "}"], "nl_tokens": ["set", "the", "signature", "crypto", "object", "concode_field_sep", "CallbackHandler", "callbackHandler", "concode_elem_sep", "Logger", "LOG", "concode_elem_sep", "Crypto", "signatureCrypto", "concode_elem_sep", "SignatureProperties", "signatureProperties", "concode_elem_sep", "String", "callbackHandlerClass", "concode_elem_sep", "String", "signaturePropertiesFile", "concode_elem_sep", "String", "signatureAlias", "concode_elem_sep", "String", "issuer", "concode_field_sep", "String", "getIssuer", "concode_elem_sep", "String", "getSignatureAlias", "concode_elem_sep", "void", "setCallbackHandlerClass", "concode_elem_sep", "void", "setIssuer", "concode_elem_sep", "Crypto", "getSignatureCrypto", "concode_elem_sep", "CallbackHandler", "getCallbackHandler", "concode_elem_sep", "SignatureProperties", "getSignatureProperties", "concode_elem_sep", "void", "setSignatureAlias", "concode_elem_sep", "void", "setSignaturePropertiesFile", "concode_elem_sep", "void", "setSignatureProperties", "concode_elem_sep", "void", "setCallbackHandler"]}
{"code": "JSONObject function ( int arg0 ) { Object loc0 = mArray . get ( arg0 ) ; return loc0 == null ? null : loc0 instanceof JSONObject ? ( JSONObject ) loc0 : null ; }", "nl": "get jsonobject value . concode_field_sep List<Object> mArray concode_field_sep void add concode_elem_sep long getLong concode_elem_sep int getInt concode_elem_sep void addAll concode_elem_sep void addAll concode_elem_sep Object get concode_elem_sep int length concode_elem_sep double getDouble concode_elem_sep JSONArray getArray concode_elem_sep boolean getBoolean concode_elem_sep float getFloat concode_elem_sep String getString concode_elem_sep void writeJSON", "code_tokens": ["JSONObject", "function", "(", "int", "arg0", ")", "{", "Object", "loc0", "=", "mArray", ".", "get", "(", "arg0", ")", ";", "return", "loc0", "==", "null", "?", "null", ":", "loc0", "instanceof", "JSONObject", "?", "(", "JSONObject", ")", "loc0", ":", "null", ";", "}"], "nl_tokens": ["get", "jsonobject", "value", ".", "concode_field_sep", "List", "<", "Object", ">", "mArray", "concode_field_sep", "void", "add", "concode_elem_sep", "long", "getLong", "concode_elem_sep", "int", "getInt", "concode_elem_sep", "void", "addAll", "concode_elem_sep", "void", "addAll", "concode_elem_sep", "Object", "get", "concode_elem_sep", "int", "length", "concode_elem_sep", "double", "getDouble", "concode_elem_sep", "JSONArray", "getArray", "concode_elem_sep", "boolean", "getBoolean", "concode_elem_sep", "float", "getFloat", "concode_elem_sep", "String", "getString", "concode_elem_sep", "void", "writeJSON"]}
{"code": "String function ( ) { return this . request . getMethod ( ) ; }", "nl": "return the path originally requested by the client . concode_field_sep int status concode_elem_sep int INFINITY concode_elem_sep HttpServletRequest request concode_elem_sep URI base concode_elem_sep HttpServletResponse response concode_field_sep URI lookup concode_elem_sep int getDepth concode_elem_sep InputStream read concode_elem_sep String getNormalizedPath concode_elem_sep URI getDestination concode_elem_sep int getStatus concode_elem_sep boolean hasRequestBody concode_elem_sep void setStatus concode_elem_sep void setHeader concode_elem_sep boolean getOverwrite concode_elem_sep String getOriginalPath concode_elem_sep void setContentType concode_elem_sep OutputStream write concode_elem_sep PrintWriter write concode_elem_sep Date getIfModifiedSince", "code_tokens": ["String", "function", "(", ")", "{", "return", "this", ".", "request", ".", "getMethod", "(", ")", ";", "}"], "nl_tokens": ["return", "the", "path", "originally", "requested", "by", "the", "client", ".", "concode_field_sep", "int", "status", "concode_elem_sep", "int", "INFINITY", "concode_elem_sep", "HttpServletRequest", "request", "concode_elem_sep", "URI", "base", "concode_elem_sep", "HttpServletResponse", "response", "concode_field_sep", "URI", "lookup", "concode_elem_sep", "int", "getDepth", "concode_elem_sep", "InputStream", "read", "concode_elem_sep", "String", "getNormalizedPath", "concode_elem_sep", "URI", "getDestination", "concode_elem_sep", "int", "getStatus", "concode_elem_sep", "boolean", "hasRequestBody", "concode_elem_sep", "void", "setStatus", "concode_elem_sep", "void", "setHeader", "concode_elem_sep", "boolean", "getOverwrite", "concode_elem_sep", "String", "getOriginalPath", "concode_elem_sep", "void", "setContentType", "concode_elem_sep", "OutputStream", "write", "concode_elem_sep", "PrintWriter", "write", "concode_elem_sep", "Date", "getIfModifiedSince"]}
{"code": "ToStringHelper function ( long arg0 ) { return addHolder ( String . valueOf ( arg0 ) ) ; }", "nl": "adds an unnamed value to the formatted output . it is strongly encouraged to use #add string , long instead and give value areadable name . concode_field_sep ValueHolder next concode_elem_sep ValueHolder holderTail concode_elem_sep String name concode_elem_sep String className concode_elem_sep boolean omitNullValues concode_elem_sep ValueHolder holderHead concode_elem_sep Object value concode_field_sep ToStringHelper add concode_elem_sep ToStringHelper add concode_elem_sep ToStringHelper add concode_elem_sep ToStringHelper add concode_elem_sep ToStringHelper add concode_elem_sep ToStringHelper add concode_elem_sep ToStringHelper add concode_elem_sep ToStringHelper omitNullValues concode_elem_sep ValueHolder addHolder concode_elem_sep ToStringHelper addHolder concode_elem_sep ToStringHelper addHolder concode_elem_sep T firstNonNull concode_elem_sep ToStringHelper toStringHelper concode_elem_sep ToStringHelper toStringHelper concode_elem_sep ToStringHelper toStringHelper concode_elem_sep String toString", "code_tokens": ["ToStringHelper", "function", "(", "long", "arg0", ")", "{", "return", "addHolder", "(", "String", ".", "valueOf", "(", "arg0", ")", ")", ";", "}"], "nl_tokens": ["adds", "an", "unnamed", "value", "to", "the", "formatted", "output", ".", "it", "is", "strongly", "encouraged", "to", "use", "#add string , long instead and give value areadable name . concode_field_sep ValueHolder next concode_elem_sep ValueHolder holderTail concode_elem_sep String name concode_elem_sep String className concode_elem_sep boolean omitNullValues concode_elem_sep ValueHolder holderHead concode_elem_sep Object value concode_field_sep ToStringHelper add concode_elem_sep ToStringHelper add concode_elem_sep ToStringHelper add concode_elem_sep ToStringHelper add concode_elem_sep ToStringHelper add concode_elem_sep ToStringHelper add concode_elem_sep ToStringHelper add concode_elem_sep ToStringHelper omitNullValues concode_elem_sep ValueHolder addHolder concode_elem_sep ToStringHelper addHolder concode_elem_sep ToStringHelper addHolder concode_elem_sep T firstNonNull concode_elem_sep ToStringHelper toStringHelper concode_elem_sep ToStringHelper toStringHelper concode_elem_sep ToStringHelper toStringHelper concode_elem_sep String toString"]}
{"code": "void function ( Range < K > arg0 , V arg1 ) { throw new UnsupportedOperationException ( ) ; }", "nl": "guaranteed to throw an exception and leave the rangemap unmodified . concode_field_sep long serialVersionUID concode_elem_sep List<Map.Entry<Range<K>,V>> entries concode_elem_sep ImmutableRangeMap<Comparable<?>,Object> EMPTY concode_elem_sep ImmutableList<Range<K>> ranges concode_elem_sep ImmutableList<V> values concode_elem_sep ImmutableMap<Range<K>,V> mapOfRanges concode_field_sep Object readResolve concode_elem_sep ImmutableMap<Range<K>,V> asMapOfRanges concode_elem_sep void clear concode_elem_sep void putCoalescing concode_elem_sep ImmutableRangeMap<K,V> copyOf concode_elem_sep Object writeReplace concode_elem_sep void remove concode_elem_sep ImmutableMap<Range<K>,V> asDescendingMapOfRanges concode_elem_sep ImmutableRangeMap<K,V> subRangeMap concode_elem_sep Object createRangeMap concode_elem_sep ImmutableRangeMap<K,V> build concode_elem_sep int hashCode concode_elem_sep ImmutableRangeMap<K,V> of concode_elem_sep ImmutableRangeMap<K,V> of concode_elem_sep Builder<K,V> putAll concode_elem_sep void putAll concode_elem_sep V get concode_elem_sep boolean equals concode_elem_sep Builder<K,V> builder concode_elem_sep String toString concode_elem_sep Map.Entry<Range<K>,V> getEntry concode_elem_sep Range<K> span", "code_tokens": ["void", "function", "(", "Range", "<", "K", ">", "arg0", ",", "V", "arg1", ")", "{", "throw", "new", "UnsupportedOperationException", "(", ")", ";", "}"], "nl_tokens": ["guaranteed", "to", "throw", "an", "exception", "and", "leave", "the", "rangemap", "unmodified", ".", "concode_field_sep", "long", "serialVersionUID", "concode_elem_sep", "List", "<", "Map", ".", "Entry", "<", "Range", "<", "K", ">", ",", "V", ">>", "entries", "concode_elem_sep", "ImmutableRangeMap", "<", "Comparable", "<", "?", ">", ",", "Object", ">", "EMPTY", "concode_elem_sep", "ImmutableList", "<", "Range", "<", "K", ">>", "ranges", "concode_elem_sep", "ImmutableList", "<", "V", ">", "values", "concode_elem_sep", "ImmutableMap", "<", "Range", "<", "K", ">", ",", "V", ">", "mapOfRanges", "concode_field_sep", "Object", "readResolve", "concode_elem_sep", "ImmutableMap", "<", "Range", "<", "K", ">", ",", "V", ">", "asMapOfRanges", "concode_elem_sep", "void", "clear", "concode_elem_sep", "void", "putCoalescing", "concode_elem_sep", "ImmutableRangeMap", "<", "K", ",", "V", ">", "copyOf", "concode_elem_sep", "Object", "writeReplace", "concode_elem_sep", "void", "remove", "concode_elem_sep", "ImmutableMap", "<", "Range", "<", "K", ">", ",", "V", ">", "asDescendingMapOfRanges", "concode_elem_sep", "ImmutableRangeMap", "<", "K", ",", "V", ">", "subRangeMap", "concode_elem_sep", "Object", "createRangeMap", "concode_elem_sep", "ImmutableRangeMap", "<", "K", ",", "V", ">", "build", "concode_elem_sep", "int", "hashCode", "concode_elem_sep", "ImmutableRangeMap", "<", "K", ",", "V", ">", "of", "concode_elem_sep", "ImmutableRangeMap", "<", "K", ",", "V", ">", "of", "concode_elem_sep", "Builder", "<", "K", ",", "V", ">", "putAll", "concode_elem_sep", "void", "putAll", "concode_elem_sep", "V", "get", "concode_elem_sep", "boolean", "equals", "concode_elem_sep", "Builder", "<", "K", ",", "V", ">", "builder", "concode_elem_sep", "String", "toString", "concode_elem_sep", "Map", ".", "Entry", "<", "Range", "<", "K", ">", ",", "V", ">", "getEntry", "concode_elem_sep", "Range", "<", "K", ">", "span"]}
{"code": "void function ( LocalAlluxioClusterResource arg0 , AlluxioURI arg1 ) { waitForPersist ( arg0 , arg1 , 15 * Constants . SECOND_MS ) ; }", "nl": "convenience method for calling #waitforpersist localalluxioclusterresource , alluxiouri , int with a default timeout . concode_field_sep PlaceHolder placeHolder concode_field_sep String randomString concode_elem_sep void waitForBlocksToBeFreed", "code_tokens": ["void", "function", "(", "LocalAlluxioClusterResource", "arg0", ",", "AlluxioURI", "arg1", ")", "{", "waitForPersist", "(", "arg0", ",", "arg1", ",", "15", "*", "Constants", ".", "SECOND_MS", ")", ";", "}"], "nl_tokens": ["convenience", "method", "for", "calling", "#waitforpersist localalluxioclusterresource , alluxiouri , int with a default timeout . concode_field_sep PlaceHolder placeHolder concode_field_sep String randomString concode_elem_sep void waitForBlocksToBeFreed"]}
{"code": "void function ( ) { assertTrue ( rte . isActiveRoute ( ) ) ; }", "nl": "test method for net.sf.marineapi.nmea.parser.rteparser #isactiveroute . concode_field_sep RTESentence rte concode_elem_sep String EXAMPLE concode_elem_sep RTESentence empty concode_field_sep void testGetWaypointIds concode_elem_sep void testIsFirst concode_elem_sep void testGetSentenceIndex concode_elem_sep void testConstructor concode_elem_sep void testSetSentenceCountWithNegativeValue concode_elem_sep void testAddWaypointId concode_elem_sep void testGetSentenceCount concode_elem_sep void testSetWaypointIds concode_elem_sep void testSetRouteId concode_elem_sep void testIsWorkingRoute concode_elem_sep void testSetSentenceCount concode_elem_sep void testGetRouteId concode_elem_sep void testSetRouteTypeActive concode_elem_sep void setUp concode_elem_sep void testIsLast concode_elem_sep void testGetWaypointCount concode_elem_sep void testSetSentenceIndex concode_elem_sep void testSetRouteTypeWorking concode_elem_sep void testSetSentenceIndexWithNegativeValue", "code_tokens": ["void", "function", "(", ")", "{", "assertTrue", "(", "rte", ".", "isActiveRoute", "(", ")", ")", ";", "}"], "nl_tokens": ["test", "method", "for", "net", ".", "sf", ".", "marineapi", ".", "nmea", ".", "parser", ".", "rteparser", "#isactiveroute . concode_field_sep RTESentence rte concode_elem_sep String EXAMPLE concode_elem_sep RTESentence empty concode_field_sep void testGetWaypointIds concode_elem_sep void testIsFirst concode_elem_sep void testGetSentenceIndex concode_elem_sep void testConstructor concode_elem_sep void testSetSentenceCountWithNegativeValue concode_elem_sep void testAddWaypointId concode_elem_sep void testGetSentenceCount concode_elem_sep void testSetWaypointIds concode_elem_sep void testSetRouteId concode_elem_sep void testIsWorkingRoute concode_elem_sep void testSetSentenceCount concode_elem_sep void testGetRouteId concode_elem_sep void testSetRouteTypeActive concode_elem_sep void setUp concode_elem_sep void testIsLast concode_elem_sep void testGetWaypointCount concode_elem_sep void testSetSentenceIndex concode_elem_sep void testSetRouteTypeWorking concode_elem_sep void testSetSentenceIndexWithNegativeValue"]}
{"code": "void function ( ) { handleCharacterData ( ) ; listener . processGroupEnd ( ) ; groupDepth -- ; }", "nl": "inform the listener of a group end . concode_field_sep int MAX_PARAMETER_LENGTH concode_elem_sep boolean parsingHex concode_elem_sep int MAX_COMMAND_LENGTH concode_elem_sep IRtfListener listener concode_elem_sep int groupDepth concode_elem_sep IRtfSource source concode_elem_sep ByteBuffer buffer concode_field_sep void handleCommand concode_elem_sep void handleCommand concode_elem_sep void handleCharacterData concode_elem_sep void handleCharacterByte concode_elem_sep void parse concode_elem_sep void handleGroupStart concode_elem_sep void handleBinaryData", "code_tokens": ["void", "function", "(", ")", "{", "handleCharacterData", "(", ")", ";", "listener", ".", "processGroupEnd", "(", ")", ";", "groupDepth", "-", "-", ";", "}"], "nl_tokens": ["inform", "the", "listener", "of", "a", "group", "end", ".", "concode_field_sep", "int", "MAX_PARAMETER_LENGTH", "concode_elem_sep", "boolean", "parsingHex", "concode_elem_sep", "int", "MAX_COMMAND_LENGTH", "concode_elem_sep", "IRtfListener", "listener", "concode_elem_sep", "int", "groupDepth", "concode_elem_sep", "IRtfSource", "source", "concode_elem_sep", "ByteBuffer", "buffer", "concode_field_sep", "void", "handleCommand", "concode_elem_sep", "void", "handleCommand", "concode_elem_sep", "void", "handleCharacterData", "concode_elem_sep", "void", "handleCharacterByte", "concode_elem_sep", "void", "parse", "concode_elem_sep", "void", "handleGroupStart", "concode_elem_sep", "void", "handleBinaryData"]}
{"code": "void function ( ) { server . stopAsync ( ) ; server . awaitTerminated ( ) ; }", "nl": "closes all client connections currently connected gracefully . note that this does not settle the actual payment channels and broadcast payment transactions , which must be done using the storedpaymentchannelserverstates which manages the states for the associatedwallet . concode_field_sep HandlerFactory eventHandlerFactory concode_elem_sep NioServer server concode_elem_sep Wallet wallet concode_elem_sep TransactionBroadcaster broadcaster concode_elem_sep ProtobufParser.Listener<Protos.TwoWayChannelMessage> protobufHandlerListener concode_elem_sep ProtobufParser<Protos.TwoWayChannelMessage> socketProtobufHandler concode_elem_sep int timeoutSeconds concode_elem_sep PaymentChannelServer paymentChannelManager concode_elem_sep PaymentChannelCloseException.CloseReason closeReason concode_elem_sep Coin minAcceptedChannelSize concode_elem_sep ServerConnectionEventHandler eventHandler concode_field_sep void bindAndStart concode_elem_sep ServerConnectionEventHandler onNewConnection", "code_tokens": ["void", "function", "(", ")", "{", "server", ".", "stopAsync", "(", ")", ";", "server", ".", "awaitTerminated", "(", ")", ";", "}"], "nl_tokens": ["closes", "all", "client", "connections", "currently", "connected", "gracefully", ".", "note", "that", "this", "does", "not", "settle", "the", "actual", "payment", "channels", "and", "broadcast", "payment", "transactions", ",", "which", "must", "be", "done", "using", "the", "storedpaymentchannelserverstates", "which", "manages", "the", "states", "for", "the", "associatedwallet", ".", "concode_field_sep", "HandlerFactory", "eventHandlerFactory", "concode_elem_sep", "NioServer", "server", "concode_elem_sep", "Wallet", "wallet", "concode_elem_sep", "TransactionBroadcaster", "broadcaster", "concode_elem_sep", "ProtobufParser", ".", "Listener", "<", "Protos", ".", "TwoWayChannelMessage", ">", "protobufHandlerListener", "concode_elem_sep", "ProtobufParser", "<", "Protos", ".", "TwoWayChannelMessage", ">", "socketProtobufHandler", "concode_elem_sep", "int", "timeoutSeconds", "concode_elem_sep", "PaymentChannelServer", "paymentChannelManager", "concode_elem_sep", "PaymentChannelCloseException", ".", "CloseReason", "closeReason", "concode_elem_sep", "Coin", "minAcceptedChannelSize", "concode_elem_sep", "ServerConnectionEventHandler", "eventHandler", "concode_field_sep", "void", "bindAndStart", "concode_elem_sep", "ServerConnectionEventHandler", "onNewConnection"]}
{"code": "void function ( DAVTransaction arg0 , DAVResource arg1 ) { arg0 . setHeader ( \"srini_string\" , arg1 . getContentType ( ) ) ; arg0 . setHeader ( \"srini_string\" , DAVProcessor . METHODS ) ; arg0 . setStatus ( 200 ) ; }", "nl": "process the options method . concode_field_sep PlaceHolder placeHolder concode_field_sep placeholderType placeHolder", "code_tokens": ["void", "function", "(", "DAVTransaction", "arg0", ",", "DAVResource", "arg1", ")", "{", "arg0", ".", "setHeader", "(", "\"srini_string\"", ",", "arg1", ".", "getContentType", "(", ")", ")", ";", "arg0", ".", "setHeader", "(", "\"srini_string\"", ",", "DAVProcessor", ".", "METHODS", ")", ";", "arg0", ".", "setStatus", "(", "200", ")", ";", "}"], "nl_tokens": ["process", "the", "options", "method", ".", "concode_field_sep", "PlaceHolder", "placeHolder", "concode_field_sep", "placeholderType", "placeHolder"]}
{"code": "void function ( ) { System . out . println ( \"srini_string\" ) ; Device loc0 = null ; ArrayList < Capability > loc1 = null ; ArrayList < Capability > loc2 = loc0 . getCapabilities ( ) ; assertEquals ( loc1 , loc2 ) ; fail ( \"srini_string\" ) ; }", "nl": "test of getcapabilities method , of class device . concode_field_sep Device dev concode_field_sep void testGetType concode_elem_sep void setUpClass concode_elem_sep void testGetDeviceName_0args concode_elem_sep void testAddToPane concode_elem_sep void testGetAddress concode_elem_sep void tearDownClass concode_elem_sep void tearDown concode_elem_sep void testGetDeviceNames concode_elem_sep void testGetDeviceBlock concode_elem_sep void testAddCapabilities concode_elem_sep void testToString concode_elem_sep void testGetImgName concode_elem_sep void testAddCapability concode_elem_sep void testGetDeviceName_Locale concode_elem_sep void setUp concode_elem_sep void testGetImage concode_elem_sep void testGetDeviceID concode_elem_sep void testGetCapabilityBlock concode_elem_sep void testRemoveCapability", "code_tokens": ["void", "function", "(", ")", "{", "System", ".", "out", ".", "println", "(", "\"srini_string\"", ")", ";", "Device", "loc0", "=", "null", ";", "ArrayList", "<", "Capability", ">", "loc1", "=", "null", ";", "ArrayList", "<", "Capability", ">", "loc2", "=", "loc0", ".", "getCapabilities", "(", ")", ";", "assertEquals", "(", "loc1", ",", "loc2", ")", ";", "fail", "(", "\"srini_string\"", ")", ";", "}"], "nl_tokens": ["test", "of", "getcapabilities", "method", ",", "of", "class", "device", ".", "concode_field_sep", "Device", "dev", "concode_field_sep", "void", "testGetType", "concode_elem_sep", "void", "setUpClass", "concode_elem_sep", "void", "testGetDeviceName_0args", "concode_elem_sep", "void", "testAddToPane", "concode_elem_sep", "void", "testGetAddress", "concode_elem_sep", "void", "tearDownClass", "concode_elem_sep", "void", "tearDown", "concode_elem_sep", "void", "testGetDeviceNames", "concode_elem_sep", "void", "testGetDeviceBlock", "concode_elem_sep", "void", "testAddCapabilities", "concode_elem_sep", "void", "testToString", "concode_elem_sep", "void", "testGetImgName", "concode_elem_sep", "void", "testAddCapability", "concode_elem_sep", "void", "testGetDeviceName_Locale", "concode_elem_sep", "void", "setUp", "concode_elem_sep", "void", "testGetImage", "concode_elem_sep", "void", "testGetDeviceID", "concode_elem_sep", "void", "testGetCapabilityBlock", "concode_elem_sep", "void", "testRemoveCapability"]}
{"code": "BufferedImage function ( ) { if ( coverArtImage != null ) { if ( image == null ) { try { image = ImageIO . read ( coverArtImage . getLargeThumbnail ( ) ) ; } catch ( IOException loc0 ) { Popup . error ( loc0 ) ; } } } return image ; }", "nl": "get image concode_field_sep String msg concode_elem_sep BufferedImage image concode_elem_sep CoverArtImage coverArtImage concode_elem_sep String name concode_elem_sep List<MbImage> coverArtArchiveList concode_elem_sep CoverType type concode_elem_sep String value concode_elem_sep String hash concode_field_sep List<MbImage> getCoverArtArchiveList concode_elem_sep String getMsg concode_elem_sep String getName concode_elem_sep String getHash concode_elem_sep String getSizeDisplay concode_elem_sep int compareTo concode_elem_sep BufferedImage readImage concode_elem_sep void listCovertArtArchive concode_elem_sep String getValue concode_elem_sep String getSizeHTML concode_elem_sep CoverType getType concode_elem_sep int hashCode concode_elem_sep boolean equals concode_elem_sep void readImages concode_elem_sep String toString concode_elem_sep void setImage", "code_tokens": ["BufferedImage", "function", "(", ")", "{", "if", "(", "coverArtImage", "!=", "null", ")", "{", "if", "(", "image", "==", "null", ")", "{", "try", "{", "image", "=", "ImageIO", ".", "read", "(", "coverArtImage", ".", "getLargeThumbnail", "(", ")", ")", ";", "}", "catch", "(", "IOException", "loc0", ")", "{", "Popup", ".", "error", "(", "loc0", ")", ";", "}", "}", "}", "return", "image", ";", "}"], "nl_tokens": ["get", "image", "concode_field_sep", "String", "msg", "concode_elem_sep", "BufferedImage", "image", "concode_elem_sep", "CoverArtImage", "coverArtImage", "concode_elem_sep", "String", "name", "concode_elem_sep", "List", "<", "MbImage", ">", "coverArtArchiveList", "concode_elem_sep", "CoverType", "type", "concode_elem_sep", "String", "value", "concode_elem_sep", "String", "hash", "concode_field_sep", "List", "<", "MbImage", ">", "getCoverArtArchiveList", "concode_elem_sep", "String", "getMsg", "concode_elem_sep", "String", "getName", "concode_elem_sep", "String", "getHash", "concode_elem_sep", "String", "getSizeDisplay", "concode_elem_sep", "int", "compareTo", "concode_elem_sep", "BufferedImage", "readImage", "concode_elem_sep", "void", "listCovertArtArchive", "concode_elem_sep", "String", "getValue", "concode_elem_sep", "String", "getSizeHTML", "concode_elem_sep", "CoverType", "getType", "concode_elem_sep", "int", "hashCode", "concode_elem_sep", "boolean", "equals", "concode_elem_sep", "void", "readImages", "concode_elem_sep", "String", "toString", "concode_elem_sep", "void", "setImage"]}
{"code": "void function ( MessageWriter arg0 , String arg1 ) { if ( arg1 == null ) { throw new NullPointerException ( \"srini_string\" ) ; } writeAttribute ( arg0 , SOAP_ENCODING_REF_1_1 , arg1 ) ; }", "nl": "writes a soap 1.1 ref attribute . concode_field_sep QName SOAP_ENCODING_REF_1_2 concode_elem_sep QName SOAP_ENCODING_ID_1_1 concode_elem_sep QName SOAP_ENCODING_ID_1_2 concode_elem_sep QName SOAP_ENCODING_REF_1_1 concode_elem_sep String SOAP_ENCODING_NS_1_2 concode_field_sep void writeId concode_elem_sep String readId concode_elem_sep String readAttributeValue concode_elem_sep String readRef concode_elem_sep void writeAttribute", "code_tokens": ["void", "function", "(", "MessageWriter", "arg0", ",", "String", "arg1", ")", "{", "if", "(", "arg1", "==", "null", ")", "{", "throw", "new", "NullPointerException", "(", "\"srini_string\"", ")", ";", "}", "writeAttribute", "(", "arg0", ",", "SOAP_ENCODING_REF_1_1", ",", "arg1", ")", ";", "}"], "nl_tokens": ["writes", "a", "soap", "1.1", "ref", "attribute", ".", "concode_field_sep", "QName", "SOAP_ENCODING_REF_1_2", "concode_elem_sep", "QName", "SOAP_ENCODING_ID_1_1", "concode_elem_sep", "QName", "SOAP_ENCODING_ID_1_2", "concode_elem_sep", "QName", "SOAP_ENCODING_REF_1_1", "concode_elem_sep", "String", "SOAP_ENCODING_NS_1_2", "concode_field_sep", "void", "writeId", "concode_elem_sep", "String", "readId", "concode_elem_sep", "String", "readAttributeValue", "concode_elem_sep", "String", "readRef", "concode_elem_sep", "void", "writeAttribute"]}
{"code": "void function ( final Intent arg0 , final String arg1 ) { arg0 . putExtra ( INTENT_EXTRA_TRANSACTION_HASH , arg1 ) ; arg0 . putExtra ( INTENT_EXTRA_TRANSACTION_HASH_OLD , arg1 ) ; }", "nl": "put transaction hash into result intent . meant for usage by bitcoin wallet applications . concode_field_sep int NANOCOINS_PER_COIN concode_elem_sep String INTENT_EXTRA_TRANSACTION_HASH concode_elem_sep String INTENT_EXTRA_TRANSACTION_HASH_OLD concode_field_sep void request concode_elem_sep void request concode_elem_sep void startForResult concode_elem_sep String transactionHashFromResult concode_elem_sep Intent makeIntent concode_elem_sep void redirectToDownload concode_elem_sep void start concode_elem_sep void requestForResult concode_elem_sep void requestForResult", "code_tokens": ["void", "function", "(", "final", "Intent", "arg0", ",", "final", "String", "arg1", ")", "{", "arg0", ".", "putExtra", "(", "INTENT_EXTRA_TRANSACTION_HASH", ",", "arg1", ")", ";", "arg0", ".", "putExtra", "(", "INTENT_EXTRA_TRANSACTION_HASH_OLD", ",", "arg1", ")", ";", "}"], "nl_tokens": ["put", "transaction", "hash", "into", "result", "intent", ".", "meant", "for", "usage", "by", "bitcoin", "wallet", "applications", ".", "concode_field_sep", "int", "NANOCOINS_PER_COIN", "concode_elem_sep", "String", "INTENT_EXTRA_TRANSACTION_HASH", "concode_elem_sep", "String", "INTENT_EXTRA_TRANSACTION_HASH_OLD", "concode_field_sep", "void", "request", "concode_elem_sep", "void", "request", "concode_elem_sep", "void", "startForResult", "concode_elem_sep", "String", "transactionHashFromResult", "concode_elem_sep", "Intent", "makeIntent", "concode_elem_sep", "void", "redirectToDownload", "concode_elem_sep", "void", "start", "concode_elem_sep", "void", "requestForResult", "concode_elem_sep", "void", "requestForResult"]}
{"code": "String function ( ) { return xmiId ; }", "nl": "get the xmi.id for the reference . this must be unique within the given xmi file system id , but is not guaranteed to be globally unique . concode_field_sep String xmiId concode_elem_sep String systemId concode_field_sep String getSystemId", "code_tokens": ["String", "function", "(", ")", "{", "return", "xmiId", ";", "}"], "nl_tokens": ["get", "the", "xmi", ".", "id", "for", "the", "reference", ".", "this", "must", "be", "unique", "within", "the", "given", "xmi", "file", "system", "id", ",", "but", "is", "not", "guaranteed", "to", "be", "globally", "unique", ".", "concode_field_sep", "String", "xmiId", "concode_elem_sep", "String", "systemId", "concode_field_sep", "String", "getSystemId"]}
{"code": "void function ( VertexLabelType arg0 , VertexLabelType arg1 , EdgeLabelType arg2 ) { Hashtable < VertexLabelType , EdgeLabelType > loc0 = checkForNewVertex ( arg0 ) ; loc0 . put ( arg1 , arg2 ) ; checkForNewVertex ( arg1 ) ; }", "nl": "adds a directed labeled edge to the graph . the end points of the edge are specified by vertex labels . new vertices are automatically identified and added to the graph . concode_field_sep List<VertexLabelType> vertexLabels concode_elem_sep Hashtable<VertexLabelType,Hashtable<VertexLabelType,EdgeLabelType>> globalEdgeLookup concode_field_sep List<VertexLabelType> getVertexLabels concode_elem_sep List<VertexLabelType> getSuccessors concode_elem_sep EdgeLabelType get concode_elem_sep boolean isVertexLabel concode_elem_sep void clear concode_elem_sep Hashtable<VertexLabelType,EdgeLabelType> checkForNewVertex concode_elem_sep void addVertex concode_elem_sep void remove", "code_tokens": ["void", "function", "(", "VertexLabelType", "arg0", ",", "VertexLabelType", "arg1", ",", "EdgeLabelType", "arg2", ")", "{", "Hashtable", "<", "VertexLabelType", ",", "EdgeLabelType", ">", "loc0", "=", "checkForNewVertex", "(", "arg0", ")", ";", "loc0", ".", "put", "(", "arg1", ",", "arg2", ")", ";", "checkForNewVertex", "(", "arg1", ")", ";", "}"], "nl_tokens": ["adds", "a", "directed", "labeled", "edge", "to", "the", "graph", ".", "the", "end", "points", "of", "the", "edge", "are", "specified", "by", "vertex", "labels", ".", "new", "vertices", "are", "automatically", "identified", "and", "added", "to", "the", "graph", ".", "concode_field_sep", "List", "<", "VertexLabelType", ">", "vertexLabels", "concode_elem_sep", "Hashtable", "<", "VertexLabelType", ",", "Hashtable", "<", "VertexLabelType", ",", "EdgeLabelType", ">>", "globalEdgeLookup", "concode_field_sep", "List", "<", "VertexLabelType", ">", "getVertexLabels", "concode_elem_sep", "List", "<", "VertexLabelType", ">", "getSuccessors", "concode_elem_sep", "EdgeLabelType", "get", "concode_elem_sep", "boolean", "isVertexLabel", "concode_elem_sep", "void", "clear", "concode_elem_sep", "Hashtable", "<", "VertexLabelType", ",", "EdgeLabelType", ">", "checkForNewVertex", "concode_elem_sep", "void", "addVertex", "concode_elem_sep", "void", "remove"]}
{"code": "void function ( ) { mThrown . expect ( IndexOutOfBoundsException . class ) ; int loc0 = TieredBlockStoreTestUtils . TIER_PATH [ TEST_TIER_LEVEL ] . length ; Assert . assertEquals ( loc0 , mTestTierView . getDirView ( loc0 ) . getDirViewIndex ( ) ) ; }", "nl": "tests that an exception is thrown when trying to get a storage directory view with a bad index . concode_field_sep StorageTier mTestTier concode_elem_sep int TEST_TIER_LEVEL concode_elem_sep ExpectedException mThrown concode_elem_sep TemporaryFolder mTestFolder concode_elem_sep StorageTierView mTestTierView concode_field_sep void getDirViews concode_elem_sep void getDirView concode_elem_sep void before concode_elem_sep void getTierViewAlias concode_elem_sep void getTierViewOrdinal", "code_tokens": ["void", "function", "(", ")", "{", "mThrown", ".", "expect", "(", "IndexOutOfBoundsException", ".", "class", ")", ";", "int", "loc0", "=", "TieredBlockStoreTestUtils", ".", "TIER_PATH", "[", "TEST_TIER_LEVEL", "]", ".", "length", ";", "Assert", ".", "assertEquals", "(", "loc0", ",", "mTestTierView", ".", "getDirView", "(", "loc0", ")", ".", "getDirViewIndex", "(", ")", ")", ";", "}"], "nl_tokens": ["tests", "that", "an", "exception", "is", "thrown", "when", "trying", "to", "get", "a", "storage", "directory", "view", "with", "a", "bad", "index", ".", "concode_field_sep", "StorageTier", "mTestTier", "concode_elem_sep", "int", "TEST_TIER_LEVEL", "concode_elem_sep", "ExpectedException", "mThrown", "concode_elem_sep", "TemporaryFolder", "mTestFolder", "concode_elem_sep", "StorageTierView", "mTestTierView", "concode_field_sep", "void", "getDirViews", "concode_elem_sep", "void", "getDirView", "concode_elem_sep", "void", "before", "concode_elem_sep", "void", "getTierViewAlias", "concode_elem_sep", "void", "getTierViewOrdinal"]}
{"code": "long function ( byte [ ] arg0 ) { long loc0 = 0 ; for ( int loc1 = 0 ; loc1 < arg0 . length ; ++ loc1 ) { loc0 += 255 & arg0 [ loc1 ] ; } return loc0 ; }", "nl": "calculate checksum concode_field_sep File file concode_elem_sep TarHeader header concode_field_sep void setName concode_elem_sep String getName concode_elem_sep void setGroupId concode_elem_sep boolean isDescendent concode_elem_sep File getFile concode_elem_sep int getGroupId concode_elem_sep TarHeader getHeader concode_elem_sep String getGroupName concode_elem_sep void setGroupName concode_elem_sep long getSize concode_elem_sep void setSize concode_elem_sep void setIds concode_elem_sep void setUserName concode_elem_sep void setModTime concode_elem_sep void setModTime concode_elem_sep boolean equals concode_elem_sep void writeEntryHeader concode_elem_sep String getUserName concode_elem_sep void parseTarHeader concode_elem_sep void extractTarHeader concode_elem_sep int getUserId concode_elem_sep Date getModTime concode_elem_sep boolean isDirectory concode_elem_sep void setUserId", "code_tokens": ["long", "function", "(", "byte", "[", "]", "arg0", ")", "{", "long", "loc0", "=", "0", ";", "for", "(", "int", "loc1", "=", "0", ";", "loc1", "<", "arg0", ".", "length", ";", "+", "+", "loc1", ")", "{", "loc0", "+=", "255", "&", "arg0", "[", "loc1", "]", ";", "}", "return", "loc0", ";", "}"], "nl_tokens": ["calculate", "checksum", "concode_field_sep", "File", "file", "concode_elem_sep", "TarHeader", "header", "concode_field_sep", "void", "setName", "concode_elem_sep", "String", "getName", "concode_elem_sep", "void", "setGroupId", "concode_elem_sep", "boolean", "isDescendent", "concode_elem_sep", "File", "getFile", "concode_elem_sep", "int", "getGroupId", "concode_elem_sep", "TarHeader", "getHeader", "concode_elem_sep", "String", "getGroupName", "concode_elem_sep", "void", "setGroupName", "concode_elem_sep", "long", "getSize", "concode_elem_sep", "void", "setSize", "concode_elem_sep", "void", "setIds", "concode_elem_sep", "void", "setUserName", "concode_elem_sep", "void", "setModTime", "concode_elem_sep", "void", "setModTime", "concode_elem_sep", "boolean", "equals", "concode_elem_sep", "void", "writeEntryHeader", "concode_elem_sep", "String", "getUserName", "concode_elem_sep", "void", "parseTarHeader", "concode_elem_sep", "void", "extractTarHeader", "concode_elem_sep", "int", "getUserId", "concode_elem_sep", "Date", "getModTime", "concode_elem_sep", "boolean", "isDirectory", "concode_elem_sep", "void", "setUserId"]}
{"code": "String function ( ) { String loc0 = \"srini_string\" ; try { loc0 = lineItem . getLineItem ( ) . getItem ( ) . getSellersItemIdentification ( ) . getID ( ) . getValue ( ) ; } catch ( NullPointerException loc1 ) { } return loc0 ; }", "nl": "returns the part number associated with a line item . concode_field_sep OrderLineType lineItem concode_elem_sep java.util.Iterator iter concode_field_sep String getItemDescription concode_elem_sep Object next concode_elem_sep java.util.Currency getItemPriceCurrency concode_elem_sep int getItemQuantity concode_elem_sep double getItemPrice concode_elem_sep BasePriceType getTheItemPrice concode_elem_sep boolean hasNext concode_elem_sep void remove", "code_tokens": ["String", "function", "(", ")", "{", "String", "loc0", "=", "\"srini_string\"", ";", "try", "{", "loc0", "=", "lineItem", ".", "getLineItem", "(", ")", ".", "getItem", "(", ")", ".", "getSellersItemIdentification", "(", ")", ".", "getID", "(", ")", ".", "getValue", "(", ")", ";", "}", "catch", "(", "NullPointerException", "loc1", ")", "{", "}", "return", "loc0", ";", "}"], "nl_tokens": ["returns", "the", "part", "number", "associated", "with", "a", "line", "item", ".", "concode_field_sep", "OrderLineType", "lineItem", "concode_elem_sep", "java", ".", "util", ".", "Iterator", "iter", "concode_field_sep", "String", "getItemDescription", "concode_elem_sep", "Object", "next", "concode_elem_sep", "java", ".", "util", ".", "Currency", "getItemPriceCurrency", "concode_elem_sep", "int", "getItemQuantity", "concode_elem_sep", "double", "getItemPrice", "concode_elem_sep", "BasePriceType", "getTheItemPrice", "concode_elem_sep", "boolean", "hasNext", "concode_elem_sep", "void", "remove"]}
{"code": "void function ( SshDisconnectedEvent arg0 ) { System . out . println ( \"srini_string\" + arg0 . getHost ( ) + \"srini_string\" ) ; connected = false ; }", "nl": "captures sshdisconnectedevent concode_field_sep boolean connected concode_field_sep void connected concode_elem_sep void main concode_elem_sep void dataReceived", "code_tokens": ["void", "function", "(", "SshDisconnectedEvent", "arg0", ")", "{", "System", ".", "out", ".", "println", "(", "\"srini_string\"", "+", "arg0", ".", "getHost", "(", ")", "+", "\"srini_string\"", ")", ";", "connected", "=", "false", ";", "}"], "nl_tokens": ["captures", "sshdisconnectedevent", "concode_field_sep", "boolean", "connected", "concode_field_sep", "void", "connected", "concode_elem_sep", "void", "main", "concode_elem_sep", "void", "dataReceived"]}
{"code": "CascadedStyle function ( IdentValue arg0 ) { CSSPrimitiveValue loc0 = new PropertyValue ( arg0 ) ; List loc1 = Collections . singletonList ( new PropertyDeclaration ( CSSName . DISPLAY , loc0 , true , StylesheetInfo . USER ) ) ; return new CascadedStyle ( loc1 . iterator ( ) ) ; }", "nl": "creates a cascadedstyle , setting the display property to to the value of the display parameter . concode_field_sep Map cascadedProperties concode_elem_sep String fingerprint concode_elem_sep CascadedStyle emptyCascadedStyle concode_field_sep PropertyDeclaration createLayoutPropertyDeclaration concode_elem_sep java.util.Iterator getCascadedPropertyDeclarations concode_elem_sep PropertyDeclaration propertyByName concode_elem_sep CascadedStyle createLayoutStyle concode_elem_sep CascadedStyle createLayoutStyle concode_elem_sep CascadedStyle createLayoutStyle concode_elem_sep int countAssigned concode_elem_sep void addProperties concode_elem_sep boolean hasProperty concode_elem_sep String getFingerprint concode_elem_sep IdentValue getIdent", "code_tokens": ["CascadedStyle", "function", "(", "IdentValue", "arg0", ")", "{", "CSSPrimitiveValue", "loc0", "=", "new", "PropertyValue", "(", "arg0", ")", ";", "List", "loc1", "=", "Collections", ".", "singletonList", "(", "new", "PropertyDeclaration", "(", "CSSName", ".", "DISPLAY", ",", "loc0", ",", "true", ",", "StylesheetInfo", ".", "USER", ")", ")", ";", "return", "new", "CascadedStyle", "(", "loc1", ".", "iterator", "(", ")", ")", ";", "}"], "nl_tokens": ["creates", "a", "cascadedstyle", ",", "setting", "the", "display", "property", "to", "to", "the", "value", "of", "the", "display", "parameter", ".", "concode_field_sep", "Map", "cascadedProperties", "concode_elem_sep", "String", "fingerprint", "concode_elem_sep", "CascadedStyle", "emptyCascadedStyle", "concode_field_sep", "PropertyDeclaration", "createLayoutPropertyDeclaration", "concode_elem_sep", "java", ".", "util", ".", "Iterator", "getCascadedPropertyDeclarations", "concode_elem_sep", "PropertyDeclaration", "propertyByName", "concode_elem_sep", "CascadedStyle", "createLayoutStyle", "concode_elem_sep", "CascadedStyle", "createLayoutStyle", "concode_elem_sep", "CascadedStyle", "createLayoutStyle", "concode_elem_sep", "int", "countAssigned", "concode_elem_sep", "void", "addProperties", "concode_elem_sep", "boolean", "hasProperty", "concode_elem_sep", "String", "getFingerprint", "concode_elem_sep", "IdentValue", "getIdent"]}
{"code": "void function ( String arg0 ) { this . startTime = arg0 ; }", "nl": "sets the start time . concode_field_sep Long totalElapsedMinutes concode_elem_sep List<TestResultDTO> testResultLst concode_elem_sep String startTime concode_elem_sep String endTime concode_elem_sep Long batchId concode_elem_sep String batchStatus concode_elem_sep Long totalElapsedSeconds concode_field_sep void setBatchStatus concode_elem_sep Long getTotalElapsedSeconds concode_elem_sep void setBatchId concode_elem_sep void setTotalElapsedMinutes concode_elem_sep void setTestResultLst concode_elem_sep String getEndTime concode_elem_sep Long getTotalElapsedMinutes concode_elem_sep void setEndTime concode_elem_sep Long getBatchId concode_elem_sep void setTotalElapsedSeconds concode_elem_sep String toString concode_elem_sep String getStartTime concode_elem_sep List<TestResultDTO> getTestResultLst concode_elem_sep String getBatchStatus", "code_tokens": ["void", "function", "(", "String", "arg0", ")", "{", "this", ".", "startTime", "=", "arg0", ";", "}"], "nl_tokens": ["sets", "the", "start", "time", ".", "concode_field_sep", "Long", "totalElapsedMinutes", "concode_elem_sep", "List", "<", "TestResultDTO", ">", "testResultLst", "concode_elem_sep", "String", "startTime", "concode_elem_sep", "String", "endTime", "concode_elem_sep", "Long", "batchId", "concode_elem_sep", "String", "batchStatus", "concode_elem_sep", "Long", "totalElapsedSeconds", "concode_field_sep", "void", "setBatchStatus", "concode_elem_sep", "Long", "getTotalElapsedSeconds", "concode_elem_sep", "void", "setBatchId", "concode_elem_sep", "void", "setTotalElapsedMinutes", "concode_elem_sep", "void", "setTestResultLst", "concode_elem_sep", "String", "getEndTime", "concode_elem_sep", "Long", "getTotalElapsedMinutes", "concode_elem_sep", "void", "setEndTime", "concode_elem_sep", "Long", "getBatchId", "concode_elem_sep", "void", "setTotalElapsedSeconds", "concode_elem_sep", "String", "toString", "concode_elem_sep", "String", "getStartTime", "concode_elem_sep", "List", "<", "TestResultDTO", ">", "getTestResultLst", "concode_elem_sep", "String", "getBatchStatus"]}
{"code": "void function ( ) { mClient = Mockito . mock ( AmazonS3Client . class ) ; mManager = Mockito . mock ( TransferManager . class ) ; mS3UnderFileSystem = new S3AUnderFileSystem ( new AlluxioURI ( \"srini_string\" ) , mClient , BUCKET_NAME , BUCKET_PREFIX , BUCKET_MODE , ACCOUNT_OWNER , mManager ) ; }", "nl": "set up . concode_field_sep TransferManager mManager concode_elem_sep String BUCKET_PREFIX concode_elem_sep AmazonS3Client mClient concode_elem_sep String DST concode_elem_sep S3AUnderFileSystem mS3UnderFileSystem concode_elem_sep String SRC concode_elem_sep String ACCOUNT_OWNER concode_elem_sep String PATH concode_elem_sep String BUCKET_NAME concode_elem_sep short BUCKET_MODE concode_field_sep void renameOnAmazonClientException concode_elem_sep void deleteNonRecursiveOnAmazonClientException concode_elem_sep void deleteRecursiveOnAmazonClientException", "code_tokens": ["void", "function", "(", ")", "{", "mClient", "=", "Mockito", ".", "mock", "(", "AmazonS3Client", ".", "class", ")", ";", "mManager", "=", "Mockito", ".", "mock", "(", "TransferManager", ".", "class", ")", ";", "mS3UnderFileSystem", "=", "new", "S3AUnderFileSystem", "(", "new", "AlluxioURI", "(", "\"srini_string\"", ")", ",", "mClient", ",", "BUCKET_NAME", ",", "BUCKET_PREFIX", ",", "BUCKET_MODE", ",", "ACCOUNT_OWNER", ",", "mManager", ")", ";", "}"], "nl_tokens": ["set", "up", ".", "concode_field_sep", "TransferManager", "mManager", "concode_elem_sep", "String", "BUCKET_PREFIX", "concode_elem_sep", "AmazonS3Client", "mClient", "concode_elem_sep", "String", "DST", "concode_elem_sep", "S3AUnderFileSystem", "mS3UnderFileSystem", "concode_elem_sep", "String", "SRC", "concode_elem_sep", "String", "ACCOUNT_OWNER", "concode_elem_sep", "String", "PATH", "concode_elem_sep", "String", "BUCKET_NAME", "concode_elem_sep", "short", "BUCKET_MODE", "concode_field_sep", "void", "renameOnAmazonClientException", "concode_elem_sep", "void", "deleteNonRecursiveOnAmazonClientException", "concode_elem_sep", "void", "deleteRecursiveOnAmazonClientException"]}
{"code": "void function ( ) { for ( int loc0 = 0 ; loc0 < TieredBlockStoreTestUtils . TIER_PATH [ TEST_TIER_LEVEL ] . length ; loc0 ++ ) { Assert . assertEquals ( loc0 , mTestTierView . getDirView ( loc0 ) . getDirViewIndex ( ) ) ; } }", "nl": "tests the storagetierview #getdirview int method . concode_field_sep StorageTier mTestTier concode_elem_sep int TEST_TIER_LEVEL concode_elem_sep ExpectedException mThrown concode_elem_sep TemporaryFolder mTestFolder concode_elem_sep StorageTierView mTestTierView concode_field_sep void getDirViews concode_elem_sep void before concode_elem_sep void getDirViewBadIndex concode_elem_sep void getTierViewAlias concode_elem_sep void getTierViewOrdinal", "code_tokens": ["void", "function", "(", ")", "{", "for", "(", "int", "loc0", "=", "0", ";", "loc0", "<", "TieredBlockStoreTestUtils", ".", "TIER_PATH", "[", "TEST_TIER_LEVEL", "]", ".", "length", ";", "loc0", "+", "+", ")", "{", "Assert", ".", "assertEquals", "(", "loc0", ",", "mTestTierView", ".", "getDirView", "(", "loc0", ")", ".", "getDirViewIndex", "(", ")", ")", ";", "}", "}"], "nl_tokens": ["tests", "the", "storagetierview", "#getdirview int method . concode_field_sep StorageTier mTestTier concode_elem_sep int TEST_TIER_LEVEL concode_elem_sep ExpectedException mThrown concode_elem_sep TemporaryFolder mTestFolder concode_elem_sep StorageTierView mTestTierView concode_field_sep void getDirViews concode_elem_sep void before concode_elem_sep void getDirViewBadIndex concode_elem_sep void getTierViewAlias concode_elem_sep void getTierViewOrdinal"]}
{"code": "void function ( ) { assertEquals ( CompassPoint . NORTH , instance . getLatitudeHemisphere ( ) ) ; }", "nl": "test for getlathemisphere concode_field_sep Position instance concode_field_sep void testGetLatitude concode_elem_sep void testSetIllegalLatitudeSouth concode_elem_sep void testDistanceToSelf concode_elem_sep void testSetIllegalLongitudeWest concode_elem_sep void testGetDatum concode_elem_sep void testSetLatitudeSouth concode_elem_sep void testDistanceTo concode_elem_sep void testSetIllegalLongitudeEast concode_elem_sep void testToWaypoint concode_elem_sep void testSetLongitudeEast concode_elem_sep void setUp concode_elem_sep void testGetLongitude concode_elem_sep void testSetLongitudeWest concode_elem_sep void testSetLatitudeNorth concode_elem_sep void testGetLongitudeHemisphere concode_elem_sep void testSetIllegalLatitudeNorth", "code_tokens": ["void", "function", "(", ")", "{", "assertEquals", "(", "CompassPoint", ".", "NORTH", ",", "instance", ".", "getLatitudeHemisphere", "(", ")", ")", ";", "}"], "nl_tokens": ["test", "for", "getlathemisphere", "concode_field_sep", "Position", "instance", "concode_field_sep", "void", "testGetLatitude", "concode_elem_sep", "void", "testSetIllegalLatitudeSouth", "concode_elem_sep", "void", "testDistanceToSelf", "concode_elem_sep", "void", "testSetIllegalLongitudeWest", "concode_elem_sep", "void", "testGetDatum", "concode_elem_sep", "void", "testSetLatitudeSouth", "concode_elem_sep", "void", "testDistanceTo", "concode_elem_sep", "void", "testSetIllegalLongitudeEast", "concode_elem_sep", "void", "testToWaypoint", "concode_elem_sep", "void", "testSetLongitudeEast", "concode_elem_sep", "void", "setUp", "concode_elem_sep", "void", "testGetLongitude", "concode_elem_sep", "void", "testSetLongitudeWest", "concode_elem_sep", "void", "testSetLatitudeNorth", "concode_elem_sep", "void", "testGetLongitudeHemisphere", "concode_elem_sep", "void", "testSetIllegalLatitudeNorth"]}
{"code": "void function ( ) { synchronized ( internalLock ) { suspensions ++ ; } }", "nl": "suspends the running of tasks until #resume is called . this can be called multipletimes to increase the suspensions count and execution will not continue until #resume has been called the same number of times as suspend has been.any task that has already been pulled off the queue for execution will be completed before execution is suspended . concode_field_sep boolean isWorkerRunning concode_elem_sep Deque<Runnable> queue concode_elem_sep Executor executor concode_elem_sep Object internalLock concode_elem_sep int suspensions concode_elem_sep Logger log concode_field_sep void resume concode_elem_sep void executeFirst concode_elem_sep void startQueueWorker concode_elem_sep void run concode_elem_sep void workOnQueue concode_elem_sep void execute", "code_tokens": ["void", "function", "(", ")", "{", "synchronized", "(", "internalLock", ")", "{", "suspensions", "+", "+", ";", "}", "}"], "nl_tokens": ["suspends", "the", "running", "of", "tasks", "until", "#resume is called . this can be called multipletimes to increase the suspensions count and execution will not continue until #resume has been called the same number of times as suspend has been.any task that has already been pulled off the queue for execution will be completed before execution is suspended . concode_field_sep boolean isWorkerRunning concode_elem_sep Deque<Runnable> queue concode_elem_sep Executor executor concode_elem_sep Object internalLock concode_elem_sep int suspensions concode_elem_sep Logger log concode_field_sep void resume concode_elem_sep void executeFirst concode_elem_sep void startQueueWorker concode_elem_sep void run concode_elem_sep void workOnQueue concode_elem_sep void execute"]}
{"code": "Long function ( ) { return testId ; }", "nl": "gets the test id . concode_field_sep Long expectedDataUnitId concode_elem_sep Long seqNo concode_elem_sep Long dataSetId concode_elem_sep Long dataUnitId concode_elem_sep String expectedValue concode_elem_sep String actualValue concode_elem_sep Long expectedDataSetId concode_elem_sep String errorCode concode_elem_sep Long testId concode_elem_sep String failedAttributeName concode_elem_sep String srcFileName concode_elem_sep String errorMsg concode_field_sep void setExpectedValue concode_elem_sep String getExpectedValue concode_elem_sep Long getExpectedDataSetId concode_elem_sep void setExpectedDataSetId concode_elem_sep void setActualValue concode_elem_sep Long getDataSetId concode_elem_sep void setSrcFileName concode_elem_sep Long getExpectedDataUnitId concode_elem_sep void setExpectedDataUnitId concode_elem_sep String getSrcFileName concode_elem_sep Long getSeqNo concode_elem_sep String getFailedAttributeName concode_elem_sep void setTestId concode_elem_sep void setFailedAttributeName concode_elem_sep void setErrorCode concode_elem_sep String getActualValue concode_elem_sep Long getDataUnitId concode_elem_sep void setSeqNo concode_elem_sep void setErrorMsg concode_elem_sep String getErrorCode concode_elem_sep void setDataUnitId concode_elem_sep void setDataSetId concode_elem_sep String toString concode_elem_sep String getErrorMsg", "code_tokens": ["Long", "function", "(", ")", "{", "return", "testId", ";", "}"], "nl_tokens": ["gets", "the", "test", "id", ".", "concode_field_sep", "Long", "expectedDataUnitId", "concode_elem_sep", "Long", "seqNo", "concode_elem_sep", "Long", "dataSetId", "concode_elem_sep", "Long", "dataUnitId", "concode_elem_sep", "String", "expectedValue", "concode_elem_sep", "String", "actualValue", "concode_elem_sep", "Long", "expectedDataSetId", "concode_elem_sep", "String", "errorCode", "concode_elem_sep", "Long", "testId", "concode_elem_sep", "String", "failedAttributeName", "concode_elem_sep", "String", "srcFileName", "concode_elem_sep", "String", "errorMsg", "concode_field_sep", "void", "setExpectedValue", "concode_elem_sep", "String", "getExpectedValue", "concode_elem_sep", "Long", "getExpectedDataSetId", "concode_elem_sep", "void", "setExpectedDataSetId", "concode_elem_sep", "void", "setActualValue", "concode_elem_sep", "Long", "getDataSetId", "concode_elem_sep", "void", "setSrcFileName", "concode_elem_sep", "Long", "getExpectedDataUnitId", "concode_elem_sep", "void", "setExpectedDataUnitId", "concode_elem_sep", "String", "getSrcFileName", "concode_elem_sep", "Long", "getSeqNo", "concode_elem_sep", "String", "getFailedAttributeName", "concode_elem_sep", "void", "setTestId", "concode_elem_sep", "void", "setFailedAttributeName", "concode_elem_sep", "void", "setErrorCode", "concode_elem_sep", "String", "getActualValue", "concode_elem_sep", "Long", "getDataUnitId", "concode_elem_sep", "void", "setSeqNo", "concode_elem_sep", "void", "setErrorMsg", "concode_elem_sep", "String", "getErrorCode", "concode_elem_sep", "void", "setDataUnitId", "concode_elem_sep", "void", "setDataSetId", "concode_elem_sep", "String", "toString", "concode_elem_sep", "String", "getErrorMsg"]}
{"code": "void function ( boolean arg0 ) { LOG . info ( \"srini_string\" , mMaster . getName ( ) , mJournal . getCheckpointFilePath ( ) ) ; JournalInputStream loc0 = mReader . getCheckpointInputStream ( ) ; if ( arg0 ) { mMaster . processJournalCheckpoint ( loc0 ) ; } mLatestSequenceNumber = loc0 . getLatestSequenceNumber ( ) ; loc0 . close ( ) ; }", "nl": "loads and optionally processes the journal checkpoint file . concode_field_sep JournalReader mReader concode_elem_sep long mLatestSequenceNumber concode_elem_sep Master mMaster concode_elem_sep Journal mJournal concode_elem_sep Logger LOG concode_field_sep long getLatestSequenceNumber concode_elem_sep boolean isValid concode_elem_sep boolean checkpointExists concode_elem_sep int processNextJournalLogFiles", "code_tokens": ["void", "function", "(", "boolean", "arg0", ")", "{", "LOG", ".", "info", "(", "\"srini_string\"", ",", "mMaster", ".", "getName", "(", ")", ",", "mJournal", ".", "getCheckpointFilePath", "(", ")", ")", ";", "JournalInputStream", "loc0", "=", "mReader", ".", "getCheckpointInputStream", "(", ")", ";", "if", "(", "arg0", ")", "{", "mMaster", ".", "processJournalCheckpoint", "(", "loc0", ")", ";", "}", "mLatestSequenceNumber", "=", "loc0", ".", "getLatestSequenceNumber", "(", ")", ";", "loc0", ".", "close", "(", ")", ";", "}"], "nl_tokens": ["loads", "and", "optionally", "processes", "the", "journal", "checkpoint", "file", ".", "concode_field_sep", "JournalReader", "mReader", "concode_elem_sep", "long", "mLatestSequenceNumber", "concode_elem_sep", "Master", "mMaster", "concode_elem_sep", "Journal", "mJournal", "concode_elem_sep", "Logger", "LOG", "concode_field_sep", "long", "getLatestSequenceNumber", "concode_elem_sep", "boolean", "isValid", "concode_elem_sep", "boolean", "checkpointExists", "concode_elem_sep", "int", "processNextJournalLogFiles"]}
{"code": "boolean function ( ) { return defaultNillable ; }", "nl": "absent any annotations of xml mapping , the value of the nillable attribute on elements . concode_field_sep boolean defaultNillable concode_elem_sep boolean defaultExtensibleElements concode_elem_sep boolean qualifyAttributes concode_elem_sep int defaultMinOccurs concode_elem_sep boolean defaultExtensibleAttributes concode_elem_sep boolean qualifyElements concode_field_sep void setDefaultExtensibleElements concode_elem_sep void setQualifyAttributes concode_elem_sep int getDefaultMinOccurs concode_elem_sep void setDefaultExtensibleAttributes concode_elem_sep boolean isDefaultExtensibleAttributes concode_elem_sep void setQualifyElements concode_elem_sep void setDefaultMinOccurs concode_elem_sep boolean isQualifyAttributes concode_elem_sep boolean isQualifyElements concode_elem_sep boolean isDefaultExtensibleElements concode_elem_sep void setDefaultNillable", "code_tokens": ["boolean", "function", "(", ")", "{", "return", "defaultNillable", ";", "}"], "nl_tokens": ["absent", "any", "annotations", "of", "xml", "mapping", ",", "the", "value", "of", "the", "nillable", "attribute", "on", "elements", ".", "concode_field_sep", "boolean", "defaultNillable", "concode_elem_sep", "boolean", "defaultExtensibleElements", "concode_elem_sep", "boolean", "qualifyAttributes", "concode_elem_sep", "int", "defaultMinOccurs", "concode_elem_sep", "boolean", "defaultExtensibleAttributes", "concode_elem_sep", "boolean", "qualifyElements", "concode_field_sep", "void", "setDefaultExtensibleElements", "concode_elem_sep", "void", "setQualifyAttributes", "concode_elem_sep", "int", "getDefaultMinOccurs", "concode_elem_sep", "void", "setDefaultExtensibleAttributes", "concode_elem_sep", "boolean", "isDefaultExtensibleAttributes", "concode_elem_sep", "void", "setQualifyElements", "concode_elem_sep", "void", "setDefaultMinOccurs", "concode_elem_sep", "boolean", "isQualifyAttributes", "concode_elem_sep", "boolean", "isQualifyElements", "concode_elem_sep", "boolean", "isDefaultExtensibleElements", "concode_elem_sep", "void", "setDefaultNillable"]}
{"code": "String function ( ) { return elem1 ; }", "nl": "gets the value of the elem1 property . concode_field_sep String elem2 concode_elem_sep String elem1 concode_elem_sep int elem3 concode_field_sep int getElem3 concode_elem_sep String getElem2 concode_elem_sep void setElem2 concode_elem_sep void setElem1 concode_elem_sep void setElem3", "code_tokens": ["String", "function", "(", ")", "{", "return", "elem1", ";", "}"], "nl_tokens": ["gets", "the", "value", "of", "the", "elem1", "property", ".", "concode_field_sep", "String", "elem2", "concode_elem_sep", "String", "elem1", "concode_elem_sep", "int", "elem3", "concode_field_sep", "int", "getElem3", "concode_elem_sep", "String", "getElem2", "concode_elem_sep", "void", "setElem2", "concode_elem_sep", "void", "setElem1", "concode_elem_sep", "void", "setElem3"]}
{"code": "int function ( ) { return lane_id ; }", "nl": "gets the lane_id . concode_field_sep int volume concode_elem_sep double occupancy concode_elem_sep Timestamp measurement_date concode_elem_sep int lane_id concode_elem_sep long id concode_elem_sep double speed concode_elem_sep int quality concode_field_sep double getOccupancy concode_elem_sep void setOccupancy concode_elem_sep Timestamp getMeasurement_date concode_elem_sep long getId concode_elem_sep void setVolume concode_elem_sep void setLane_id concode_elem_sep void setSpeed concode_elem_sep int getVolume concode_elem_sep void setQuality concode_elem_sep int getQuality concode_elem_sep double getSpeed concode_elem_sep void setMeasurement_date concode_elem_sep void setId concode_elem_sep String toString", "code_tokens": ["int", "function", "(", ")", "{", "return", "lane_id", ";", "}"], "nl_tokens": ["gets", "the", "lane_id", ".", "concode_field_sep", "int", "volume", "concode_elem_sep", "double", "occupancy", "concode_elem_sep", "Timestamp", "measurement_date", "concode_elem_sep", "int", "lane_id", "concode_elem_sep", "long", "id", "concode_elem_sep", "double", "speed", "concode_elem_sep", "int", "quality", "concode_field_sep", "double", "getOccupancy", "concode_elem_sep", "void", "setOccupancy", "concode_elem_sep", "Timestamp", "getMeasurement_date", "concode_elem_sep", "long", "getId", "concode_elem_sep", "void", "setVolume", "concode_elem_sep", "void", "setLane_id", "concode_elem_sep", "void", "setSpeed", "concode_elem_sep", "int", "getVolume", "concode_elem_sep", "void", "setQuality", "concode_elem_sep", "int", "getQuality", "concode_elem_sep", "double", "getSpeed", "concode_elem_sep", "void", "setMeasurement_date", "concode_elem_sep", "void", "setId", "concode_elem_sep", "String", "toString"]}
{"code": "int function ( ) { return defaultPort ; }", "nl": "obtains the default port . concode_field_sep int defaultPort concode_elem_sep SchemeSocketFactory socketFactory concode_elem_sep String name concode_elem_sep String stringRep concode_elem_sep boolean layered concode_field_sep SocketFactory getSocketFactory concode_elem_sep String getName concode_elem_sep int hashCode concode_elem_sep boolean isLayered concode_elem_sep boolean equals concode_elem_sep String toString concode_elem_sep SchemeSocketFactory getSchemeSocketFactory concode_elem_sep int resolvePort", "code_tokens": ["int", "function", "(", ")", "{", "return", "defaultPort", ";", "}"], "nl_tokens": ["obtains", "the", "default", "port", ".", "concode_field_sep", "int", "defaultPort", "concode_elem_sep", "SchemeSocketFactory", "socketFactory", "concode_elem_sep", "String", "name", "concode_elem_sep", "String", "stringRep", "concode_elem_sep", "boolean", "layered", "concode_field_sep", "SocketFactory", "getSocketFactory", "concode_elem_sep", "String", "getName", "concode_elem_sep", "int", "hashCode", "concode_elem_sep", "boolean", "isLayered", "concode_elem_sep", "boolean", "equals", "concode_elem_sep", "String", "toString", "concode_elem_sep", "SchemeSocketFactory", "getSchemeSocketFactory", "concode_elem_sep", "int", "resolvePort"]}
{"code": "double function ( int arg0 ) { return W . get ( arg0 , arg0 ) ; }", "nl": "returns the specified singular value . concode_field_sep SingularValueDecomposition<DenseMatrix64F> svd concode_elem_sep DenseMatrix64F mat concode_elem_sep T U concode_elem_sep T V concode_elem_sep T W concode_field_sep T getV concode_elem_sep T getW concode_elem_sep SingularValueDecomposition getSVD concode_elem_sep int rank concode_elem_sep SimpleMatrix nullSpace concode_elem_sep int nullity concode_elem_sep T getU concode_elem_sep double quality", "code_tokens": ["double", "function", "(", "int", "arg0", ")", "{", "return", "W", ".", "get", "(", "arg0", ",", "arg0", ")", ";", "}"], "nl_tokens": ["returns", "the", "specified", "singular", "value", ".", "concode_field_sep", "SingularValueDecomposition", "<", "DenseMatrix64F", ">", "svd", "concode_elem_sep", "DenseMatrix64F", "mat", "concode_elem_sep", "T", "U", "concode_elem_sep", "T", "V", "concode_elem_sep", "T", "W", "concode_field_sep", "T", "getV", "concode_elem_sep", "T", "getW", "concode_elem_sep", "SingularValueDecomposition", "getSVD", "concode_elem_sep", "int", "rank", "concode_elem_sep", "SimpleMatrix", "nullSpace", "concode_elem_sep", "int", "nullity", "concode_elem_sep", "T", "getU", "concode_elem_sep", "double", "quality"]}
{"code": "boolean function ( final String arg0 , final Map arg1 ) { if ( arg1 == null ) { return false ; } Object loc0 = arg1 . get ( arg0 ) ; if ( ! ( loc0 instanceof Boolean ) ) { return false ; } return ( ( Boolean ) loc0 ) . booleanValue ( ) ; }", "nl": "utility function to determine the presence of a key . the default is false . concode_field_sep Logger LOG concode_elem_sep Collection<Object[]> listeners concode_field_sep String getParsingHelp concode_elem_sep void removeElementListener concode_elem_sep void cleanListener concode_elem_sep void updateListener concode_elem_sep void addElementListener concode_elem_sep void addElementListener concode_elem_sep void addElementListener concode_elem_sep void removeAllElementListeners concode_elem_sep String toString concode_elem_sep void parse concode_elem_sep void initialiseListener", "code_tokens": ["boolean", "function", "(", "final", "String", "arg0", ",", "final", "Map", "arg1", ")", "{", "if", "(", "arg1", "==", "null", ")", "{", "return", "false", ";", "}", "Object", "loc0", "=", "arg1", ".", "get", "(", "arg0", ")", ";", "if", "(", "!", "(", "loc0", "instanceof", "Boolean", ")", ")", "{", "return", "false", ";", "}", "return", "(", "(", "Boolean", ")", "loc0", ")", ".", "booleanValue", "(", ")", ";", "}"], "nl_tokens": ["utility", "function", "to", "determine", "the", "presence", "of", "a", "key", ".", "the", "default", "is", "false", ".", "concode_field_sep", "Logger", "LOG", "concode_elem_sep", "Collection", "<", "Object", "[", "]", ">", "listeners", "concode_field_sep", "String", "getParsingHelp", "concode_elem_sep", "void", "removeElementListener", "concode_elem_sep", "void", "cleanListener", "concode_elem_sep", "void", "updateListener", "concode_elem_sep", "void", "addElementListener", "concode_elem_sep", "void", "addElementListener", "concode_elem_sep", "void", "addElementListener", "concode_elem_sep", "void", "removeAllElementListeners", "concode_elem_sep", "String", "toString", "concode_elem_sep", "void", "parse", "concode_elem_sep", "void", "initialiseListener"]}
{"code": "void function ( Item arg0 ) { this . mob . setCurrentItemOrArmor ( 0 , new ItemStack ( arg0 ) ) ; }", "nl": "sets the equipped item of the ai concode_field_sep EntityMobWithInventory mob concode_elem_sep World world concode_elem_sep int itemQuantity concode_elem_sep Item itemDropped concode_elem_sep int range concode_elem_sep BlockPos nextBlock concode_field_sep boolean reachedBlock concode_elem_sep void storeItemDroppedDetails concode_elem_sep boolean isCorrectBlock concode_elem_sep void obtainItems concode_elem_sep double distToNearestBlock concode_elem_sep void moveToBlock concode_elem_sep void nextStep concode_elem_sep BlockPos getNextBlock", "code_tokens": ["void", "function", "(", "Item", "arg0", ")", "{", "this", ".", "mob", ".", "setCurrentItemOrArmor", "(", "0", ",", "new", "ItemStack", "(", "arg0", ")", ")", ";", "}"], "nl_tokens": ["sets", "the", "equipped", "item", "of", "the", "ai", "concode_field_sep", "EntityMobWithInventory", "mob", "concode_elem_sep", "World", "world", "concode_elem_sep", "int", "itemQuantity", "concode_elem_sep", "Item", "itemDropped", "concode_elem_sep", "int", "range", "concode_elem_sep", "BlockPos", "nextBlock", "concode_field_sep", "boolean", "reachedBlock", "concode_elem_sep", "void", "storeItemDroppedDetails", "concode_elem_sep", "boolean", "isCorrectBlock", "concode_elem_sep", "void", "obtainItems", "concode_elem_sep", "double", "distToNearestBlock", "concode_elem_sep", "void", "moveToBlock", "concode_elem_sep", "void", "nextStep", "concode_elem_sep", "BlockPos", "getNextBlock"]}
{"code": "void function ( long arg0 ) { while ( ! session . isShutdown ( ) && ! haveAcknowledgementFor ( arg0 ) ) { waitForSeqAckLatch . set ( new CountDownLatch ( 1 ) ) ; waitForSeqAckLatch . get ( ) . await ( 10 , TimeUnit . MILLISECONDS ) ; } }", "nl": "wait until the given sequence number has been acknowledged concode_field_sep boolean storeStatistics concode_elem_sep MeanValue dgSendInterval concode_elem_sep SenderLossList senderLossList concode_elem_sep boolean paused concode_elem_sep long iterationStart concode_elem_sep UDTSession session concode_elem_sep Map<Long,DataPacket> sendBuffer concode_elem_sep boolean started concode_elem_sep AtomicReference<CountDownLatch> waitForSeqAckLatch concode_elem_sep Thread senderThread concode_elem_sep long lastAckSequenceNumber concode_elem_sep boolean stopped concode_elem_sep long largestSentSequenceNumber concode_elem_sep CountDownLatch startLatch concode_elem_sep UDPEndPoint endpoint concode_elem_sep Logger logger concode_elem_sep AtomicReference<CountDownLatch> waitForAckLatch concode_elem_sep MeanValue dgSendTime concode_elem_sep AtomicInteger unacknowledged concode_elem_sep BlockingQueue<DataPacket> sendQueue concode_elem_sep MeanThroughput throughput concode_elem_sep long currentSequenceNumber concode_elem_sep UDTStatistics statistics concode_elem_sep Object sendLock concode_field_sep void sendAck2 concode_elem_sep void receive concode_elem_sep void onNAKPacketReceived concode_elem_sep void onAcknowledge concode_elem_sep void handleResubmit concode_elem_sep void sendKeepAlive concode_elem_sep void start concode_elem_sep void senderAlgorithm concode_elem_sep void pause concode_elem_sep boolean haveAcknowledgementFor concode_elem_sep void putUnacknowledgedPacketsIntoLossList concode_elem_sep void initMetrics concode_elem_sep boolean sendUdtPacket concode_elem_sep void stop concode_elem_sep long getLargestSentSequenceNumber concode_elem_sep void doStart concode_elem_sep boolean isSentOut concode_elem_sep boolean haveLostPackets concode_elem_sep long getLastAckSequenceNumber concode_elem_sep void send concode_elem_sep long getNextSequenceNumber concode_elem_sep long getCurrentSequenceNumber", "code_tokens": ["void", "function", "(", "long", "arg0", ")", "{", "while", "(", "!", "session", ".", "isShutdown", "(", ")", "&", "&", "!", "haveAcknowledgementFor", "(", "arg0", ")", ")", "{", "waitForSeqAckLatch", ".", "set", "(", "new", "CountDownLatch", "(", "1", ")", ")", ";", "waitForSeqAckLatch", ".", "get", "(", ")", ".", "await", "(", "10", ",", "TimeUnit", ".", "MILLISECONDS", ")", ";", "}", "}"], "nl_tokens": ["wait", "until", "the", "given", "sequence", "number", "has", "been", "acknowledged", "concode_field_sep", "boolean", "storeStatistics", "concode_elem_sep", "MeanValue", "dgSendInterval", "concode_elem_sep", "SenderLossList", "senderLossList", "concode_elem_sep", "boolean", "paused", "concode_elem_sep", "long", "iterationStart", "concode_elem_sep", "UDTSession", "session", "concode_elem_sep", "Map", "<", "Long", ",", "DataPacket", ">", "sendBuffer", "concode_elem_sep", "boolean", "started", "concode_elem_sep", "AtomicReference", "<", "CountDownLatch", ">", "waitForSeqAckLatch", "concode_elem_sep", "Thread", "senderThread", "concode_elem_sep", "long", "lastAckSequenceNumber", "concode_elem_sep", "boolean", "stopped", "concode_elem_sep", "long", "largestSentSequenceNumber", "concode_elem_sep", "CountDownLatch", "startLatch", "concode_elem_sep", "UDPEndPoint", "endpoint", "concode_elem_sep", "Logger", "logger", "concode_elem_sep", "AtomicReference", "<", "CountDownLatch", ">", "waitForAckLatch", "concode_elem_sep", "MeanValue", "dgSendTime", "concode_elem_sep", "AtomicInteger", "unacknowledged", "concode_elem_sep", "BlockingQueue", "<", "DataPacket", ">", "sendQueue", "concode_elem_sep", "MeanThroughput", "throughput", "concode_elem_sep", "long", "currentSequenceNumber", "concode_elem_sep", "UDTStatistics", "statistics", "concode_elem_sep", "Object", "sendLock", "concode_field_sep", "void", "sendAck2", "concode_elem_sep", "void", "receive", "concode_elem_sep", "void", "onNAKPacketReceived", "concode_elem_sep", "void", "onAcknowledge", "concode_elem_sep", "void", "handleResubmit", "concode_elem_sep", "void", "sendKeepAlive", "concode_elem_sep", "void", "start", "concode_elem_sep", "void", "senderAlgorithm", "concode_elem_sep", "void", "pause", "concode_elem_sep", "boolean", "haveAcknowledgementFor", "concode_elem_sep", "void", "putUnacknowledgedPacketsIntoLossList", "concode_elem_sep", "void", "initMetrics", "concode_elem_sep", "boolean", "sendUdtPacket", "concode_elem_sep", "void", "stop", "concode_elem_sep", "long", "getLargestSentSequenceNumber", "concode_elem_sep", "void", "doStart", "concode_elem_sep", "boolean", "isSentOut", "concode_elem_sep", "boolean", "haveLostPackets", "concode_elem_sep", "long", "getLastAckSequenceNumber", "concode_elem_sep", "void", "send", "concode_elem_sep", "long", "getNextSequenceNumber", "concode_elem_sep", "long", "getCurrentSequenceNumber"]}
{"code": "int function ( ) { return pref_group_len ; }", "nl": "get the preferred group length . concode_field_sep int MIN_ALLOWED concode_elem_sep int MAX_ALLOWED concode_elem_sep int min_group_len concode_elem_sep int max_group_len concode_elem_sep int pref_group_len concode_field_sep int getMax_group_len concode_elem_sep int getMin_group_len", "code_tokens": ["int", "function", "(", ")", "{", "return", "pref_group_len", ";", "}"], "nl_tokens": ["get", "the", "preferred", "group", "length", ".", "concode_field_sep", "int", "MIN_ALLOWED", "concode_elem_sep", "int", "MAX_ALLOWED", "concode_elem_sep", "int", "min_group_len", "concode_elem_sep", "int", "max_group_len", "concode_elem_sep", "int", "pref_group_len", "concode_field_sep", "int", "getMax_group_len", "concode_elem_sep", "int", "getMin_group_len"]}
{"code": "void function ( ) { gsv . setSentenceCount ( 1 ) ; assertEquals ( 1 , gsv . getSentenceCount ( ) ) ; gsv . setSentenceCount ( 2 ) ; assertEquals ( 2 , gsv . getSentenceCount ( ) ) ; }", "nl": "test method for net.sf.marineapi.nmea.parser.gsvparser #setsentencecount int . concode_field_sep GSVSentence gsv concode_elem_sep String EXAMPLE concode_elem_sep GSVSentence empty concode_field_sep void testSetSatelliteCount concode_elem_sep void testIsFirst concode_elem_sep void testSetSatelliteInfo concode_elem_sep void testGetSentenceIndex concode_elem_sep void testGetSatelliteCount concode_elem_sep void testConstructor concode_elem_sep void testGetSatelliteInfo concode_elem_sep void testParserGlonassGSV concode_elem_sep void testGetSentenceCount concode_elem_sep void testGetSatelliteInfoWithEmptyFields concode_elem_sep void testGetSatelliteInfoWithShortSentence concode_elem_sep void setUp concode_elem_sep void testIsLast concode_elem_sep void testSatelliteInfo", "code_tokens": ["void", "function", "(", ")", "{", "gsv", ".", "setSentenceCount", "(", "1", ")", ";", "assertEquals", "(", "1", ",", "gsv", ".", "getSentenceCount", "(", ")", ")", ";", "gsv", ".", "setSentenceCount", "(", "2", ")", ";", "assertEquals", "(", "2", ",", "gsv", ".", "getSentenceCount", "(", ")", ")", ";", "}"], "nl_tokens": ["test", "method", "for", "net", ".", "sf", ".", "marineapi", ".", "nmea", ".", "parser", ".", "gsvparser", "#setsentencecount int . concode_field_sep GSVSentence gsv concode_elem_sep String EXAMPLE concode_elem_sep GSVSentence empty concode_field_sep void testSetSatelliteCount concode_elem_sep void testIsFirst concode_elem_sep void testSetSatelliteInfo concode_elem_sep void testGetSentenceIndex concode_elem_sep void testGetSatelliteCount concode_elem_sep void testConstructor concode_elem_sep void testGetSatelliteInfo concode_elem_sep void testParserGlonassGSV concode_elem_sep void testGetSentenceCount concode_elem_sep void testGetSatelliteInfoWithEmptyFields concode_elem_sep void testGetSatelliteInfoWithShortSentence concode_elem_sep void setUp concode_elem_sep void testIsLast concode_elem_sep void testSatelliteInfo"]}
{"code": "B function ( Method ... arg0 ) { return suppressing ( Arrays . asList ( arg0 ) ) ; }", "nl": "prevents the given methods from being run as part of the test suite . note : in principle this should never need to be used , but it might be useful if the semantics of an implementation disagree in unforeseen ways with the semantics expected by a test , or to keep dependent builds clean in spite of an erroneous test . concode_field_sep Set<Method> suppressedTests concode_elem_sep Logger logger concode_elem_sep G subjectGenerator concode_elem_sep String name concode_elem_sep Runnable setUp concode_elem_sep Runnable tearDown concode_elem_sep Set<Feature<?>> features concode_field_sep B withSetUp concode_elem_sep B named concode_elem_sep String getName concode_elem_sep boolean intersect concode_elem_sep Runnable getSetUp concode_elem_sep TestSuite createTestSuite concode_elem_sep void checkCanCreate concode_elem_sep TestSuite filterSuite concode_elem_sep Set<Method> getSuppressedTests concode_elem_sep boolean matches concode_elem_sep Method extractMethod concode_elem_sep B withTearDown concode_elem_sep G getSubjectGenerator concode_elem_sep Set<Feature<?>> getFeatures concode_elem_sep String formatFeatureSet concode_elem_sep TestSuite makeSuiteForTesterClass concode_elem_sep B self concode_elem_sep List<Class<? extends AbstractTester>> getTesters concode_elem_sep B usingGenerator concode_elem_sep Runnable getTearDown concode_elem_sep B withFeatures concode_elem_sep B withFeatures", "code_tokens": ["B", "function", "(", "Method", "...", "arg0", ")", "{", "return", "suppressing", "(", "Arrays", ".", "asList", "(", "arg0", ")", ")", ";", "}"], "nl_tokens": ["prevents", "the", "given", "methods", "from", "being", "run", "as", "part", "of", "the", "test", "suite", ".", "note", ":", "in", "principle", "this", "should", "never", "need", "to", "be", "used", ",", "but", "it", "might", "be", "useful", "if", "the", "semantics", "of", "an", "implementation", "disagree", "in", "unforeseen", "ways", "with", "the", "semantics", "expected", "by", "a", "test", ",", "or", "to", "keep", "dependent", "builds", "clean", "in", "spite", "of", "an", "erroneous", "test", ".", "concode_field_sep", "Set", "<", "Method", ">", "suppressedTests", "concode_elem_sep", "Logger", "logger", "concode_elem_sep", "G", "subjectGenerator", "concode_elem_sep", "String", "name", "concode_elem_sep", "Runnable", "setUp", "concode_elem_sep", "Runnable", "tearDown", "concode_elem_sep", "Set", "<", "Feature", "<", "?", ">>", "features", "concode_field_sep", "B", "withSetUp", "concode_elem_sep", "B", "named", "concode_elem_sep", "String", "getName", "concode_elem_sep", "boolean", "intersect", "concode_elem_sep", "Runnable", "getSetUp", "concode_elem_sep", "TestSuite", "createTestSuite", "concode_elem_sep", "void", "checkCanCreate", "concode_elem_sep", "TestSuite", "filterSuite", "concode_elem_sep", "Set", "<", "Method", ">", "getSuppressedTests", "concode_elem_sep", "boolean", "matches", "concode_elem_sep", "Method", "extractMethod", "concode_elem_sep", "B", "withTearDown", "concode_elem_sep", "G", "getSubjectGenerator", "concode_elem_sep", "Set", "<", "Feature", "<", "?", ">>", "getFeatures", "concode_elem_sep", "String", "formatFeatureSet", "concode_elem_sep", "TestSuite", "makeSuiteForTesterClass", "concode_elem_sep", "B", "self", "concode_elem_sep", "List", "<", "Class", "<", "?", "extends", "AbstractTester", ">>", "getTesters", "concode_elem_sep", "B", "usingGenerator", "concode_elem_sep", "Runnable", "getTearDown", "concode_elem_sep", "B", "withFeatures", "concode_elem_sep", "B", "withFeatures"]}
{"code": "Object function ( String arg0 ) { for ( Object loc0 : obsoleteFeatures ) { if ( arg0 . equals ( Model . getFacade ( ) . getName ( loc0 ) ) ) { return loc0 ; } } return null ; }", "nl": "get a feature from the current classifier not yet modeled . concode_field_sep String classnamePrefix concode_elem_sep Logger LOG concode_elem_sep Collection obsoleteInnerClasses concode_elem_sep Object component concode_elem_sep int anonymousClassCounter concode_elem_sep Context context concode_elem_sep Object classifier concode_elem_sep Collection obsoleteFeatures concode_field_sep void addClassifierContext concode_elem_sep void addPackageContext concode_elem_sep void removeObsoleteFeatures concode_elem_sep void innerClassifier concode_elem_sep void addComponent concode_elem_sep void outerClassifier concode_elem_sep Object getMethod concode_elem_sep Object getClassifier concode_elem_sep void removeObsoleteInnerClasses concode_elem_sep Object getAttribute concode_elem_sep void feature concode_elem_sep Collection getFeatures concode_elem_sep String getClassnamePrefix concode_elem_sep Object getOperation concode_elem_sep Object getComponent concode_elem_sep String anonymousClass concode_elem_sep Context getContext", "code_tokens": ["Object", "function", "(", "String", "arg0", ")", "{", "for", "(", "Object", "loc0", ":", "obsoleteFeatures", ")", "{", "if", "(", "arg0", ".", "equals", "(", "Model", ".", "getFacade", "(", ")", ".", "getName", "(", "loc0", ")", ")", ")", "{", "return", "loc0", ";", "}", "}", "return", "null", ";", "}"], "nl_tokens": ["get", "a", "feature", "from", "the", "current", "classifier", "not", "yet", "modeled", ".", "concode_field_sep", "String", "classnamePrefix", "concode_elem_sep", "Logger", "LOG", "concode_elem_sep", "Collection", "obsoleteInnerClasses", "concode_elem_sep", "Object", "component", "concode_elem_sep", "int", "anonymousClassCounter", "concode_elem_sep", "Context", "context", "concode_elem_sep", "Object", "classifier", "concode_elem_sep", "Collection", "obsoleteFeatures", "concode_field_sep", "void", "addClassifierContext", "concode_elem_sep", "void", "addPackageContext", "concode_elem_sep", "void", "removeObsoleteFeatures", "concode_elem_sep", "void", "innerClassifier", "concode_elem_sep", "void", "addComponent", "concode_elem_sep", "void", "outerClassifier", "concode_elem_sep", "Object", "getMethod", "concode_elem_sep", "Object", "getClassifier", "concode_elem_sep", "void", "removeObsoleteInnerClasses", "concode_elem_sep", "Object", "getAttribute", "concode_elem_sep", "void", "feature", "concode_elem_sep", "Collection", "getFeatures", "concode_elem_sep", "String", "getClassnamePrefix", "concode_elem_sep", "Object", "getOperation", "concode_elem_sep", "Object", "getComponent", "concode_elem_sep", "String", "anonymousClass", "concode_elem_sep", "Context", "getContext"]}
{"code": "void function ( Stylesheet arg0 ) { this . stylesheet = arg0 ; }", "nl": "sets the stylesheet attribute of the stylesheetinfo object concode_field_sep int AUTHOR concode_elem_sep int USER concode_elem_sep int USER_AGENT concode_elem_sep Stylesheet stylesheet concode_elem_sep int origin concode_elem_sep List mediaTypes concode_elem_sep String title concode_elem_sep String type concode_elem_sep String uri concode_elem_sep String content concode_field_sep void addMedium concode_elem_sep void setContent concode_elem_sep List getMedia concode_elem_sep int getOrigin concode_elem_sep boolean appliesToMedia concode_elem_sep void setOrigin concode_elem_sep String getContent concode_elem_sep void setUri concode_elem_sep void setTitle concode_elem_sep Stylesheet getStylesheet concode_elem_sep void setType concode_elem_sep String getTitle concode_elem_sep String getType concode_elem_sep void setMedia concode_elem_sep void setMedia concode_elem_sep boolean isInline concode_elem_sep String getUri", "code_tokens": ["void", "function", "(", "Stylesheet", "arg0", ")", "{", "this", ".", "stylesheet", "=", "arg0", ";", "}"], "nl_tokens": ["sets", "the", "stylesheet", "attribute", "of", "the", "stylesheetinfo", "object", "concode_field_sep", "int", "AUTHOR", "concode_elem_sep", "int", "USER", "concode_elem_sep", "int", "USER_AGENT", "concode_elem_sep", "Stylesheet", "stylesheet", "concode_elem_sep", "int", "origin", "concode_elem_sep", "List", "mediaTypes", "concode_elem_sep", "String", "title", "concode_elem_sep", "String", "type", "concode_elem_sep", "String", "uri", "concode_elem_sep", "String", "content", "concode_field_sep", "void", "addMedium", "concode_elem_sep", "void", "setContent", "concode_elem_sep", "List", "getMedia", "concode_elem_sep", "int", "getOrigin", "concode_elem_sep", "boolean", "appliesToMedia", "concode_elem_sep", "void", "setOrigin", "concode_elem_sep", "String", "getContent", "concode_elem_sep", "void", "setUri", "concode_elem_sep", "void", "setTitle", "concode_elem_sep", "Stylesheet", "getStylesheet", "concode_elem_sep", "void", "setType", "concode_elem_sep", "String", "getTitle", "concode_elem_sep", "String", "getType", "concode_elem_sep", "void", "setMedia", "concode_elem_sep", "void", "setMedia", "concode_elem_sep", "boolean", "isInline", "concode_elem_sep", "String", "getUri"]}
{"code": "boolean function ( final String arg0 , final boolean arg1 ) { return this . bundle . getBoolean ( arg0 , arg1 ) ; }", "nl": "gets a boolean value out of the object . concode_field_sep Bundle bundle concode_elem_sep Bundle bundle concode_field_sep E putStringArrayList concode_elem_sep SharePhoto getPhoto concode_elem_sep E putPhotoArrayList concode_elem_sep E putDoubleArray concode_elem_sep double getDouble concode_elem_sep E putDouble concode_elem_sep E putLong concode_elem_sep Bundle getBundle concode_elem_sep double[] getDoubleArray concode_elem_sep Object get concode_elem_sep ArrayList<ShareOpenGraphObject> getObjectArrayList concode_elem_sep E putIntArray concode_elem_sep E putLongArray concode_elem_sep Set<String> keySet concode_elem_sep E putBoolean concode_elem_sep boolean[] getBooleanArray concode_elem_sep ArrayList<SharePhoto> getPhotoArrayList concode_elem_sep ShareOpenGraphObject getObject concode_elem_sep E putPhoto concode_elem_sep E readFrom concode_elem_sep E putInt concode_elem_sep E putString concode_elem_sep ArrayList<String> getStringArrayList concode_elem_sep String getString concode_elem_sep int describeContents concode_elem_sep long[] getLongArray concode_elem_sep long getLong concode_elem_sep int getInt concode_elem_sep E putObjectArrayList concode_elem_sep E putBooleanArray concode_elem_sep E putObject concode_elem_sep void writeToParcel concode_elem_sep int[] getIntArray", "code_tokens": ["boolean", "function", "(", "final", "String", "arg0", ",", "final", "boolean", "arg1", ")", "{", "return", "this", ".", "bundle", ".", "getBoolean", "(", "arg0", ",", "arg1", ")", ";", "}"], "nl_tokens": ["gets", "a", "boolean", "value", "out", "of", "the", "object", ".", "concode_field_sep", "Bundle", "bundle", "concode_elem_sep", "Bundle", "bundle", "concode_field_sep", "E", "putStringArrayList", "concode_elem_sep", "SharePhoto", "getPhoto", "concode_elem_sep", "E", "putPhotoArrayList", "concode_elem_sep", "E", "putDoubleArray", "concode_elem_sep", "double", "getDouble", "concode_elem_sep", "E", "putDouble", "concode_elem_sep", "E", "putLong", "concode_elem_sep", "Bundle", "getBundle", "concode_elem_sep", "double", "[", "]", "getDoubleArray", "concode_elem_sep", "Object", "get", "concode_elem_sep", "ArrayList", "<", "ShareOpenGraphObject", ">", "getObjectArrayList", "concode_elem_sep", "E", "putIntArray", "concode_elem_sep", "E", "putLongArray", "concode_elem_sep", "Set", "<", "String", ">", "keySet", "concode_elem_sep", "E", "putBoolean", "concode_elem_sep", "boolean", "[", "]", "getBooleanArray", "concode_elem_sep", "ArrayList", "<", "SharePhoto", ">", "getPhotoArrayList", "concode_elem_sep", "ShareOpenGraphObject", "getObject", "concode_elem_sep", "E", "putPhoto", "concode_elem_sep", "E", "readFrom", "concode_elem_sep", "E", "putInt", "concode_elem_sep", "E", "putString", "concode_elem_sep", "ArrayList", "<", "String", ">", "getStringArrayList", "concode_elem_sep", "String", "getString", "concode_elem_sep", "int", "describeContents", "concode_elem_sep", "long", "[", "]", "getLongArray", "concode_elem_sep", "long", "getLong", "concode_elem_sep", "int", "getInt", "concode_elem_sep", "E", "putObjectArrayList", "concode_elem_sep", "E", "putBooleanArray", "concode_elem_sep", "E", "putObject", "concode_elem_sep", "void", "writeToParcel", "concode_elem_sep", "int", "[", "]", "getIntArray"]}
{"code": "TriConsumer < X , Y , Z > function ( TriConsumer < ? super X , ? super Y , ? super Z > arg0 ) { Objects . requireNonNull ( arg0 ) ; return ( x , y , z ) -> { accept ( x , y , z ) ; arg0 . accept ( x , y , z ) ; } ; }", "nl": "returns a composed triconsumer that performs , in sequence , thisoperation followed by the after operation . if performing eitheroperation throws an exception , it is relayed to the caller of the composed operation . if performing this operation throws an exception , the after operation will not be performed . concode_field_sep PlaceHolder placeHolder concode_field_sep void accept", "code_tokens": ["TriConsumer", "<", "X", ",", "Y", ",", "Z", ">", "function", "(", "TriConsumer", "<", "?", "super", "X", ",", "?", "super", "Y", ",", "?", "super", "Z", ">", "arg0", ")", "{", "Objects", ".", "requireNonNull", "(", "arg0", ")", ";", "return", "(", "x", ",", "y", ",", "z", ")", "->", "{", "accept", "(", "x", ",", "y", ",", "z", ")", ";", "arg0", ".", "accept", "(", "x", ",", "y", ",", "z", ")", ";", "}", ";", "}"], "nl_tokens": ["returns", "a", "composed", "triconsumer", "that", "performs", ",", "in", "sequence", ",", "thisoperation", "followed", "by", "the", "after", "operation", ".", "if", "performing", "eitheroperation", "throws", "an", "exception", ",", "it", "is", "relayed", "to", "the", "caller", "of", "the", "composed", "operation", ".", "if", "performing", "this", "operation", "throws", "an", "exception", ",", "the", "after", "operation", "will", "not", "be", "performed", ".", "concode_field_sep", "PlaceHolder", "placeHolder", "concode_field_sep", "void", "accept"]}
{"code": "void function ( ComparisonListener arg0 ) { compListeners . add ( arg0 ) ; }", "nl": "registers a listener that is notified of each comparison . concode_field_sep List<ComparisonListener> matchListeners concode_elem_sep List<ComparisonListener> compListeners concode_elem_sep List<ComparisonListener> diffListeners concode_field_sep void addDifferenceListener concode_elem_sep void addMatchListener concode_elem_sep void fire concode_elem_sep void fireComparisonPerformed", "code_tokens": ["void", "function", "(", "ComparisonListener", "arg0", ")", "{", "compListeners", ".", "add", "(", "arg0", ")", ";", "}"], "nl_tokens": ["registers", "a", "listener", "that", "is", "notified", "of", "each", "comparison", ".", "concode_field_sep", "List", "<", "ComparisonListener", ">", "matchListeners", "concode_elem_sep", "List", "<", "ComparisonListener", ">", "compListeners", "concode_elem_sep", "List", "<", "ComparisonListener", ">", "diffListeners", "concode_field_sep", "void", "addDifferenceListener", "concode_elem_sep", "void", "addMatchListener", "concode_elem_sep", "void", "fire", "concode_elem_sep", "void", "fireComparisonPerformed"]}
{"code": "void function ( ) { _sharedContext . flushFonts ( ) ; ( ( SWTReplacedElementFactory ) _sharedContext . getReplacedElementFactory ( ) ) . clean ( ) ; UserAgentCallback loc0 = _sharedContext . getUac ( ) ; if ( loc0 instanceof NaiveUserAgent ) { ( ( NaiveUserAgent ) loc0 ) . disposeCache ( ) ; } }", "nl": "dispose resources used by this printerrenderer . this does not dispose the attached printer . concode_field_sep Printer _printer concode_elem_sep SharedContext _sharedContext concode_field_sep Document loadDocument concode_elem_sep void print concode_elem_sep void print concode_elem_sep void print concode_elem_sep void print concode_elem_sep void print concode_elem_sep void print concode_elem_sep void printDialog concode_elem_sep void printDialog concode_elem_sep boolean isFocus concode_elem_sep boolean isHover concode_elem_sep LayoutContext newLayoutcontext concode_elem_sep boolean isActive concode_elem_sep RenderingContext newRenderingContext", "code_tokens": ["void", "function", "(", ")", "{", "_sharedContext", ".", "flushFonts", "(", ")", ";", "(", "(", "SWTReplacedElementFactory", ")", "_sharedContext", ".", "getReplacedElementFactory", "(", ")", ")", ".", "clean", "(", ")", ";", "UserAgentCallback", "loc0", "=", "_sharedContext", ".", "getUac", "(", ")", ";", "if", "(", "loc0", "instanceof", "NaiveUserAgent", ")", "{", "(", "(", "NaiveUserAgent", ")", "loc0", ")", ".", "disposeCache", "(", ")", ";", "}", "}"], "nl_tokens": ["dispose", "resources", "used", "by", "this", "printerrenderer", ".", "this", "does", "not", "dispose", "the", "attached", "printer", ".", "concode_field_sep", "Printer", "_printer", "concode_elem_sep", "SharedContext", "_sharedContext", "concode_field_sep", "Document", "loadDocument", "concode_elem_sep", "void", "print", "concode_elem_sep", "void", "print", "concode_elem_sep", "void", "print", "concode_elem_sep", "void", "print", "concode_elem_sep", "void", "print", "concode_elem_sep", "void", "print", "concode_elem_sep", "void", "printDialog", "concode_elem_sep", "void", "printDialog", "concode_elem_sep", "boolean", "isFocus", "concode_elem_sep", "boolean", "isHover", "concode_elem_sep", "LayoutContext", "newLayoutcontext", "concode_elem_sep", "boolean", "isActive", "concode_elem_sep", "RenderingContext", "newRenderingContext"]}
{"code": "int function ( ) { return elem3 ; }", "nl": "gets the value of the elem3 property . concode_field_sep String elem2 concode_elem_sep String elem1 concode_elem_sep int elem3 concode_field_sep String getElem2 concode_elem_sep String getElem1 concode_elem_sep void setElem2 concode_elem_sep void setElem1 concode_elem_sep void setElem3", "code_tokens": ["int", "function", "(", ")", "{", "return", "elem3", ";", "}"], "nl_tokens": ["gets", "the", "value", "of", "the", "elem3", "property", ".", "concode_field_sep", "String", "elem2", "concode_elem_sep", "String", "elem1", "concode_elem_sep", "int", "elem3", "concode_field_sep", "String", "getElem2", "concode_elem_sep", "String", "getElem1", "concode_elem_sep", "void", "setElem2", "concode_elem_sep", "void", "setElem1", "concode_elem_sep", "void", "setElem3"]}
{"code": "String function ( ) { return getXPath ( path . descendingIterator ( ) ) ; }", "nl": "stringifies the xpath of the current node . concode_field_sep String OPEN concode_elem_sep String expression concode_elem_sep String PI concode_elem_sep String TEXT concode_elem_sep short type concode_elem_sep String EMPTY concode_elem_sep Map<String,String> uri2Prefix concode_elem_sep Map<QName,Level> attributes concode_elem_sep Deque<Level> path concode_elem_sep String SEP concode_elem_sep String COMMENT concode_elem_sep String xpath concode_elem_sep String ATTR concode_elem_sep List<Level> children concode_elem_sep QName name concode_elem_sep String CLOSE concode_field_sep void navigateToParent concode_elem_sep String getName concode_elem_sep QName getName concode_elem_sep QName getName concode_elem_sep void appendChildren concode_elem_sep Map<String,String> invert concode_elem_sep void addAttribute concode_elem_sep short getType concode_elem_sep short getType concode_elem_sep void addAttributes concode_elem_sep XPathContext clone concode_elem_sep Level clone concode_elem_sep int add1OrIncrement concode_elem_sep void navigateToChild concode_elem_sep void setChildren concode_elem_sep void navigateToAttribute", "code_tokens": ["String", "function", "(", ")", "{", "return", "getXPath", "(", "path", ".", "descendingIterator", "(", ")", ")", ";", "}"], "nl_tokens": ["stringifies", "the", "xpath", "of", "the", "current", "node", ".", "concode_field_sep", "String", "OPEN", "concode_elem_sep", "String", "expression", "concode_elem_sep", "String", "PI", "concode_elem_sep", "String", "TEXT", "concode_elem_sep", "short", "type", "concode_elem_sep", "String", "EMPTY", "concode_elem_sep", "Map", "<", "String", ",", "String", ">", "uri2Prefix", "concode_elem_sep", "Map", "<", "QName", ",", "Level", ">", "attributes", "concode_elem_sep", "Deque", "<", "Level", ">", "path", "concode_elem_sep", "String", "SEP", "concode_elem_sep", "String", "COMMENT", "concode_elem_sep", "String", "xpath", "concode_elem_sep", "String", "ATTR", "concode_elem_sep", "List", "<", "Level", ">", "children", "concode_elem_sep", "QName", "name", "concode_elem_sep", "String", "CLOSE", "concode_field_sep", "void", "navigateToParent", "concode_elem_sep", "String", "getName", "concode_elem_sep", "QName", "getName", "concode_elem_sep", "QName", "getName", "concode_elem_sep", "void", "appendChildren", "concode_elem_sep", "Map", "<", "String", ",", "String", ">", "invert", "concode_elem_sep", "void", "addAttribute", "concode_elem_sep", "short", "getType", "concode_elem_sep", "short", "getType", "concode_elem_sep", "void", "addAttributes", "concode_elem_sep", "XPathContext", "clone", "concode_elem_sep", "Level", "clone", "concode_elem_sep", "int", "add1OrIncrement", "concode_elem_sep", "void", "navigateToChild", "concode_elem_sep", "void", "setChildren", "concode_elem_sep", "void", "navigateToAttribute"]}
{"code": "void function ( Source arg0 ) { sources . add ( arg0 ) ; validator . setSchemaSources ( sources . toArray ( new Source [ 0 ] ) ) ; }", "nl": "adds a source for the schema defintion . concode_field_sep ArrayList<Source> sources concode_elem_sep JAXPValidator validator concode_field_sep boolean isSchemaValid concode_elem_sep List<SAXParseException> getInstanceErrors concode_elem_sep boolean isInstanceValid concode_elem_sep List<SAXParseException> problemToExceptionList concode_elem_sep List<SAXParseException> getSchemaErrors", "code_tokens": ["void", "function", "(", "Source", "arg0", ")", "{", "sources", ".", "add", "(", "arg0", ")", ";", "validator", ".", "setSchemaSources", "(", "sources", ".", "toArray", "(", "new", "Source", "[", "0", "]", ")", ")", ";", "}"], "nl_tokens": ["adds", "a", "source", "for", "the", "schema", "defintion", ".", "concode_field_sep", "ArrayList", "<", "Source", ">", "sources", "concode_elem_sep", "JAXPValidator", "validator", "concode_field_sep", "boolean", "isSchemaValid", "concode_elem_sep", "List", "<", "SAXParseException", ">", "getInstanceErrors", "concode_elem_sep", "boolean", "isInstanceValid", "concode_elem_sep", "List", "<", "SAXParseException", ">", "problemToExceptionList", "concode_elem_sep", "List", "<", "SAXParseException", ">", "getSchemaErrors"]}
{"code": "int function ( ) { return getInterval ( ) - 1 ; }", "nl": "the number of previous blocks to look at when calculating the next block 's difficulty concode_field_sep int addressHeader concode_elem_sep int INTERVAL concode_elem_sep byte[] alertSigningKey concode_elem_sep int[] acceptableAddressCodes concode_elem_sep long packetMagic concode_elem_sep int p2shHeader concode_elem_sep List<NetworkParameters> paramSet concode_elem_sep int PROTOCOL_VERSION concode_elem_sep Block genesisBlock concode_elem_sep BigInteger proofOfWorkLimit concode_elem_sep int subsidyDecreaseBlockCount concode_elem_sep int port concode_elem_sep BigInteger MAX_MONEY concode_elem_sep int TARGET_SPACING concode_elem_sep String[] dnsSeeds concode_elem_sep Map<Integer,Sha256Hash> checkpoints concode_elem_sep byte[] SATOSHI_KEY concode_elem_sep int interval concode_elem_sep String id concode_elem_sep int spendableCoinbaseDepth concode_elem_sep int dumpedPrivateKeyHeader concode_elem_sep int targetTimespan concode_elem_sep int TARGET_TIMESPAN concode_elem_sep int BIP16_ENFORCE_TIME concode_field_sep NetworkParameters regTests concode_elem_sep boolean allowEmptyPeerChain concode_elem_sep int getDumpedPrivateKeyHeader concode_elem_sep NetworkParameters testNet2 concode_elem_sep NetworkParameters testNet3 concode_elem_sep NetworkParameters unitTests concode_elem_sep String getId concode_elem_sep int getAddressHeader concode_elem_sep int[] getAcceptableAddressCodes concode_elem_sep NetworkParameters prodNet concode_elem_sep NetworkParameters fromID concode_elem_sep int getTargetTimespan concode_elem_sep String[] getDnsSeeds concode_elem_sep int hashCode concode_elem_sep int getSpendableCoinbaseDepth concode_elem_sep NetworkParameters testNet concode_elem_sep Sha256Hash calculateBlockPoWHash concode_elem_sep BigInteger getMaxMoney concode_elem_sep NetworkParameters getParamsFromAddressByte concode_elem_sep void registerParams concode_elem_sep boolean isCheckpoint concode_elem_sep int getP2SHHeader concode_elem_sep int getInterval concode_elem_sep Block getGenesisBlock concode_elem_sep int getSubsidyDecreaseBlockCount concode_elem_sep Block createGenesis concode_elem_sep long getPacketMagic concode_elem_sep int getPort concode_elem_sep byte[] getAlertSigningKey concode_elem_sep boolean equals concode_elem_sep boolean passesCheckpoint concode_elem_sep boolean isAcceptableAddressVersion concode_elem_sep String getURIScheme concode_elem_sep BigInteger getProofOfWorkLimit", "code_tokens": ["int", "function", "(", ")", "{", "return", "getInterval", "(", ")", "-", "1", ";", "}"], "nl_tokens": ["the", "number", "of", "previous", "blocks", "to", "look", "at", "when", "calculating", "the", "next", "block", "'", "s", "difficulty", "concode_field_sep", "int", "addressHeader", "concode_elem_sep", "int", "INTERVAL", "concode_elem_sep", "byte", "[", "]", "alertSigningKey", "concode_elem_sep", "int", "[", "]", "acceptableAddressCodes", "concode_elem_sep", "long", "packetMagic", "concode_elem_sep", "int", "p2shHeader", "concode_elem_sep", "List", "<", "NetworkParameters", ">", "paramSet", "concode_elem_sep", "int", "PROTOCOL_VERSION", "concode_elem_sep", "Block", "genesisBlock", "concode_elem_sep", "BigInteger", "proofOfWorkLimit", "concode_elem_sep", "int", "subsidyDecreaseBlockCount", "concode_elem_sep", "int", "port", "concode_elem_sep", "BigInteger", "MAX_MONEY", "concode_elem_sep", "int", "TARGET_SPACING", "concode_elem_sep", "String", "[", "]", "dnsSeeds", "concode_elem_sep", "Map", "<", "Integer", ",", "Sha256Hash", ">", "checkpoints", "concode_elem_sep", "byte", "[", "]", "SATOSHI_KEY", "concode_elem_sep", "int", "interval", "concode_elem_sep", "String", "id", "concode_elem_sep", "int", "spendableCoinbaseDepth", "concode_elem_sep", "int", "dumpedPrivateKeyHeader", "concode_elem_sep", "int", "targetTimespan", "concode_elem_sep", "int", "TARGET_TIMESPAN", "concode_elem_sep", "int", "BIP16_ENFORCE_TIME", "concode_field_sep", "NetworkParameters", "regTests", "concode_elem_sep", "boolean", "allowEmptyPeerChain", "concode_elem_sep", "int", "getDumpedPrivateKeyHeader", "concode_elem_sep", "NetworkParameters", "testNet2", "concode_elem_sep", "NetworkParameters", "testNet3", "concode_elem_sep", "NetworkParameters", "unitTests", "concode_elem_sep", "String", "getId", "concode_elem_sep", "int", "getAddressHeader", "concode_elem_sep", "int", "[", "]", "getAcceptableAddressCodes", "concode_elem_sep", "NetworkParameters", "prodNet", "concode_elem_sep", "NetworkParameters", "fromID", "concode_elem_sep", "int", "getTargetTimespan", "concode_elem_sep", "String", "[", "]", "getDnsSeeds", "concode_elem_sep", "int", "hashCode", "concode_elem_sep", "int", "getSpendableCoinbaseDepth", "concode_elem_sep", "NetworkParameters", "testNet", "concode_elem_sep", "Sha256Hash", "calculateBlockPoWHash", "concode_elem_sep", "BigInteger", "getMaxMoney", "concode_elem_sep", "NetworkParameters", "getParamsFromAddressByte", "concode_elem_sep", "void", "registerParams", "concode_elem_sep", "boolean", "isCheckpoint", "concode_elem_sep", "int", "getP2SHHeader", "concode_elem_sep", "int", "getInterval", "concode_elem_sep", "Block", "getGenesisBlock", "concode_elem_sep", "int", "getSubsidyDecreaseBlockCount", "concode_elem_sep", "Block", "createGenesis", "concode_elem_sep", "long", "getPacketMagic", "concode_elem_sep", "int", "getPort", "concode_elem_sep", "byte", "[", "]", "getAlertSigningKey", "concode_elem_sep", "boolean", "equals", "concode_elem_sep", "boolean", "passesCheckpoint", "concode_elem_sep", "boolean", "isAcceptableAddressVersion", "concode_elem_sep", "String", "getURIScheme", "concode_elem_sep", "BigInteger", "getProofOfWorkLimit"]}
{"code": "void function ( String arg0 ) { this . checksumType = arg0 ; }", "nl": "sets the checksum type . concode_field_sep long serialVersionUID concode_elem_sep String isSystemDerived concode_elem_sep String isActive concode_elem_sep BigDecimal predecessorId concode_elem_sep String srcFileName concode_elem_sep BigDecimal successorId concode_elem_sep BigDecimal feedId concode_elem_sep String checksum concode_elem_sep String transmissionDatasetId concode_elem_sep String comments concode_elem_sep String inactivationReasonType concode_elem_sep String isFormatValid concode_elem_sep long dataUnitId concode_elem_sep Timestamp receiptDate concode_elem_sep String srcUniqueFileName concode_elem_sep Timestamp createdDate concode_elem_sep Long dataSetId concode_elem_sep BigDecimal fileSize concode_elem_sep String destFileName concode_elem_sep String loadedInCats concode_elem_sep String checksumType concode_elem_sep Timestamp modifiedDate concode_elem_sep BigDecimal runId concode_elem_sep String isPrepopulated concode_elem_sep String isBulk concode_elem_sep String isUpdate concode_elem_sep String receiptDateType concode_elem_sep String status concode_field_sep void setIsSystemDerived concode_elem_sep void setIsPrepopulated concode_elem_sep String getStatus concode_elem_sep String getIsUpdate concode_elem_sep long getDataUnitId concode_elem_sep BigDecimal getFileSize concode_elem_sep void setInactivationReasonType concode_elem_sep void setDataUnitId concode_elem_sep String getComments concode_elem_sep Timestamp getCreatedDate concode_elem_sep void setFileSize concode_elem_sep BigDecimal getPredecessorId concode_elem_sep void setIsUpdate concode_elem_sep String getReceiptDateType concode_elem_sep BigDecimal getFeedId concode_elem_sep void setReceiptDate concode_elem_sep Timestamp getModifiedDate concode_elem_sep void setSuccessorId concode_elem_sep void setDestFileName concode_elem_sep void setIsBulk concode_elem_sep String getIsFormatValid concode_elem_sep void setDataSetId concode_elem_sep void setIsActive concode_elem_sep void setFeedId concode_elem_sep String getInactivationReasonType concode_elem_sep String getSrcUniqueFileName concode_elem_sep Long getDataSetId concode_elem_sep void setReceiptDateType concode_elem_sep BigDecimal getRunId concode_elem_sep void setSrcFileName concode_elem_sep String getChecksumType concode_elem_sep String getSrcFileName concode_elem_sep String getChecksum concode_elem_sep String getDestFileName concode_elem_sep Timestamp getReceiptDate concode_elem_sep void setTransmissionDatasetId concode_elem_sep String getTransmissionDatasetId concode_elem_sep void setComments concode_elem_sep String getLoadedInCats concode_elem_sep BigDecimal getSuccessorId concode_elem_sep void setLoadedInCats concode_elem_sep String getIsPrepopulated concode_elem_sep void setSrcUniqueFileName concode_elem_sep void setChecksum concode_elem_sep void setIsFormatValid concode_elem_sep String getIsBulk concode_elem_sep void setRunId concode_elem_sep void setStatus concode_elem_sep String getIsActive concode_elem_sep void setModifiedDate concode_elem_sep void setCreatedDate concode_elem_sep void setPredecessorId concode_elem_sep String getIsSystemDerived", "code_tokens": ["void", "function", "(", "String", "arg0", ")", "{", "this", ".", "checksumType", "=", "arg0", ";", "}"], "nl_tokens": ["sets", "the", "checksum", "type", ".", "concode_field_sep", "long", "serialVersionUID", "concode_elem_sep", "String", "isSystemDerived", "concode_elem_sep", "String", "isActive", "concode_elem_sep", "BigDecimal", "predecessorId", "concode_elem_sep", "String", "srcFileName", "concode_elem_sep", "BigDecimal", "successorId", "concode_elem_sep", "BigDecimal", "feedId", "concode_elem_sep", "String", "checksum", "concode_elem_sep", "String", "transmissionDatasetId", "concode_elem_sep", "String", "comments", "concode_elem_sep", "String", "inactivationReasonType", "concode_elem_sep", "String", "isFormatValid", "concode_elem_sep", "long", "dataUnitId", "concode_elem_sep", "Timestamp", "receiptDate", "concode_elem_sep", "String", "srcUniqueFileName", "concode_elem_sep", "Timestamp", "createdDate", "concode_elem_sep", "Long", "dataSetId", "concode_elem_sep", "BigDecimal", "fileSize", "concode_elem_sep", "String", "destFileName", "concode_elem_sep", "String", "loadedInCats", "concode_elem_sep", "String", "checksumType", "concode_elem_sep", "Timestamp", "modifiedDate", "concode_elem_sep", "BigDecimal", "runId", "concode_elem_sep", "String", "isPrepopulated", "concode_elem_sep", "String", "isBulk", "concode_elem_sep", "String", "isUpdate", "concode_elem_sep", "String", "receiptDateType", "concode_elem_sep", "String", "status", "concode_field_sep", "void", "setIsSystemDerived", "concode_elem_sep", "void", "setIsPrepopulated", "concode_elem_sep", "String", "getStatus", "concode_elem_sep", "String", "getIsUpdate", "concode_elem_sep", "long", "getDataUnitId", "concode_elem_sep", "BigDecimal", "getFileSize", "concode_elem_sep", "void", "setInactivationReasonType", "concode_elem_sep", "void", "setDataUnitId", "concode_elem_sep", "String", "getComments", "concode_elem_sep", "Timestamp", "getCreatedDate", "concode_elem_sep", "void", "setFileSize", "concode_elem_sep", "BigDecimal", "getPredecessorId", "concode_elem_sep", "void", "setIsUpdate", "concode_elem_sep", "String", "getReceiptDateType", "concode_elem_sep", "BigDecimal", "getFeedId", "concode_elem_sep", "void", "setReceiptDate", "concode_elem_sep", "Timestamp", "getModifiedDate", "concode_elem_sep", "void", "setSuccessorId", "concode_elem_sep", "void", "setDestFileName", "concode_elem_sep", "void", "setIsBulk", "concode_elem_sep", "String", "getIsFormatValid", "concode_elem_sep", "void", "setDataSetId", "concode_elem_sep", "void", "setIsActive", "concode_elem_sep", "void", "setFeedId", "concode_elem_sep", "String", "getInactivationReasonType", "concode_elem_sep", "String", "getSrcUniqueFileName", "concode_elem_sep", "Long", "getDataSetId", "concode_elem_sep", "void", "setReceiptDateType", "concode_elem_sep", "BigDecimal", "getRunId", "concode_elem_sep", "void", "setSrcFileName", "concode_elem_sep", "String", "getChecksumType", "concode_elem_sep", "String", "getSrcFileName", "concode_elem_sep", "String", "getChecksum", "concode_elem_sep", "String", "getDestFileName", "concode_elem_sep", "Timestamp", "getReceiptDate", "concode_elem_sep", "void", "setTransmissionDatasetId", "concode_elem_sep", "String", "getTransmissionDatasetId", "concode_elem_sep", "void", "setComments", "concode_elem_sep", "String", "getLoadedInCats", "concode_elem_sep", "BigDecimal", "getSuccessorId", "concode_elem_sep", "void", "setLoadedInCats", "concode_elem_sep", "String", "getIsPrepopulated", "concode_elem_sep", "void", "setSrcUniqueFileName", "concode_elem_sep", "void", "setChecksum", "concode_elem_sep", "void", "setIsFormatValid", "concode_elem_sep", "String", "getIsBulk", "concode_elem_sep", "void", "setRunId", "concode_elem_sep", "void", "setStatus", "concode_elem_sep", "String", "getIsActive", "concode_elem_sep", "void", "setModifiedDate", "concode_elem_sep", "void", "setCreatedDate", "concode_elem_sep", "void", "setPredecessorId", "concode_elem_sep", "String", "getIsSystemDerived"]}
{"code": "void function ( double arg0 , D1Matrix64F arg1 , D1Matrix64F arg2 , D1Matrix64F arg3 ) { int loc0 = arg1 . getNumElements ( ) ; double loc1 = 0 ; for ( int loc2 = 0 ; loc2 < loc0 ; loc2 ++ ) { loc1 += arg1 . get ( loc2 ) * arg2 . get ( loc2 ) ; } for ( int loc2 = 0 ; loc2 < loc0 ; loc2 ++ ) { arg3 . set ( loc2 , arg2 . get ( loc2 ) + arg0 * arg1 . get ( loc2 ) * loc1 ) ; } }", "nl": "multiplies a householder reflection against a vector : y = i + & gamma ; u ut x the householder reflection is used in some implementations of qr decomposition . concode_field_sep PlaceHolder placeHolder concode_field_sep void mult concode_elem_sep double innerProdA concode_elem_sep double innerProdTranA concode_elem_sep void addOuterProd concode_elem_sep void rank1Update concode_elem_sep void rank1Update concode_elem_sep double innerProd concode_elem_sep void outerProd", "code_tokens": ["void", "function", "(", "double", "arg0", ",", "D1Matrix64F", "arg1", ",", "D1Matrix64F", "arg2", ",", "D1Matrix64F", "arg3", ")", "{", "int", "loc0", "=", "arg1", ".", "getNumElements", "(", ")", ";", "double", "loc1", "=", "0", ";", "for", "(", "int", "loc2", "=", "0", ";", "loc2", "<", "loc0", ";", "loc2", "+", "+", ")", "{", "loc1", "+=", "arg1", ".", "get", "(", "loc2", ")", "*", "arg2", ".", "get", "(", "loc2", ")", ";", "}", "for", "(", "int", "loc2", "=", "0", ";", "loc2", "<", "loc0", ";", "loc2", "+", "+", ")", "{", "arg3", ".", "set", "(", "loc2", ",", "arg2", ".", "get", "(", "loc2", ")", "+", "arg0", "*", "arg1", ".", "get", "(", "loc2", ")", "*", "loc1", ")", ";", "}", "}"], "nl_tokens": ["multiplies", "a", "householder", "reflection", "against", "a", "vector", ":", "y", "=", "i", "+", "&", "gamma", ";", "u", "ut", "x", "the", "householder", "reflection", "is", "used", "in", "some", "implementations", "of", "qr", "decomposition", ".", "concode_field_sep", "PlaceHolder", "placeHolder", "concode_field_sep", "void", "mult", "concode_elem_sep", "double", "innerProdA", "concode_elem_sep", "double", "innerProdTranA", "concode_elem_sep", "void", "addOuterProd", "concode_elem_sep", "void", "rank1Update", "concode_elem_sep", "void", "rank1Update", "concode_elem_sep", "double", "innerProd", "concode_elem_sep", "void", "outerProd"]}
{"code": "String function ( ) { String loc0 = String . format ( \"srini_string\" , getSchema ( ) , getType ( ) , getName ( ) , getSuffixFromType ( ) ) ; return loc0 ; }", "nl": "gets the data source as a pseudo file name faux-file . adding a suffix matching the source object type ensures that the appropriate language parser is used . concode_field_sep String schema concode_elem_sep String name concode_elem_sep Logger LOG concode_elem_sep String type concode_elem_sep String CLASS_NAME concode_elem_sep String revision concode_field_sep void setName concode_elem_sep String getName concode_elem_sep String getType concode_elem_sep String toString concode_elem_sep void setRevision concode_elem_sep String getSuffixFromType concode_elem_sep void setType concode_elem_sep void setSchema concode_elem_sep String getSchema concode_elem_sep String getRevision", "code_tokens": ["String", "function", "(", ")", "{", "String", "loc0", "=", "String", ".", "format", "(", "\"srini_string\"", ",", "getSchema", "(", ")", ",", "getType", "(", ")", ",", "getName", "(", ")", ",", "getSuffixFromType", "(", ")", ")", ";", "return", "loc0", ";", "}"], "nl_tokens": ["gets", "the", "data", "source", "as", "a", "pseudo", "file", "name", "faux", "-", "file", ".", "adding", "a", "suffix", "matching", "the", "source", "object", "type", "ensures", "that", "the", "appropriate", "language", "parser", "is", "used", ".", "concode_field_sep", "String", "schema", "concode_elem_sep", "String", "name", "concode_elem_sep", "Logger", "LOG", "concode_elem_sep", "String", "type", "concode_elem_sep", "String", "CLASS_NAME", "concode_elem_sep", "String", "revision", "concode_field_sep", "void", "setName", "concode_elem_sep", "String", "getName", "concode_elem_sep", "String", "getType", "concode_elem_sep", "String", "toString", "concode_elem_sep", "void", "setRevision", "concode_elem_sep", "String", "getSuffixFromType", "concode_elem_sep", "void", "setType", "concode_elem_sep", "void", "setSchema", "concode_elem_sep", "String", "getSchema", "concode_elem_sep", "String", "getRevision"]}
{"code": "void function ( ) { Date loc0 = new Date ( ) ; assertTrue ( loc0 . equals ( instance ) ) ; Date loc1 = new Date ( 2010 , 6 , 15 ) ; Date loc2 = new Date ( 2010 , 6 , 15 ) ; assertTrue ( loc1 . equals ( loc2 ) ) ; }", "nl": "test method for net.sf.marineapi.nmea.util.date #equals java.lang.object . concode_field_sep Date instance concode_elem_sep GregorianCalendar cal concode_field_sep void testConstructorWithString concode_elem_sep void testSetMonth concode_elem_sep void testSetYearThreeDigits concode_elem_sep void testConstructor concode_elem_sep void testToStringFourDigitYear concode_elem_sep void testEqualsWrongType concode_elem_sep void testSetYearTwoDigit concode_elem_sep void testEqualsWhenChanged concode_elem_sep void testToISO8601WithTime concode_elem_sep void setUp concode_elem_sep void testGetMonth concode_elem_sep void testEqualsItself concode_elem_sep void testSetYearNegative concode_elem_sep void testConstructorWithValues concode_elem_sep void testSetDayOutOfBounds concode_elem_sep void testGetYear concode_elem_sep void testToISO8601WithTimeAndZeroZone concode_elem_sep void testToISO8601FourDigitYear concode_elem_sep void testSetDay concode_elem_sep void testSetYearFourDigit concode_elem_sep void testToStringTwoDigitYear concode_elem_sep void testToISO8601WithTimeAndPositiveOffset concode_elem_sep void testToISO8601TwoDigitYear concode_elem_sep void testSetYearFiveDigits concode_elem_sep void testToISO8601WithTimeAndNegativeOffset concode_elem_sep void testGetDay concode_elem_sep void testSetMonthOutOfBounds", "code_tokens": ["void", "function", "(", ")", "{", "Date", "loc0", "=", "new", "Date", "(", ")", ";", "assertTrue", "(", "loc0", ".", "equals", "(", "instance", ")", ")", ";", "Date", "loc1", "=", "new", "Date", "(", "2010", ",", "6", ",", "15", ")", ";", "Date", "loc2", "=", "new", "Date", "(", "2010", ",", "6", ",", "15", ")", ";", "assertTrue", "(", "loc1", ".", "equals", "(", "loc2", ")", ")", ";", "}"], "nl_tokens": ["test", "method", "for", "net", ".", "sf", ".", "marineapi", ".", "nmea", ".", "util", ".", "date", "#equals java.lang.object . concode_field_sep Date instance concode_elem_sep GregorianCalendar cal concode_field_sep void testConstructorWithString concode_elem_sep void testSetMonth concode_elem_sep void testSetYearThreeDigits concode_elem_sep void testConstructor concode_elem_sep void testToStringFourDigitYear concode_elem_sep void testEqualsWrongType concode_elem_sep void testSetYearTwoDigit concode_elem_sep void testEqualsWhenChanged concode_elem_sep void testToISO8601WithTime concode_elem_sep void setUp concode_elem_sep void testGetMonth concode_elem_sep void testEqualsItself concode_elem_sep void testSetYearNegative concode_elem_sep void testConstructorWithValues concode_elem_sep void testSetDayOutOfBounds concode_elem_sep void testGetYear concode_elem_sep void testToISO8601WithTimeAndZeroZone concode_elem_sep void testToISO8601FourDigitYear concode_elem_sep void testSetDay concode_elem_sep void testSetYearFourDigit concode_elem_sep void testToStringTwoDigitYear concode_elem_sep void testToISO8601WithTimeAndPositiveOffset concode_elem_sep void testToISO8601TwoDigitYear concode_elem_sep void testSetYearFiveDigits concode_elem_sep void testToISO8601WithTimeAndNegativeOffset concode_elem_sep void testGetDay concode_elem_sep void testSetMonthOutOfBounds"]}
{"code": "void function ( final JSONObject arg0 , final String arg1 , final Long arg2 ) { try { arg0 . put ( arg1 , arg2 ) ; } catch ( final JSONException loc0 ) { LOG . warn ( \"srini_string\" , loc0 ) ; } }", "nl": "puts the specified name/value pair in the specified json object . concode_field_sep Logger LOG concode_field_sep int extractInt concode_elem_sep Collection<InetSocketAddress> getInetAddresses", "code_tokens": ["void", "function", "(", "final", "JSONObject", "arg0", ",", "final", "String", "arg1", ",", "final", "Long", "arg2", ")", "{", "try", "{", "arg0", ".", "put", "(", "arg1", ",", "arg2", ")", ";", "}", "catch", "(", "final", "JSONException", "loc0", ")", "{", "LOG", ".", "warn", "(", "\"srini_string\"", ",", "loc0", ")", ";", "}", "}"], "nl_tokens": ["puts", "the", "specified", "name", "/", "value", "pair", "in", "the", "specified", "json", "object", ".", "concode_field_sep", "Logger", "LOG", "concode_field_sep", "int", "extractInt", "concode_elem_sep", "Collection", "<", "InetSocketAddress", ">", "getInetAddresses"]}
{"code": "CString function ( ) { if ( handlerName == null ) { handlerName = new CString ( ) ; handlerName . setValue ( \"srini_string\" ) ; } return handlerName ; }", "nl": "gets the value of the handlername property . concode_field_sep FullyQualifiedClassType handlerClass concode_elem_sep List<CString> soapRole concode_elem_sep List<ParamValueType> initParam concode_elem_sep List<DisplayNameType> displayName concode_elem_sep List<XsdQNameType> soapHeader concode_elem_sep List<IconType> icon concode_elem_sep List<DescriptionType> description concode_elem_sep CString handlerName concode_elem_sep java.lang.String id concode_field_sep List<ParamValueType> getInitParam concode_elem_sep List<DisplayNameType> getDisplayName concode_elem_sep void setHandlerClass concode_elem_sep void setHandlerName concode_elem_sep void setId concode_elem_sep FullyQualifiedClassType getHandlerClass concode_elem_sep java.lang.String getId concode_elem_sep List<CString> getSoapRole concode_elem_sep List<DescriptionType> getDescription concode_elem_sep List<XsdQNameType> getSoapHeader concode_elem_sep List<IconType> getIcon", "code_tokens": ["CString", "function", "(", ")", "{", "if", "(", "handlerName", "==", "null", ")", "{", "handlerName", "=", "new", "CString", "(", ")", ";", "handlerName", ".", "setValue", "(", "\"srini_string\"", ")", ";", "}", "return", "handlerName", ";", "}"], "nl_tokens": ["gets", "the", "value", "of", "the", "handlername", "property", ".", "concode_field_sep", "FullyQualifiedClassType", "handlerClass", "concode_elem_sep", "List", "<", "CString", ">", "soapRole", "concode_elem_sep", "List", "<", "ParamValueType", ">", "initParam", "concode_elem_sep", "List", "<", "DisplayNameType", ">", "displayName", "concode_elem_sep", "List", "<", "XsdQNameType", ">", "soapHeader", "concode_elem_sep", "List", "<", "IconType", ">", "icon", "concode_elem_sep", "List", "<", "DescriptionType", ">", "description", "concode_elem_sep", "CString", "handlerName", "concode_elem_sep", "java", ".", "lang", ".", "String", "id", "concode_field_sep", "List", "<", "ParamValueType", ">", "getInitParam", "concode_elem_sep", "List", "<", "DisplayNameType", ">", "getDisplayName", "concode_elem_sep", "void", "setHandlerClass", "concode_elem_sep", "void", "setHandlerName", "concode_elem_sep", "void", "setId", "concode_elem_sep", "FullyQualifiedClassType", "getHandlerClass", "concode_elem_sep", "java", ".", "lang", ".", "String", "getId", "concode_elem_sep", "List", "<", "CString", ">", "getSoapRole", "concode_elem_sep", "List", "<", "DescriptionType", ">", "getDescription", "concode_elem_sep", "List", "<", "XsdQNameType", ">", "getSoapHeader", "concode_elem_sep", "List", "<", "IconType", ">", "getIcon"]}
{"code": "String function ( String arg0 ) { arg0 = conditionallyPrependHttp ( arg0 ) ; URL loc0 = new URL ( arg0 ) ; String loc1 = loc0 . getHost ( ) ; String loc2 = loc0 . getPath ( ) ; String loc3 = loc0 . getQuery ( ) ; return OMA_REDIRECT_LINK + SITE_PARAM + \"srini_string\" + loc1 + loc2 + \"srini_string\" + loc3 ; }", "nl": "creates a redirect link from portal to oma . incoming links look like this : http://mutationassessor.org/?cm=var&var=17,7517830,g,c&fts=all outgoing links look like this : omaredirect.do?path = / & cm = var & var = 17,7517830 , g , c & fts = all concode_field_sep String OMA_REDIRECT_LINK concode_elem_sep String SITE_PARAM concode_field_sep String removePath concode_elem_sep String conditionallyPrependHttp concode_elem_sep String createOmaLink concode_elem_sep String createQueryString concode_elem_sep HashMap<String,String> getParameterMap concode_elem_sep ArrayList<String> getKeyList concode_elem_sep String getDelimiter", "code_tokens": ["String", "function", "(", "String", "arg0", ")", "{", "arg0", "=", "conditionallyPrependHttp", "(", "arg0", ")", ";", "URL", "loc0", "=", "new", "URL", "(", "arg0", ")", ";", "String", "loc1", "=", "loc0", ".", "getHost", "(", ")", ";", "String", "loc2", "=", "loc0", ".", "getPath", "(", ")", ";", "String", "loc3", "=", "loc0", ".", "getQuery", "(", ")", ";", "return", "OMA_REDIRECT_LINK", "+", "SITE_PARAM", "+", "\"srini_string\"", "+", "loc1", "+", "loc2", "+", "\"srini_string\"", "+", "loc3", ";", "}"], "nl_tokens": ["creates", "a", "redirect", "link", "from", "portal", "to", "oma", ".", "incoming", "links", "look", "like", "this", ":", "http", ":", "//", "mutationassessor", ".", "org", "/", "?", "cm", "=", "var", "&", "var", "=", "17", ",", "7517830", ",", "g", ",", "c", "&", "fts", "=", "all", "outgoing", "links", "look", "like", "this", ":", "omaredirect", ".", "do", "?", "path", "=", "/", "&", "cm", "=", "var", "&", "var", "=", "17", ",", "7517830", ",", "g", ",", "c", "&", "fts", "=", "all", "concode_field_sep", "String", "OMA_REDIRECT_LINK", "concode_elem_sep", "String", "SITE_PARAM", "concode_field_sep", "String", "removePath", "concode_elem_sep", "String", "conditionallyPrependHttp", "concode_elem_sep", "String", "createOmaLink", "concode_elem_sep", "String", "createQueryString", "concode_elem_sep", "HashMap", "<", "String", ",", "String", ">", "getParameterMap", "concode_elem_sep", "ArrayList", "<", "String", ">", "getKeyList", "concode_elem_sep", "String", "getDelimiter"]}
{"code": "void function ( AbstractReportNode arg0 ) { childNodes . add ( 0 , arg0 ) ; arg0 . parentNode = this ; }", "nl": "adds the child in front of any other childs . concode_field_sep List<AbstractReportNode> childNodes concode_elem_sep AbstractReportNode parentNode concode_elem_sep int numberOfViolations concode_field_sep void add concode_elem_sep void addNumberOfViolation concode_elem_sep int getChildIndex concode_elem_sep AbstractReportNode getParent concode_elem_sep AbstractReportNode getNextSibling concode_elem_sep int getNumberOfViolations concode_elem_sep boolean isLeaf concode_elem_sep void accept concode_elem_sep int getChildCount concode_elem_sep AbstractReportNode getChildAt concode_elem_sep void childrenAccept concode_elem_sep boolean equalsNode concode_elem_sep AbstractReportNode getFirstChild", "code_tokens": ["void", "function", "(", "AbstractReportNode", "arg0", ")", "{", "childNodes", ".", "add", "(", "0", ",", "arg0", ")", ";", "arg0", ".", "parentNode", "=", "this", ";", "}"], "nl_tokens": ["adds", "the", "child", "in", "front", "of", "any", "other", "childs", ".", "concode_field_sep", "List", "<", "AbstractReportNode", ">", "childNodes", "concode_elem_sep", "AbstractReportNode", "parentNode", "concode_elem_sep", "int", "numberOfViolations", "concode_field_sep", "void", "add", "concode_elem_sep", "void", "addNumberOfViolation", "concode_elem_sep", "int", "getChildIndex", "concode_elem_sep", "AbstractReportNode", "getParent", "concode_elem_sep", "AbstractReportNode", "getNextSibling", "concode_elem_sep", "int", "getNumberOfViolations", "concode_elem_sep", "boolean", "isLeaf", "concode_elem_sep", "void", "accept", "concode_elem_sep", "int", "getChildCount", "concode_elem_sep", "AbstractReportNode", "getChildAt", "concode_elem_sep", "void", "childrenAccept", "concode_elem_sep", "boolean", "equalsNode", "concode_elem_sep", "AbstractReportNode", "getFirstChild"]}
{"code": "void function ( ) { int loc0 = 0 ; try { instance . setMonth ( loc0 ) ; fail ( \"srini_string\" ) ; } catch ( IllegalArgumentException loc1 ) { } loc0 = 32 ; try { instance . setMonth ( loc0 ) ; fail ( \"srini_string\" ) ; } catch ( IllegalArgumentException loc1 ) { } }", "nl": "test method for net.sf.marineapi.nmea.util.date #setmonth int . concode_field_sep Date instance concode_elem_sep GregorianCalendar cal concode_field_sep void testConstructorWithString concode_elem_sep void testSetMonth concode_elem_sep void testSetYearThreeDigits concode_elem_sep void testConstructor concode_elem_sep void testToStringFourDigitYear concode_elem_sep void testEqualsAfterInit concode_elem_sep void testEqualsWrongType concode_elem_sep void testSetYearTwoDigit concode_elem_sep void testEqualsWhenChanged concode_elem_sep void testToISO8601WithTime concode_elem_sep void setUp concode_elem_sep void testGetMonth concode_elem_sep void testEqualsItself concode_elem_sep void testSetYearNegative concode_elem_sep void testConstructorWithValues concode_elem_sep void testSetDayOutOfBounds concode_elem_sep void testGetYear concode_elem_sep void testToISO8601WithTimeAndZeroZone concode_elem_sep void testToISO8601FourDigitYear concode_elem_sep void testSetDay concode_elem_sep void testSetYearFourDigit concode_elem_sep void testToStringTwoDigitYear concode_elem_sep void testToISO8601WithTimeAndPositiveOffset concode_elem_sep void testToISO8601TwoDigitYear concode_elem_sep void testSetYearFiveDigits concode_elem_sep void testToISO8601WithTimeAndNegativeOffset concode_elem_sep void testGetDay", "code_tokens": ["void", "function", "(", ")", "{", "int", "loc0", "=", "0", ";", "try", "{", "instance", ".", "setMonth", "(", "loc0", ")", ";", "fail", "(", "\"srini_string\"", ")", ";", "}", "catch", "(", "IllegalArgumentException", "loc1", ")", "{", "}", "loc0", "=", "32", ";", "try", "{", "instance", ".", "setMonth", "(", "loc0", ")", ";", "fail", "(", "\"srini_string\"", ")", ";", "}", "catch", "(", "IllegalArgumentException", "loc1", ")", "{", "}", "}"], "nl_tokens": ["test", "method", "for", "net", ".", "sf", ".", "marineapi", ".", "nmea", ".", "util", ".", "date", "#setmonth int . concode_field_sep Date instance concode_elem_sep GregorianCalendar cal concode_field_sep void testConstructorWithString concode_elem_sep void testSetMonth concode_elem_sep void testSetYearThreeDigits concode_elem_sep void testConstructor concode_elem_sep void testToStringFourDigitYear concode_elem_sep void testEqualsAfterInit concode_elem_sep void testEqualsWrongType concode_elem_sep void testSetYearTwoDigit concode_elem_sep void testEqualsWhenChanged concode_elem_sep void testToISO8601WithTime concode_elem_sep void setUp concode_elem_sep void testGetMonth concode_elem_sep void testEqualsItself concode_elem_sep void testSetYearNegative concode_elem_sep void testConstructorWithValues concode_elem_sep void testSetDayOutOfBounds concode_elem_sep void testGetYear concode_elem_sep void testToISO8601WithTimeAndZeroZone concode_elem_sep void testToISO8601FourDigitYear concode_elem_sep void testSetDay concode_elem_sep void testSetYearFourDigit concode_elem_sep void testToStringTwoDigitYear concode_elem_sep void testToISO8601WithTimeAndPositiveOffset concode_elem_sep void testToISO8601TwoDigitYear concode_elem_sep void testSetYearFiveDigits concode_elem_sep void testToISO8601WithTimeAndNegativeOffset concode_elem_sep void testGetDay"]}
{"code": "Class function ( Class arg0 , String arg1 ) { Class loc0 = getClassImpl ( arg0 , arg1 ) ; return loc0 ; }", "nl": "returns the class ` name ' that was declared by class ` parent ' . concode_field_sep PlaceHolder placeHolder concode_field_sep Object getValue concode_elem_sep List getAllStaticMethods concode_elem_sep Constructor getConstructorImpl concode_elem_sep Method getMethodImpl concode_elem_sep Field getFieldImpl concode_elem_sep Class getClassImpl concode_elem_sep void setValue concode_elem_sep List invokeAllStaticMethods concode_elem_sep Method getMethod concode_elem_sep Object invokeMethod concode_elem_sep Object invokeMethod concode_elem_sep Object invokeMethod concode_elem_sep Object invokeConstructor concode_elem_sep Object invokeConstructor", "code_tokens": ["Class", "function", "(", "Class", "arg0", ",", "String", "arg1", ")", "{", "Class", "loc0", "=", "getClassImpl", "(", "arg0", ",", "arg1", ")", ";", "return", "loc0", ";", "}"], "nl_tokens": ["returns", "the", "class", "`", "name", "' that was declared by class ` parent '", ".", "concode_field_sep", "PlaceHolder", "placeHolder", "concode_field_sep", "Object", "getValue", "concode_elem_sep", "List", "getAllStaticMethods", "concode_elem_sep", "Constructor", "getConstructorImpl", "concode_elem_sep", "Method", "getMethodImpl", "concode_elem_sep", "Field", "getFieldImpl", "concode_elem_sep", "Class", "getClassImpl", "concode_elem_sep", "void", "setValue", "concode_elem_sep", "List", "invokeAllStaticMethods", "concode_elem_sep", "Method", "getMethod", "concode_elem_sep", "Object", "invokeMethod", "concode_elem_sep", "Object", "invokeMethod", "concode_elem_sep", "Object", "invokeMethod", "concode_elem_sep", "Object", "invokeConstructor", "concode_elem_sep", "Object", "invokeConstructor"]}
{"code": "double function ( ) { checkState ( count > 1 ) ; if ( isNaN ( sumOfSquaresOfDeltas ) ) { return NaN ; } return ensureNonNegative ( sumOfSquaresOfDeltas ) / ( count - 1 ) ; }", "nl": "returns the unbiased sample variance of the values . if this dataset is a sample drawn from a population , this is an unbiased estimator of the population variance of the population . the count must be greater than one . this is not guaranteed to return zero when the dataset consists of the same value multiple times , due to numerical errors . however , it is guaranteed never to return a negative result . non-finite values if the dataset contains any non-finite values double #positive_infinity , double #negative_infinity , or double #nan then the result is double #nan . concode_field_sep long count concode_elem_sep double max concode_elem_sep double mean concode_elem_sep double sumOfSquaresOfDeltas concode_elem_sep double min concode_field_sep void add concode_elem_sep double sumOfSquaresOfDeltas concode_elem_sep double max concode_elem_sep long count concode_elem_sep double sum concode_elem_sep double populationVariance concode_elem_sep double sampleStandardDeviation concode_elem_sep double min concode_elem_sep double calculateNewMeanNonFinite concode_elem_sep void addAll concode_elem_sep void addAll concode_elem_sep void addAll concode_elem_sep void addAll concode_elem_sep void addAll concode_elem_sep void addAll concode_elem_sep double mean concode_elem_sep double populationStandardDeviation concode_elem_sep Stats snapshot", "code_tokens": ["double", "function", "(", ")", "{", "checkState", "(", "count", ">", "1", ")", ";", "if", "(", "isNaN", "(", "sumOfSquaresOfDeltas", ")", ")", "{", "return", "NaN", ";", "}", "return", "ensureNonNegative", "(", "sumOfSquaresOfDeltas", ")", "/", "(", "count", "-", "1", ")", ";", "}"], "nl_tokens": ["returns", "the", "unbiased", "sample", "variance", "of", "the", "values", ".", "if", "this", "dataset", "is", "a", "sample", "drawn", "from", "a", "population", ",", "this", "is", "an", "unbiased", "estimator", "of", "the", "population", "variance", "of", "the", "population", ".", "the", "count", "must", "be", "greater", "than", "one", ".", "this", "is", "not", "guaranteed", "to", "return", "zero", "when", "the", "dataset", "consists", "of", "the", "same", "value", "multiple", "times", ",", "due", "to", "numerical", "errors", ".", "however", ",", "it", "is", "guaranteed", "never", "to", "return", "a", "negative", "result", ".", "non", "-", "finite", "values", "if", "the", "dataset", "contains", "any", "non", "-", "finite", "values", "double", "#positive_infinity , double #negative_infinity , or double #nan then the result is double #nan . concode_field_sep long count concode_elem_sep double max concode_elem_sep double mean concode_elem_sep double sumOfSquaresOfDeltas concode_elem_sep double min concode_field_sep void add concode_elem_sep double sumOfSquaresOfDeltas concode_elem_sep double max concode_elem_sep long count concode_elem_sep double sum concode_elem_sep double populationVariance concode_elem_sep double sampleStandardDeviation concode_elem_sep double min concode_elem_sep double calculateNewMeanNonFinite concode_elem_sep void addAll concode_elem_sep void addAll concode_elem_sep void addAll concode_elem_sep void addAll concode_elem_sep void addAll concode_elem_sep void addAll concode_elem_sep double mean concode_elem_sep double populationStandardDeviation concode_elem_sep Stats snapshot"]}
{"code": "void function ( BundleContext arg0 ) { for ( AutoSIMConnectionConfig loc0 : config . connections ) { environments . deregisterConnectionFactory ( loc0 . name ) ; factories . remove ( loc0 . name ) ; } }", "nl": "implements bundleactivator.stop . does nothing since the framework will automatically unregister any registered services . concode_field_sep IEnvironments environments concode_elem_sep HashMap<String,XMPPConnectionFactory> factories concode_elem_sep AutoSIMXMPPConfig config concode_field_sep void start", "code_tokens": ["void", "function", "(", "BundleContext", "arg0", ")", "{", "for", "(", "AutoSIMConnectionConfig", "loc0", ":", "config", ".", "connections", ")", "{", "environments", ".", "deregisterConnectionFactory", "(", "loc0", ".", "name", ")", ";", "factories", ".", "remove", "(", "loc0", ".", "name", ")", ";", "}", "}"], "nl_tokens": ["implements", "bundleactivator", ".", "stop", ".", "does", "nothing", "since", "the", "framework", "will", "automatically", "unregister", "any", "registered", "services", ".", "concode_field_sep", "IEnvironments", "environments", "concode_elem_sep", "HashMap", "<", "String", ",", "XMPPConnectionFactory", ">", "factories", "concode_elem_sep", "AutoSIMXMPPConfig", "config", "concode_field_sep", "void", "start"]}
{"code": "String function ( ) { return this . failedAttrib ; }", "nl": "gets the failed attrib . concode_field_sep BigDecimal expDataUnitId concode_elem_sep BigDecimal dataUnitId concode_elem_sep Timestamp createTimeStamp concode_elem_sep String actValue concode_elem_sep String errorCode concode_elem_sep String srcFileName concode_elem_sep String errorMsg concode_elem_sep String failedAttrib concode_elem_sep BigDecimal expDataSetId concode_elem_sep RegPCLTestResultEntity regPclTestResult concode_elem_sep BigDecimal dataSetId concode_elem_sep RegPCLTestResultDetailsEntityPK id concode_elem_sep long serialVersionUID concode_elem_sep String expValue concode_field_sep void updateCreateTimeStamp concode_elem_sep void setActValue concode_elem_sep BigDecimal getDataSetId concode_elem_sep RegPCLTestResultDetailsEntityPK getId concode_elem_sep void setSrcFileName concode_elem_sep RegPCLTestResultEntity getRegPclTestResult concode_elem_sep void setExpValue concode_elem_sep String getSrcFileName concode_elem_sep void setErrorCode concode_elem_sep BigDecimal getDataUnitId concode_elem_sep void setErrorMsg concode_elem_sep String getErrorCode concode_elem_sep void setDataUnitId concode_elem_sep void setId concode_elem_sep void setFailedAttrib concode_elem_sep BigDecimal getExpDataSetId concode_elem_sep String getErrorMsg concode_elem_sep String getActValue concode_elem_sep void setRegPclTestResult concode_elem_sep String getExpValue concode_elem_sep void setCreateTimeStamp concode_elem_sep BigDecimal getExpDataUnitId concode_elem_sep Timestamp getCreateTimeStamp concode_elem_sep void setExpDataSetId concode_elem_sep void setDataSetId concode_elem_sep void setExpDataUnitId", "code_tokens": ["String", "function", "(", ")", "{", "return", "this", ".", "failedAttrib", ";", "}"], "nl_tokens": ["gets", "the", "failed", "attrib", ".", "concode_field_sep", "BigDecimal", "expDataUnitId", "concode_elem_sep", "BigDecimal", "dataUnitId", "concode_elem_sep", "Timestamp", "createTimeStamp", "concode_elem_sep", "String", "actValue", "concode_elem_sep", "String", "errorCode", "concode_elem_sep", "String", "srcFileName", "concode_elem_sep", "String", "errorMsg", "concode_elem_sep", "String", "failedAttrib", "concode_elem_sep", "BigDecimal", "expDataSetId", "concode_elem_sep", "RegPCLTestResultEntity", "regPclTestResult", "concode_elem_sep", "BigDecimal", "dataSetId", "concode_elem_sep", "RegPCLTestResultDetailsEntityPK", "id", "concode_elem_sep", "long", "serialVersionUID", "concode_elem_sep", "String", "expValue", "concode_field_sep", "void", "updateCreateTimeStamp", "concode_elem_sep", "void", "setActValue", "concode_elem_sep", "BigDecimal", "getDataSetId", "concode_elem_sep", "RegPCLTestResultDetailsEntityPK", "getId", "concode_elem_sep", "void", "setSrcFileName", "concode_elem_sep", "RegPCLTestResultEntity", "getRegPclTestResult", "concode_elem_sep", "void", "setExpValue", "concode_elem_sep", "String", "getSrcFileName", "concode_elem_sep", "void", "setErrorCode", "concode_elem_sep", "BigDecimal", "getDataUnitId", "concode_elem_sep", "void", "setErrorMsg", "concode_elem_sep", "String", "getErrorCode", "concode_elem_sep", "void", "setDataUnitId", "concode_elem_sep", "void", "setId", "concode_elem_sep", "void", "setFailedAttrib", "concode_elem_sep", "BigDecimal", "getExpDataSetId", "concode_elem_sep", "String", "getErrorMsg", "concode_elem_sep", "String", "getActValue", "concode_elem_sep", "void", "setRegPclTestResult", "concode_elem_sep", "String", "getExpValue", "concode_elem_sep", "void", "setCreateTimeStamp", "concode_elem_sep", "BigDecimal", "getExpDataUnitId", "concode_elem_sep", "Timestamp", "getCreateTimeStamp", "concode_elem_sep", "void", "setExpDataSetId", "concode_elem_sep", "void", "setDataSetId", "concode_elem_sep", "void", "setExpDataUnitId"]}
{"code": "void function ( ) { long loc0 = 1 ; mThrown . expect ( BlockDoesNotExistException . class ) ; mThrown . expectMessage ( ExceptionMessage . LOCK_RECORD_NOT_FOUND_FOR_LOCK_ID . getMessage ( loc0 ) ) ; mLockManager . unlockBlock ( loc0 ) ; }", "nl": "tests that an exception is thrown when trying to unlock a block via blocklockmanager #unlockblock long which is not locked . concode_field_sep BlockLockManager mLockManager concode_elem_sep long TEST_BLOCK_ID concode_elem_sep ExpectedException mThrown concode_elem_sep long TEST_SESSION_ID concode_elem_sep TemporaryFolder mFolder concode_field_sep void lockAcrossSessions concode_elem_sep void stress concode_elem_sep void validateLockIdWithNoRecord concode_elem_sep void dontReuseLock concode_elem_sep void before concode_elem_sep void reuseLock concode_elem_sep void readBlocksWrite concode_elem_sep void validateLockIdWithWrongBlockId concode_elem_sep void setMaxLocks concode_elem_sep void lockExpectingHang concode_elem_sep void lockBlock concode_elem_sep void grabManyLocks concode_elem_sep void validateLockIdWithWrongSessionId concode_elem_sep void cleanupSession concode_elem_sep void after", "code_tokens": ["void", "function", "(", ")", "{", "long", "loc0", "=", "1", ";", "mThrown", ".", "expect", "(", "BlockDoesNotExistException", ".", "class", ")", ";", "mThrown", ".", "expectMessage", "(", "ExceptionMessage", ".", "LOCK_RECORD_NOT_FOUND_FOR_LOCK_ID", ".", "getMessage", "(", "loc0", ")", ")", ";", "mLockManager", ".", "unlockBlock", "(", "loc0", ")", ";", "}"], "nl_tokens": ["tests", "that", "an", "exception", "is", "thrown", "when", "trying", "to", "unlock", "a", "block", "via", "blocklockmanager", "#unlockblock long which is not locked . concode_field_sep BlockLockManager mLockManager concode_elem_sep long TEST_BLOCK_ID concode_elem_sep ExpectedException mThrown concode_elem_sep long TEST_SESSION_ID concode_elem_sep TemporaryFolder mFolder concode_field_sep void lockAcrossSessions concode_elem_sep void stress concode_elem_sep void validateLockIdWithNoRecord concode_elem_sep void dontReuseLock concode_elem_sep void before concode_elem_sep void reuseLock concode_elem_sep void readBlocksWrite concode_elem_sep void validateLockIdWithWrongBlockId concode_elem_sep void setMaxLocks concode_elem_sep void lockExpectingHang concode_elem_sep void lockBlock concode_elem_sep void grabManyLocks concode_elem_sep void validateLockIdWithWrongSessionId concode_elem_sep void cleanupSession concode_elem_sep void after"]}
{"code": "void function ( ) { for ( int loc0 = 0 ; loc0 < BLOCK_LENGTH ; loc0 ++ ) { mTestStream . write ( INCREASING_BYTES [ loc0 ] ) ; Assert . assertEquals ( loc0 + 1 , mTestStream . getWrittenBytes ( ) ) ; } Assert . assertArrayEquals ( INCREASING_BYTES , Arrays . copyOfRange ( mTestStream . getBuffer ( ) . array ( ) , 0 , ( int ) BLOCK_LENGTH ) ) ; }", "nl": "tests writing an increasing byte array one byte at a time . concode_field_sep byte[] INCREASING_BYTES concode_elem_sep long BLOCK_LENGTH concode_elem_sep TestBufferedBlockOutStream mTestStream concode_elem_sep ExpectedException mThrown concode_field_sep void byteArrayAtOffset concode_elem_sep void byteArrayWrite concode_elem_sep void before concode_elem_sep void doubleFlush concode_elem_sep void writePastBlock concode_elem_sep void remaining concode_elem_sep void writeToClosed", "code_tokens": ["void", "function", "(", ")", "{", "for", "(", "int", "loc0", "=", "0", ";", "loc0", "<", "BLOCK_LENGTH", ";", "loc0", "+", "+", ")", "{", "mTestStream", ".", "write", "(", "INCREASING_BYTES", "[", "loc0", "]", ")", ";", "Assert", ".", "assertEquals", "(", "loc0", "+", "1", ",", "mTestStream", ".", "getWrittenBytes", "(", ")", ")", ";", "}", "Assert", ".", "assertArrayEquals", "(", "INCREASING_BYTES", ",", "Arrays", ".", "copyOfRange", "(", "mTestStream", ".", "getBuffer", "(", ")", ".", "array", "(", ")", ",", "0", ",", "(", "int", ")", "BLOCK_LENGTH", ")", ")", ";", "}"], "nl_tokens": ["tests", "writing", "an", "increasing", "byte", "array", "one", "byte", "at", "a", "time", ".", "concode_field_sep", "byte", "[", "]", "INCREASING_BYTES", "concode_elem_sep", "long", "BLOCK_LENGTH", "concode_elem_sep", "TestBufferedBlockOutStream", "mTestStream", "concode_elem_sep", "ExpectedException", "mThrown", "concode_field_sep", "void", "byteArrayAtOffset", "concode_elem_sep", "void", "byteArrayWrite", "concode_elem_sep", "void", "before", "concode_elem_sep", "void", "doubleFlush", "concode_elem_sep", "void", "writePastBlock", "concode_elem_sep", "void", "remaining", "concode_elem_sep", "void", "writeToClosed"]}
{"code": "boolean function ( String arg0 ) { if ( arg0 . startsWith ( userRepoPrefix ) ) return true ; return false ; }", "nl": "test if a repository path is for a personal repository . concode_field_sep String userRepoPrefix concode_field_sep String getUserRepoPrefix concode_elem_sep boolean isUsersPersonalRepository concode_elem_sep String getUserNameFromRepoPath concode_elem_sep void setUserRepoPrefix concode_elem_sep String getPersonalPath", "code_tokens": ["boolean", "function", "(", "String", "arg0", ")", "{", "if", "(", "arg0", ".", "startsWith", "(", "userRepoPrefix", ")", ")", "return", "true", ";", "return", "false", ";", "}"], "nl_tokens": ["test", "if", "a", "repository", "path", "is", "for", "a", "personal", "repository", ".", "concode_field_sep", "String", "userRepoPrefix", "concode_field_sep", "String", "getUserRepoPrefix", "concode_elem_sep", "boolean", "isUsersPersonalRepository", "concode_elem_sep", "String", "getUserNameFromRepoPath", "concode_elem_sep", "void", "setUserRepoPrefix", "concode_elem_sep", "String", "getPersonalPath"]}
{"code": "Boolean function ( int arg0 ) { Object loc0 = values . get ( arg0 ) ; if ( loc0 instanceof Boolean ) { return ( Boolean ) loc0 ; } else { throw new IllegalStateException ( ) ; } }", "nl": "returns result value as boolean . concode_field_sep String NAME concode_elem_sep String FAULT concode_elem_sep String MEMBER concode_elem_sep TimeZone tz concode_elem_sep ArrayList<Object> values concode_elem_sep String VALUE concode_field_sep String getStringValue concode_elem_sep ArrayList<Object> parseArray concode_elem_sep List getValues concode_elem_sep Map<String,Object> getStructValue concode_elem_sep Double getDoubleValue concode_elem_sep int getValueCount concode_elem_sep void parse concode_elem_sep Integer getIntegerValue concode_elem_sep HashMap<String,Object> parseStruct concode_elem_sep List<Object> getArrayValue concode_elem_sep Object parseValue concode_elem_sep byte[] getBinaryValue concode_elem_sep Date getDateValue", "code_tokens": ["Boolean", "function", "(", "int", "arg0", ")", "{", "Object", "loc0", "=", "values", ".", "get", "(", "arg0", ")", ";", "if", "(", "loc0", "instanceof", "Boolean", ")", "{", "return", "(", "Boolean", ")", "loc0", ";", "}", "else", "{", "throw", "new", "IllegalStateException", "(", ")", ";", "}", "}"], "nl_tokens": ["returns", "result", "value", "as", "boolean", ".", "concode_field_sep", "String", "NAME", "concode_elem_sep", "String", "FAULT", "concode_elem_sep", "String", "MEMBER", "concode_elem_sep", "TimeZone", "tz", "concode_elem_sep", "ArrayList", "<", "Object", ">", "values", "concode_elem_sep", "String", "VALUE", "concode_field_sep", "String", "getStringValue", "concode_elem_sep", "ArrayList", "<", "Object", ">", "parseArray", "concode_elem_sep", "List", "getValues", "concode_elem_sep", "Map", "<", "String", ",", "Object", ">", "getStructValue", "concode_elem_sep", "Double", "getDoubleValue", "concode_elem_sep", "int", "getValueCount", "concode_elem_sep", "void", "parse", "concode_elem_sep", "Integer", "getIntegerValue", "concode_elem_sep", "HashMap", "<", "String", ",", "Object", ">", "parseStruct", "concode_elem_sep", "List", "<", "Object", ">", "getArrayValue", "concode_elem_sep", "Object", "parseValue", "concode_elem_sep", "byte", "[", "]", "getBinaryValue", "concode_elem_sep", "Date", "getDateValue"]}
{"code": "IConfigurationFactory function ( ) { return SINGLETON ; }", "nl": "returns the instance of the singleton . concode_field_sep IConfigurationFactory SINGLETON concode_elem_sep ConfigurationHandler handler concode_field_sep ConfigurationHandler getConfigurationHandler", "code_tokens": ["IConfigurationFactory", "function", "(", ")", "{", "return", "SINGLETON", ";", "}"], "nl_tokens": ["returns", "the", "instance", "of", "the", "singleton", ".", "concode_field_sep", "IConfigurationFactory", "SINGLETON", "concode_elem_sep", "ConfigurationHandler", "handler", "concode_field_sep", "ConfigurationHandler", "getConfigurationHandler"]}
{"code": "void function ( XCommand < ? > arg0 ) { queue ( arg0 , 0 ) ; }", "nl": "queue a command for execution after the current command execution completes . all commands queued during the execution of the current command will be queued for a single serial execution . if the command execution throws an exception , no command will be effectively queued . concode_field_sep String DEFAULT_LOCK_TIMEOUT concode_elem_sep XLog LOG concode_elem_sep boolean dryrun concode_elem_sep XLog.Info logInfo concode_elem_sep int priority concode_elem_sep String type concode_elem_sep Map<Long,List<XCommand<?>>> commandQueue concode_elem_sep boolean used concode_elem_sep String name concode_elem_sep long createdTime concode_elem_sep MemoryLocks.LockToken lock concode_elem_sep String INSTRUMENTATION_GROUP concode_elem_sep Instrumentation instrumentation concode_field_sep void loadState concode_elem_sep String getName concode_elem_sep long getLockTimeOut concode_elem_sep void releaseLock concode_elem_sep void eagerVerifyPrecondition concode_elem_sep T execute concode_elem_sep void resetUsed concode_elem_sep String getEntityKey concode_elem_sep Instrumentation getInstrumentation concode_elem_sep T call concode_elem_sep void verifyPrecondition concode_elem_sep boolean isLockRequired concode_elem_sep String getType concode_elem_sep void acquireLock concode_elem_sep int getPriority concode_elem_sep void eagerLoadState concode_elem_sep long getCreatedTime", "code_tokens": ["void", "function", "(", "XCommand", "<", "?", ">", "arg0", ")", "{", "queue", "(", "arg0", ",", "0", ")", ";", "}"], "nl_tokens": ["queue", "a", "command", "for", "execution", "after", "the", "current", "command", "execution", "completes", ".", "all", "commands", "queued", "during", "the", "execution", "of", "the", "current", "command", "will", "be", "queued", "for", "a", "single", "serial", "execution", ".", "if", "the", "command", "execution", "throws", "an", "exception", ",", "no", "command", "will", "be", "effectively", "queued", ".", "concode_field_sep", "String", "DEFAULT_LOCK_TIMEOUT", "concode_elem_sep", "XLog", "LOG", "concode_elem_sep", "boolean", "dryrun", "concode_elem_sep", "XLog", ".", "Info", "logInfo", "concode_elem_sep", "int", "priority", "concode_elem_sep", "String", "type", "concode_elem_sep", "Map", "<", "Long", ",", "List", "<", "XCommand", "<", "?", ">>", ">", "commandQueue", "concode_elem_sep", "boolean", "used", "concode_elem_sep", "String", "name", "concode_elem_sep", "long", "createdTime", "concode_elem_sep", "MemoryLocks", ".", "LockToken", "lock", "concode_elem_sep", "String", "INSTRUMENTATION_GROUP", "concode_elem_sep", "Instrumentation", "instrumentation", "concode_field_sep", "void", "loadState", "concode_elem_sep", "String", "getName", "concode_elem_sep", "long", "getLockTimeOut", "concode_elem_sep", "void", "releaseLock", "concode_elem_sep", "void", "eagerVerifyPrecondition", "concode_elem_sep", "T", "execute", "concode_elem_sep", "void", "resetUsed", "concode_elem_sep", "String", "getEntityKey", "concode_elem_sep", "Instrumentation", "getInstrumentation", "concode_elem_sep", "T", "call", "concode_elem_sep", "void", "verifyPrecondition", "concode_elem_sep", "boolean", "isLockRequired", "concode_elem_sep", "String", "getType", "concode_elem_sep", "void", "acquireLock", "concode_elem_sep", "int", "getPriority", "concode_elem_sep", "void", "eagerLoadState", "concode_elem_sep", "long", "getCreatedTime"]}
{"code": "Schema function ( ) { return srcplan . schema ( ) ; }", "nl": "returns the schema of the materialized table , which is the same as in the underlying plan . concode_field_sep Plan srcplan concode_elem_sep Transaction tx concode_field_sep int blocksAccessed concode_elem_sep int distinctValues concode_elem_sep int recordsOutput concode_elem_sep Scan open", "code_tokens": ["Schema", "function", "(", ")", "{", "return", "srcplan", ".", "schema", "(", ")", ";", "}"], "nl_tokens": ["returns", "the", "schema", "of", "the", "materialized", "table", ",", "which", "is", "the", "same", "as", "in", "the", "underlying", "plan", ".", "concode_field_sep", "Plan", "srcplan", "concode_elem_sep", "Transaction", "tx", "concode_field_sep", "int", "blocksAccessed", "concode_elem_sep", "int", "distinctValues", "concode_elem_sep", "int", "recordsOutput", "concode_elem_sep", "Scan", "open"]}
{"code": "Definition function ( Server arg0 ) { Service loc0 = arg0 . getEndpoint ( ) . getService ( ) ; ServiceWSDLBuilder loc1 = new ServiceWSDLBuilder ( bus , loc0 . getServiceInfos ( ) . get ( 0 ) ) ; loc1 . setUseSchemaImports ( false ) ; return loc1 . build ( ) ; }", "nl": "return a wsdl definition model for a server . concode_field_sep Bus bus concode_elem_sep String preKeepAlive concode_elem_sep Charset UTF8 concode_elem_sep Class<?> classpathAnchor concode_elem_sep Map<String,String> namespaces concode_elem_sep XMLInputFactory xmlInputFactory concode_elem_sep ByteArrayOutputStream response concode_elem_sep boolean written concode_elem_sep String basedirPath concode_elem_sep String contentType concode_field_sep Bus getBus concode_elem_sep Document getWSDLDocument concode_elem_sep ByteArrayOutputStream getResponseStream concode_elem_sep void assertValidBoolean concode_elem_sep NodeList assertValid concode_elem_sep Node invoke concode_elem_sep Node invoke concode_elem_sep String getResponseContentType concode_elem_sep Server getServerForService concode_elem_sep String resolveNamespacePrefix concode_elem_sep void addNamespace concode_elem_sep XMLStreamReader getResourceAsXMLStreamReader concode_elem_sep Server getServerForAddress concode_elem_sep void recoverKeepAliveSystemProperty concode_elem_sep File getTestFile concode_elem_sep String getBasedir concode_elem_sep NodeList assertInvalid concode_elem_sep Map<String,String> getNamespaces concode_elem_sep InputStream getResourceAsStream concode_elem_sep byte[] invokeBytes concode_elem_sep byte[] invokeBytes concode_elem_sep void setKeepAliveSystemProperty concode_elem_sep void addDefaultNamespaces concode_elem_sep Reader getResourceAsReader concode_elem_sep void assertNoFault concode_elem_sep void onMessage concode_elem_sep void setBus concode_elem_sep void assertXPathEquals concode_elem_sep void assertXPathEquals", "code_tokens": ["Definition", "function", "(", "Server", "arg0", ")", "{", "Service", "loc0", "=", "arg0", ".", "getEndpoint", "(", ")", ".", "getService", "(", ")", ";", "ServiceWSDLBuilder", "loc1", "=", "new", "ServiceWSDLBuilder", "(", "bus", ",", "loc0", ".", "getServiceInfos", "(", ")", ".", "get", "(", "0", ")", ")", ";", "loc1", ".", "setUseSchemaImports", "(", "false", ")", ";", "return", "loc1", ".", "build", "(", ")", ";", "}"], "nl_tokens": ["return", "a", "wsdl", "definition", "model", "for", "a", "server", ".", "concode_field_sep", "Bus", "bus", "concode_elem_sep", "String", "preKeepAlive", "concode_elem_sep", "Charset", "UTF8", "concode_elem_sep", "Class", "<", "?", ">", "classpathAnchor", "concode_elem_sep", "Map", "<", "String", ",", "String", ">", "namespaces", "concode_elem_sep", "XMLInputFactory", "xmlInputFactory", "concode_elem_sep", "ByteArrayOutputStream", "response", "concode_elem_sep", "boolean", "written", "concode_elem_sep", "String", "basedirPath", "concode_elem_sep", "String", "contentType", "concode_field_sep", "Bus", "getBus", "concode_elem_sep", "Document", "getWSDLDocument", "concode_elem_sep", "ByteArrayOutputStream", "getResponseStream", "concode_elem_sep", "void", "assertValidBoolean", "concode_elem_sep", "NodeList", "assertValid", "concode_elem_sep", "Node", "invoke", "concode_elem_sep", "Node", "invoke", "concode_elem_sep", "String", "getResponseContentType", "concode_elem_sep", "Server", "getServerForService", "concode_elem_sep", "String", "resolveNamespacePrefix", "concode_elem_sep", "void", "addNamespace", "concode_elem_sep", "XMLStreamReader", "getResourceAsXMLStreamReader", "concode_elem_sep", "Server", "getServerForAddress", "concode_elem_sep", "void", "recoverKeepAliveSystemProperty", "concode_elem_sep", "File", "getTestFile", "concode_elem_sep", "String", "getBasedir", "concode_elem_sep", "NodeList", "assertInvalid", "concode_elem_sep", "Map", "<", "String", ",", "String", ">", "getNamespaces", "concode_elem_sep", "InputStream", "getResourceAsStream", "concode_elem_sep", "byte", "[", "]", "invokeBytes", "concode_elem_sep", "byte", "[", "]", "invokeBytes", "concode_elem_sep", "void", "setKeepAliveSystemProperty", "concode_elem_sep", "void", "addDefaultNamespaces", "concode_elem_sep", "Reader", "getResourceAsReader", "concode_elem_sep", "void", "assertNoFault", "concode_elem_sep", "void", "onMessage", "concode_elem_sep", "void", "setBus", "concode_elem_sep", "void", "assertXPathEquals", "concode_elem_sep", "void", "assertXPathEquals"]}
{"code": "int function ( byte [ ] arg0 , File arg1 ) { try { FileOutputStream loc0 = new FileOutputStream ( arg1 ) ; loc0 . write ( arg0 ) ; loc0 . close ( ) ; } catch ( java . io . IOException loc0 ) { return - 1 ; } return 1 ; }", "nl": "writes the graph 's image in a file . concode_field_sep String TEMP_DIR concode_elem_sep StringBuilder graph concode_elem_sep String DOT concode_field_sep void add concode_elem_sep void addln concode_elem_sep void addln concode_elem_sep byte[] getGraph concode_elem_sep String start_graph concode_elem_sep String end_graph concode_elem_sep String start_subgraph concode_elem_sep void readSource concode_elem_sep String getDotSource concode_elem_sep File writeDotSourceToFile concode_elem_sep byte[] get_img_stream concode_elem_sep String end_subgraph", "code_tokens": ["int", "function", "(", "byte", "[", "]", "arg0", ",", "File", "arg1", ")", "{", "try", "{", "FileOutputStream", "loc0", "=", "new", "FileOutputStream", "(", "arg1", ")", ";", "loc0", ".", "write", "(", "arg0", ")", ";", "loc0", ".", "close", "(", ")", ";", "}", "catch", "(", "java", ".", "io", ".", "IOException", "loc0", ")", "{", "return", "-", "1", ";", "}", "return", "1", ";", "}"], "nl_tokens": ["writes", "the", "graph", "'", "s", "image", "in", "a", "file", ".", "concode_field_sep", "String", "TEMP_DIR", "concode_elem_sep", "StringBuilder", "graph", "concode_elem_sep", "String", "DOT", "concode_field_sep", "void", "add", "concode_elem_sep", "void", "addln", "concode_elem_sep", "void", "addln", "concode_elem_sep", "byte", "[", "]", "getGraph", "concode_elem_sep", "String", "start_graph", "concode_elem_sep", "String", "end_graph", "concode_elem_sep", "String", "start_subgraph", "concode_elem_sep", "void", "readSource", "concode_elem_sep", "String", "getDotSource", "concode_elem_sep", "File", "writeDotSourceToFile", "concode_elem_sep", "byte", "[", "]", "get_img_stream", "concode_elem_sep", "String", "end_subgraph"]}
{"code": "String function ( ConfigurationKey arg0 ) { return getString ( arg0 , \"srini_string\" ) ; }", "nl": "returns the string value of a configuration property . concode_field_sep String URL_SAVED concode_elem_sep String FILE_SAVED concode_elem_sep String URL_LOADED concode_elem_sep ConfigurationHandler config concode_elem_sep String FILE_LOADED concode_field_sep boolean save concode_elem_sep boolean save concode_elem_sep void setInteger concode_elem_sep double getDouble concode_elem_sep double getDouble concode_elem_sep int getInteger concode_elem_sep int getInteger concode_elem_sep void removeListener concode_elem_sep void removeListener concode_elem_sep IConfigurationFactory getFactory concode_elem_sep void setDouble concode_elem_sep ConfigurationKey makeKey concode_elem_sep ConfigurationKey makeKey concode_elem_sep ConfigurationKey makeKey concode_elem_sep ConfigurationKey makeKey concode_elem_sep ConfigurationKey makeKey concode_elem_sep ConfigurationKey makeKey concode_elem_sep void setString concode_elem_sep boolean load concode_elem_sep boolean load concode_elem_sep boolean load concode_elem_sep void removeKey concode_elem_sep ConfigurationHandler getConfigurationHandler concode_elem_sep boolean getBoolean concode_elem_sep boolean getBoolean concode_elem_sep void setBoolean concode_elem_sep void addListener concode_elem_sep void addListener", "code_tokens": ["String", "function", "(", "ConfigurationKey", "arg0", ")", "{", "return", "getString", "(", "arg0", ",", "\"srini_string\"", ")", ";", "}"], "nl_tokens": ["returns", "the", "string", "value", "of", "a", "configuration", "property", ".", "concode_field_sep", "String", "URL_SAVED", "concode_elem_sep", "String", "FILE_SAVED", "concode_elem_sep", "String", "URL_LOADED", "concode_elem_sep", "ConfigurationHandler", "config", "concode_elem_sep", "String", "FILE_LOADED", "concode_field_sep", "boolean", "save", "concode_elem_sep", "boolean", "save", "concode_elem_sep", "void", "setInteger", "concode_elem_sep", "double", "getDouble", "concode_elem_sep", "double", "getDouble", "concode_elem_sep", "int", "getInteger", "concode_elem_sep", "int", "getInteger", "concode_elem_sep", "void", "removeListener", "concode_elem_sep", "void", "removeListener", "concode_elem_sep", "IConfigurationFactory", "getFactory", "concode_elem_sep", "void", "setDouble", "concode_elem_sep", "ConfigurationKey", "makeKey", "concode_elem_sep", "ConfigurationKey", "makeKey", "concode_elem_sep", "ConfigurationKey", "makeKey", "concode_elem_sep", "ConfigurationKey", "makeKey", "concode_elem_sep", "ConfigurationKey", "makeKey", "concode_elem_sep", "ConfigurationKey", "makeKey", "concode_elem_sep", "void", "setString", "concode_elem_sep", "boolean", "load", "concode_elem_sep", "boolean", "load", "concode_elem_sep", "boolean", "load", "concode_elem_sep", "void", "removeKey", "concode_elem_sep", "ConfigurationHandler", "getConfigurationHandler", "concode_elem_sep", "boolean", "getBoolean", "concode_elem_sep", "boolean", "getBoolean", "concode_elem_sep", "void", "setBoolean", "concode_elem_sep", "void", "addListener", "concode_elem_sep", "void", "addListener"]}
{"code": "void function ( ) { doAction ( step ) ; step ++ ; JPanel loc0 = makePanel ( step ) ; if ( loc0 != null ) { panels . add ( loc0 ) ; } started = true ; if ( item != null ) { item . changed ( ) ; } }", "nl": "the next step of the wizard . concode_field_sep int step concode_elem_sep List<JPanel> panels concode_elem_sep boolean started concode_elem_sep boolean finished concode_elem_sep WizardItem item concode_field_sep void removePanel concode_elem_sep JPanel getCurrentPanel concode_elem_sep boolean canGoBack concode_elem_sep boolean canFinish concode_elem_sep int getStep concode_elem_sep JPanel makePanel concode_elem_sep void back concode_elem_sep int getNumSteps concode_elem_sep boolean isStarted concode_elem_sep void setToDoItem concode_elem_sep boolean isFinished concode_elem_sep void undoAction concode_elem_sep void undoAction concode_elem_sep int getProgress concode_elem_sep WizardItem getToDoItem concode_elem_sep boolean canGoNext concode_elem_sep void finish concode_elem_sep JPanel getPanel concode_elem_sep void doAction concode_elem_sep void doAction", "code_tokens": ["void", "function", "(", ")", "{", "doAction", "(", "step", ")", ";", "step", "+", "+", ";", "JPanel", "loc0", "=", "makePanel", "(", "step", ")", ";", "if", "(", "loc0", "!=", "null", ")", "{", "panels", ".", "add", "(", "loc0", ")", ";", "}", "started", "=", "true", ";", "if", "(", "item", "!=", "null", ")", "{", "item", ".", "changed", "(", ")", ";", "}", "}"], "nl_tokens": ["the", "next", "step", "of", "the", "wizard", ".", "concode_field_sep", "int", "step", "concode_elem_sep", "List", "<", "JPanel", ">", "panels", "concode_elem_sep", "boolean", "started", "concode_elem_sep", "boolean", "finished", "concode_elem_sep", "WizardItem", "item", "concode_field_sep", "void", "removePanel", "concode_elem_sep", "JPanel", "getCurrentPanel", "concode_elem_sep", "boolean", "canGoBack", "concode_elem_sep", "boolean", "canFinish", "concode_elem_sep", "int", "getStep", "concode_elem_sep", "JPanel", "makePanel", "concode_elem_sep", "void", "back", "concode_elem_sep", "int", "getNumSteps", "concode_elem_sep", "boolean", "isStarted", "concode_elem_sep", "void", "setToDoItem", "concode_elem_sep", "boolean", "isFinished", "concode_elem_sep", "void", "undoAction", "concode_elem_sep", "void", "undoAction", "concode_elem_sep", "int", "getProgress", "concode_elem_sep", "WizardItem", "getToDoItem", "concode_elem_sep", "boolean", "canGoNext", "concode_elem_sep", "void", "finish", "concode_elem_sep", "JPanel", "getPanel", "concode_elem_sep", "void", "doAction", "concode_elem_sep", "void", "doAction"]}
{"code": "int function ( MatrixPosition arg0 ) { return originalMatrix . matrixItemRemainingUtility [ arg0 . row ] [ arg0 . column ] ; }", "nl": "get the local sequence utility for a given cell in the projected q-matrix concode_field_sep QMatrix originalMatrix concode_elem_sep List<MatrixPosition> positions concode_field_sep int[] getItemNames concode_elem_sep int getItemUtility concode_elem_sep int getItemUtility concode_elem_sep int getRemainingUtility", "code_tokens": ["int", "function", "(", "MatrixPosition", "arg0", ")", "{", "return", "originalMatrix", ".", "matrixItemRemainingUtility", "[", "arg0", ".", "row", "]", "[", "arg0", ".", "column", "]", ";", "}"], "nl_tokens": ["get", "the", "local", "sequence", "utility", "for", "a", "given", "cell", "in", "the", "projected", "q", "-", "matrix", "concode_field_sep", "QMatrix", "originalMatrix", "concode_elem_sep", "List", "<", "MatrixPosition", ">", "positions", "concode_field_sep", "int", "[", "]", "getItemNames", "concode_elem_sep", "int", "getItemUtility", "concode_elem_sep", "int", "getItemUtility", "concode_elem_sep", "int", "getRemainingUtility"]}
{"code": "int function ( ) { return port ; }", "nl": "default tcp port on which to connect to nodes . concode_field_sep int addressHeader concode_elem_sep int INTERVAL concode_elem_sep byte[] alertSigningKey concode_elem_sep int[] acceptableAddressCodes concode_elem_sep long packetMagic concode_elem_sep int p2shHeader concode_elem_sep List<NetworkParameters> paramSet concode_elem_sep int PROTOCOL_VERSION concode_elem_sep Block genesisBlock concode_elem_sep BigInteger proofOfWorkLimit concode_elem_sep int subsidyDecreaseBlockCount concode_elem_sep int port concode_elem_sep BigInteger MAX_MONEY concode_elem_sep int TARGET_SPACING concode_elem_sep String[] dnsSeeds concode_elem_sep Map<Integer,Sha256Hash> checkpoints concode_elem_sep byte[] SATOSHI_KEY concode_elem_sep int interval concode_elem_sep String id concode_elem_sep int spendableCoinbaseDepth concode_elem_sep int dumpedPrivateKeyHeader concode_elem_sep int targetTimespan concode_elem_sep int TARGET_TIMESPAN concode_elem_sep int BIP16_ENFORCE_TIME concode_field_sep NetworkParameters regTests concode_elem_sep boolean allowEmptyPeerChain concode_elem_sep int getDumpedPrivateKeyHeader concode_elem_sep NetworkParameters testNet2 concode_elem_sep NetworkParameters testNet3 concode_elem_sep NetworkParameters unitTests concode_elem_sep String getId concode_elem_sep int getAddressHeader concode_elem_sep int[] getAcceptableAddressCodes concode_elem_sep NetworkParameters prodNet concode_elem_sep NetworkParameters fromID concode_elem_sep int getTargetTimespan concode_elem_sep String[] getDnsSeeds concode_elem_sep int hashCode concode_elem_sep int getSpendableCoinbaseDepth concode_elem_sep NetworkParameters testNet concode_elem_sep Sha256Hash calculateBlockPoWHash concode_elem_sep BigInteger getMaxMoney concode_elem_sep NetworkParameters getParamsFromAddressByte concode_elem_sep void registerParams concode_elem_sep boolean isCheckpoint concode_elem_sep int getP2SHHeader concode_elem_sep int getInterval concode_elem_sep int getRetargetBlockCount concode_elem_sep int getRetargetBlockCount concode_elem_sep Block getGenesisBlock concode_elem_sep int getSubsidyDecreaseBlockCount concode_elem_sep Block createGenesis concode_elem_sep long getPacketMagic concode_elem_sep byte[] getAlertSigningKey concode_elem_sep boolean equals concode_elem_sep boolean passesCheckpoint concode_elem_sep boolean isAcceptableAddressVersion concode_elem_sep String getURIScheme concode_elem_sep BigInteger getProofOfWorkLimit", "code_tokens": ["int", "function", "(", ")", "{", "return", "port", ";", "}"], "nl_tokens": ["default", "tcp", "port", "on", "which", "to", "connect", "to", "nodes", ".", "concode_field_sep", "int", "addressHeader", "concode_elem_sep", "int", "INTERVAL", "concode_elem_sep", "byte", "[", "]", "alertSigningKey", "concode_elem_sep", "int", "[", "]", "acceptableAddressCodes", "concode_elem_sep", "long", "packetMagic", "concode_elem_sep", "int", "p2shHeader", "concode_elem_sep", "List", "<", "NetworkParameters", ">", "paramSet", "concode_elem_sep", "int", "PROTOCOL_VERSION", "concode_elem_sep", "Block", "genesisBlock", "concode_elem_sep", "BigInteger", "proofOfWorkLimit", "concode_elem_sep", "int", "subsidyDecreaseBlockCount", "concode_elem_sep", "int", "port", "concode_elem_sep", "BigInteger", "MAX_MONEY", "concode_elem_sep", "int", "TARGET_SPACING", "concode_elem_sep", "String", "[", "]", "dnsSeeds", "concode_elem_sep", "Map", "<", "Integer", ",", "Sha256Hash", ">", "checkpoints", "concode_elem_sep", "byte", "[", "]", "SATOSHI_KEY", "concode_elem_sep", "int", "interval", "concode_elem_sep", "String", "id", "concode_elem_sep", "int", "spendableCoinbaseDepth", "concode_elem_sep", "int", "dumpedPrivateKeyHeader", "concode_elem_sep", "int", "targetTimespan", "concode_elem_sep", "int", "TARGET_TIMESPAN", "concode_elem_sep", "int", "BIP16_ENFORCE_TIME", "concode_field_sep", "NetworkParameters", "regTests", "concode_elem_sep", "boolean", "allowEmptyPeerChain", "concode_elem_sep", "int", "getDumpedPrivateKeyHeader", "concode_elem_sep", "NetworkParameters", "testNet2", "concode_elem_sep", "NetworkParameters", "testNet3", "concode_elem_sep", "NetworkParameters", "unitTests", "concode_elem_sep", "String", "getId", "concode_elem_sep", "int", "getAddressHeader", "concode_elem_sep", "int", "[", "]", "getAcceptableAddressCodes", "concode_elem_sep", "NetworkParameters", "prodNet", "concode_elem_sep", "NetworkParameters", "fromID", "concode_elem_sep", "int", "getTargetTimespan", "concode_elem_sep", "String", "[", "]", "getDnsSeeds", "concode_elem_sep", "int", "hashCode", "concode_elem_sep", "int", "getSpendableCoinbaseDepth", "concode_elem_sep", "NetworkParameters", "testNet", "concode_elem_sep", "Sha256Hash", "calculateBlockPoWHash", "concode_elem_sep", "BigInteger", "getMaxMoney", "concode_elem_sep", "NetworkParameters", "getParamsFromAddressByte", "concode_elem_sep", "void", "registerParams", "concode_elem_sep", "boolean", "isCheckpoint", "concode_elem_sep", "int", "getP2SHHeader", "concode_elem_sep", "int", "getInterval", "concode_elem_sep", "int", "getRetargetBlockCount", "concode_elem_sep", "int", "getRetargetBlockCount", "concode_elem_sep", "Block", "getGenesisBlock", "concode_elem_sep", "int", "getSubsidyDecreaseBlockCount", "concode_elem_sep", "Block", "createGenesis", "concode_elem_sep", "long", "getPacketMagic", "concode_elem_sep", "byte", "[", "]", "getAlertSigningKey", "concode_elem_sep", "boolean", "equals", "concode_elem_sep", "boolean", "passesCheckpoint", "concode_elem_sep", "boolean", "isAcceptableAddressVersion", "concode_elem_sep", "String", "getURIScheme", "concode_elem_sep", "BigInteger", "getProofOfWorkLimit"]}
{"code": "InputStream function ( ) { return new ReaderInputStream ( reader ) ; }", "nl": "convert the reader into an inputstream . note : this uses the default encoding . concode_field_sep Reader reader concode_elem_sep String dataSourceName concode_field_sep String getDataSourceName concode_elem_sep String getNiceFileName concode_elem_sep String toString concode_elem_sep void setDataSourceName", "code_tokens": ["InputStream", "function", "(", ")", "{", "return", "new", "ReaderInputStream", "(", "reader", ")", ";", "}"], "nl_tokens": ["convert", "the", "reader", "into", "an", "inputstream", ".", "note", ":", "this", "uses", "the", "default", "encoding", ".", "concode_field_sep", "Reader", "reader", "concode_elem_sep", "String", "dataSourceName", "concode_field_sep", "String", "getDataSourceName", "concode_elem_sep", "String", "getNiceFileName", "concode_elem_sep", "String", "toString", "concode_elem_sep", "void", "setDataSourceName"]}
{"code": "boolean function ( int arg0 , Sha256Hash arg1 ) { Sha256Hash loc0 = checkpoints . get ( arg0 ) ; return loc0 == null || loc0 . equals ( arg1 ) ; }", "nl": "returns true if the block height is either not a checkpoint , or is a checkpoint and the hash matches . concode_field_sep int addressHeader concode_elem_sep int INTERVAL concode_elem_sep byte[] alertSigningKey concode_elem_sep int[] acceptableAddressCodes concode_elem_sep long packetMagic concode_elem_sep int p2shHeader concode_elem_sep List<NetworkParameters> paramSet concode_elem_sep int PROTOCOL_VERSION concode_elem_sep Block genesisBlock concode_elem_sep BigInteger proofOfWorkLimit concode_elem_sep int subsidyDecreaseBlockCount concode_elem_sep int port concode_elem_sep BigInteger MAX_MONEY concode_elem_sep int TARGET_SPACING concode_elem_sep String[] dnsSeeds concode_elem_sep Map<Integer,Sha256Hash> checkpoints concode_elem_sep byte[] SATOSHI_KEY concode_elem_sep int interval concode_elem_sep String id concode_elem_sep int spendableCoinbaseDepth concode_elem_sep int dumpedPrivateKeyHeader concode_elem_sep int targetTimespan concode_elem_sep int TARGET_TIMESPAN concode_elem_sep int BIP16_ENFORCE_TIME concode_field_sep NetworkParameters regTests concode_elem_sep boolean allowEmptyPeerChain concode_elem_sep int getDumpedPrivateKeyHeader concode_elem_sep NetworkParameters testNet2 concode_elem_sep NetworkParameters testNet3 concode_elem_sep NetworkParameters unitTests concode_elem_sep String getId concode_elem_sep int getAddressHeader concode_elem_sep int[] getAcceptableAddressCodes concode_elem_sep NetworkParameters prodNet concode_elem_sep NetworkParameters fromID concode_elem_sep int getTargetTimespan concode_elem_sep String[] getDnsSeeds concode_elem_sep int hashCode concode_elem_sep int getSpendableCoinbaseDepth concode_elem_sep NetworkParameters testNet concode_elem_sep Sha256Hash calculateBlockPoWHash concode_elem_sep BigInteger getMaxMoney concode_elem_sep NetworkParameters getParamsFromAddressByte concode_elem_sep void registerParams concode_elem_sep boolean isCheckpoint concode_elem_sep int getP2SHHeader concode_elem_sep int getInterval concode_elem_sep int getRetargetBlockCount concode_elem_sep int getRetargetBlockCount concode_elem_sep Block getGenesisBlock concode_elem_sep int getSubsidyDecreaseBlockCount concode_elem_sep Block createGenesis concode_elem_sep long getPacketMagic concode_elem_sep int getPort concode_elem_sep byte[] getAlertSigningKey concode_elem_sep boolean equals concode_elem_sep boolean isAcceptableAddressVersion concode_elem_sep String getURIScheme concode_elem_sep BigInteger getProofOfWorkLimit", "code_tokens": ["boolean", "function", "(", "int", "arg0", ",", "Sha256Hash", "arg1", ")", "{", "Sha256Hash", "loc0", "=", "checkpoints", ".", "get", "(", "arg0", ")", ";", "return", "loc0", "==", "null", "|", "|", "loc0", ".", "equals", "(", "arg1", ")", ";", "}"], "nl_tokens": ["returns", "true", "if", "the", "block", "height", "is", "either", "not", "a", "checkpoint", ",", "or", "is", "a", "checkpoint", "and", "the", "hash", "matches", ".", "concode_field_sep", "int", "addressHeader", "concode_elem_sep", "int", "INTERVAL", "concode_elem_sep", "byte", "[", "]", "alertSigningKey", "concode_elem_sep", "int", "[", "]", "acceptableAddressCodes", "concode_elem_sep", "long", "packetMagic", "concode_elem_sep", "int", "p2shHeader", "concode_elem_sep", "List", "<", "NetworkParameters", ">", "paramSet", "concode_elem_sep", "int", "PROTOCOL_VERSION", "concode_elem_sep", "Block", "genesisBlock", "concode_elem_sep", "BigInteger", "proofOfWorkLimit", "concode_elem_sep", "int", "subsidyDecreaseBlockCount", "concode_elem_sep", "int", "port", "concode_elem_sep", "BigInteger", "MAX_MONEY", "concode_elem_sep", "int", "TARGET_SPACING", "concode_elem_sep", "String", "[", "]", "dnsSeeds", "concode_elem_sep", "Map", "<", "Integer", ",", "Sha256Hash", ">", "checkpoints", "concode_elem_sep", "byte", "[", "]", "SATOSHI_KEY", "concode_elem_sep", "int", "interval", "concode_elem_sep", "String", "id", "concode_elem_sep", "int", "spendableCoinbaseDepth", "concode_elem_sep", "int", "dumpedPrivateKeyHeader", "concode_elem_sep", "int", "targetTimespan", "concode_elem_sep", "int", "TARGET_TIMESPAN", "concode_elem_sep", "int", "BIP16_ENFORCE_TIME", "concode_field_sep", "NetworkParameters", "regTests", "concode_elem_sep", "boolean", "allowEmptyPeerChain", "concode_elem_sep", "int", "getDumpedPrivateKeyHeader", "concode_elem_sep", "NetworkParameters", "testNet2", "concode_elem_sep", "NetworkParameters", "testNet3", "concode_elem_sep", "NetworkParameters", "unitTests", "concode_elem_sep", "String", "getId", "concode_elem_sep", "int", "getAddressHeader", "concode_elem_sep", "int", "[", "]", "getAcceptableAddressCodes", "concode_elem_sep", "NetworkParameters", "prodNet", "concode_elem_sep", "NetworkParameters", "fromID", "concode_elem_sep", "int", "getTargetTimespan", "concode_elem_sep", "String", "[", "]", "getDnsSeeds", "concode_elem_sep", "int", "hashCode", "concode_elem_sep", "int", "getSpendableCoinbaseDepth", "concode_elem_sep", "NetworkParameters", "testNet", "concode_elem_sep", "Sha256Hash", "calculateBlockPoWHash", "concode_elem_sep", "BigInteger", "getMaxMoney", "concode_elem_sep", "NetworkParameters", "getParamsFromAddressByte", "concode_elem_sep", "void", "registerParams", "concode_elem_sep", "boolean", "isCheckpoint", "concode_elem_sep", "int", "getP2SHHeader", "concode_elem_sep", "int", "getInterval", "concode_elem_sep", "int", "getRetargetBlockCount", "concode_elem_sep", "int", "getRetargetBlockCount", "concode_elem_sep", "Block", "getGenesisBlock", "concode_elem_sep", "int", "getSubsidyDecreaseBlockCount", "concode_elem_sep", "Block", "createGenesis", "concode_elem_sep", "long", "getPacketMagic", "concode_elem_sep", "int", "getPort", "concode_elem_sep", "byte", "[", "]", "getAlertSigningKey", "concode_elem_sep", "boolean", "equals", "concode_elem_sep", "boolean", "isAcceptableAddressVersion", "concode_elem_sep", "String", "getURIScheme", "concode_elem_sep", "BigInteger", "getProofOfWorkLimit"]}
{"code": "void function ( ) { System . out . println ( fis . getFunctionBlock ( null ) . getVariables ( ) . toString ( ) ) ; }", "nl": "prints input in console for debugging . concode_field_sep FIS fis concode_field_sep ArrayList<K> sortByValue concode_elem_sep ArrayList<String> getActions concode_elem_sep Map<String,Double> evaluate concode_elem_sep void setInput", "code_tokens": ["void", "function", "(", ")", "{", "System", ".", "out", ".", "println", "(", "fis", ".", "getFunctionBlock", "(", "null", ")", ".", "getVariables", "(", ")", ".", "toString", "(", ")", ")", ";", "}"], "nl_tokens": ["prints", "input", "in", "console", "for", "debugging", ".", "concode_field_sep", "FIS", "fis", "concode_field_sep", "ArrayList", "<", "K", ">", "sortByValue", "concode_elem_sep", "ArrayList", "<", "String", ">", "getActions", "concode_elem_sep", "Map", "<", "String", ",", "Double", ">", "evaluate", "concode_elem_sep", "void", "setInput"]}
{"code": "void function ( ) { double loc0 = instance . getHorizontalDOP ( ) ; assertEquals ( 1.6 , loc0 , 0.001 ) ; }", "nl": "test method for net.sf.marineapi.nmea.parser.gsaparser #gethorizontaldop . concode_field_sep GSASentence instance concode_elem_sep String EXAMPLE concode_elem_sep GSASentence empty concode_field_sep void testGetFixStatus concode_elem_sep void testSetFixStatus concode_elem_sep void testGetPositionDOP concode_elem_sep void testGetSatelliteIds concode_elem_sep void testConstructor concode_elem_sep void testSetPositionDOP concode_elem_sep void testGetVerticalDOP concode_elem_sep void testSetFaaMode concode_elem_sep void testSetHorizontalDOP concode_elem_sep void setUp concode_elem_sep void testGetFaaMode concode_elem_sep void testSetVerticalDOP concode_elem_sep void testSetSatelliteIds", "code_tokens": ["void", "function", "(", ")", "{", "double", "loc0", "=", "instance", ".", "getHorizontalDOP", "(", ")", ";", "assertEquals", "(", "1.6", ",", "loc0", ",", "0.001", ")", ";", "}"], "nl_tokens": ["test", "method", "for", "net", ".", "sf", ".", "marineapi", ".", "nmea", ".", "parser", ".", "gsaparser", "#gethorizontaldop . concode_field_sep GSASentence instance concode_elem_sep String EXAMPLE concode_elem_sep GSASentence empty concode_field_sep void testGetFixStatus concode_elem_sep void testSetFixStatus concode_elem_sep void testGetPositionDOP concode_elem_sep void testGetSatelliteIds concode_elem_sep void testConstructor concode_elem_sep void testSetPositionDOP concode_elem_sep void testGetVerticalDOP concode_elem_sep void testSetFaaMode concode_elem_sep void testSetHorizontalDOP concode_elem_sep void setUp concode_elem_sep void testGetFaaMode concode_elem_sep void testSetVerticalDOP concode_elem_sep void testSetSatelliteIds"]}
{"code": "USAddress function ( ) { return billTo ; }", "nl": "gets the value of the billto property . concode_field_sep USAddress billTo concode_elem_sep String comment concode_elem_sep Items items concode_elem_sep XMLGregorianCalendar orderDate concode_elem_sep USAddress shipTo concode_field_sep Items getItems concode_elem_sep USAddress getShipTo concode_elem_sep void setBillTo concode_elem_sep void setItems concode_elem_sep void setOrderDate concode_elem_sep void setComment concode_elem_sep XMLGregorianCalendar getOrderDate concode_elem_sep String getComment concode_elem_sep void setShipTo", "code_tokens": ["USAddress", "function", "(", ")", "{", "return", "billTo", ";", "}"], "nl_tokens": ["gets", "the", "value", "of", "the", "billto", "property", ".", "concode_field_sep", "USAddress", "billTo", "concode_elem_sep", "String", "comment", "concode_elem_sep", "Items", "items", "concode_elem_sep", "XMLGregorianCalendar", "orderDate", "concode_elem_sep", "USAddress", "shipTo", "concode_field_sep", "Items", "getItems", "concode_elem_sep", "USAddress", "getShipTo", "concode_elem_sep", "void", "setBillTo", "concode_elem_sep", "void", "setItems", "concode_elem_sep", "void", "setOrderDate", "concode_elem_sep", "void", "setComment", "concode_elem_sep", "XMLGregorianCalendar", "getOrderDate", "concode_elem_sep", "String", "getComment", "concode_elem_sep", "void", "setShipTo"]}
{"code": "void function ( String arg0 ) { this . roleClassifierType = arg0 ; }", "nl": "set the subject role classifier type to use . currently accepted values are `` prefix '' or `` classname '' . must be used in conjunction with the subject_role_classifier . the default value is `` prefix '' . concode_field_sep String roleClassifierType concode_elem_sep String roleClassifier concode_field_sep void setRoleClassifier concode_elem_sep String getRoleClassifierType concode_elem_sep Set<Principal> parseRolesFromSubject concode_elem_sep String getRoleClassifier", "code_tokens": ["void", "function", "(", "String", "arg0", ")", "{", "this", ".", "roleClassifierType", "=", "arg0", ";", "}"], "nl_tokens": ["set", "the", "subject", "role", "classifier", "type", "to", "use", ".", "currently", "accepted", "values", "are", "`", "`", "prefix", "''", "or", "`", "`", "classname", "''", ".", "must", "be", "used", "in", "conjunction", "with", "the", "subject_role_classifier", ".", "the", "default", "value", "is", "`", "`", "prefix", "''", ".", "concode_field_sep", "String", "roleClassifierType", "concode_elem_sep", "String", "roleClassifier", "concode_field_sep", "void", "setRoleClassifier", "concode_elem_sep", "String", "getRoleClassifierType", "concode_elem_sep", "Set", "<", "Principal", ">", "parseRolesFromSubject", "concode_elem_sep", "String", "getRoleClassifier"]}
{"code": "void function ( XmlCursor arg0 , ObjArray arg1 ) { javax . xml . namespace . QName loc0 = arg0 . getName ( ) ; String loc1 = loc0 . getNamespaceURI ( ) ; Set loc2 = ( Set ) uriToPrefix . get ( loc1 ) ; if ( loc2 == null || loc2 . size ( ) == 0 ) { undeclared . add ( loc1 ) ; if ( arg1 != null ) arg1 . add ( new Namespace ( lib , loc1 ) ) ; } }", "nl": "updates the internal state of this namespacehelper to reflect the existance of the xml token pointed to by the cursor . concode_field_sep XMLLibImpl lib concode_elem_sep Set undeclared concode_elem_sep Map prefixToURI concode_elem_sep Map uriToPrefix concode_field_sep Namespace getNamespace concode_elem_sep Object[] namespaceDeclarations concode_elem_sep void getNamespaces concode_elem_sep Map getAllNamespaces concode_elem_sep void removeNamespace concode_elem_sep void update concode_elem_sep Object[] inScopeNamespaces concode_elem_sep void declareNamespace", "code_tokens": ["void", "function", "(", "XmlCursor", "arg0", ",", "ObjArray", "arg1", ")", "{", "javax", ".", "xml", ".", "namespace", ".", "QName", "loc0", "=", "arg0", ".", "getName", "(", ")", ";", "String", "loc1", "=", "loc0", ".", "getNamespaceURI", "(", ")", ";", "Set", "loc2", "=", "(", "Set", ")", "uriToPrefix", ".", "get", "(", "loc1", ")", ";", "if", "(", "loc2", "==", "null", "|", "|", "loc2", ".", "size", "(", ")", "==", "0", ")", "{", "undeclared", ".", "add", "(", "loc1", ")", ";", "if", "(", "arg1", "!=", "null", ")", "arg1", ".", "add", "(", "new", "Namespace", "(", "lib", ",", "loc1", ")", ")", ";", "}", "}"], "nl_tokens": ["updates", "the", "internal", "state", "of", "this", "namespacehelper", "to", "reflect", "the", "existance", "of", "the", "xml", "token", "pointed", "to", "by", "the", "cursor", ".", "concode_field_sep", "XMLLibImpl", "lib", "concode_elem_sep", "Set", "undeclared", "concode_elem_sep", "Map", "prefixToURI", "concode_elem_sep", "Map", "uriToPrefix", "concode_field_sep", "Namespace", "getNamespace", "concode_elem_sep", "Object", "[", "]", "namespaceDeclarations", "concode_elem_sep", "void", "getNamespaces", "concode_elem_sep", "Map", "getAllNamespaces", "concode_elem_sep", "void", "removeNamespace", "concode_elem_sep", "void", "update", "concode_elem_sep", "Object", "[", "]", "inScopeNamespaces", "concode_elem_sep", "void", "declareNamespace"]}
{"code": "void function ( long arg0 ) { this . keySize = arg0 ; }", "nl": "set the key size to use when generating a symmetric key . the default is 256 bits . concode_field_sep List<String> acceptedC14nAlgorithms concode_elem_sep String signatureAlgorithm concode_elem_sep long maximumKeySize concode_elem_sep long keySize concode_elem_sep List<String> acceptedSignatureAlgorithms concode_elem_sep String c14nAlgorithm concode_elem_sep String digestAlgorithm concode_elem_sep long minimumKeySize concode_elem_sep boolean useKeyValue concode_field_sep String getC14nAlgorithm concode_elem_sep boolean isUseKeyValue concode_elem_sep List<String> getAcceptedC14nAlgorithms concode_elem_sep void setUseKeyValue concode_elem_sep long getMinimumKeySize concode_elem_sep void setAcceptedC14nAlgorithms concode_elem_sep void setC14nAlgorithm concode_elem_sep void setDigestAlgorithm concode_elem_sep void setMinimumKeySize concode_elem_sep void setAcceptedSignatureAlgorithms concode_elem_sep String getDigestAlgorithm concode_elem_sep List<String> getAcceptedSignatureAlgorithms concode_elem_sep String getSignatureAlgorithm concode_elem_sep void setSignatureAlgorithm concode_elem_sep long getKeySize concode_elem_sep void setMaximumKeySize concode_elem_sep long getMaximumKeySize", "code_tokens": ["void", "function", "(", "long", "arg0", ")", "{", "this", ".", "keySize", "=", "arg0", ";", "}"], "nl_tokens": ["set", "the", "key", "size", "to", "use", "when", "generating", "a", "symmetric", "key", ".", "the", "default", "is", "256", "bits", ".", "concode_field_sep", "List", "<", "String", ">", "acceptedC14nAlgorithms", "concode_elem_sep", "String", "signatureAlgorithm", "concode_elem_sep", "long", "maximumKeySize", "concode_elem_sep", "long", "keySize", "concode_elem_sep", "List", "<", "String", ">", "acceptedSignatureAlgorithms", "concode_elem_sep", "String", "c14nAlgorithm", "concode_elem_sep", "String", "digestAlgorithm", "concode_elem_sep", "long", "minimumKeySize", "concode_elem_sep", "boolean", "useKeyValue", "concode_field_sep", "String", "getC14nAlgorithm", "concode_elem_sep", "boolean", "isUseKeyValue", "concode_elem_sep", "List", "<", "String", ">", "getAcceptedC14nAlgorithms", "concode_elem_sep", "void", "setUseKeyValue", "concode_elem_sep", "long", "getMinimumKeySize", "concode_elem_sep", "void", "setAcceptedC14nAlgorithms", "concode_elem_sep", "void", "setC14nAlgorithm", "concode_elem_sep", "void", "setDigestAlgorithm", "concode_elem_sep", "void", "setMinimumKeySize", "concode_elem_sep", "void", "setAcceptedSignatureAlgorithms", "concode_elem_sep", "String", "getDigestAlgorithm", "concode_elem_sep", "List", "<", "String", ">", "getAcceptedSignatureAlgorithms", "concode_elem_sep", "String", "getSignatureAlgorithm", "concode_elem_sep", "void", "setSignatureAlgorithm", "concode_elem_sep", "long", "getKeySize", "concode_elem_sep", "void", "setMaximumKeySize", "concode_elem_sep", "long", "getMaximumKeySize"]}
{"code": "T function ( String arg0 , Class < T > arg1 ) { Object loc0 = getProperty ( arg0 ) ; if ( loc0 != null ) { return ( T ) loc0 ; } else { return null ; } }", "nl": "gets the property and casts to the appropriate type concode_field_sep String variableName concode_elem_sep int objectCounter concode_elem_sep JSObject jsObject concode_elem_sep IJavascriptRuntime runtime concode_elem_sep Map<JSObject,JavascriptObject> peerRegistry concode_field_sep Integer checkInteger concode_elem_sep Object checkUndefined concode_elem_sep Object invokeJavascript concode_elem_sep Object invokeJavascript concode_elem_sep T invokeJavascriptReturnValue concode_elem_sep T invokeJavascriptReturnValue concode_elem_sep void setProperty concode_elem_sep void setProperty concode_elem_sep void setProperty concode_elem_sep boolean isMemberDefined concode_elem_sep String getNextVariableName concode_elem_sep String getVariableName concode_elem_sep Boolean checkBoolean concode_elem_sep JSObject getJSObject", "code_tokens": ["T", "function", "(", "String", "arg0", ",", "Class", "<", "T", ">", "arg1", ")", "{", "Object", "loc0", "=", "getProperty", "(", "arg0", ")", ";", "if", "(", "loc0", "!=", "null", ")", "{", "return", "(", "T", ")", "loc0", ";", "}", "else", "{", "return", "null", ";", "}", "}"], "nl_tokens": ["gets", "the", "property", "and", "casts", "to", "the", "appropriate", "type", "concode_field_sep", "String", "variableName", "concode_elem_sep", "int", "objectCounter", "concode_elem_sep", "JSObject", "jsObject", "concode_elem_sep", "IJavascriptRuntime", "runtime", "concode_elem_sep", "Map", "<", "JSObject", ",", "JavascriptObject", ">", "peerRegistry", "concode_field_sep", "Integer", "checkInteger", "concode_elem_sep", "Object", "checkUndefined", "concode_elem_sep", "Object", "invokeJavascript", "concode_elem_sep", "Object", "invokeJavascript", "concode_elem_sep", "T", "invokeJavascriptReturnValue", "concode_elem_sep", "T", "invokeJavascriptReturnValue", "concode_elem_sep", "void", "setProperty", "concode_elem_sep", "void", "setProperty", "concode_elem_sep", "void", "setProperty", "concode_elem_sep", "boolean", "isMemberDefined", "concode_elem_sep", "String", "getNextVariableName", "concode_elem_sep", "String", "getVariableName", "concode_elem_sep", "Boolean", "checkBoolean", "concode_elem_sep", "JSObject", "getJSObject"]}
{"code": "ConduitSelector function ( ) { return conduitSelector ; }", "nl": "gets the conduit selector concode_field_sep ConduitSelector conduitSelector concode_elem_sep Map<String,Object> requestContext concode_elem_sep Bus bus concode_elem_sep List<Interceptor<? extends Message>> inInterceptors concode_elem_sep long synchronousTimeout concode_elem_sep List<Interceptor<? extends Message>> outInterceptors concode_elem_sep Logger LOG concode_elem_sep List<Interceptor<? extends Message>> inFault concode_elem_sep Map<String,Object> responseContext concode_elem_sep List<Interceptor<? extends Message>> outFault concode_field_sep Bus getBus concode_elem_sep List<Interceptor<? extends Message>> getOutFaultInterceptors concode_elem_sep Endpoint getEndpoint concode_elem_sep long getSynchronousTimeout concode_elem_sep void setConduitSelector concode_elem_sep void setOutInterceptors concode_elem_sep List<Interceptor<? extends Message>> getInInterceptors concode_elem_sep Map<String,Object> getResponseContext concode_elem_sep boolean isResponseExpectedForOneway concode_elem_sep void setOutFaultInterceptors concode_elem_sep HTTPConduit getHttpConduit concode_elem_sep Conduit getConduit concode_elem_sep void setSynchronousTimeout concode_elem_sep List<Interceptor<? extends Message>> getInFaultInterceptors concode_elem_sep List<Interceptor<? extends Message>> getOutInterceptors concode_elem_sep void setInInterceptors concode_elem_sep Map<String,Object> getRequestContext concode_elem_sep void setInFaultInterceptors concode_elem_sep void setBus concode_elem_sep void prepareConduitSelector", "code_tokens": ["ConduitSelector", "function", "(", ")", "{", "return", "conduitSelector", ";", "}"], "nl_tokens": ["gets", "the", "conduit", "selector", "concode_field_sep", "ConduitSelector", "conduitSelector", "concode_elem_sep", "Map", "<", "String", ",", "Object", ">", "requestContext", "concode_elem_sep", "Bus", "bus", "concode_elem_sep", "List", "<", "Interceptor", "<", "?", "extends", "Message", ">>", "inInterceptors", "concode_elem_sep", "long", "synchronousTimeout", "concode_elem_sep", "List", "<", "Interceptor", "<", "?", "extends", "Message", ">>", "outInterceptors", "concode_elem_sep", "Logger", "LOG", "concode_elem_sep", "List", "<", "Interceptor", "<", "?", "extends", "Message", ">>", "inFault", "concode_elem_sep", "Map", "<", "String", ",", "Object", ">", "responseContext", "concode_elem_sep", "List", "<", "Interceptor", "<", "?", "extends", "Message", ">>", "outFault", "concode_field_sep", "Bus", "getBus", "concode_elem_sep", "List", "<", "Interceptor", "<", "?", "extends", "Message", ">>", "getOutFaultInterceptors", "concode_elem_sep", "Endpoint", "getEndpoint", "concode_elem_sep", "long", "getSynchronousTimeout", "concode_elem_sep", "void", "setConduitSelector", "concode_elem_sep", "void", "setOutInterceptors", "concode_elem_sep", "List", "<", "Interceptor", "<", "?", "extends", "Message", ">>", "getInInterceptors", "concode_elem_sep", "Map", "<", "String", ",", "Object", ">", "getResponseContext", "concode_elem_sep", "boolean", "isResponseExpectedForOneway", "concode_elem_sep", "void", "setOutFaultInterceptors", "concode_elem_sep", "HTTPConduit", "getHttpConduit", "concode_elem_sep", "Conduit", "getConduit", "concode_elem_sep", "void", "setSynchronousTimeout", "concode_elem_sep", "List", "<", "Interceptor", "<", "?", "extends", "Message", ">>", "getInFaultInterceptors", "concode_elem_sep", "List", "<", "Interceptor", "<", "?", "extends", "Message", ">>", "getOutInterceptors", "concode_elem_sep", "void", "setInInterceptors", "concode_elem_sep", "Map", "<", "String", ",", "Object", ">", "getRequestContext", "concode_elem_sep", "void", "setInFaultInterceptors", "concode_elem_sep", "void", "setBus", "concode_elem_sep", "void", "prepareConduitSelector"]}
{"code": "QualifiedName function ( String arg0 ) { return valueOf ( arg0 , XMLUnit . getXpathNamespaceContext ( ) ) ; }", "nl": "parses strings of the form '' ns-uri local-name '' or `` prefix : localname '' as qualifiednames . when using the prefix-version the prefix must be defined inside the current namespacecontext . concode_field_sep String localName concode_elem_sep String namespaceUri concode_field_sep String getLocalName concode_elem_sep int hashCode concode_elem_sep boolean equals concode_elem_sep String getNamespaceURI concode_elem_sep String toString concode_elem_sep QualifiedName parseQNameToString concode_elem_sep QualifiedName parsePrefixFormat", "code_tokens": ["QualifiedName", "function", "(", "String", "arg0", ")", "{", "return", "valueOf", "(", "arg0", ",", "XMLUnit", ".", "getXpathNamespaceContext", "(", ")", ")", ";", "}"], "nl_tokens": ["parses", "strings", "of", "the", "form", "''", "ns", "-", "uri", "local", "-", "name", "''", "or", "`", "`", "prefix", ":", "localname", "''", "as", "qualifiednames", ".", "when", "using", "the", "prefix", "-", "version", "the", "prefix", "must", "be", "defined", "inside", "the", "current", "namespacecontext", ".", "concode_field_sep", "String", "localName", "concode_elem_sep", "String", "namespaceUri", "concode_field_sep", "String", "getLocalName", "concode_elem_sep", "int", "hashCode", "concode_elem_sep", "boolean", "equals", "concode_elem_sep", "String", "getNamespaceURI", "concode_elem_sep", "String", "toString", "concode_elem_sep", "QualifiedName", "parseQNameToString", "concode_elem_sep", "QualifiedName", "parsePrefixFormat"]}
{"code": "void function ( int arg0 ) { progressMonitor . arg0 = arg0 ; }", "nl": "sets the current value . concode_field_sep boolean consoleMode concode_elem_sep org.apache.log4j.Logger logger concode_elem_sep int maxValue concode_elem_sep boolean showProgress concode_elem_sep ProgressMonitor progressMonitor concode_elem_sep StringBuffer log concode_elem_sep String currentMessage concode_elem_sep List<String> debugMessages concode_elem_sep TreeSet<String> warnings concode_elem_sep int curValue concode_elem_sep HashMap<String,Integer> warningCounts concode_field_sep void setConsoleModeAndParseShowProgress concode_elem_sep void setShowProgress concode_elem_sep void setCurrentMessage concode_elem_sep int getMaxValue concode_elem_sep String getLog concode_elem_sep void logWarning concode_elem_sep ArrayList<String> getWarnings concode_elem_sep void logDebug concode_elem_sep ArrayList<String> getMessages concode_elem_sep boolean isConsoleMode concode_elem_sep List<String> getDebugMessages concode_elem_sep void setMaxValue concode_elem_sep void incrementCurValue concode_elem_sep boolean isRunningOnServer concode_elem_sep String getCurrentMessage concode_elem_sep void setConsoleMode concode_elem_sep int getCurValue concode_elem_sep boolean isShowProgress concode_elem_sep double getPercentComplete", "code_tokens": ["void", "function", "(", "int", "arg0", ")", "{", "progressMonitor", ".", "arg0", "=", "arg0", ";", "}"], "nl_tokens": ["sets", "the", "current", "value", ".", "concode_field_sep", "boolean", "consoleMode", "concode_elem_sep", "org", ".", "apache", ".", "log4j", ".", "Logger", "logger", "concode_elem_sep", "int", "maxValue", "concode_elem_sep", "boolean", "showProgress", "concode_elem_sep", "ProgressMonitor", "progressMonitor", "concode_elem_sep", "StringBuffer", "log", "concode_elem_sep", "String", "currentMessage", "concode_elem_sep", "List", "<", "String", ">", "debugMessages", "concode_elem_sep", "TreeSet", "<", "String", ">", "warnings", "concode_elem_sep", "int", "curValue", "concode_elem_sep", "HashMap", "<", "String", ",", "Integer", ">", "warningCounts", "concode_field_sep", "void", "setConsoleModeAndParseShowProgress", "concode_elem_sep", "void", "setShowProgress", "concode_elem_sep", "void", "setCurrentMessage", "concode_elem_sep", "int", "getMaxValue", "concode_elem_sep", "String", "getLog", "concode_elem_sep", "void", "logWarning", "concode_elem_sep", "ArrayList", "<", "String", ">", "getWarnings", "concode_elem_sep", "void", "logDebug", "concode_elem_sep", "ArrayList", "<", "String", ">", "getMessages", "concode_elem_sep", "boolean", "isConsoleMode", "concode_elem_sep", "List", "<", "String", ">", "getDebugMessages", "concode_elem_sep", "void", "setMaxValue", "concode_elem_sep", "void", "incrementCurValue", "concode_elem_sep", "boolean", "isRunningOnServer", "concode_elem_sep", "String", "getCurrentMessage", "concode_elem_sep", "void", "setConsoleMode", "concode_elem_sep", "int", "getCurValue", "concode_elem_sep", "boolean", "isShowProgress", "concode_elem_sep", "double", "getPercentComplete"]}
{"code": "void function ( boolean arg0 , Parcel arg1 ) { arg1 . writeInt ( arg0 ? 1 : 0 ) ; }", "nl": "write boolean concode_field_sep PlaceHolder placeHolder concode_field_sep void writeHashMap concode_elem_sep Map<String,String> readHashMapStringAndString concode_elem_sep void writeHashMapStringAndString concode_elem_sep Map<String,V> readHashMapStringKey concode_elem_sep Map<K,V> readHashMap concode_elem_sep boolean readBoolean concode_elem_sep void writeHashMapStringKey", "code_tokens": ["void", "function", "(", "boolean", "arg0", ",", "Parcel", "arg1", ")", "{", "arg1", ".", "writeInt", "(", "arg0", "?", "1", ":", "0", ")", ";", "}"], "nl_tokens": ["write", "boolean", "concode_field_sep", "PlaceHolder", "placeHolder", "concode_field_sep", "void", "writeHashMap", "concode_elem_sep", "Map", "<", "String", ",", "String", ">", "readHashMapStringAndString", "concode_elem_sep", "void", "writeHashMapStringAndString", "concode_elem_sep", "Map", "<", "String", ",", "V", ">", "readHashMapStringKey", "concode_elem_sep", "Map", "<", "K", ",", "V", ">", "readHashMap", "concode_elem_sep", "boolean", "readBoolean", "concode_elem_sep", "void", "writeHashMapStringKey"]}
{"code": "String function ( ) { return classnamePrefix ; }", "nl": "get the current classname prefix . concode_field_sep String classnamePrefix concode_elem_sep Logger LOG concode_elem_sep Collection obsoleteInnerClasses concode_elem_sep Object component concode_elem_sep int anonymousClassCounter concode_elem_sep Context context concode_elem_sep Object classifier concode_elem_sep Collection obsoleteFeatures concode_field_sep void addClassifierContext concode_elem_sep void addPackageContext concode_elem_sep void removeObsoleteFeatures concode_elem_sep void innerClassifier concode_elem_sep void addComponent concode_elem_sep void outerClassifier concode_elem_sep Object getMethod concode_elem_sep Object getClassifier concode_elem_sep Object getFeature concode_elem_sep void removeObsoleteInnerClasses concode_elem_sep Object getAttribute concode_elem_sep void feature concode_elem_sep Collection getFeatures concode_elem_sep Object getOperation concode_elem_sep Object getComponent concode_elem_sep String anonymousClass concode_elem_sep Context getContext", "code_tokens": ["String", "function", "(", ")", "{", "return", "classnamePrefix", ";", "}"], "nl_tokens": ["get", "the", "current", "classname", "prefix", ".", "concode_field_sep", "String", "classnamePrefix", "concode_elem_sep", "Logger", "LOG", "concode_elem_sep", "Collection", "obsoleteInnerClasses", "concode_elem_sep", "Object", "component", "concode_elem_sep", "int", "anonymousClassCounter", "concode_elem_sep", "Context", "context", "concode_elem_sep", "Object", "classifier", "concode_elem_sep", "Collection", "obsoleteFeatures", "concode_field_sep", "void", "addClassifierContext", "concode_elem_sep", "void", "addPackageContext", "concode_elem_sep", "void", "removeObsoleteFeatures", "concode_elem_sep", "void", "innerClassifier", "concode_elem_sep", "void", "addComponent", "concode_elem_sep", "void", "outerClassifier", "concode_elem_sep", "Object", "getMethod", "concode_elem_sep", "Object", "getClassifier", "concode_elem_sep", "Object", "getFeature", "concode_elem_sep", "void", "removeObsoleteInnerClasses", "concode_elem_sep", "Object", "getAttribute", "concode_elem_sep", "void", "feature", "concode_elem_sep", "Collection", "getFeatures", "concode_elem_sep", "Object", "getOperation", "concode_elem_sep", "Object", "getComponent", "concode_elem_sep", "String", "anonymousClass", "concode_elem_sep", "Context", "getContext"]}